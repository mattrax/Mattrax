{
  "./DevDetail": {
    "name": "DevDetail",
    "policies": {
      "Ext/Microsoft/DNSComputerName": {
        "name": "DNSComputerName",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Ext/Microsoft/DeviceName": {
        "name": "DeviceName",
        "description": "Contains the user-specified device name. Support for Replace operation for Windows 10 Mobile was added in Windows 10, version 1511. Replace operation is not supported in the desktop or IoT Core. When you change the device name using this node, it triggers a dialog on the device asking the user to reboot. The new device name does not take effect until the device is restarted. If the user cancels the dialog, it will show again until a reboot occurs.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/AccountManagement": {
    "name": "AccountManagement",
    "policies": {
      "UserProfileManagement/DeletionPolicy": {
        "name": "DeletionPolicy",
        "title": "Profile deletion policy",
        "description": "Configures when profiles will be deleted. Allowed values: 0 (delete immediately upon device returning to a state with no currently active users); 1 (delete at storage capacity threshold); 2 (delete at both storage capacity threshold and profile inactivity threshold).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Delete immediately upon device returning to a state with no currently active users)"
            },
            "1": {
              "description": "Delete at storage capacity threshold"
            },
            "2": {
              "description": "Delete at both storage capacity threshold and profile inactivity threshold"
            }
          }
        },
        "scope": "device"
      },
      "UserProfileManagement/EnableProfileManager": {
        "name": "EnableProfileManager",
        "title": "Enable profile manager",
        "description": "Enable profile lifetime mangement for shared or communal device scenarios.",
        "format": "bool",
        "scope": "device"
      },
      "UserProfileManagement/ProfileInactivityThreshold": {
        "name": "ProfileInactivityThreshold",
        "title": "Profile inactive threshold",
        "description": "Start deleting profiles when they have not been logged on during the specified period, given as number of days.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "UserProfileManagement/StorageCapacityStartDeletion": {
        "name": "StorageCapacityStartDeletion",
        "title": "Storage capacity threshold to start profile deletion",
        "description": "Start deleting profiles when available storage capacity falls below this threshold, given as percent of total storage available for profiles. Profiles that have been inactive the longest will be deleted first.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "UserProfileManagement/StorageCapacityStopDeletion": {
        "name": "StorageCapacityStopDeletion",
        "title": "Storage capacity threshold to stop profile deletion",
        "description": "Stop deleting profiles when available storage capacity is brought up to this threshold, given as percent of total storage available for profiles.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/BitLocker": {
    "name": "BitLocker",
    "policies": {
      "AllowStandardUserEncryption": {
        "name": "AllowStandardUserEncryption",
        "description": "Allows Admin to enforce \"RequireDeviceEncryption\" policy for scenarios where policy is pushed while current logged on user is non-admin/standard user.\r\n                         \"AllowStandardUserEncryption\" policy is tied to \"AllowWarningForOtherDiskEncryption\" policy  being set to \"0\", i.e, Silent encryption is enforced.\r\n                         If \"AllowWarningForOtherDiskEncryption\" is not set, or is set to \"1\", \"RequireDeviceEncryption\" policy will not try to encrypt drive(s) if a standard user\r\n                         is the current logged on user in the system.\r\n\r\n                         The expected values for this policy are: \r\n\r\n                         1 = \"RequireDeviceEncryption\" policy will try to enable encryption on all fixed drives even if a current logged in user is standard user.\r\n                         0 = This is the default, when the policy is not set. If current logged on user is a standard user, \"RequireDeviceEncryption\" policy\r\n                             will not try to enable encryption on any drive.\r\n\r\n                         If you want to disable this policy use the following SyncML:\r\n                         111./Device/Vendor/MSFT/BitLocker/AllowStandardUserEncryptionint0",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "This is the default, when the policy is not set. If current logged on user is a standard user, \"RequireDeviceEncryption\" policy will not try to enable encryption on any drive."
            },
            "1": {
              "description": "\"RequireDeviceEncryption\" policy will try to enable encryption on all fixed drives even if a current logged in user is standard user."
            }
          }
        },
        "scope": "device"
      },
      "AllowSuspensionOfBitLockerProtection": {
        "name": "AllowSuspensionOfBitLockerProtection",
        "description": "This policy setting allows suspending protection for BitLocker Drive Encryption when enabled and prevents suspending protection when disabled.\r\n                         Warning: When policy is disabled, some scenarios will be blocked and prevent those scenarios from behaving normally.\r\n                         The format is integer.\r\n                         The expected values for this policy are:\r\n\r\n                         0 = Prevent BitLocker Drive Encryption protection from being suspended.\r\n                         1 = This is the default, when the policy is not set. Allows suspending BitLocker Drive Encryption protection.\r\n                         ",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevent BitLocker Drive Encryption protection from being suspended."
            },
            "1": {
              "description": "This is the default, when the policy is not set. Allows suspending BitLocker Drive Encryption protection."
            }
          }
        },
        "scope": "device"
      },
      "AllowWarningForOtherDiskEncryption": {
        "name": "AllowWarningForOtherDiskEncryption",
        "description": "Allows Admin to disable all UI (notification for encryption and warning prompt for other disk encryption)\r\n                         and turn on encryption on the user machines silently.\r\n                         Warning: When you enable BitLocker on a device with third party encryption, it may render the device unusable and will\r\n                         require reinstallation of Windows.\r\n                         Note: This policy takes effect only if \"RequireDeviceEncryption\" policy is set to 1.\r\n                         The format is integer.\r\n                         The expected values for this policy are: \r\n\r\n                         1 = This is the default, when the policy is not set. Warning prompt and encryption notification is allowed.\r\n                         0 = Disables the warning prompt and encryption notification. Starting in Windows 10, next major update, \r\n                             the value 0 only takes affect on Azure Active Directory joined devices. \r\n                             Windows will attempt to silently enable BitLocker for value 0.\r\n\r\n                         If you want to disable this policy use the following SyncML:\r\n                         110./Device/Vendor/MSFT/BitLocker/AllowWarningForOtherDiskEncryptionint0",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disables the warning prompt. Starting in Windows 10, version 1803, the value 0 can only be set for Azure Active Directory joined devices. Windows will attempt to silently enable BitLocker for value 0."
            },
            "1": {
              "description": "Warning prompt allowed."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureRecoveryPasswordRotation": {
        "name": "ConfigureRecoveryPasswordRotation",
        "description": " Allows Admin to configure Numeric Recovery Password Rotation upon use for OS and fixed drives on AAD and Hybrid domain joined devices.\r\n                          When not configured, Rotation is turned on by default for AAD only and off on Hybrid. The Policy will be effective only when \r\n                          Active Directory back up for recovery password is configured to required.\r\n                          For OS drive: Turn on \"Do not enable Bitlocker until recovery information is stored to AD DS for operating system drives\"\r\n                          For Fixed drives: Turn on \"Do not enable Bitlocker until recovery information is stored to AD DS for fixed data drives\"\r\n                       \r\n                          Supported Values: 0 - Numeric Recovery Passwords rotation OFF.\r\n                                            1 - Numeric Recovery Passwords Rotation upon use ON for AAD joined devices. Default value\r\n                                            2 - Numeric Recovery Passwords Rotation upon use ON for both AAD and Hybrid devices\r\n                         \r\n                         If you want to disable this policy use the following SyncML:\r\n \r\n                         112./Device/Vendor/MSFT/BitLocker/ConfigureRecoveryPasswordRotationint0",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Refresh off (default)"
            },
            "1": {
              "description": "Refresh on for Azure AD-joined devices"
            },
            "2": {
              "description": "Refresh on for both Azure AD-joined and hybrid-joined devices"
            }
          }
        },
        "scope": "device"
      },
      "EncryptionMethodByDriveType": {
        "name": "EncryptionMethodByDriveType",
        "description": "This policy setting allows you to configure the algorithm and cipher strength used by BitLocker Drive Encryption. This policy setting is applied when you turn on BitLocker. Changing the encryption method has no effect if the drive is already encrypted, or if encryption is in progress.\r\n                         If you enable this policy setting you will be able to configure an encryption algorithm and key cipher strength for fixed data drives, operating system drives, and removable data drives individually. For fixed and operating system drives, we recommend that you use the XTS-AES algorithm. For removable drives, you should use AES-CBC 128-bit or AES-CBC 256-bit if the drive will be used in other devices that are not running Windows 10 (Version 1511).\r\n                         If you disable or do not configure this policy setting, BitLocker will use the default encryption method of XTS-AES 128-bit or the encryption method specified by any setup script.”\r\n                         The format is string.\r\n                         Sample value for this node to enable this policy and set the encryption methods is:\r\n                         \r\n\r\n                         EncryptionMethodWithXtsOsDropDown_Name = Select the encryption method for operating system drives.\r\n                         EncryptionMethodWithXtsFdvDropDown_Name = Select the encryption method for fixed data drives.\r\n                         EncryptionMethodWithXtsRdvDropDown_Name = Select the encryption method for removable data drives.\r\n\r\n                         The possible values for 'xx' are:\r\n                         3 = AES-CBC 128\r\n                         4 = AES-CBC 256\r\n                         6 = XTS-AES 128\r\n                         7 = XTS-AES 256\r\n\r\n                         If you want to disable this policy use the following SyncML:\r\n                         102./Device/Vendor/MSFT/BitLocker/EncryptionMethodByDriveTypechr\r\n\r\n                         Note: Maps to GP EncryptionMethodWithXts_Name policy.\r\n            ",
        "format": "string",
        "scope": "device"
      },
      "FixedDrivesEncryptionType": {
        "name": "FixedDrivesEncryptionType",
        "title": "FixedDrivesEncryptionType",
        "description": "\r\n          This policy setting allows you to configure the encryption type used by BitLocker Drive Encryption. This policy setting is applied when you turn on BitLocker. Changing the encryption type has no effect if the drive is already encrypted or if encryption is in progress. Choose full encryption to require that the entire drive be encrypted when BitLocker is turned on. Choose used space only encryption to require that only the portion of the drive used to store data is encrypted when BitLocker is turned on.\r\n          If you enable this policy setting the encryption type that BitLocker will use to encrypt drives is defined by this policy and the encryption type option will not be presented in the BitLocker setup wizard.\r\n          If you disable or do not configure this policy setting, the BitLocker setup wizard will ask the user to select the encryption type before turning on BitLocker.\r\n        ",
        "format": "string",
        "scope": "device"
      },
      "FixedDrivesRecoveryOptions": {
        "name": "FixedDrivesRecoveryOptions",
        "description": "This policy setting allows you to control how BitLocker-protected fixed data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker.\r\n                         The \"FDVAllowDRA_Name\" (Allow data recovery agent) data field is used to specify whether a data recovery agent can be used with BitLocker-protected fixed data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents.\r\n                         In \"FDVRecoveryPasswordUsageDropDown_Name\" (Configure user storage of BitLocker recovery information) set whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key.\r\n                         Set \"FDVHideRecoveryPage_Name\" (Omit recovery options from the BitLocker setup wizard) to prevent users from specifying recovery options when they turn on BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you turn on BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting.\r\n                         Set \"FDVActiveDirectoryBackup_Name\" (Save BitLocker recovery information to Active Directory Domain Services) to enable saving the recovery key to AD.\r\n                         Set the \"FDVRequireActiveDirectoryBackup_Name\" (Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives) data field if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds.\r\n                         Set the \"FDVActiveDirectoryBackupDropDown_Name\" (Configure storage of BitLocker recovery information to AD DS) to choose which BitLocker recovery information to store in AD DS for fixed data drives. If you select \"1\" (Backup recovery password and key package), both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select \"2\" (Backup recovery password only) only the recovery password is stored in AD DS.\r\n                         Note: If the \"FDVRequireActiveDirectoryBackup_Name\" (Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives\" data field is set, a recovery password is automatically generated.\r\n                         If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected fixed data drives.\r\n                         The format is string.\r\n                         Sample value for this node to enable this policy is:\r\n                         \r\n\r\n                         The possible values for 'xx' are:\r\n                         true = Explicitly allow\r\n                         false = Policy not set\r\n\r\n                         The possible values for 'yy' are:\r\n                         2 = Allowed\r\n                         1 = Required\r\n                         0 = Disallowed\r\n\r\n                         The possible values for 'zz' are:\r\n                         2 = Store recovery passwords only\r\n                         1 = Store recovery passwords and key packages\r\n\r\n                         Disabling the policy will let the system choose the default behaviors.\r\n                         If you want to disable this policy use the following SyncML:\r\n                         107./Device/Vendor/MSFT/BitLocker/FixedDrivesRecoveryOptionschr\r\n\r\n                         Note: Maps to GP FDVRecoveryUsage_Name policy.\r\n            ",
        "format": "string",
        "scope": "device"
      },
      "FixedDrivesRequireEncryption": {
        "name": "FixedDrivesRequireEncryption",
        "description": "This policy setting determines whether BitLocker protection is required for fixed data drives to be writable on a computer.\r\n                         If you enable this policy setting, all fixed data drives that are not BitLocker-protected will be mounted as read-only. If the drive is protected by BitLocker, it will be mounted with read and write access.\r\n                         If you disable or do not configure this policy setting, all fixed data drives on the computer will be mounted with read and write access.\r\n                         The format is string.\r\n                         Sample value for this node to enable this policy is:\r\n                         \r\n\r\n                         Disabling the policy will let the system choose the default behaviors.\r\n                         If you want to disable this policy use the following SyncML:\r\n                         108./Device/Vendor/MSFT/BitLocker/FixedDrivesRequireEncryptionchr\r\n\r\n                         Note: Maps to GP FDVDenyWriteAccess_Name policy.\r\n            ",
        "format": "string",
        "scope": "device"
      },
      "IdentificationField": {
        "name": "IdentificationField",
        "title": "IdentificationField",
        "description": "\r\n          This policy setting allows you to associate unique organizational identifiers to a new drive that is enabled with BitLocker. These identifiers are stored as the identification field and allowed identification field. The identification field allows you to associate a unique organizational identifier to BitLocker-protected drives. This identifier is automatically added to new BitLocker-protected drives and can be updated on existing BitLocker-protected drives using the manage-bde command-line tool. An identification field is required for management of certificate-based data recovery agents on BitLocker-protected drives and for potential updates to the BitLocker To Go Reader. BitLocker will only manage and update data recovery agents when the identification field on the drive matches the value configured in the identification field. In a similar manner, BitLocker will only update the BitLocker To Go Reader when the identification field on the drive matches the value configured for the identification field.\r\n          The allowed identification field is used in combination with the \"Deny write access to removable drives not protected by BitLocker\" policy setting to help control the use of removable drives in your organization. It is a comma separated list of identification fields from your organization or other external organizations.\r\n          You can configure the identification fields on existing drives by using manage-bde.exe.\r\n          If you enable this policy setting, you can configure the identification field on the BitLocker-protected drive and any allowed identification field used by your organization.\r\n          When a BitLocker-protected drive is mounted on another BitLocker-enabled computer the identification field and allowed identification field will be used to determine whether the drive is from an outside organization.\r\n          If you disable or do not configure this policy setting, the identification field is not required.\r\n\r\n          Note: Identification fields are required for management of certificate-based data recovery agents on BitLocker-protected drives. BitLocker will only manage and update certificate-based data recovery agents when the identification field is present on a drive and is identical to the value configured on the computer. The identification field can be any value of 260 characters or fewer.\r\n\r\n        ",
        "format": "string",
        "scope": "device"
      },
      "RemovableDrivesConfigureBDE": {
        "name": "RemovableDrivesConfigureBDE",
        "title": "RemovableDrivesConfigureBDE",
        "description": "This policy setting controls the use of BitLocker on removable data drives. This policy setting is applied when you turn on BitLocker.",
        "format": "string",
        "scope": "device"
      },
      "RemovableDrivesEncryptionType": {
        "name": "RemovableDrivesEncryptionType",
        "title": "RemovableDrivesEncryptionType",
        "description": "This policy setting allows you to configure the encryption type used by BitLocker Drive Encryption. This policy setting is applied when you turn on BitLocker. Changing the encryption type has no effect if the drive is already encrypted or if encryption is in progress. Choose full encryption to require that the entire drive be encrypted when BitLocker is turned on. Choose used space only encryption to require that only the portion of the drive used to store data is encrypted when BitLocker is turned on.",
        "format": "string",
        "scope": "device"
      },
      "RemovableDrivesExcludedFromEncryption": {
        "name": "RemovableDrivesExcludedFromEncryption",
        "description": "When enabled, allows you to exclude removable drives and devices connected over USB interface from BitLocker Device Encryption. Excluded devices cannot be encrypted, even manually. Additionally, if \"Deny write access to removable drives not protected by BitLocker\" is configured, user will not be prompted for encryption and drive will be mounted in read/write mode. Provide a comma separated list of excluded removable drives\\devices, using the Hardware ID of the disk device. Example USBSTOR\\SEAGATE_ST39102LW_______0004.",
        "format": "string",
        "scope": "device"
      },
      "RemovableDrivesRequireEncryption": {
        "name": "RemovableDrivesRequireEncryption",
        "description": "This policy setting configures whether BitLocker protection is required for a computer to be able to write data to a removable data drive.\r\n                         If you enable this policy setting, all removable data drives that are not BitLocker-protected will be mounted as read-only. If the drive is protected by BitLocker, it will be mounted with read and write access.\r\n                         If the \"RDVCrossOrg\" (Deny write access to devices configured in another organization) option is set, only drives with identification fields matching the computer's identification fields will be given write access. When a removable data drive is accessed it will be checked for valid identification field and allowed identification fields. These fields are defined by the \"Provide the unique identifiers for your organization\" group policy setting.\r\n                         If you disable or do not configure this policy setting, all removable data drives on the computer will be mounted with read and write access.\r\n                         Note: This policy setting can be overridden by the group policy settings under User Configuration\\Administrative Templates\\System\\Removable Storage Access. If the \"Removable Disks: Deny write access\" group policy setting is enabled this policy setting will be ignored.\r\n                         The format is string.\r\n                         Sample value for this node to enable this policy is:\r\n                         \r\n\r\n                         The possible values for 'xx' are:\r\n                         true = Explicitly allow\r\n                         false = Policy not set\r\n\r\n                         Disabling the policy will let the system choose the default behaviors.\r\n                         If you want to disable this policy use the following SyncML:\r\n                         109./Device/Vendor/MSFT/BitLocker/RemovableDrivesRequireEncryptionchr\r\n\r\n                         Note: Maps to GP RDVDenyWriteAccess_Name policy.\r\n            ",
        "format": "string",
        "scope": "device"
      },
      "RequireDeviceEncryption": {
        "name": "RequireDeviceEncryption",
        "description": "Allows the Admin to require encryption to be turned on using BitLocker\\Device Encryption.\r\n                         The format is integer.\r\n                         Sample value for this node to enable this policy:\r\n                         1\r\n\r\n                         Disabling the policy will not turn off the encryption on the system drive. But will stop prompting the user to turn it on.\r\n                         If you want to disable this policy use the following SyncML:\r\n                         101./Device/Vendor/MSFT/BitLocker/RequireDeviceEncryptionint0",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable. If the policy setting is not set or is set to 0, the device's enforcement status is not checked. The policy does not enforce encryption and it does not decrypt encrypted volumes."
            },
            "1": {
              "description": "Enable. The device's enforcement status is checked. Setting this policy to 1 triggers encryption of all drives (silently or non-silently based on AllowWarningForOtherDiskEncryption policy)."
            }
          }
        },
        "scope": "device"
      },
      "RequireStorageCardEncryption": {
        "name": "RequireStorageCardEncryption",
        "description": "Allows the Admin to require storage card encryption on the device.\r\n                         The format is integer.\r\n                         This policy is only valid for mobile SKU.\r\n                         Sample value for this node to enable this policy:\r\n                         1\r\n\r\n                         Disabling the policy will not turn off the encryption on the storage card. But will stop prompting the user to turn it on.\r\n                         If you want to disable this policy use the following SyncML:\r\n                         100./Device/Vendor/MSFT/BitLocker/RequireStorageCardEncryptionint0",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Storage cards do not need to be encrypted."
            },
            "1": {
              "description": "Require storage cards to be encrypted."
            }
          }
        },
        "scope": "device"
      },
      "SystemDrivesDisallowStandardUsersCanChangePIN": {
        "name": "SystemDrivesDisallowStandardUsersCanChangePIN",
        "title": "SystemDrivesDisallowStandardUsersCanChangePIN",
        "description": "\r\n          This policy setting allows you to configure whether or not standard users are allowed to change BitLocker volume PINs, provided they are able to provide the existing PIN first.\r\n          This policy setting is applied when you turn on BitLocker.\r\n          If you enable this policy setting, standard users will not be allowed to change BitLocker PINs or passwords.\r\n          If you disable or do not configure this policy setting, standard users will be permitted to change BitLocker PINs and passwords.\r\n        ",
        "format": "string",
        "scope": "device"
      },
      "SystemDrivesEnablePreBootPinExceptionOnDECapableDevice": {
        "name": "SystemDrivesEnablePreBootPinExceptionOnDECapableDevice",
        "title": "SystemDrivesEnablePreBootPinExceptionOnDECapableDevice",
        "description": "\r\n          This policy setting allows users on devices that are compliant with InstantGo or Microsoft Hardware Security Test Interface (HSTI) to not have a PIN for pre-boot authentication. This overrides the \"Require startup PIN with TPM\" and \"Require startup key and PIN with TPM\" options of the \"Require additional authentication at startup\" policy on compliant hardware.\r\n          If you enable this policy setting, users on InstantGo and HSTI compliant devices will have the choice to turn on BitLocker without pre-boot authentication.\r\n          If this policy is not enabled, the options of \"Require additional authentication at startup\" policy apply.\r\n        ",
        "format": "string",
        "scope": "device"
      },
      "SystemDrivesEnablePrebootInputProtectorsOnSlates": {
        "name": "SystemDrivesEnablePrebootInputProtectorsOnSlates",
        "title": "SystemDrivesEnablePrebootInputProtectorsOnSlates",
        "description": "\r\n          This policy setting allows users to turn on authentication options that require user input from the pre-boot environment, even if the platform lacks pre-boot input capability.\r\n\r\n          The Windows touch keyboard (such as that used by tablets) isn't available in the pre-boot environment where BitLocker requires additional information such as a PIN or Password.\r\n          If you enable this policy setting, devices must have an alternative means of pre-boot input (such as an attached USB keyboard).\r\n          If this policy is not enabled, the Windows Recovery Environment must be enabled on tablets to support the entry of the BitLocker recovery password. When the Windows Recovery Environment is not enabled and this policy is not enabled, you cannot turn on BitLocker on a device that uses the Windows touch keyboard.\r\n\r\n          Note that if you do not enable this policy setting, options in the \"Require additional authentication at startup\" policy might not be available on such devices. These options include:\r\n          - Configure TPM startup PIN: Required/Allowed\r\n          - Configure TPM startup key and PIN: Required/Allowed\r\n          - Configure use of passwords for operating system drives.\r\n        ",
        "format": "string",
        "scope": "device"
      },
      "SystemDrivesEncryptionType": {
        "name": "SystemDrivesEncryptionType",
        "title": "SystemDrivesEncryptionType",
        "description": "\r\n          This policy setting allows you to configure the encryption type used by BitLocker Drive Encryption. This policy setting is applied when you turn on BitLocker. Changing the encryption type has no effect if the drive is already encrypted or if encryption is in progress. Choose full encryption to require that the entire drive be encrypted when BitLocker is turned on. Choose used space only encryption to require that only the portion of the drive used to store data is encrypted when BitLocker is turned on.\r\n          If you enable this policy setting the encryption type that BitLocker will use to encrypt drives is defined by this policy and the encryption type option will not be presented in the BitLocker setup wizard.\r\n          If you disable or do not configure this policy setting, the BitLocker setup wizard will ask the user to select the encryption type before turning on BitLocker.\r\n        ",
        "format": "string",
        "scope": "device"
      },
      "SystemDrivesEnhancedPIN": {
        "name": "SystemDrivesEnhancedPIN",
        "title": "SystemDrivesEnhancedPIN",
        "description": "\r\n          This policy setting allows you to configure whether or not enhanced startup PINs are used with BitLocker.\r\n          Enhanced startup PINs permit the use of characters including uppercase and lowercase letters, symbols, numbers, and spaces. This policy setting is applied when you turn on BitLocker.\r\n          If you enable this policy setting, all new BitLocker startup PINs set will be enhanced PINs.\r\n          Note:   Not all computers may support enhanced PINs in the pre-boot environment. It is strongly recommended that users perform a system check during BitLocker setup.\r\n          If you disable or do not configure this policy setting, enhanced PINs will not be used.\r\n        ",
        "format": "string",
        "scope": "device"
      },
      "SystemDrivesMinimumPINLength": {
        "name": "SystemDrivesMinimumPINLength",
        "description": "This policy setting allows you to configure a minimum length for a Trusted Platform Module (TPM) startup PIN. This policy setting is applied when you turn on BitLocker. The startup PIN must have a minimum length of 4 digits and can have a maximum length of 20 digits.\r\n                         If you enable this policy setting, you can require a minimum number of digits to be used when setting the startup PIN.\r\n                         If you disable or do not configure this policy setting, users can configure a startup PIN of any length between 6 and 20 digits.\r\n                         NOTE: If minimum PIN length is set below 6 digits, Windows will attempt to update the TPM 2.0 lockout period to be greater than the default when a PIN is changed. If successful, Windows will only reset the TPM lockout period back to default if the TPM is reset.\r\n                         The format is string.\r\n                         Sample value for this node to enable this policy is:\r\n                         \r\n\r\n                         Disabling the policy will let the system choose the default behaviors.\r\n                         If you want to disable this policy use the following SyncML:\r\n                         104./Device/Vendor/MSFT/BitLocker/SystemDrivesMinimumPINLengthchr\r\n\r\n                         Note: Maps to GP MinimumPINLength_Name policy.\r\n            ",
        "format": "string",
        "scope": "device"
      },
      "SystemDrivesRecoveryMessage": {
        "name": "SystemDrivesRecoveryMessage",
        "description": "This policy setting lets you configure the entire recovery message or replace the existing URL that are displayed on the pre-boot key recovery screen when the OS drive is locked.\r\n                         If you set the \"1\" (Use default recovery message and URL), the default BitLocker recovery message and URL will be displayed in the pre-boot key recovery screen. If you have previously configured a custom recovery message or URL and want to revert to the default message, you must keep the policy enabled and set the value \"1\" (Use default recovery message and URL).\r\n                         If you set the \"2\" (Use custom recovery message), the message you set in the \"RecoveryMessage_Input\" data field will be displayed in the pre-boot key recovery screen. If a recovery URL is available, include it in the message.\r\n                         If you set the \"3\" (Use custom recovery URL), the URL you type in the \"RecoveryUrl_Input\" data field will replace the default URL in the default recovery message, which will be displayed in the pre-boot key recovery screen.\r\n                         Note: Not all characters and languages are supported in pre-boot. It is strongly recommended that you test that the characters you use for the custom message or URL appear correctly on the pre-boot recovery screen.\r\n                         The format is string.\r\n                         Sample value for this node to enable this policy is:\r\n                         \r\n\r\n                         The possible values for 'xx' are:\r\n                         0 = Empty\r\n                         1 = Use default recovery message and URL.\r\n                         2 = Custom recovery message is set.\r\n                         3 = Custom recovery URL is set.\r\n                         'yy' = string of max length 900.\r\n                         'zz' = string of max length 500.\r\n\r\n                         Disabling the policy will let the system choose the default behaviors.\r\n                         If you want to disable this policy use the following SyncML:\r\n                         105./Device/Vendor/MSFT/BitLocker/SystemDrivesRecoveryMessagechr\r\n\r\n                         Note: Maps to GP PrebootRecoveryInfo_Name policy.\r\n            ",
        "format": "string",
        "scope": "device"
      },
      "SystemDrivesRecoveryOptions": {
        "name": "SystemDrivesRecoveryOptions",
        "description": "This policy setting allows you to control how BitLocker-protected operating system drives are recovered in the absence of the required startup key information. This policy setting is applied when you turn on BitLocker.\r\n                         The \"OSAllowDRA_Name\" (Allow certificate-based data recovery agent) data field is used to specify whether a data recovery agent can be used with BitLocker-protected operating system drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents.\r\n                         In \"OSRecoveryPasswordUsageDropDown_Name\" and \"OSRecoveryKeyUsageDropDown_Name\" (Configure user storage of BitLocker recovery information) set whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key.\r\n                         Set \"OSHideRecoveryPage_Name\" (Omit recovery options from the BitLocker setup wizard) to prevent users from specifying recovery options when they turn on BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you turn on BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting.\r\n                         Set \"OSActiveDirectoryBackup_Name\" (Save BitLocker recovery information to Active Directory Domain Services), to choose which BitLocker recovery information to store in AD DS for operating system drives (OSActiveDirectoryBackupDropDown_Name). If you set \"1\" (Backup recovery password and key package), both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you set \"2\" (Backup recovery password only), only the recovery password is stored in AD DS.\r\n                         Set the \"OSRequireActiveDirectoryBackup_Name\" (Do not enable BitLocker until recovery information is stored in AD DS for operating system drives) data field if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds.\r\n                         Note: If the \"OSRequireActiveDirectoryBackup_Name\" (Do not enable BitLocker until recovery information is stored in AD DS for operating system drives) data field is set, a recovery password is automatically generated.\r\n                         If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected operating system drives.\r\n                         If this policy setting is disabled or not configured, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.\r\n                         The format is string.\r\n                         Sample value for this node to enable this policy is:\r\n                         \r\n\r\n                         The possible values for 'xx' are:\r\n                         true = Explicitly allow\r\n                         false = Policy not set\r\n\r\n                         The possible values for 'yy' are:\r\n                         2 = Allowed\r\n                         1 = Required\r\n                         0 = Disallowed\r\n\r\n                         The possible values for 'zz' are:\r\n                         2 = Store recovery passwords only\r\n                         1 = Store recovery passwords and key packages\r\n\r\n                         Disabling the policy will let the system choose the default behaviors.\r\n                         If you want to disable this policy use the following SyncML:\r\n                         106./Device/Vendor/MSFT/BitLocker/SystemDrivesRecoveryOptionschr\r\n\r\n                         Note: Maps to GP OSRecoveryUsage_Name policy.\r\n            ",
        "format": "string",
        "scope": "device"
      },
      "SystemDrivesRequireStartupAuthentication": {
        "name": "SystemDrivesRequireStartupAuthentication",
        "description": "This policy setting allows you to configure whether BitLocker requires additional authentication each time the computer starts and whether you are using BitLocker with or without a Trusted Platform Module (TPM). This policy setting is applied when you turn on BitLocker.\r\n                         Note: Only one of the additional authentication options can be required at startup, otherwise a policy error occurs.\r\n                         If you want to use BitLocker on a computer without a TPM, set the \"ConfigureNonTPMStartupKeyUsage_Name\" data. In this mode either a password or a USB drive is required for start-up. When using a startup key, the key information used to encrypt the drive is stored on the USB drive, creating a USB key. When the USB key is inserted the access to the drive is authenticated and the drive is accessible. If the USB key is lost or unavailable or if you have forgotten the password then you will need to use one of the BitLocker recovery options to access the drive.\r\n                         On a computer with a compatible TPM, four types of authentication methods can be used at startup to provide added protection for encrypted data. When the computer starts, it can use only the TPM for authentication, or it can also require insertion of a USB flash drive containing a startup key, the entry of a 4-digit to 20-digit personal identification number (PIN), or both.\r\n                         If you enable this policy setting, users can configure advanced startup options in the BitLocker setup wizard.\r\n                         If you disable or do not configure this policy setting, users can configure only basic options on computers with a TPM.\r\n                         Note: If you want to require the use of a startup PIN and a USB flash drive, you must configure BitLocker settings using the command-line tool manage-bde instead of the BitLocker Drive Encryption setup wizard.\r\n                         The format is string.\r\n                         Sample value for this node to enable this policy is:\r\n                         \r\n\r\n                         ConfigureNonTPMStartupKeyUsage_Name = Allow BitLocker without a compatible TPM (requires a password or a startup key on a USB flash drive)\r\n                         All of the below settings are for computers with a TPM.\r\n                         ConfigureTPMStartupKeyUsageDropDown_Name = Configure TPM startup key.\r\n                         ConfigurePINUsageDropDown_Name = Configure TPM startup PIN.\r\n                         ConfigureTPMPINKeyUsageDropDown_Name = Configure TPM startup key and PIN.\r\n                         ConfigureTPMUsageDropDown_Name = Configure TPM startup.\r\n\r\n                         The possible values for 'xx' are:\r\n                         true = Explicitly allow\r\n                         false = Policy not set\r\n\r\n                         The possible values for 'yy' are:\r\n                         2 = Optional\r\n                         1 = Required\r\n                         0 = Disallowed\r\n\r\n                         Disabling the policy will let the system choose the default behaviors.\r\n                         If you want to disable this policy use the following SyncML:\r\n                         103./Device/Vendor/MSFT/BitLocker/SystemDrivesRequireStartupAuthenticationchr\r\n\r\n                         Note: Maps to GP ConfigureAdvancedStartup_Name policy.\r\n            ",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/CertificateStore": {
    "name": "CertificateStore",
    "policies": {
      "CA/System/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "The SHA1 hash for the certificate. The 20-byte SHA1 hash of the certificate is specified in hexadecimal. This node is implicitly created only when the EncodedCertificate node is added.",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "The base64 Encoded X.509 certificate.",
            "format": "base64",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "CA/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "The SHA1 hash for the certificate. The 20-byte SHA1 hash of the certificate is specified in hexadecimal. This node is implicitly created only when the EncodedCertificate node is added.",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "The base64 Encoded X.509 certificate",
            "format": "base64",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "MY/SCEP/{UniqueID}": {
        "name": "",
        "title": "UniqueID",
        "description": "The UniqueID for the SCEP enrollment request. Each client certificate should have different unique ID.",
        "format": "node",
        "nodes": {
          "Install/CAThumbPrint": {
            "name": "CAThumbPrint",
            "description": "Specify root CA thumbprint.",
            "format": "string",
            "scope": "device"
          },
          "Install/Challenge": {
            "name": "Challenge",
            "description": "Enroll requester authentication shared secret.",
            "format": "string",
            "scope": "device"
          },
          "Install/EKUMapping": {
            "name": "EKUMapping",
            "description": "Specify extended key usages. The list of OIDs are separated by plus “+”.",
            "format": "string",
            "scope": "device"
          },
          "Install/HashAlgrithm": {
            "name": "HashAlgrithm",
            "description": "Client create Cert enroll request, get supported hash OIalgorithm from SCEP server  and  match it with one specified in this parameter.",
            "format": "string",
            "scope": "device"
          },
          "Install/KeyLength": {
            "name": "KeyLength",
            "description": "Specify private key length (RSA).",
            "format": "string",
            "scope": "device"
          },
          "Install/KeyProtection": {
            "name": "KeyProtection",
            "description": "Specify where to keep the private key.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Install/KeyUsage": {
            "name": "KeyUsage",
            "description": "Specify the key usage bits (0x80, 0x20, 0xA0) for the cert.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Install/RetryCount": {
            "name": "RetryCount",
            "description": "When the SCEP sends pending status, specify device retry times.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Install/RetryDelay": {
            "name": "RetryDelay",
            "description": "When the SCEP server sends pending status, specify device retry waiting time in minutes.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Install/ServerURL": {
            "name": "ServerURL",
            "description": "Specify the cert enrollment server.",
            "format": "string",
            "scope": "device"
          },
          "Install/SubjectAlternativeNames": {
            "name": "SubjectAlternativeNames",
            "description": "Specify subject alternative name. Multiple alternative names could be specified by this node. Each name is the combination of name format+actual name. Each pair is separated by semi-comma.",
            "format": "string",
            "scope": "device"
          },
          "Install/SubjectName": {
            "name": "SubjectName",
            "description": "Specify the subject name.",
            "format": "string",
            "scope": "device"
          },
          "Install/TemplateName": {
            "name": "TemplateName",
            "description": "Certificate Template Name OID (As in AD used by PKI infrastructure.",
            "format": "string",
            "scope": "device"
          },
          "Install/ValidPeriodUnit": {
            "name": "ValidPeriodUnit",
            "description": "Specify valid period unit type.",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "MY/User/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "The SHA1 hash for the certificate. The 20-byte SHA1 hash of the certificate is specified in hexadecimal. This node is implicitly created only when the EncodedCertificate node is added.",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "The base64 Encoded X.509 certificate. Note that though during MDM enrollment, enrollment server could use WAP XML format to add public part of MDM client cert via EncodedCertificate node, properly enroll a client certificate including private needs a cert enroll protocol handle it  or user installs it manually. In WP, the server cannot purely rely on CertificateStore CSP to install a client certificate including private key.",
            "format": "base64",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "MY/WSTEP/Renew/ROBOSupport": {
        "name": "ROBOSupport",
        "description": "Optional. Notify the client whether enrollment server supports ROBO auto certificate renew. NOTE: This flag is only needed to the device which is MDM enrolled via On-premise authentication method. For MDM enrolled with federated authentication, ROBO is the only supported renewal method. If the server sets this node value to be false or delete this node for federated enrolled device, the configuration will fail with OMA DM error code 405.",
        "format": "bool",
        "scope": "device"
      },
      "MY/WSTEP/Renew/RenewPeriod": {
        "name": "RenewPeriod",
        "description": "Specify the number of days prior to the enrollment cert expiration to prompt the user to renew.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 100
        },
        "scope": "device"
      },
      "MY/WSTEP/Renew/RetryAfterExpiryInterval": {
        "name": "RetryAfterExpiryInterval",
        "description": "How long after the enrollment cert has expiried to keep trying to renew",
        "format": "time",
        "scope": "device"
      },
      "MY/WSTEP/Renew/RetryInterval": {
        "name": "RetryInterval",
        "description": "",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 100
        },
        "scope": "device"
      },
      "MY/WSTEP/Renew/ServerURL": {
        "name": "ServerURL",
        "description": "Optional. Specifies the cert renewal server URL which is the discovery server.",
        "format": "string",
        "scope": "device"
      },
      "ROOT/System/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "The SHA1 hash for the certificate. The 20-byte SHA1 hash of the certificate is specified in hexadecimal. This node is implicitly created only when the EncodedCertificate node is added.",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "The base64 Encoded X.509 certificate.",
            "format": "base64",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "ROOT/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "The SHA1 hash for the certificate. The 20-byte SHA1 hash of the certificate is specified in hexadecimal. This node is implicitly created only when the EncodedCertificate node is added.",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "The base64 Encoded X.509 certificate.",
            "format": "base64",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/ClientCertificateInstall": {
    "name": "ClientCertificateInstall",
    "policies": {
      "PFXCertInstall/{UniqueID}": {
        "name": "",
        "title": "UniqueID",
        "description": "Required for PFX certificate installation. A unique ID to differentiate different certificate install requests. \r\nFormat is node. \r\nCalling Delete on the this node, should delete the certificates and the keys that were installed by the corresponding PFX blob.\r\n",
        "format": "node",
        "nodes": {
          "ContainerName": {
            "name": "ContainerName",
            "description": "Optional. \r\nSpecifies the NGC container name (if NGC KSP is chosen for above node). If this node is not specified when NGC KSP is chosen, enrollment will fail.",
            "format": "string",
            "scope": "device"
          },
          "KeyLocation": {
            "name": "KeyLocation",
            "description": "Required for PFX certificate installation. Indicates the KeyStorage provider to target the private key installation to. ",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "1": {
                  "description": "Install to TPM if present, fail if not present."
                },
                "2": {
                  "description": "Install to TPM if present. If not present, fallback to software."
                },
                "3": {
                  "description": "Install to software."
                },
                "4": {
                  "description": "Install to Windows Hello for Business (formerly known as Microsoft Passport for Work) whose name is specified"
                }
              }
            },
            "scope": "device"
          },
          "PFXCertBlob": {
            "name": "PFXCertBlob",
            "description": "Required. \r\nCRYPT_DATA_BLOB structure that contains a PFX packet with the exported and encrypted certificates and keys. Add on this node will trigger the addition to the PFX certificate. This requires that all the other nodes under UniqueID that are parameters for PFX installation (Container Name, KeyLocation, CertPassword, fKeyExportable) are present before this is called. This will also set the Status node to the current Status of the operation.\r\nIf Add is called on this node and a blob already exists, it will fail. If Replace is called on this node, the certificates will be overwritten.\r\nIf Add is called on this node for a new PFX, the certificate will be added. If Replace is called on this node when it does not exist, this will fail.\r\nIn other words, using Replace or Add will result in the effect of either overwriting the old certificate or adding a new certificate\r\nCRYPT_DATA_BLOB on MSDN can be found at http://msdn.microsoft.com/en-us/library/windows/desktop/aa381414(v=vs.85).aspx\r\n",
            "format": "bin",
            "scope": "device"
          },
          "PFXCertPassword": {
            "name": "PFXCertPassword",
            "description": "Password that protects the PFX blob. This is required if the PFX is password protected.",
            "format": "string",
            "scope": "device"
          },
          "PFXCertPasswordEncryptionStore": {
            "name": "PFXCertPasswordEncryptionStore",
            "description": "Optional. \r\nWhen a value of \"2\" is contained iin PFXCertPasswordEncryptionType, specify the store name where the certificate for decrypting the PFXCertPassword is stored. ",
            "format": "string",
            "scope": "device"
          },
          "PFXCertPasswordEncryptionType": {
            "name": "PFXCertPasswordEncryptionType",
            "description": "Optional. Used to specify if the PFX certificate password is encrypted with a certificate.\r\nIf the value is \r\n0 - Password is not encrypted\r\n1- Password is encrypted using the MDM certificate by the MDM server\r\n2 - Password is encrypted by a Custom Certificate by the MDM server. When this value is used here, also specify the custom store name in the PFXCertPasswordEncryptionStore node.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Password is not encrypted."
                },
                "1": {
                  "description": "Password is encrypted with the MDM certificate."
                },
                "2": {
                  "description": "Password is encrypted with custom certificate."
                }
              }
            },
            "scope": "device"
          },
          "PFXKeyExportable": {
            "name": "PFXKeyExportable",
            "description": "Optional. Used to specify if the private key installed is exportable (can be exported later).",
            "format": "bool",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "SCEP/{UniqueID}": {
        "name": "",
        "title": "UniqueID",
        "description": "Required for SCEP certificate installation. A unique ID to differentiate different certificate install requests. \r\nCalling Delete on the this node, should delete the corresponding SCEP certificate",
        "format": "node",
        "nodes": {
          "Install": {
            "name": "Install",
            "description": "Required for SCEP certificate enrollment. Parent node to group SCEP cert install related request. NOTE: though the children nodes under Install support Replace commands, once the Exec command is sent to the device, the device will take the values which are set when the Exec command is accepted. The server should not expect the node value change after Exec command is accepted will impact the current undergoing enrollment. The server should check the Status node value and make sure the device is not at unknown stage before changing children node values.",
            "format": "node",
            "scope": "device"
          },
          "Install/AADKeyIdentifierList": {
            "name": "AADKeyIdentifierList",
            "description": "Optional. Specify the AAD Key Identifier List as a semicolon separated values. On Enroll, the values in this list are validated against the AAD Key present on the device. If no match is found, enrollment will fail.",
            "format": "string",
            "scope": "device"
          },
          "Install/CAThumbprint": {
            "name": "CAThumbprint",
            "description": "Required. Specify root CA thumbprint. It is a 20-byte value of the SHA1 certificate hash specified as a hexadecimal string value. When client authenticates SCEP server, it checks CA cert from SCEP server whether match with this cert. If not match, fail the authentication. ",
            "format": "string",
            "scope": "device"
          },
          "Install/Challenge": {
            "name": "Challenge",
            "description": "Required for SCEP certificate enrollment. B64 encoded SCEP enrollment challenge. Challenge will be deleted shortly after the Exec command is accepted.",
            "format": "string",
            "scope": "device"
          },
          "Install/ContainerName": {
            "name": "ContainerName",
            "description": "Optional. \r\nSpecifies the NGC container name (if NGC KSP is chosen for above node). If this node is not specified when NGC KSP is chosen, enrollment will fail.",
            "format": "string",
            "scope": "device"
          },
          "Install/CustomTextToShowInPrompt": {
            "name": "CustomTextToShowInPrompt",
            "description": "Optional. Specifies the custom text to show on the NGC PIN prompt during certificate enrollment. The admin can choose to provide more contextual information for why the user needs to enter the PIN and what the certificate will be used for through this.",
            "format": "string",
            "scope": "device"
          },
          "Install/EKUMapping": {
            "name": "EKUMapping",
            "description": "Required. Specify extended key usages. Subjected to SCEP server configuration. The list of OIDs are separated by plus “+”. Sample format: OID1+OID2+OID3.",
            "format": "string",
            "scope": "device"
          },
          "Install/HashAlgorithm": {
            "name": "HashAlgorithm",
            "description": "Required for enrollment. Hash algorithm family (SHA-1, SHA-2, SHA-3) specified by MDM server. If multiple hash algorithm families are specified, they must be separated via +. \r\n\r\nFor NGC, only SHA256 is supported as the supported algorithm",
            "format": "string",
            "scope": "device"
          },
          "Install/KeyLength": {
            "name": "KeyLength",
            "description": "Required for enrollment. Specify private key length (RSA). \r\nValid value: 1024, 2048, 4096. For NGC, only 2048 is the supported keylength.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "1024": {
                  "description": "1024"
                },
                "2048": {
                  "description": "2048"
                },
                "4096": {
                  "description": "4096"
                }
              }
            },
            "scope": "device"
          },
          "Install/KeyProtection": {
            "name": "KeyProtection",
            "description": "Optional. Specify where to keep the private key. Note that even it is protected by TPM, it is not guarded with TPM PIN. \r\nSCEP enrolled cert doesn’t support TPM PIN protection. ",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "1": {
                  "description": "Private key protected by TPM."
                },
                "2": {
                  "description": "Private key protected by phone TPM if the device supports TPM. All Windows Phone 8.1 devices support TPM and will treat value 2 as 1."
                },
                "3": {
                  "description": "(Default) Private key saved in software KSP."
                },
                "4": {
                  "description": "Private key protected by Windows Hello for Business (formerly known as Microsoft Passport for Work). If this option is specified, the ContainerName must be specified, otherwise enrollment will fail."
                }
              }
            },
            "scope": "device"
          },
          "Install/KeyUsage": {
            "name": "KeyUsage",
            "description": "Required for enrollment. Specify the key usage bits (0x80, 0x20, 0xA0, etc.) for the certificate in decimal format. The value should at least have second (0x20) or forth (0x80) or both bits set. If the value doesn’t have those bits set, configuration will fail.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Install/RetryCount": {
            "name": "RetryCount",
            "description": "Optional. Special to SCEP. Specify device retry times when the SCEP sever sends pending status. Format is int. Default value is 3. Max value: the value cannot be larger than 30. If it is larger than 30, the device will use 30.\r\nThe min value is 0 which means no retry. ",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 3
            },
            "scope": "device"
          },
          "Install/RetryDelay": {
            "name": "RetryDelay",
            "description": "Optional. When the SCEP server sends pending status, specify device retry waiting time in minutes. \r\n\r\nDefault value is: 5\r\nThe min value is 1. ",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 429496729
            },
            "scope": "device"
          },
          "Install/ServerURL": {
            "name": "ServerURL",
            "description": "Required for SCEP certificate enrollment. Specify the cert enrollment server. The server could specify multiple server URLs separated by semicolon. ",
            "format": "string",
            "scope": "device"
          },
          "Install/SubjectAlternativeNames": {
            "name": "SubjectAlternativeNames",
            "description": "Optional. Specify subject alternative name. Multiple alternative names could be specified by this node. Each name is the combination of name format+actual name. Refer name type definition in MSDN. Each pair is separated by semicolon. E.g. multiple SAN are presented in the format of [nameformat1]+[actual name1];[name format 2]+[actual name2]. ",
            "format": "string",
            "scope": "device"
          },
          "Install/SubjectName": {
            "name": "SubjectName",
            "description": "Required. Specify the subject name. The SubjectName value is quoted if it contains leading or trailing white space or one of the following characters: (“,” “=” “+” “;” ).",
            "format": "string",
            "scope": "device"
          },
          "Install/TemplateName": {
            "name": "TemplateName",
            "description": "Optional. OID of certificate template name. Note that this name is typically ignored by the SCEP server, therefore the MDM server typically doesn’t need to provide it.",
            "format": "string",
            "scope": "device"
          },
          "Install/ValidPeriod": {
            "name": "ValidPeriod",
            "description": "Optional. Specify the units for valid period. Valid values are: Days(Default), Months, Years. \r\nMDM server expected certificate validation period (ValidPeriodUnits + ValidPerio) the SCEP server as part of certificate enrollment request. It is the server’s decision on how to use this valid period to create the certificate.",
            "format": "string",
            "scope": "device"
          },
          "Install/ValidPeriodUnits": {
            "name": "ValidPeriodUnits",
            "description": "Optional. Specify desired number of units used in validity period. Subjected to SCEP server configuration. Default is 0. The units are defined in ValidPeriod node. Note the valid period specified by MDM will overwrite the valid period specified in cert template. For example, if ValidPeriod is days and ValidPeriodUnits is 30, it means the total valid duration is 30 days. \r\nNOTE: The device only sends the MDM server expected certificate validation period (ValidPeriodUnits + ValidPerio) the SCEP server as part of certificate enrollment request. It is the server’s decision on how to use this valid period to create the certificate.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/CloudDesktop": {
    "name": "CloudDesktop",
    "policies": {
      "EnableBootToCloudSharedPCMode": {
        "name": "EnableBootToCloudSharedPCMode",
        "title": "Enable boot to cloud shared PC mode",
        "description": "Setting this node to \"true\" configures boot to cloud for Shared PC mode. Boot to cloud mode enables users to seamlessly sign-in to a Cloud PC. Shared PC mode allows multiple users to sign-in on the device and use for shared purpose. For enabling Boot to Cloud Shared PC feature, Cloud Provider application must be installed on the PC and the user must have a Cloud PC provisioned.",
        "format": "bool",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/DMClient": {
    "name": "DMClient",
    "policies": {
      "Provider/{ProviderID}": {
        "name": "",
        "title": "ProviderID",
        "description": "This node contains the URI-encoded value of the bootstrapped device management account’s Provider ID. Scope is dynamic. This value is set and controlled by the MDM server. As a best practice, use text that doesn’t require XML/URI escaping.",
        "format": "node",
        "nodes": {
          "AADResourceID": {
            "name": "AADResourceID",
            "description": "This is the ResourceID used when requesting the user token from the OMA DM session for Azure Active Directory (Azure AD) enrollments (Azure AD Join or Add Accounts). The token is audience-specific, which allows for different service principals (enrollment vs. device management). It can be an application ID or the endpoint that you are trying to access.",
            "format": "string",
            "scope": "device"
          },
          "AADSendDeviceToken": {
            "name": "AADSendDeviceToken",
            "description": "For Azure AD backed enrollments, this will cause the client to send a Device Token if the User Token cannot be obtained.",
            "format": "bool",
            "scope": "device"
          },
          "CertRenewTimeStamp": {
            "name": "CertRenewTimeStamp",
            "description": "The time in OMA DM standard time format. This node is designed to reduce the risk of the certificate being used by another device. The device records the time that the new certificate was created.",
            "format": "string",
            "scope": "device"
          },
          "CommercialID": {
            "name": "CommercialID",
            "description": " Configures the identifier used to uniquely associate this diagnostic data of this device as belonging to a given organization. If your organization is participating in a program that requires this device to be identified as belonging to your organization then use this setting to provide that identification. The value for this setting will be provided by Microsoft as part of the onboarding process for the program. If you disable or do not configure this policy setting, then Microsoft will not be able to use this identifier to associate this machine and its diagnostic data with your organization.",
            "format": "string",
            "scope": "device"
          },
          "ConfigLock/Lock": {
            "name": "Lock",
            "description": "This node specifies how the client will perform the lock mode for SecureCore PC. 0: unlock; 1: lock. The default value is 0.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Unlock"
                },
                "1": {
                  "description": "Lock"
                }
              }
            },
            "scope": "device"
          },
          "ConfigLock/UnlockDuration": {
            "name": "UnlockDuration",
            "description": "This node, when it is set, tells the client to set how many minutes the device should be temporarily unlocked from SecureCore settings protection. The default value is 480.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "ConfigRefresh": {
            "name": "ConfigRefresh",
            "description": "Parent node for ConfigRefresh nodes",
            "format": "node",
            "scope": "device"
          },
          "ConfigRefresh/Cadence": {
            "name": "Cadence",
            "description": "This node determines the number of minutes between refreshes.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 30,
              "max": 144
            },
            "scope": "device"
          },
          "ConfigRefresh/Enabled": {
            "name": "Enabled",
            "description": "This node determines whether or not a periodic settings refresh for MDM policies will occur.",
            "format": "bool",
            "scope": "device"
          },
          "ConfigRefresh/PausePeriod": {
            "name": "PausePeriod",
            "description": "This node determines the number of minutes ConfigRefresh should be paused for.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 144
            },
            "scope": "device"
          },
          "CustomEnrollmentCompletePage": {
            "name": "CustomEnrollmentCompletePage",
            "description": "These nodes provision custom text for the enrollment page.",
            "format": "node",
            "scope": "device"
          },
          "CustomEnrollmentCompletePage/BodyText": {
            "name": "BodyText",
            "description": "Specifies the body text of the all done page that appears at the end of the MDM enrollment flow.",
            "format": "string",
            "scope": "device"
          },
          "CustomEnrollmentCompletePage/HyperlinkHref": {
            "name": "HyperlinkHref",
            "description": "Specifies the URL that is shown at the end of the MDM enrollment flow.",
            "format": "string",
            "scope": "device"
          },
          "CustomEnrollmentCompletePage/HyperlinkText": {
            "name": "HyperlinkText",
            "description": "Specifies the display text for the URL that is shown at the end of the MDM enrollment flow.",
            "format": "string",
            "scope": "device"
          },
          "CustomEnrollmentCompletePage/Title": {
            "name": "Title",
            "description": "Specifies the title of the all done page that appears at the end of the MDM enrollment flow.",
            "format": "string",
            "scope": "device"
          },
          "EnableOmaDmKeepAliveMessage": {
            "name": "EnableOmaDmKeepAliveMessage",
            "description": "A boolean value that specifies whether the DM client should send out a request pending alert in case the device response to a DM request is too slow. When the server sends a configuration request, sometimes it takes the client longer than the HTTP timeout to get all information together and then the session ends unexpectedly due to timeout. By default, the MDM client does not send an alert that a DM request is pending. To work around the timeout, you can use this setting to keep the session alive by sending a heartbeat message back to the server. This is achieved by sending a SyncML message with a specific device alert element in the body until the client is able to respond back to the server with the requested information.",
            "format": "bool",
            "scope": "device"
          },
          "EnhancedAppLayerSecurity/Cert0": {
            "name": "Cert0",
            "description": "The node contains the primary certificate - the public key to use.",
            "format": "string",
            "scope": "device"
          },
          "EnhancedAppLayerSecurity/Cert1": {
            "name": "Cert1",
            "description": "The node contains the secondary certificate - the public key to use.",
            "format": "string",
            "scope": "device"
          },
          "EnhancedAppLayerSecurity/SecurityMode": {
            "name": "SecurityMode",
            "description": "This node specifies how the client will perform the app layer signing and encryption. 0: no op; 1: sign only; 2: encrypt only; 3: sign and encrypt. The default value is 0.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "no op"
                },
                "1": {
                  "description": "sign only"
                },
                "2": {
                  "description": "encrypt only"
                },
                "3": {
                  "description": "sign and encrypt"
                }
              }
            },
            "scope": "device"
          },
          "EnhancedAppLayerSecurity/UseCertIfRevocationCheckOffline": {
            "name": "UseCertIfRevocationCheckOffline",
            "description": "This node, when it is set, tells the client to use the certificate even when the client cannot check the certificate's revocation status because the device is offline. The default value is set.",
            "format": "bool",
            "scope": "device"
          },
          "EntDMID": {
            "name": "EntDMID",
            "description": "Character string that contains the unique enterprise device ID. The value is set by the management server during the enrollment process by way of the DMClient CSP. You can retrieve it later during an OMA DM session.",
            "format": "string",
            "scope": "device"
          },
          "EntDeviceName": {
            "name": "EntDeviceName",
            "description": "Character string that contains the user-friendly device name used by the IT admin console. The value is set during the enrollment process by way of the DMClient CSP. You can retrieve it later during an OMA DM session.",
            "format": "string",
            "scope": "device"
          },
          "ExchangeID": {
            "name": "ExchangeID",
            "description": "Character string that contains the unique Exchange device ID used by the Outlook account of the user the session is running against. This is useful for the enterprise management server to correlate and merge records for a device that is managed by exchange and natively managed by a dedicated management server.",
            "format": "string",
            "scope": "device"
          },
          "FirstSyncStatus": {
            "name": "FirstSyncStatus",
            "format": "node",
            "scope": "device"
          },
          "FirstSyncStatus/AllowCollectLogsButton": {
            "name": "AllowCollectLogsButton",
            "description": "This node decides whether or not the MDM progress page displays the Collect Logs button.  This node only applies to the device MDM status page.",
            "format": "bool",
            "scope": "device"
          },
          "FirstSyncStatus/BlockInStatusPage": {
            "name": "BlockInStatusPage",
            "description": "Device Only.  This node determines whether or not the MDM progress page is blocking in the AADJ or DJ++ case, as well as which remediation options are available.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "FirstSyncStatus/CustomErrorText": {
            "name": "CustomErrorText",
            "description": "This node allows the MDM to set custom error text, detailing what the user needs to do in case of error.  This node only applies to the user MDM status page (on a per user basis).",
            "format": "string",
            "scope": "device"
          },
          "FirstSyncStatus/ExpectedMSIAppPackages": {
            "name": "ExpectedMSIAppPackages",
            "description": "This node contains a list of LocURIs that refer to App Packages the ISV expects to provision via EnterpriseDesktopAppManagement CSP, delimited by the character L\"\\xF000\".  The LocURI will be followed by a semicolon and a number, representing the amount of apps included in the App Package.  We will not verify that number.  E.G. ./User/Vendor/MSFT/EnterpriseDesktopAppManagement/MSI/ProductID1/Status;4\"\\xF000\" ./User/Vendor/MSFT/EnterpriseDesktopAppManagement/MSI/ProductID2/Status;2  Which  will represent that App Package ProductID1 contains 4 apps, whereas ProductID2 contains 2 apps.",
            "format": "string",
            "scope": "device"
          },
          "FirstSyncStatus/ExpectedModernAppPackages": {
            "name": "ExpectedModernAppPackages",
            "description": "This node contains a list of LocURIs that refer to App Packages the ISV expects to provision via EnterpriseModernAppManagement CSP, delimited by the character L\"\\xF000\".  The LocURI will be followed by a semicolon and a number, representing the amount of apps included in the App Package.  We will not verify that number.  E.G. ./Vendor/MSFT/EnterpriseModernAppManagement/AppManagement/AppStore/PackageFamilyName/PackageFullName/Name;4\"\\xF000\" ./Vendor/MSFT/EnterpriseModernAppManagement/AppManagement/AppStore/PackageFamilyName/PackageFullName2/Name;2  Which  will represent that App Package PackageFullName contains 4 apps, whereas PackageFullName2 contains 2 apps.",
            "format": "string",
            "scope": "device"
          },
          "FirstSyncStatus/ExpectedNetworkProfiles": {
            "name": "ExpectedNetworkProfiles",
            "description": "This node contains a list of LocURIs that refer to Wi-Fi profiles and VPN profiles the ISV expects to provision, delimited by the character L\"\\xF000\".",
            "format": "string",
            "scope": "device"
          },
          "FirstSyncStatus/ExpectedPFXCerts": {
            "name": "ExpectedPFXCerts",
            "description": "This node contains a list of LocURIs that refer to certs the ISV expects to provision via ClientCertificateInstall CSP, delimited by the character L\"\\xF000\" (the CSP_LIST_DELIMITER).",
            "format": "string",
            "scope": "device"
          },
          "FirstSyncStatus/ExpectedPolicies": {
            "name": "ExpectedPolicies",
            "description": "This node contains a list of LocURIs that refer to Policies the ISV expects to provision, delimited by the character L\"\\xF000\" (the CSP_LIST_DELIMITER).",
            "format": "string",
            "scope": "device"
          },
          "FirstSyncStatus/ExpectedSCEPCerts": {
            "name": "ExpectedSCEPCerts",
            "description": "This node contains a list of LocURIs that refer to SCEP certs the ISV expects to provision via ClientCertificateInstall CSP, delimited by the character L\"\\xF000\" (the CSP_LIST_DELIMITER).",
            "format": "string",
            "scope": "device"
          },
          "FirstSyncStatus/IsSyncDone": {
            "name": "IsSyncDone",
            "description": "This node, when doing a get, tells the server if the “First Syncs\" are done and the device is fully provisioned.  When doing a Set, this triggers the UX to override whatever state it is in and tell the user that the device is provisioned.  It cannot be set from True to False (it will not change its mind on whether or not the sync is done), and it cannot be set from True to True (to prevent notifications from firing multiple times).  This node only applies to the user MDM status page (on a per user basis).",
            "format": "bool",
            "scope": "device"
          },
          "FirstSyncStatus/ServerHasFinishedProvisioning": {
            "name": "ServerHasFinishedProvisioning",
            "description": "This node is set by the server to inform the UX that the server has finished provisioning the device.  This was added so that the server can “change its mind\" about what it needs to provision on the device.  When this node is set, many other DM Client nodes will no longer be able to be changed.  If this node is not True, the UX will consider the provisioning a failure.  Once set to true, it would reject attempts to change it back to false with CFGMGR_E_COMMANDNOTALLOWED.  This node applies to the per user expected policies and resources lists.",
            "format": "bool",
            "scope": "device"
          },
          "FirstSyncStatus/SkipDeviceStatusPage": {
            "name": "SkipDeviceStatusPage",
            "description": "Device only.  This node decides whether or not the MDM device progress page skips after AADJ or Hybrid AADJ in OOBE.",
            "format": "bool",
            "scope": "device"
          },
          "FirstSyncStatus/SkipUserStatusPage": {
            "name": "SkipUserStatusPage",
            "description": "Device only.  This node decides whether or not the MDM user progress page skips after AADJ or DJ++ after user login.",
            "format": "bool",
            "scope": "device"
          },
          "FirstSyncStatus/TimeOutUntilSyncFailure": {
            "name": "TimeOutUntilSyncFailure",
            "description": "This node determines how long we will poll until we surface an error message to the user.  The unit of measurement is minutes.  Default value will be 60, while maximum value will be 1,440 (one day).",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 1,
              "max": 144
            },
            "scope": "device"
          },
          "FirstSyncStatus/WasDeviceSuccessfullyProvisioned": {
            "name": "WasDeviceSuccessfullyProvisioned",
            "description": "Integer node determining if a Device was Successfully provisioned.  0 is failure, 1 is success, 2 is in progress.  Once the value is changed to 0 or 1, the value cannot be changed again.  The client will change the value of success or failure and update the node.  The server can, however, force a failure or success message to appear on the device by setting this value and then setting the IsSyncDone node to true.  This node only applies to the user MDM status page (on a per user basis).",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "The device has failed to provision the device"
                },
                "1": {
                  "description": "The device has successfully provisioned the device."
                },
                "2": {
                  "description": "Provisoining is in progress."
                }
              }
            },
            "scope": "device"
          },
          "ForceAadToken": {
            "name": "ForceAadToken",
            "description": "Force device to send device AAD token during checkin as a separate header.",
            "format": "bool",
            "scope": "device"
          },
          "HelpEmailAddress": {
            "name": "HelpEmailAddress",
            "description": "The character string that allows the user experience to include a customized help email address that the end user will be able to view and use if they need help or support.",
            "format": "string",
            "scope": "device"
          },
          "HelpPhoneNumber": {
            "name": "HelpPhoneNumber",
            "description": "The character string that allows the user experience to include a customized help phone number that the end user will be able to view and use if they need help or support.",
            "format": "string",
            "scope": "device"
          },
          "HelpWebsite": {
            "name": "HelpWebsite",
            "description": "The character string that allows the user experience to include a customized help website that the end user will be able to view and use if they need help or support.",
            "format": "string",
            "scope": "device"
          },
          "LinkedEnrollment/DiscoveryEndpoint": {
            "name": "DiscoveryEndpoint",
            "description": "Endpoint Discovery is the process where a specific URL (the \"discovery endpoint\") is accessed, which returns a directory of endpoints for using the system including enrollment. On Get, if the endpoint is not set, client will return an rmpty string with S_OK. ",
            "format": "string",
            "scope": "device"
          },
          "ManagementServerAddressList": {
            "name": "ManagementServerAddressList",
            "description": "",
            "format": "string",
            "scope": "device"
          },
          "ManagementServerToUpgradeTo": {
            "name": "ManagementServerToUpgradeTo",
            "description": "Specify the Discovery server URL of the MDM server to upgrade to for a MAM enrolled device",
            "format": "string",
            "scope": "device"
          },
          "ManagementServiceAddress": {
            "name": "ManagementServiceAddress",
            "description": "",
            "format": "string",
            "scope": "device"
          },
          "MultipleSession/IntervalForScheduledRetriesForUserSession": {
            "name": "IntervalForScheduledRetriesForUserSession",
            "description": "",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "MultipleSession/NumAllowedConcurrentUserSessionAtUserLogonSync": {
            "name": "NumAllowedConcurrentUserSessionAtUserLogonSync",
            "description": "Optional. Maximum number of concurrent user sync sessions at User Login. Default value is 25. 0 none, 1 sequential, anything else: parallel.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "MultipleSession/NumAllowedConcurrentUserSessionForBackgroundSync": {
            "name": "NumAllowedConcurrentUserSessionForBackgroundSync",
            "description": "Optional. Maximum number of concurrent user sync sessions in background. Default value is 25. 0 none, 1 sequential, anything else: parallel.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "MultipleSession/NumberOfScheduledRetriesForUserSession": {
            "name": "NumberOfScheduledRetriesForUserSession",
            "description": "The number of times the DM client should retry connecting to the server when the client is initially configured/enrolled to communicate with the server. Default value is 0. If the value is 0 and IntervalForScheduledRetriesForUserSession is not 0, then the schedule will be set to repeat for an infinite number of times.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "NumberOfDaysAfterLostContactToUnenroll": {
            "name": "NumberOfDaysAfterLostContactToUnenroll",
            "description": "Number of days after last sucessful sync to unenroll",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Poll": {
            "name": "Poll",
            "description": " Polling schedules must utilize the DMClient CSP. The Registry paths previously associated with polling using the Registry CSP are now deprecated. There are three schedules managed under the Poll node which enable a rich polling schedule experience to provide greater flexibility in managing the way in which devices poll the management server. There are a variety of ways in which polling schedules may be set. If an invalid polling configuration is set, the device will correct or remove the schedules in order to restore the polling schedules back to a valid configuration. If there is no infinite schedule set, then a 24-hour schedule is created and scheduled to launch in the maintenance window.",
            "format": "node",
            "scope": "device"
          },
          "Poll/AllUsersPollOnFirstLogin": {
            "name": "AllUsersPollOnFirstLogin",
            "description": "Boolean value that allows the IT admin to require the device to start a management session on first user login for all NT users. A session is only kicked off the first time a user logs in to the system; subsequent logins will not trigger an MDM session. Login is not the same as device unlock. Default value is false, where polling is disabled on first login. Supported values are true or false.",
            "format": "bool",
            "scope": "device"
          },
          "Poll/IntervalForFirstSetOfRetries": {
            "name": "IntervalForFirstSetOfRetries",
            "description": "",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Poll/IntervalForRemainingScheduledRetries": {
            "name": "IntervalForRemainingScheduledRetries",
            "description": "",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Poll/IntervalForSecondSetOfRetries": {
            "name": "IntervalForSecondSetOfRetries",
            "description": "",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Poll/NumberOfFirstRetries": {
            "name": "NumberOfFirstRetries",
            "description": "The number of times the DM client should retry to connect to the server when the client is initially configured or enrolled to communicate with the server. If the value is set to 0 and the IntervalForFirstSetOfRetries value is not 0, then the schedule will be set to repeat an infinite number of times and second set and this set of schedule will not set in this case. The default value is 10. The first set of retries is intended to give the management server some buffered time to be ready to send policies and settings configuration to the device. The total time for first set of retries should not be more than a few hours. The server should not set NumberOfFirstRetries to be 0. RemainingScheduledRetries is used for the long run device polling schedule.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Poll/NumberOfRemainingScheduledRetries": {
            "name": "NumberOfRemainingScheduledRetries",
            "description": "The number of times the DM client should retry connecting to the server when the client is initially configured/enrolled to communicate with the server. Default value is 0. If the value is set to 0 and IntervalForRemainingScheduledRetries AND the first and second set of retries are not set as infinite retries, then the schedule will be set to repeat for an infinite number of times. However, if either or both of the first and second set of retries are set as infinite, then this schedule will be disabled. The RemainingScheduledRetries is used for the long run device polling schedule. IntervalForRemainingScheduledRetries should not be set smaller than 1440 minutes (24 hours) in Windows Phone 8.1 device. Windows Phone 8.1 supports MDM server push.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Poll/NumberOfSecondRetries": {
            "name": "NumberOfSecondRetries",
            "description": "The number of times the DM client should retry a second round of connecting to the server when the client is initially configured/enrolled to communicate with the server. Default value is 0. If the value is set to 0 and IntervalForSecondSetOfRetries is not set to 0 AND the first set of retries is not set as infinite retries, then the schedule repeats an infinite number of times. However, if the first set of retries is set at infinite, then this schedule is disabled. The second set of retries is also optional and temporarily retries that the total duration should be last for more than a day. And the IntervalForSecondSetOfRetries should be longer than IntervalForFirstSetOfRetries. RemainingScheduledRetries is used for the long run device polling schedule.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Poll/PollOnLogin": {
            "name": "PollOnLogin",
            "description": "Boolean value that allows the IT admin to require the device to start a management session on any user login, regardless of if the user has preciously logged in. Login is not the same as device unlock. Default value is false, where polling is disabled on first login. Supported values are true or false.",
            "format": "bool",
            "scope": "device"
          },
          "PublisherDeviceID": {
            "name": "PublisherDeviceID",
            "description": "",
            "format": "string",
            "scope": "device"
          },
          "Push": {
            "name": "Push",
            "description": "Not configurable during WAP Provisioning XML. If removed, DM sessions triggered by Push will no longer be supported.",
            "format": "node",
            "scope": "device"
          },
          "Push/PFN": {
            "name": "PFN",
            "description": " A string provided by the Windows 10 ecosystem for an MDM solution. Used to register a device for Push Notifications. The server must use the same PFN as the devices it is managing.",
            "format": "string",
            "scope": "device"
          },
          "Recovery/AllowRecovery": {
            "name": "AllowRecovery",
            "description": "This node determines whether or not the client will automatically initiate a MDM Recovery operation when it detects issues with the MDM certificate",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "MDM Recovery is not allowed."
                },
                "1": {
                  "description": "MDM Recovery is allowed."
                }
              }
            },
            "scope": "device"
          },
          "RequireMessageSigning": {
            "name": "RequireMessageSigning",
            "description": "Primarily used for SSL bridging mode where firewalls and proxies are deployed and where device client identity is required. When enabled, every SyncML message from the device will carry an additional HTTP header named MDM-Signature. This header contains BASE64-encoded Cryptographic Message Syntax using a Detached Signature of the complete SyncML message SHA-2 (inclusive of the SyncHdr and SyncBody). Signing is performed using the private key of the management session certificate that was enrolled as part of the enrollment process. The device public key and PKCS9 UTC signing time stamp are included as part of the authenticated attributes in the signature. When enabled, the MDM server should validate the signature and the timestamp using the device identify certificate enrolled as part of MS-MDE, ensure the certificate and time are valid, and verify that the signature is trusted by the MDM server.",
            "format": "bool",
            "scope": "device"
          },
          "SignedEntDMID": {
            "name": "SignedEntDMID",
            "description": "Character string that contains the device ID. This node and the nodes CertRenewTimeStamp can be used by the MDM server to verify client identity in order to update the registration record after the device certificate is renewed. The device signs the EntDMID with the old client certificate during the certificate renewal process and saves the signature locally.",
            "format": "string",
            "scope": "device"
          },
          "SyncApplicationVersion": {
            "name": "SyncApplicationVersion",
            "description": "Used by the management server to set the DM session version that the server and device should use. Default is 1.0. In Windows 10, the DM session protocol version of the client is 2.0. If the server is updated to support 2.0, then you should set this value to 2.0. In the next session, check to see if there is a client behavior change between 1.0 and 2.0.",
            "format": "string",
            "scope": "device"
          },
          "UPN": {
            "name": "UPN",
            "description": "Allows the management server to update the User Principal Name (UPN) of the enrolled user. This is useful in scenarios where the user email address changes in the identity system, or in the scenario where the user enters an invalid UPN during enrollment, and fixes the UPN during federated enrollment. The UPN will be recorded and the UX will reflect the updated UPN.",
            "format": "string",
            "scope": "device"
          },
          "Unenroll": {
            "name": "Unenroll",
            "description": "",
            "format": "null",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "Unenroll": {
        "name": "Unenroll",
        "description": ">",
        "format": "null",
        "scope": "device"
      },
      "UpdateManagementServiceAddress": {
        "name": "UpdateManagementServiceAddress",
        "description": "For provisioning packages only. Specifies the list of servers (semicolon delimited). The first server in the semicolon-delimited list is the server that will be used to instantiate MDM sessions. The list can be a permutation or a subset of the existing server list. You cannot add new servers to the list using this node.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/DeclaredConfiguration": {
    "name": "DeclaredConfiguration",
    "policies": {
      "Host": {
        "name": "Host",
        "description": "The Host internal node indicates that the target of the configuration request or inventory request is the host OS. This node is for scope in case enclaves are ever targeted for configuration.",
        "format": "node",
        "scope": "device"
      },
      "Host/Complete": {
        "name": "Complete",
        "description": "This internal node indicates that the configuration has discrete settings values and is self-contained with complete setting and value pairs that do not contain placeholders that the need to be resolved later with additional data. The request is ready to be processed as is.",
        "format": "node",
        "scope": "device"
      },
      "Host/Complete/Documents": {
        "name": "Documents",
        "description": "The Documents node indicates that the configuration is in the form of a document, which is a collection of settings used to configure a scenario by the Declared Configuration stack.",
        "format": "node",
        "scope": "device"
      },
      "Host/Complete/Documents/{DocID}": {
        "name": "",
        "title": "DocID",
        "description": "Uniquely identifies the configuration document. No other document can have this id. The Id should be a GUID.",
        "format": "node",
        "nodes": {
          "Document": {
            "name": "Document",
            "description": "The Document node's value is an XML based document containing a collection of settings and values to configure the specified scenario. The Declared Configuration stack verifies the syntax of the document, the stack marks the document to be processed asynchronously by the client. The stack then returns control back to the OMA-DM service. The stack, in turn, asynchronously processes the request. Below is an example of a specified desired state configuration using the Declared Configuration URI ./Device/Vendor/MSFT/DeclaredConfiguration/Host/Complete/Documents/27FEA311-68B9-4320-9FC4-296F6FDFAFE2/Document",
            "format": "string",
            "scope": "device"
          },
          "Properties": {
            "name": "Properties",
            "description": "The Properties node encapsulates the list of properties that apply to the specified document referenced by [DocID].",
            "format": "node",
            "scope": "device"
          },
          "Properties/Abandoned": {
            "name": "Abandoned",
            "description": "The Abandoned node allows the OMA-DM server to indicate that the document is no longer managed.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "The document is no longer managed."
                },
                "1": {
                  "description": "The document is managed."
                }
              }
            },
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "Host/Inventory": {
        "name": "Inventory",
        "description": "The Inventory internal node indicates that this is an inventory request. The setting values to be retrieved are specified in an XML document through the Document leaf node.",
        "format": "node",
        "scope": "device"
      },
      "Host/Inventory/Documents": {
        "name": "Documents",
        "description": "The Documents node indicates that the inventory request is in the form of a document, which is a collection of settings used to retrieve their values.",
        "format": "node",
        "scope": "device"
      },
      "Host/Inventory/Documents/{DocID}": {
        "name": "",
        "title": "DocID",
        "description": "Uniquely identifies the inventory document. No other document can have this id. The Id should be a GUID.",
        "format": "node",
        "nodes": {
          "Document": {
            "name": "Document",
            "description": "The Document node's value is an XML based document containing a collection of settings that will be used to retrieve their values. The Declared Configuration stack verifies the syntax of the document, the stack marks the document to be processed asynchronously by the client. The stack then returns control back to the OMA-DM service. The stack, in turn, asynchronously processes the request. Below is an example of a specified desired state configuration using the Declared Configuration URI ./Device/Vendor/MSFT/DeclaredConfiguration/Host/Inventory/Documents/27FEA311-68B9-4320-9FC4-296F6FDFAFE2/Document",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Defender": {
    "name": "Defender",
    "policies": {
      "Configuration/ASROnlyPerRuleExclusions": {
        "name": "ASROnlyPerRuleExclusions",
        "description": "Apply ASR only per rule exclusions.",
        "format": "string",
        "scope": "device"
      },
      "Configuration/AllowDatagramProcessingOnWinServer": {
        "name": "AllowDatagramProcessingOnWinServer",
        "description": "This settings controls whether Network Protection is allowed to enable datagram processing on Windows Server. If false, the value of DisableDatagramProcessing will be ignored and default to disabling Datagram inspection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Datagram processing on Windows Server is disabled."
            },
            "1": {
              "description": "Datagram processing on Windows Server is enabled."
            }
          }
        },
        "scope": "device"
      },
      "Configuration/AllowNetworkProtectionDownLevel": {
        "name": "AllowNetworkProtectionDownLevel",
        "description": "This settings controls whether Network Protection is allowed to be configured into block or audit mode on windows downlevel of RS3. If false, the value of EnableNetworkProtection will be ignored.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Network protection will be disabled downlevel."
            },
            "1": {
              "description": "Network protection will be enabled downlevel."
            }
          }
        },
        "scope": "device"
      },
      "Configuration/AllowNetworkProtectionOnWinServer": {
        "name": "AllowNetworkProtectionOnWinServer",
        "description": "This settings controls whether Network Protection is allowed to be configured into block or audit mode on Windows Server. If false, the value of EnableNetworkProtection will be ignored.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disallow"
            },
            "1": {
              "description": "Allow"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/AllowSwitchToAsyncInspection": {
        "name": "AllowSwitchToAsyncInspection",
        "description": "Control whether network protection can improve performance by switching from real-time inspection to asynchronous inspection",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Don’t allow asynchronous inspection"
            },
            "1": {
              "description": "Allow switching to asynchronous inspection"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DataDuplicationDirectory": {
        "name": "DataDuplicationDirectory",
        "description": "Define data duplication directory for device control.",
        "format": "string",
        "scope": "device"
      },
      "Configuration/DataDuplicationLocalRetentionPeriod": {
        "name": "DataDuplicationLocalRetentionPeriod",
        "description": "Define the retention period in days of how much time the evidence data will be kept on the client machine should any transfer to the remote locations would occur.",
        "format": "string",
        "scope": "device"
      },
      "Configuration/DataDuplicationMaximumQuota": {
        "name": "DataDuplicationMaximumQuota",
        "description": "Defines the maximum data duplication quota in MB that can be collected. When the quota is reached the filter will stop duplicating any data until the service manages to dispatch the existing collected data, thus decreasing the quota again below the maximum. The valid interval is [5-5000] MB. By default, the maximum quota will be 500 MB.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 5,
          "max": 500
        },
        "scope": "device"
      },
      "Configuration/DataDuplicationRemoteLocation": {
        "name": "DataDuplicationRemoteLocation",
        "description": "Define data duplication remote location for device control.",
        "format": "string",
        "scope": "device"
      },
      "Configuration/DaysUntilAggressiveCatchupQuickScan": {
        "name": "DaysUntilAggressiveCatchupQuickScan",
        "description": "Configure how many days can pass before an aggressive quick scan is triggered. The valid interval is [7-60] days. If not configured, aggressive quick scans will be disabled. By default, the value is set to 25 days when enabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 7,
          "max": 6
        },
        "scope": "device"
      },
      "Configuration/DefaultEnforcement": {
        "name": "DefaultEnforcement",
        "description": "Control Device Control default enforcement. This is the enforcement applied if there are no policy rules present or at the end of the policy rules evaluation none were matched.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "1": {
              "description": "Default Allow Enforcement"
            },
            "2": {
              "description": "Default Deny Enforcement"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DeviceControl/PolicyGroups/{GroupId}": {
        "name": "",
        "title": "GroupId",
        "format": "node",
        "nodes": {
          "GroupData": {
            "name": "GroupData",
            "description": "Follow the instructions provided here: https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/device-control-removable-storage-access-control?view=o365-worldwide ",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "Configuration/DeviceControl/PolicyRules/{RuleId}": {
        "name": "",
        "title": "RuleId",
        "format": "node",
        "nodes": {
          "RuleData": {
            "name": "RuleData",
            "description": "Follow the instructions provided here: https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/device-control-removable-storage-access-control?view=o365-worldwide ",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "Configuration/DeviceControlEnabled": {
        "name": "DeviceControlEnabled",
        "description": "Control Device Control feature.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": ""
            },
            "1": {
              "description": ""
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableCacheMaintenance": {
        "name": "DisableCacheMaintenance",
        "description": "Defines whether the cache maintenance idle task will perform the cache maintenance or not.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Cache maintenance is enabled (default)"
            },
            "1": {
              "description": "Cache maintenance is disabled"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableCpuThrottleOnIdleScans": {
        "name": "DisableCpuThrottleOnIdleScans",
        "description": "Indicates whether the CPU will be throttled for scheduled scans while the device is idle.  This feature is enabled by default and will not throttle the CPU for scheduled scans performed when the device is otherwise idle, regardless of what ScanAvgCPULoadFactor is set to. For all other scheduled scans this flag will have no impact and normal throttling will occur.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enable CPU Throttle on idle scans"
            },
            "1": {
              "description": "Disable CPU Throttle on idle scans"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableDatagramProcessing": {
        "name": "DisableDatagramProcessing",
        "description": "Control whether network protection inspects User Datagram Protocol (UDP) traffic",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "UDP inspection is on"
            },
            "1": {
              "description": "UDP inspection is off"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableDnsOverTcpParsing": {
        "name": "DisableDnsOverTcpParsing",
        "description": "This setting disables DNS over TCP Parsing for Network Protection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "DNS over TCP parsing is enabled"
            },
            "1": {
              "description": "DNS over TCP parsing is disabled"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableDnsParsing": {
        "name": "DisableDnsParsing",
        "description": "This setting disables DNS Parsing for Network Protection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "DNS parsing is enabled"
            },
            "1": {
              "description": "DNS parsing is disabled"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableFtpParsing": {
        "name": "DisableFtpParsing",
        "description": "This setting disables FTP Parsing for Network Protection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "FTP parsing is enabled"
            },
            "1": {
              "description": "FTP parsing is disabled"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableGradualRelease": {
        "name": "DisableGradualRelease",
        "description": "Enable this policy to disable gradual rollout of Defender updates.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Gradual release is enabled"
            },
            "1": {
              "description": "Gradual release is disabled"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableHttpParsing": {
        "name": "DisableHttpParsing",
        "description": "This setting disables HTTP Parsing for Network Protection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "HTTP parsing is enabled"
            },
            "1": {
              "description": "HTTP parsing is disabled"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableInboundConnectionFiltering": {
        "name": "DisableInboundConnectionFiltering",
        "description": "This setting disables Inbound connection filtering for Network Protection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Inbound connection filtering is enabled"
            },
            "1": {
              "description": "Inbound connection filtering is disabled"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableLocalAdminMerge": {
        "name": "DisableLocalAdminMerge",
        "description": "When this value is set to no, it allows a local admin the ability to specify some settings for complex list type that will then merge /override the Preference settings with the Policy settings",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "No"
            },
            "1": {
              "description": "Yes"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableNetworkProtectionPerfTelemetry": {
        "name": "DisableNetworkProtectionPerfTelemetry",
        "description": "This setting disables the gathering and send of performance telemetry from Network Protection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Network protection telemetry is enabled"
            },
            "1": {
              "description": "Network protection telemetry is disabled"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableQuicParsing": {
        "name": "DisableQuicParsing",
        "description": "This setting disables QUIC Parsing for Network Protection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "QUIC parsing is enabled"
            },
            "1": {
              "description": "QUIC parsing is disabled"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableRdpParsing": {
        "name": "DisableRdpParsing",
        "description": "This setting disables RDP Parsing for Network Protection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "RDP Parsing is enabled"
            },
            "1": {
              "description": "RDP Parsing is disabled"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableSmtpParsing": {
        "name": "DisableSmtpParsing",
        "description": "This setting disables SMTP Parsing for Network Protection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "SMTP parsing is enabled"
            },
            "1": {
              "description": "SMTP parsing is disabled"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableSshParsing": {
        "name": "DisableSshParsing",
        "description": "This setting disables SSH Parsing for Network Protection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "SSH parsing is enabled"
            },
            "1": {
              "description": "SSH parsing is disabled"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/DisableTlsParsing": {
        "name": "DisableTlsParsing",
        "description": "This setting disables TLS Parsing for Network Protection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "TLS parsing is enabled"
            },
            "1": {
              "description": "TLS parsing is disabled"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/EnableConvertWarnToBlock": {
        "name": "EnableConvertWarnToBlock",
        "description": "This setting controls whether network protection blocks network traffic instead of displaying a warning",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Warn verdicts are not converted to block"
            },
            "1": {
              "description": "Warn verdicts are converted to block"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/EnableDnsSinkhole": {
        "name": "EnableDnsSinkhole",
        "description": "This setting enables the DNS Sinkhole feature for Network Protection, respecting the value of EnableNetworkProtection for block vs audit, does nothing in inspect mode.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "DNS Sinkhole is enabled"
            },
            "1": {
              "description": "DNS Sinkhole is disabled"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/EnableFileHashComputation": {
        "name": "EnableFileHashComputation",
        "description": "Enables or disables file hash computation feature. When this feature is enabled Windows defender will compute hashes for files it scans.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/EngineUpdatesChannel": {
        "name": "EngineUpdatesChannel",
        "description": "Enable this policy to specify when devices receive Microsoft Defender engine updates during the monthly gradual rollout.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not configured (Default). The device will stay up to date automatically during the gradual release cycle. Suitable for most devices."
            },
            "2": {
              "description": "Beta Channel: Devices set to this channel will be the first to receive new updates. Select Beta Channel to participate in identifying and reporting issues to Microsoft. Devices in the Windows Insider Program are subscribed to this channel by default. For use in (manual) test environments only and a limited number of devices."
            },
            "3": {
              "description": "Current Channel (Preview): Devices set to this channel will be offered updates earliest during the monthly gradual release cycle. Suggested for pre-production/validation environments."
            },
            "4": {
              "description": "Current Channel (Staged): Devices will be offered updates after the monthly gradual release cycle. Suggested to apply to a small, representative part of your production population (~10%)."
            },
            "5": {
              "description": "Current Channel (Broad): Devices will be offered updates only after the gradual release cycle completes. Suggested to apply to a broad set of devices in your production population (~10-100%)."
            },
            "6": {
              "description": "Critical - Time delay: Devices will be offered updates with a 48-hour delay. Suggested for critical environments only."
            }
          }
        },
        "scope": "device"
      },
      "Configuration/ExcludedIpAddresses": {
        "name": "ExcludedIpAddresses",
        "description": "Allows an administrator to explicitly disable network packet inspection made by wdnisdrv on a particular set of IP addresses.",
        "format": "string",
        "scope": "device"
      },
      "Configuration/HideExclusionsFromLocalAdmins": {
        "name": "HideExclusionsFromLocalAdmins",
        "description": "This policy setting controls whether or not exclusions are visible to local admins. To control local users exlcusions visibility use HideExclusionsFromLocalUsers. If HideExclusionsFromLocalAdmins is set then HideExclusionsFromLocalUsers will be implicitly set.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "If you disable or do not configure this setting, local admins will be able to see exclusions in the Windows Security App and via PowerShell."
            },
            "1": {
              "description": "If you enable this setting, local admins will no longer be able to see the exclusion list in Windows Security App or via PowerShell."
            }
          }
        },
        "scope": "device"
      },
      "Configuration/HideExclusionsFromLocalUsers": {
        "name": "HideExclusionsFromLocalUsers",
        "description": "This policy setting controls whether or not exclusions are visible to local users. If HideExclusionsFromLocalAdmins is set then this policy will be implicitly set.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "If you disable or do not configure this setting, local users will be able to see exclusions in the Windows Security App and via PowerShell."
            },
            "1": {
              "description": "If you enable this setting, local users will no longer be able to see the exclusion list in Windows Security App or via PowerShell."
            }
          }
        },
        "scope": "device"
      },
      "Configuration/IntelTDTEnabled": {
        "name": "IntelTDTEnabled",
        "description": "This policy setting configures the Intel TDT integration level for Intel TDT-capable devices.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "If you do not configure this setting, the default value will be applied. The default value is controlled by Microsoft security intelligence updates. Microsoft will enable Intel TDT if there is a known threat."
            },
            "1": {
              "description": "If you configure this setting to enabled, Intel TDT integration will turn on."
            },
            "2": {
              "description": "If you configure this setting to disabled, Intel TDT integration will turn off."
            }
          }
        },
        "scope": "device"
      },
      "Configuration/MeteredConnectionUpdates": {
        "name": "MeteredConnectionUpdates",
        "description": "Allow managed devices to update through metered connections. Default is 0 - not allowed, 1 - allowed",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not Allowed"
            },
            "1": {
              "description": "Allowed"
            }
          }
        },
        "scope": "device"
      },
      "Configuration/OobeEnableRtpAndSigUpdate": {
        "name": "OobeEnableRtpAndSigUpdate",
        "description": "This setting allows you to configure whether real-time protection and Security Intelligence Updates are enabled during OOBE (Out of Box experience).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "If you either disable or do not configure this setting, real-time protection and Security Intelligence Updates during OOBE is not enabled."
            },
            "1": {
              "description": "If you enable this setting, real-time protection and Security Intelligence Updates are enabled during OOBE."
            }
          }
        },
        "scope": "device"
      },
      "Configuration/PassiveRemediation": {
        "name": "PassiveRemediation",
        "description": "Setting to control automatic remediation for Sense scans.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "Configuration/PerformanceModeStatus": {
        "name": "PerformanceModeStatus",
        "description": "This setting allows IT admins to configure performance mode in either enabled or disabled mode for managed devices.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Performance mode is enabled (default). A service restart is required after changing this value."
            },
            "1": {
              "description": "Performance mode is disabled. A service restart is required after changing this value."
            }
          }
        },
        "scope": "device"
      },
      "Configuration/PlatformUpdatesChannel": {
        "name": "PlatformUpdatesChannel",
        "description": "Enable this policy to specify when devices receive Microsoft Defender platform updates during the monthly gradual rollout.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not configured (Default). The device will stay up to date automatically during the gradual release cycle. Suitable for most devices."
            },
            "2": {
              "description": "Beta Channel: Devices set to this channel will be the first to receive new updates. Select Beta Channel to participate in identifying and reporting issues to Microsoft. Devices in the Windows Insider Program are subscribed to this channel by default. For use in (manual) test environments only and a limited number of devices."
            },
            "3": {
              "description": "Current Channel (Preview): Devices set to this channel will be offered updates earliest during the monthly gradual release cycle. Suggested for pre-production/validation environments."
            },
            "4": {
              "description": "Current Channel (Staged): Devices will be offered updates after the monthly gradual release cycle. Suggested to apply to a small, representative part of your production population (~10%)."
            },
            "5": {
              "description": "Current Channel (Broad): Devices will be offered updates only after the gradual release cycle completes. Suggested to apply to a broad set of devices in your production population (~10-100%)."
            },
            "6": {
              "description": "Critical - Time delay: Devices will be offered updates with a 48-hour delay. Suggested for critical environments only."
            }
          }
        },
        "scope": "device"
      },
      "Configuration/RandomizeScheduleTaskTimes": {
        "name": "RandomizeScheduleTaskTimes",
        "description": "In Microsoft Defender Antivirus, randomize the start time of the scan to any interval from 0 to 23 hours. This can be useful in virtual machines or VDI deployments.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Scheduled tasks will not be randomized."
            },
            "1": {
              "description": "Widen or narrow the randomization period for scheduled scans. Specify a randomization window of between 1 and 23 hours by using the setting SchedulerRandomizationTime."
            }
          }
        },
        "scope": "device"
      },
      "Configuration/ScanOnlyIfIdleEnabled": {
        "name": "ScanOnlyIfIdleEnabled",
        "description": "In Microsoft Defender Antivirus, this setting will run scheduled scans only if the system is idle.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Runs scheduled scans regardless of whether the system is idle."
            },
            "1": {
              "description": "Runs scheduled scans only if the system is idle."
            }
          }
        },
        "scope": "device"
      },
      "Configuration/SchedulerRandomizationTime": {
        "name": "SchedulerRandomizationTime",
        "description": "This setting allows you to configure the scheduler randomization in hours. The randomization interval is [1 - 23] hours. For more information on the randomization effect please check the RandomizeScheduleTaskTimes setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 2
        },
        "scope": "device"
      },
      "Configuration/SecuredDevicesConfiguration": {
        "name": "SecuredDevicesConfiguration",
        "description": "Defines what are the devices primary ids that should be secured by Defender Device Control. The primary id values should be pipe (|) separated. Example: RemovableMediaDevices|CdRomDevices. If this configuration is not set the default value will be applied, meaning all of the supported devices will be secured.",
        "format": "string",
        "scope": "device"
      },
      "Configuration/SecurityIntelligenceLocationUpdateAtScheduledTimeOnly": {
        "name": "SecurityIntelligenceLocationUpdateAtScheduledTimeOnly",
        "description": "This setting allows you to configure security intelligence updates according to the scheduler for VDI-configured computers. It is used together with the shared security intelligence location (SecurityIntelligenceLocation).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "If you either disable or do not configure this setting, updates occur whenever a new security intelligence update is detected at the location that is specified by SecurityIntelligenceLocation."
            },
            "1": {
              "description": "If you enable this setting and configure SecurityIntelligenceLocation, updates from the configured location occur only at the previously configured scheduled update time."
            }
          }
        },
        "scope": "device"
      },
      "Configuration/SecurityIntelligenceUpdatesChannel": {
        "name": "SecurityIntelligenceUpdatesChannel",
        "description": "Enable this policy to specify when devices receive Microsoft Defender security intelligence updates during the daily gradual rollout.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not configured (Default). The device will stay up to date automatically during the gradual release cycle. Suitable for most devices."
            },
            "4": {
              "description": "Current Channel (Staged): Devices will be offered updates after the release cycle. Suggested to apply to a small, representative part of production population (~10%)."
            },
            "5": {
              "description": "Current Channel (Broad): Devices will be offered updates only after the gradual release cycle completes. Suggested to apply to a broad set of devices in your production population (~10-100%)."
            }
          }
        },
        "scope": "device"
      },
      "Configuration/SupportLogLocation": {
        "name": "SupportLogLocation",
        "description": "The support log location setting allows the administrator to specify where the Microsoft Defender Antivirus diagnostic data collection tool (MpCmdRun.exe) will save the resulting log files. This setting is configured with an MDM solution, such as Intune, and is available for Windows 10 Enterprise.",
        "format": "string",
        "scope": "device"
      },
      "Configuration/TamperProtection": {
        "name": "TamperProtection",
        "description": "Tamper protection helps protect important security features from unwanted changes and interference. This includes real-time protection, behavior monitoring, and more. Accepts signed string to turn the feature on or off. Settings are configured with an MDM solution, such as Intune and is available in Windows 10 Enterprise E5 or equivalent subscriptions. Send off blob to device to reset tamper protection state before setting this configuration to \"not configured\" or \"unassigned\" in Intune. The data type is a Signed blob.",
        "format": "string",
        "scope": "device"
      },
      "Configuration/ThrottleForScheduledScanOnly": {
        "name": "ThrottleForScheduledScanOnly",
        "description": "A CPU usage limit can be applied to scheduled scans only, or to scheduled and custom scans. The default value applies a CPU usage limit to scheduled scans only.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "If you disable this setting, CPU throttling will apply to scheduled and custom scans."
            },
            "1": {
              "description": "If you enable this setting, CPU throttling will apply only to scheduled scans."
            }
          }
        },
        "scope": "device"
      },
      "OfflineScan": {
        "name": "OfflineScan",
        "description": "OfflineScan action starts a Microsoft Defender Offline scan on the computer where you run the command. After the next OS reboot, the device will start in Microsoft Defender Offline mode to begin the scan.",
        "format": "string",
        "scope": "device"
      },
      "RollbackEngine": {
        "name": "RollbackEngine",
        "description": "RollbackEngine action rolls back Microsoft Defender engine to it's last known good saved version on the computer where you run the command.",
        "format": "string",
        "scope": "device"
      },
      "RollbackPlatform": {
        "name": "RollbackPlatform",
        "description": "RollbackPlatform action rolls back Microsoft Defender to it's last known good installation location on the computer where you run the command.",
        "format": "string",
        "scope": "device"
      },
      "Scan": {
        "name": "Scan",
        "description": "Node that can be used to start a Windows Defender scan on a device.",
        "format": "string",
        "scope": "device"
      },
      "UpdateSignature": {
        "name": "UpdateSignature",
        "description": "Node that can be used to perform signature updates for Windows Defender.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/DeviceManageability": {
    "name": "DeviceManageability",
    "policies": {
      "Provider/{ProviderID}": {
        "name": "",
        "title": "ProviderID",
        "description": "Provider ID String of the Configuration Source",
        "format": "node",
        "nodes": {
          "ConfigInfo": {
            "name": "ConfigInfo",
            "title": "ConfigInfo",
            "description": "Configuration Info string value set by the config source. Recommended to be used during sync session.",
            "format": "string",
            "scope": "device"
          },
          "EnrollmentInfo": {
            "name": "EnrollmentInfo",
            "title": "EnrollmentInfo",
            "description": "Enrollment Info string value set by the config source. Recommended to sent to server during MDM enrollment.",
            "format": "string",
            "scope": "device"
          },
          "PayloadTransfer": {
            "name": "PayloadTransfer",
            "title": "PayloadTransfer",
            "description": "Payload Transfer string value set by the config source. Recommended to be used during sync session.",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/DevicePreparation": {
    "name": "DevicePreparation",
    "policies": {
      "BootstrapperAgent/ClassID": {
        "name": "ClassID",
        "description": "This node stores the class ID for the Bootstrapper Agent WinRT object.",
        "format": "string",
        "scope": "device"
      },
      "BootstrapperAgent/ExecutionContext": {
        "name": "ExecutionContext",
        "description": "This node holds opaque data that will be passed to the Bootstrapper Agent as a parameter when it is invoked to execute.",
        "format": "string",
        "scope": "device"
      },
      "BootstrapperAgent/InstallationStatusUri": {
        "name": "InstallationStatusUri",
        "description": "This node holds a URI that can be queried for the status of the Bootstrapper Agent installation.",
        "format": "string",
        "scope": "device"
      },
      "MDMProvider/Progress": {
        "name": "Progress",
        "description": "Noode for reporting progress status as opaque data.",
        "format": "string",
        "scope": "device"
      },
      "MdmAgentInstalled": {
        "name": "MdmAgentInstalled",
        "description": "This node indicates whether the MDM agent was installed or not. When set to true sets the AUTOPILOT_MDM_AGENT_REGISTERED WNF event.",
        "format": "bool",
        "scope": "device"
      },
      "PageEnabled": {
        "name": "PageEnabled",
        "description": "This node determines whether to enable or show the Device Preparation page.",
        "format": "bool",
        "scope": "device"
      },
      "PageSettings": {
        "name": "PageSettings",
        "description": "This node configures specific settings for the Device Preparation page.",
        "format": "string",
        "scope": "device"
      },
      "PageStatus": {
        "name": "PageStatus",
        "description": "This node provides status of the Device Preparation page.  Values are an enum: 0 = Disabled; 1 = Enabled;  2 = InProgress; 3 = ExitedOnSuccess; 4 = ExitedOnFailure.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            },
            "2": {
              "description": "InProgress"
            },
            "3": {
              "description": "Succeeded"
            },
            "4": {
              "description": "Failed"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/DnsClient": {
    "name": "DnsClient",
    "policies": {
      "DynamicDNS/Enabled": {
        "name": "Enabled",
        "title": "Enable DDNS",
        "format": "bool",
        "scope": "device"
      },
      "DynamicDNS/Overwrite": {
        "name": "Overwrite",
        "format": "bool",
        "scope": "device"
      },
      "Encryption/DoH/Status": {
        "name": "Status",
        "description": "Set if the DNS client is allowed to make DNS queries over HTTPS. The default state is to allow these queries.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed"
            },
            "1": {
              "description": "Blocked"
            }
          }
        },
        "scope": "device"
      },
      "Encryption/DoT/Status": {
        "name": "Status",
        "description": "Set if the DNS client is allowed to make DNS queries over TLS. The default state is to allow these queries.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed"
            },
            "1": {
              "description": "Blocked"
            }
          }
        },
        "scope": "device"
      },
      "Encryption/Status": {
        "name": "Status",
        "description": "Define the system-wide status of encrypted DNS. Disabled will block any attempts at DoH or DoT through the client, Allowed offers both unencrypted requests, as well as encrypted requests when possible, and Enforced blocks any lookups that would be sent via an unencrypted configuration. The default value is ",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Unconfigured"
            },
            "1": {
              "description": "Disabled"
            },
            "2": {
              "description": "Allowed"
            },
            "3": {
              "description": "Enforced"
            }
          }
        },
        "scope": "device"
      },
      "IDN/Encoded": {
        "name": "Encoded",
        "format": "bool",
        "scope": "device"
      },
      "IDN/Mapped": {
        "name": "Mapped",
        "format": "bool",
        "scope": "device"
      },
      "LinkLocal/LLMNR/Enabled": {
        "name": "Enabled",
        "format": "bool",
        "scope": "device"
      },
      "LinkLocal/NetBIOS/AllowFQDN": {
        "name": "AllowFQDN",
        "title": "Allow FQDN NetBIOS Lookups",
        "format": "bool",
        "scope": "device"
      },
      "LinkLocal/NetBIOS/Enable": {
        "name": "Enable",
        "title": "Enable NetBIOS",
        "description": "NetBIOS can be fully disabled, disabled only on public networks, enabled in learning mode, or  enabled entirely. By default, it runs in Learning Mode.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable NetBIOS"
            },
            "1": {
              "description": "Allow NetBIOS"
            },
            "2": {
              "description": "Disable NetBIOS on Public Networks"
            },
            "3": {
              "description": "Run NetBIOS in Learning Mode"
            }
          }
        },
        "scope": "device"
      },
      "LinkLocal/mDNS/Enabled": {
        "name": "Enabled",
        "format": "bool",
        "scope": "device"
      },
      "NRPT/{Policy Table Entry}": {
        "name": "",
        "title": "Policy Table Entry",
        "description": "A row in the name resolution policy table.",
        "format": "node",
        "nodes": {
          "DNSServers": {
            "name": "DNSServers",
            "title": "DNS Servers",
            "description": "Space-separated list of IP addresses of DNS server(s) used to resolve names that match this policy.",
            "format": "string",
            "scope": "device"
          },
          "Namespace": {
            "name": "Namespace",
            "title": "Entry namespace",
            "description": "The domain name being routed under this policy. Depending on the NamespaceType value, this may be any one of: FQDN, domain suffix, hostname (of any given domain), or IPv4 or IPv6 subnet.",
            "format": "string",
            "scope": "device"
          },
          "NamespaceType": {
            "name": "NamespaceType",
            "description": "The type of the namespace declared by this table entry. This defines the scope that this policy applies to.",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/EnterpriseDesktopAppManagement": {
    "name": "EnterpriseDesktopAppManagement",
    "policies": {
      "MSI/{ProductID}": {
        "name": "",
        "title": "ProductID",
        "description": "The MSI product code for the application.",
        "format": "node",
        "nodes": {
          "DownloadInstall": {
            "name": "DownloadInstall",
            "description": "",
            "format": "xml",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/EnterpriseModernAppManagement": {
    "name": "EnterpriseModernAppManagement",
    "policies": {
      "AppInstallation/{PackageFamilyName}": {
        "name": "",
        "title": "PackageFamilyName",
        "description": " Package family name (PFN) of the app. There is one for each PFN on the device when reporting inventory. These items are rooted under their signing origin.",
        "format": "node",
        "nodes": {
          "HostedInstall": {
            "name": "HostedInstall",
            "description": "Command to perform an install of an app package from a hosted location (this can be a local drive, a UNC, or https data source).",
            "format": "xml",
            "scope": "device"
          },
          "StoreInstall": {
            "name": "StoreInstall",
            "description": "Command to perform an install of an app and a license from the Microsoft Store.",
            "format": "xml",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "AppLicenses/StoreLicenses/{LicenseID}": {
        "name": "",
        "title": "LicenseID",
        "description": "License ID for a store installed app. The license ID is generally the PFN of the app.",
        "format": "node",
        "scope": "device"
      },
      "AppManagement/AppInventoryQuery": {
        "name": "AppInventoryQuery",
        "description": "Specifies the query for app inventory.",
        "format": "xml",
        "scope": "device"
      },
      "AppManagement/AppStore": {
        "name": "AppStore",
        "format": "node",
        "scope": "device"
      },
      "AppManagement/AppStore/ReleaseManagement": {
        "name": "ReleaseManagement",
        "description": "Interior node for the managing updates through the Microsoft Store. These settings allow the IT admin to specify update channels for apps that they want their users to use for receiving updates. It allows the IT admin to assign a specific release to a smaller group for testing before the large deployment to the rest of the organization.",
        "format": "node",
        "scope": "device"
      },
      "AppManagement/AppStore/ReleaseManagement/{ReleaseManagementKey}": {
        "name": "",
        "title": "ReleaseManagementKey",
        "description": " Identifier for the app or set of apps. If there is only one app, it is the PackageFamilyName. If it is for a set of apps, it is the PackageFamilyName of the main app.",
        "format": "node",
        "nodes": {
          "ChannelId": {
            "name": "ChannelId",
            "description": "Specifies the app channel ID.",
            "format": "string",
            "scope": "device"
          },
          "ReleaseManagementId": {
            "name": "ReleaseManagementId",
            "description": "The IT admin can specify a release ID to indicate a specific release that they would like the user or device to be on.",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "AppManagement/AppStore/{PackageFamilyName}": {
        "name": "",
        "title": "PackageFamilyName",
        "description": "Package family name (PFN) of the app. There is one for each PFN on the device when reporting inventory. These items are rooted under their signing origin.",
        "format": "node",
        "nodes": {
          "DoNotUpdate": {
            "name": "DoNotUpdate",
            "title": "DoNotUpdate",
            "description": "Specifies whether you want to block a specific app from being updated via auto-updates.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "False"
                },
                "1": {
                  "description": "True"
                }
              }
            },
            "scope": "device"
          },
          "MaintainProcessorArchitectureOnUpdate": {
            "name": "MaintainProcessorArchitectureOnUpdate",
            "title": "MaintainProcessorArchitectureOnUpdate",
            "description": "Specify whether on a AMD64 device, across an app update, the architecture of the installed app must not change. For example if you have the x86 flavor of a Windows app installed, with this setting enabled, across an update, the x86 flavor will be installed even when x64 flavor is available.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "False"
                },
                "1": {
                  "description": "True"
                }
              }
            },
            "scope": "device"
          },
          "NonRemovable": {
            "name": "NonRemovable",
            "title": "NonRemovable",
            "description": "This setting allows the IT admin to set an app to be nonremovable, or unable to be uninstalled by a user. This is useful in enterprise and education scenarios, where the IT admin might want to ensure that everyone always has certain apps and they won't be removed accidentally. This is also useful when there are multiple users per device, and you want to ensure that one user doesn’t remove it for all users.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "app is not in the nonremovable app policy list"
                },
                "1": {
                  "description": "app is included in the nonremovable app policy list"
                }
              }
            },
            "scope": "device"
          },
          "{PackageFullName}": {
            "name": "",
            "title": "PackageFullName",
            "description": "Full name of the package installed.",
            "format": "node",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "AppManagement/ResetPackage": {
        "name": "ResetPackage",
        "description": "Used to restore the Windows app to its initial configuration.",
        "format": "xml",
        "scope": "device"
      },
      "AppManagement/System": {
        "name": "System",
        "format": "node",
        "scope": "device"
      },
      "AppManagement/System/ReleaseManagement": {
        "name": "ReleaseManagement",
        "description": "Interior node for the managing updates through the Microsoft Store. These settings allow the IT admin to specify update channels for apps that they want their users to use for receiving updates. It allows the IT admin to assign a specific release to a smaller group for testing before the large deployment to the rest of the organization.",
        "format": "node",
        "scope": "device"
      },
      "AppManagement/System/ReleaseManagement/{ReleaseManagementKey}": {
        "name": "",
        "title": "ReleaseManagementKey",
        "description": " Identifier for the app or set of apps. If there is only one app, it is the PackageFamilyName. If it is for a set of apps, it is the PackageFamilyName of the main app.",
        "format": "node",
        "nodes": {
          "ChannelId": {
            "name": "ChannelId",
            "description": "Specifies the app channel ID.",
            "format": "string",
            "scope": "device"
          },
          "ReleaseManagementId": {
            "name": "ReleaseManagementId",
            "description": "The IT admin can specify a release ID to indicate a specific release that they would like the user or device to be on.",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "AppManagement/System/{PackageFamilyName}": {
        "name": "",
        "title": "PackageFamilyName",
        "description": "Package family name (PFN) of the app. There is one for each PFN on the device when reporting inventory. These items are rooted under their signing origin.",
        "format": "node",
        "nodes": {
          "AppUpdateSettings": {
            "name": "AppUpdateSettings",
            "description": "AppUpdateSettings nodes to support the auto-update and auto-repair feature for a specific package",
            "format": "node",
            "scope": "device"
          },
          "AppUpdateSettings/AutoRepair": {
            "name": "AutoRepair",
            "description": "AutoRepair node to support auto-repair feature for a specific package",
            "format": "node",
            "scope": "device"
          },
          "AppUpdateSettings/AutoRepair/PackageSource": {
            "name": "PackageSource",
            "description": "PackageSource node that points the update location for a specific package",
            "format": "string",
            "scope": "device"
          },
          "AppUpdateSettings/AutoUpdateSettings": {
            "name": "AutoUpdateSettings",
            "description": "AutoUpdateSettings nodes to support the auto-updates for a specific package",
            "format": "node",
            "scope": "device"
          },
          "AppUpdateSettings/AutoUpdateSettings/AutomaticBackgroundTask": {
            "name": "AutomaticBackgroundTask",
            "description": "Specifies whether AutomaticBackgroundTask is enabled/disabled for a specific package",
            "format": "bool",
            "scope": "device"
          },
          "AppUpdateSettings/AutoUpdateSettings/Disable": {
            "name": "Disable",
            "description": "Specifies whether the auto-update settings is enabled/disabled for a specific package",
            "format": "bool",
            "scope": "device"
          },
          "AppUpdateSettings/AutoUpdateSettings/ForceUpdateFromAnyVersion": {
            "name": "ForceUpdateFromAnyVersion",
            "description": "Specifies whether the auto-update setting ForceUpdateFromAnyVersion is enabled/disabled for a specific package",
            "format": "bool",
            "scope": "device"
          },
          "AppUpdateSettings/AutoUpdateSettings/HoursBetweenUpdateChecks": {
            "name": "HoursBetweenUpdateChecks",
            "description": "Specifies HoursBetweenUpdateChecks for a specific package",
            "format": "bool",
            "scope": "device"
          },
          "AppUpdateSettings/AutoUpdateSettings/OnLaunchUpdateCheck": {
            "name": "OnLaunchUpdateCheck",
            "description": "Specifies whether OnLaunchUpdateCheck is enabled/disabled for a specific package",
            "format": "bool",
            "scope": "device"
          },
          "AppUpdateSettings/AutoUpdateSettings/PackageSource": {
            "name": "PackageSource",
            "description": "PackageSource node that points the update location for a specific package",
            "format": "string",
            "scope": "device"
          },
          "AppUpdateSettings/AutoUpdateSettings/ShowPrompt": {
            "name": "ShowPrompt",
            "description": "Specifies whether the auto-update setting ShowPrompt is enabled/disabled for a specific package",
            "format": "bool",
            "scope": "device"
          },
          "AppUpdateSettings/AutoUpdateSettings/UpdateBlocksActivation": {
            "name": "UpdateBlocksActivation",
            "description": "Specifies whether the auto-update setting UpdateBlocksActivation is enabled/disabled for a specific package",
            "format": "bool",
            "scope": "device"
          },
          "DoNotUpdate": {
            "name": "DoNotUpdate",
            "title": "DoNotUpdate",
            "description": "Specifies whether you want to block a specific app from being updated via auto-updates.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "False"
                },
                "1": {
                  "description": "True"
                }
              }
            },
            "scope": "device"
          },
          "MaintainProcessorArchitectureOnUpdate": {
            "name": "MaintainProcessorArchitectureOnUpdate",
            "title": "MaintainProcessorArchitectureOnUpdate",
            "description": "Specify whether on a AMD64 device, across an app update, the architecture of the installed app must not change. For example if you have the x86 flavor of a Windows app installed, with this setting enabled, across an update, the x86 flavor will be installed even when x64 flavor is available.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "False"
                },
                "1": {
                  "description": "True"
                }
              }
            },
            "scope": "device"
          },
          "NonRemovable": {
            "name": "NonRemovable",
            "title": "NonRemovable",
            "description": "This setting allows the IT admin to set an app to be nonremovable, or unable to be uninstalled by a user. This is useful in enterprise and education scenarios, where the IT admin might want to ensure that everyone always has certain apps and they won't be removed accidentally. This is also useful when there are multiple users per device, and you want to ensure that one user doesn’t remove it for all users.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "app is not in the nonremovable app policy list"
                },
                "1": {
                  "description": "app is included in the nonremovable app policy list"
                }
              }
            },
            "scope": "device"
          },
          "{PackageFullName}": {
            "name": "",
            "title": "PackageFullName",
            "description": "Full name of the package installed.",
            "format": "node",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "AppManagement/nonStore": {
        "name": "nonStore",
        "format": "node",
        "scope": "device"
      },
      "AppManagement/nonStore/ReleaseManagement": {
        "name": "ReleaseManagement",
        "description": "Interior node for the managing updates through the Microsoft Store. These settings allow the IT admin to specify update channels for apps that they want their users to use for receiving updates. It allows the IT admin to assign a specific release to a smaller group for testing before the large deployment to the rest of the organization.",
        "format": "node",
        "scope": "device"
      },
      "AppManagement/nonStore/ReleaseManagement/{ReleaseManagementKey}": {
        "name": "",
        "title": "ReleaseManagementKey",
        "description": " Identifier for the app or set of apps. If there is only one app, it is the PackageFamilyName. If it is for a set of apps, it is the PackageFamilyName of the main app.",
        "format": "node",
        "nodes": {
          "ChannelId": {
            "name": "ChannelId",
            "description": "Specifies the app channel ID.",
            "format": "string",
            "scope": "device"
          },
          "ReleaseManagementId": {
            "name": "ReleaseManagementId",
            "description": "The IT admin can specify a release ID to indicate a specific release that they would like the user or device to be on.",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "AppManagement/nonStore/{PackageFamilyName}": {
        "name": "",
        "title": "PackageFamilyName",
        "description": "Package family name (PFN) of the app. There is one for each PFN on the device when reporting inventory. These items are rooted under their signing origin.",
        "format": "node",
        "nodes": {
          "DoNotUpdate": {
            "name": "DoNotUpdate",
            "title": "DoNotUpdate",
            "description": "Specifies whether you want to block a specific app from being updated via auto-updates.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "False"
                },
                "1": {
                  "description": "True"
                }
              }
            },
            "scope": "device"
          },
          "MaintainProcessorArchitectureOnUpdate": {
            "name": "MaintainProcessorArchitectureOnUpdate",
            "title": "MaintainProcessorArchitectureOnUpdate",
            "description": "Specify whether on a AMD64 device, across an app update, the architecture of the installed app must not change. For example if you have the x86 flavor of a Windows app installed, with this setting enabled, across an update, the x86 flavor will be installed even when x64 flavor is available.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "False"
                },
                "1": {
                  "description": "True"
                }
              }
            },
            "scope": "device"
          },
          "NonRemovable": {
            "name": "NonRemovable",
            "title": "NonRemovable",
            "description": "This setting allows the IT admin to set an app to be nonremovable, or unable to be uninstalled by a user. This is useful in enterprise and education scenarios, where the IT admin might want to ensure that everyone always has certain apps and they won't be removed accidentally. This is also useful when there are multiple users per device, and you want to ensure that one user doesn’t remove it for all users.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "app is not in the nonremovable app policy list"
                },
                "1": {
                  "description": "app is included in the nonremovable app policy list"
                }
              }
            },
            "scope": "device"
          },
          "{PackageFullName}": {
            "name": "",
            "title": "PackageFullName",
            "description": "Full name of the package installed.",
            "format": "node",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/LAPS": {
    "name": "LAPS",
    "policies": {
      "Policies/ADEncryptedPasswordHistorySize": {
        "name": "ADEncryptedPasswordHistorySize",
        "description": "Use this setting to configure how many previous encrypted passwords will be remembered in Active Directory.\r\n\r\nIf not specified, this setting will default to 0 passwords (disabled).\r\n\r\nThis setting has a minimum allowed value of 0 passwords.\r\n\r\nThis setting has a maximum allowed value of 12 passwords.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 1
        },
        "scope": "device"
      },
      "Policies/ADPasswordEncryptionEnabled": {
        "name": "ADPasswordEncryptionEnabled",
        "description": "Use this setting to configure whether the password is encrypted before being stored in Active Directory.\r\n\r\nThis setting is ignored if the password is currently being stored in Azure.\r\n\r\nThis setting is only honored when the Active Directory domain is at Windows Server 2016 Domain Functional Level or higher.\r\n\r\nIf this setting is enabled, and the Active Directory domain meets the DFL prerequisite, the password will be encrypted before before being stored in Active Directory.\r\n\r\nIf this setting is disabled, or the Active Directory domain does not meet the DFL prerequisite, the password will be stored as clear-text in Active Directory.\r\n\r\nIf not specified, this setting defaults to True.",
        "format": "bool",
        "scope": "device"
      },
      "Policies/ADPasswordEncryptionPrincipal": {
        "name": "ADPasswordEncryptionPrincipal",
        "description": "Use this setting to configure the name or SID of a user or group that can decrypt the password stored in Active Directory.\r\n\r\nThis setting is ignored if the password is currently being stored in Azure.\r\n\r\nIf not specified, the password will be decryptable by the Domain Admins group in the device's domain.\r\n\r\nIf specified, the specified user or group will be able to decrypt the password stored in Active Directory.\r\n\r\nIf the specified user or group account is invalid the device will fallback to using the Domain Admins group in the device's domain.",
        "format": "string",
        "scope": "device"
      },
      "Policies/AdministratorAccountName": {
        "name": "AdministratorAccountName",
        "description": "Use this setting to configure the name of the managed local administrator account.\r\n\r\nIf not specified, the default built-in local administrator account will be located by well-known SID (even if renamed).\r\n\r\nIf specified, the specified account's password will be managed.\r\n\r\nNote: if a custom managed local administrator account name is specified in this setting, that account must be created via other means. Specifying a name in this setting will not cause the account to be created.",
        "format": "string",
        "scope": "device"
      },
      "Policies/BackupDirectory": {
        "name": "BackupDirectory",
        "description": "Use this setting to configure which directory the local admin account password is backed up to.\r\n\r\nThe allowable settings are:\r\n\r\n0=Disabled (password will not be backed up)\r\n1=Backup the password to Azure AD only\r\n2=Backup the password to Active Directory only\r\n\r\nIf not specified, this setting will default to 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled (password will not be backed up)"
            },
            "1": {
              "description": "Backup the password to Azure AD only"
            },
            "2": {
              "description": "Backup the password to Active Directory only"
            }
          }
        },
        "scope": "device"
      },
      "Policies/PasswordAgeDays": {
        "name": "PasswordAgeDays",
        "description": "Use this policy to configure the maximum password age of the managed local administrator account.\r\n\r\nIf not specified, this setting will default to 30 days\r\n\r\nThis setting has a minimum allowed value of 1 day when backing the password to onpremises Active Directory, and 7 days when backing the password to Azure AD.\r\n\r\nThis setting has a maximum allowed value of 365 days.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 36
        },
        "scope": "device"
      },
      "Policies/PasswordComplexity": {
        "name": "PasswordComplexity",
        "description": "Use this setting to configure password complexity of the managed local administrator account.\r\n\r\nThe allowable settings are:\r\n\r\n1=Large letters\r\n2=Large letters + small letters\r\n3=Large letters + small letters + numbers\r\n4=Large letters + small letters + numbers + special characters\r\n\r\nIf not specified, this setting will default to 4.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "1": {
              "description": "Large letters"
            },
            "2": {
              "description": "Large letters + small letters"
            },
            "3": {
              "description": "Large letters + small letters + numbers"
            },
            "4": {
              "description": "Large letters + small letters + numbers + special characters"
            }
          }
        },
        "scope": "device"
      },
      "Policies/PasswordExpirationProtectionEnabled": {
        "name": "PasswordExpirationProtectionEnabled",
        "description": "Use this setting to configure additional enforcement of maximum password age for the managed local administrator account.\r\n\r\nWhen this setting is enabled, planned password expiration that would result in a password age greater than that dictated by \"PasswordAgeDays\" policy is NOT allowed. When such expiration is detected, the password is changed immediately and the new password expiration date is set according to policy.\r\n\r\nIf not specified, this setting defaults to True.",
        "format": "bool",
        "scope": "device"
      },
      "Policies/PasswordLength": {
        "name": "PasswordLength",
        "description": "Use this setting to configure the length of the password of the managed local administrator account.\r\n\r\nIf not specified, this setting will default to 14 characters.\r\n\r\nThis setting has a minimum allowed value of 8 characters.\r\n\r\nThis setting has a maximum allowed value of 64 characters.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 8,
          "max": 6
        },
        "scope": "device"
      },
      "Policies/PostAuthenticationActions": {
        "name": "PostAuthenticationActions",
        "description": "Use this setting to specify the actions to take upon expiration of the configured grace period.\r\n\r\nIf not specified, this setting will default to 3 (Reset the password and logoff the managed account).\r\n              ",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "1": {
              "description": "Reset password: upon expiry of the grace period, the managed account password will be reset."
            },
            "3": {
              "description": "Reset the password and logoff the managed account: upon expiry of the grace period, the managed account password will be reset and any interactive logon sessions using the managed account will terminated."
            },
            "5": {
              "description": "Reset the password and reboot: upon expiry of the grace period, the managed account password will be reset and the managed device will be immediately rebooted."
            }
          }
        },
        "scope": "device"
      },
      "Policies/PostAuthenticationResetDelay": {
        "name": "PostAuthenticationResetDelay",
        "description": "Use this setting to specify the amount of time (in hours) to wait after an authentication before executing the specified post-authentication actions.\r\n\r\n  If not specified, this setting will default to 24 hours.\r\n\r\n  This setting has a minimum allowed value of 0 hours (this disables all post-authentication actions).\r\n\r\n  This setting has a maximum allowed value of 24 hours.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 2
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/LanguagePackManagement": {
    "name": "LanguagePackManagement",
    "policies": {
      "Install/{Language ID}": {
        "name": "",
        "title": "Language ID",
        "description": "Language tag of the language to be installed or being installed.",
        "format": "node",
        "nodes": {
          "CopyToDeviceInternationalSettings": {
            "name": "CopyToDeviceInternationalSettings",
            "description": "Copies the language to the international settings (i.e., locale, input layout, speech recognizer, preferred UI language) of the device immediately after installation if the value is true. Default value is false.",
            "format": "bool",
            "scope": "device"
          },
          "EnableLanguageFeatureInstallations": {
            "name": "EnableLanguageFeatureInstallations",
            "description": "Enables installations of all available language features when the value is true. Default value is true.",
            "format": "bool",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "InstalledLanguages/{Language ID}": {
        "name": "",
        "title": "Language ID",
        "description": "Language tag of an installed language on the device. Delete to uninstall.",
        "format": "node",
        "scope": "device"
      },
      "LanguageSettings/SystemPreferredUILanguages": {
        "name": "SystemPreferredUILanguages",
        "description": "System Preferred UI Language of the device.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/NetworkQoSPolicy": {
    "name": "NetworkQoSPolicy",
    "policies": {
      "{Name}": {
        "name": "",
        "title": "Name",
        "description": "The value of this node should be a policy name.",
        "format": "node",
        "nodes": {
          "AppPathNameMatchCondition": {
            "name": "AppPathNameMatchCondition",
            "title": "AppPathNameMatchCondition",
            "description": "Specifies the name of an application to be used to match the network traffic, such as application.exe or %ProgramFiles%\\application.exe.",
            "format": "string",
            "scope": "device"
          },
          "DSCPAction": {
            "name": "DSCPAction",
            "title": "DSCPAction",
            "description": "The differentiated services code point (DSCP) value to apply to matching network traffic. Valid values are 0-63.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 6
            },
            "scope": "device"
          },
          "DestinationPortMatchCondition": {
            "name": "DestinationPortMatchCondition",
            "title": "DestinationPortMatchCondition",
            "description": "Specifies a single port or a range of ports to be used to match the network traffic. Valid values are [first port number]-[last port number] or [port number].",
            "format": "string",
            "scope": "device"
          },
          "IPProtocolMatchCondition": {
            "name": "IPProtocolMatchCondition",
            "title": "IPProtocolMatchCondition",
            "description": "Specifies the IP protocol used to match the network traffic. Valid values are 0: Both TCP and UDP (default), 1: TCP, 2: UDP.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "PriorityValue8021Action": {
            "name": "PriorityValue8021Action",
            "title": "PriorityValue8021Action",
            "description": "The IEEE 802.1p value to apply to matching network traffice. Valid values are 0-7.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "SourcePortMatchCondition": {
            "name": "SourcePortMatchCondition",
            "title": "SourcePortMatchCondition",
            "description": "Specifies a single port or a range of ports to be used to match the network traffic. Valid values are [first port number]-[last port number] or [port number].",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/NodeCache": {
    "name": "NodeCache",
    "policies": {
      "{ProviderID}": {
        "name": "",
        "title": "ProviderID",
        "description": "Group settings per DM server. Each group of settings is distinguished by the server's Provider ID. It should be the same DM server PROVIDER-ID value that was supplied through the w7 APPLICATION configuration service provider XML during the enrollment process. In Windows Phone 8, only one enterprise management server is supported. That is, there should be only one ProviderID node under NodeCache.",
        "format": "node",
        "nodes": {
          "CacheVersion": {
            "name": "CacheVersion",
            "description": "Character string representing the cache version set by the server.",
            "format": "string",
            "scope": "device"
          },
          "Nodes/{NodeID}": {
            "name": "",
            "title": "NodeID",
            "description": "Information about each cached node is stored under NodeID as specified by the server. This value must not contain a comma.",
            "format": "node",
            "nodes": {
              "AutoSetExpectedValue": {
                "name": "AutoSetExpectedValue",
                "description": "This will automatically set the value on the device to match the node's actual value. The node is specified in NodeURI.",
                "format": "null",
                "scope": "device"
              },
              "ExpectedValue": {
                "name": "ExpectedValue",
                "description": "This is the value that the server expects to be on the device. When the configuration service provider initiates a session, it checks the expected value against the node's actual value.",
                "format": "string",
                "scope": "device"
              },
              "NodeURI": {
                "name": "NodeURI",
                "description": "This node's value is a complete OMA DM node URI. It can specify either an interior or leaf node in the device management tree.",
                "format": "string",
                "scope": "device"
              }
            },
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Office": {
    "name": "Office",
    "policies": {
      "Installation/{id}": {
        "name": "",
        "title": "id",
        "description": "A unique identifier which represents the installation instance id.",
        "format": "node",
        "nodes": {
          "Install": {
            "name": "Install",
            "description": "The install action will install office given the configuration in the data.  The string data is the xml configuration to use in order to install office.",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/PassportForWork": {
    "name": "PassportForWork",
    "policies": {
      "Biometrics/EnableESSwithSupportedPeripherals": {
        "name": "EnableESSwithSupportedPeripherals",
        "description": "Enhanced Sign-in Security (ESS) isolates both biometric template data and matching operations to trusted hardware or specified memory regions, meaning the rest of the operating system cannot access or tamper with them. Because the channel of communication between the sensors and the algorithm is also secured, it is impossible for malware to inject or replay data in order to simulate a user signing in or to lock a user out of their machine.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "ESS will be enabled on systems with capable software and hardware, following the existing default behavior in Windows. Authentication operations of peripheral Windows Hello capable devices will be allowed, subject to current feature limitations. In addition, with this setting, ESS will be enabled on devices with a mixture of biometric devices, such as an ESS capable FPR and a non-ESS capable camera. (not recommended)"
            },
            "1": {
              "description": "ESS will be enabled on systems with capable software and hardware, following the existing default behavior in Windows. Authentication operations of any peripheral biometric device will be blocked and not available for Windows Hello. (default and recommended for highest security)"
            }
          }
        },
        "scope": "device"
      },
      "Biometrics/FacialFeaturesUseEnhancedAntiSpoofing": {
        "name": "FacialFeaturesUseEnhancedAntiSpoofing",
        "description": "This setting determines whether enhanced anti-spoofing is required for Windows Hello face authentication.\r\n\r\nIf you enable this setting, Windows requires all users on managed devices to use enhanced anti-spoofing for Windows Hello face authentication. This disables Windows Hello face authentication on devices that do not support enhanced anti-spoofing.\r\n\r\nIf you disable or do not configure this setting, Windows doesn't require enhanced anti-spoofing for Windows Hello face authentication.\r\n\r\nNote that enhanced anti-spoofing for Windows Hello face authentication is not required on unmanaged devices.",
        "format": "bool",
        "scope": "device"
      },
      "Biometrics/UseBiometrics": {
        "name": "UseBiometrics",
        "description": "Windows Hello for Business enables users to use biometric gestures, such as face and fingerprints, as an alternative to the PIN gesture. However, users must still configure a PIN to use in case of failures.\r\n\r\nIf you enable or do not configure this policy setting, Windows Hello for Business allows the use of biometric gestures.\r\n\r\nIf you disable this policy setting, Windows Hello for Business prevents the use of biometric gestures.\r\n\r\nNOTE: Disabling this policy prevents the use of biometric gestures on the device for all account types.",
        "format": "bool",
        "scope": "device"
      },
      "DeviceUnlock/GroupA": {
        "name": "GroupA",
        "description": "Contains a list of providers by GUID that are to be considered for the first step of authentication",
        "format": "string",
        "scope": "device"
      },
      "DeviceUnlock/GroupB": {
        "name": "GroupB",
        "description": "Contains a list of providers by GUID that are to be considered for the second step of authentication",
        "format": "string",
        "scope": "device"
      },
      "DeviceUnlock/Plugins": {
        "name": "Plugins",
        "description": "List of plugins that the passive provider monitors to detect user presence",
        "format": "string",
        "scope": "device"
      },
      "DynamicLock/DynamicLock": {
        "name": "DynamicLock",
        "description": "Enables/Disables Dyanamic Lock",
        "format": "bool",
        "scope": "device"
      },
      "DynamicLock/Plugins": {
        "name": "Plugins",
        "description": "List of plugins that the passive provider monitors to detect user absence",
        "format": "string",
        "scope": "device"
      },
      "SecurityKey/UseSecurityKeyForSignin": {
        "name": "UseSecurityKeyForSignin",
        "description": "Use security key for signin. 0 is disabled. 1 is enable. If you do not configure this policy setting, the default is disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "disabled"
            },
            "1": {
              "description": "enabled"
            }
          }
        },
        "scope": "device"
      },
      "UseBiometrics": {
        "name": "UseBiometrics",
        "description": "THIS NODE IS DEPRECATED AND WILL BE REMOVED IN A FUTURE VERSION. PLEASE USE Biometrics/UseBiometrics NODE INSTEAD.\r\n\r\nWindows Hello for Business enables users to use biometric gestures, such as face and fingerprints, as an alternative to the PIN gesture. However, users must still configure a PIN to use in case of failures.\r\n\r\nIf you enable or do not configure this policy setting, Windows Hello for Business allows the use of biometric gestures.\r\n\r\nIf you disable this policy setting, Windows Hello for Business prevents the use of biometric gestures.\r\n\r\nNOTE: Disabling this policy prevents the use of biometric gestures on the device for all account types.",
        "format": "bool",
        "scope": "device"
      },
      "{TenantId}": {
        "name": "",
        "title": "TenantId",
        "description": "This policy specifies the Tenant ID in the format of a Globally Unique Identifier (GUID) without curly braces ( { , } ), which will be used as part of Windows Hello for Business provisioning and management.",
        "format": "node",
        "nodes": {
          "Policies": {
            "name": "Policies",
            "title": "Policies",
            "description": "Root node for policies.",
            "format": "node",
            "scope": "device"
          },
          "Policies/DisablePostLogonCredentialCaching": {
            "name": "DisablePostLogonCredentialCaching",
            "description": "Disable caching of the Windows Hello for Business credential after sign-in.",
            "format": "bool",
            "scope": "device"
          },
          "Policies/DisablePostLogonProvisioning": {
            "name": "DisablePostLogonProvisioning",
            "description": "Do not start Windows Hello provisioning after sign-in.",
            "format": "bool",
            "scope": "device"
          },
          "Policies/EnablePinRecovery": {
            "name": "EnablePinRecovery",
            "description": "If the user forgets their PIN, it can be changed to a new PIN using the Windows Hello for Business PIN recovery service. This cloud service encrypts a recovery secret which is stored locally on the client, but which can only be decrypted by the cloud service.\r\n\r\nIf you enable this policy setting, the PIN recovery secret will be stored on the device and the user will be able to change to a new PIN in case their PIN is forgotten.\r\n\r\nIf you disable or do not configure this policy setting, the PIN recovery secret will not be created or stored. If the user's PIN is forgotten, the only way to get a new PIN is by deleting the existing PIN and creating a new one, which will require the user to re-register with any services the old PIN provided access to.\r\n                ",
            "format": "bool",
            "scope": "device"
          },
          "Policies/EnableWindowsHelloProvisioningForSecurityKeys": {
            "name": "EnableWindowsHelloProvisioningForSecurityKeys",
            "description": "Enable Windows Hello provisioning if users sign-in to their devices with FIDO2 security keys.",
            "format": "bool",
            "scope": "device"
          },
          "Policies/ExcludeSecurityDevices": {
            "name": "ExcludeSecurityDevices",
            "title": "ExcludeSecurityDevices",
            "description": "Root node for excluded security devices.",
            "format": "node",
            "scope": "device"
          },
          "Policies/ExcludeSecurityDevices/TPM12": {
            "name": "TPM12",
            "description": "Some Trusted Platform Modules (TPMs) are only compliant with the older 1.2 revision of the TPM specification defined by the Trusted Computing Group (TCG).\r\n\r\nIf you enable this policy setting, TPM revision 1.2 modules will be disallowed from being used with Windows Hello for Business.\r\n\r\nIf you disable or do not configure this policy setting, TPM revision 1.2 modules will be allowed to be used with Windows Hello for Business.",
            "format": "bool",
            "scope": "device"
          },
          "Policies/PINComplexity": {
            "name": "PINComplexity",
            "description": "Root node for PIN policies",
            "format": "node",
            "scope": "device"
          },
          "Policies/PINComplexity/Digits": {
            "name": "Digits",
            "description": "Use this policy setting to configure the use of digits in the Windows Hello for Business PIN.\r\n\r\nA value of 1 corresponds to “Required.” If you configure this policy setting to 1, Windows Hello for Business requires users to include at least one digit in their PIN.\r\n\r\nA value of 2 corresponds to “Disallow.” If you configure this policy setting to 2, Windows Hello for Business prevents users from using digits in their PIN.\r\n\r\nIf you do not configure this policy setting, Windows Hello for Business requires users to use digits in their PIN.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allows the use of digits in PIN."
                },
                "1": {
                  "description": "Requires the use of at least one digits in PIN."
                },
                "2": {
                  "description": "Does not allow the use of digits in PIN."
                }
              }
            },
            "scope": "device"
          },
          "Policies/PINComplexity/Expiration": {
            "name": "Expiration",
            "description": "This policy specifies when the PIN expires (in days). Valid values are 0 to 730 inclusive. If this policy is set to 0, then PINs do not expire.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 73
            },
            "scope": "device"
          },
          "Policies/PINComplexity/History": {
            "name": "History",
            "description": "This policy specifies the number of past PINs that can be stored in the history that can’t be used. Valid values are 0 to 50 inclusive. If this policy is set to 0, then storage of previous PINs is not required. PIN history is not preserved through PIN reset.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 5
            },
            "scope": "device"
          },
          "Policies/PINComplexity/LowercaseLetters": {
            "name": "LowercaseLetters",
            "description": "Use this policy setting to configure the use of lowercase letters in the Windows Hello for Business PIN.\r\n\r\nA value of 1 corresponds to “Required.” If you configure this policy setting to 1, Windows Hello for Business requires users to include at least one lowercase letter in their PIN.\r\n\r\nA value of 2 corresponds to “Disallow.” If you configure this policy setting to 2, Windows Hello for Business prevents users from using lowercase letters in their PIN.\r\n\r\nIf you do not configure this policy setting, Windows Hello for Business does not allow users to use lowercase letters in their PIN.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allows the use of lowercase letters in PIN."
                },
                "1": {
                  "description": "Requires the use of at least one lowercase letters in PIN."
                },
                "2": {
                  "description": "Does not allow the use of lowercase letters in PIN."
                }
              }
            },
            "scope": "device"
          },
          "Policies/PINComplexity/MaximumPINLength": {
            "name": "MaximumPINLength",
            "description": "Maximum PIN length configures the maximum number of characters allowed for the PIN.  The largest number you can configure for this policy setting is 127. The lowest number you can configure must be larger than the number configured in the Minimum PIN length policy setting or the number 4, whichever is greater.\r\n\r\nIf you configure this policy setting, the PIN length must be less than or equal to this number.\r\n\r\nIf you do not configure this policy setting, the PIN length must be less than or equal to 127.\r\n\r\nNOTE: If the above specified conditions for the maximum PIN length are not met, default values will be used for both the maximum and minimum PIN lengths.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 4,
              "max": 12
            },
            "scope": "device"
          },
          "Policies/PINComplexity/MinimumPINLength": {
            "name": "MinimumPINLength",
            "description": "Minimum PIN length configures the minimum number of characters required for the PIN.  The lowest number you can configure for this policy setting is 4.  The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.\r\n\r\nIf you configure this policy setting, the PIN length must be greater than or equal to this number.\r\n\r\nIf you do not configure this policy setting, the PIN length must be greater than or equal to 4.\r\n\r\nNOTE: If the above specified conditions for the minimum PIN length are not met, default values will be used for both the maximum and minimum PIN lengths.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 4,
              "max": 12
            },
            "scope": "device"
          },
          "Policies/PINComplexity/SpecialCharacters": {
            "name": "SpecialCharacters",
            "description": "",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allows the use of special characters in PIN."
                },
                "1": {
                  "description": "Requires the use of at least one special characters in PIN."
                },
                "2": {
                  "description": "Does not allow the use of special characters in PIN."
                }
              }
            },
            "scope": "device"
          },
          "Policies/PINComplexity/UppercaseLetters": {
            "name": "UppercaseLetters",
            "description": "Use this policy setting to configure the use of uppercase letters in the Windows Hello for Business PIN.\r\n\r\nA value of 1 corresponds to “Required.” If you configure this policy setting to 1, Windows Hello for Business requires users to include at least one uppercase letter in their PIN.\r\n\r\nA value of 2 corresponds to “Disallow.” If you configure this policy setting to 2, Windows Hello for Business prevents users from using uppercase letters in their PIN.\r\n\r\nIf you do not configure this policy setting, Windows Hello for Business does not allow users to use uppercase letters in their PIN.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allows the use of uppercase letters in PIN."
                },
                "1": {
                  "description": "Requires the use of at least one uppercase letters in PIN."
                },
                "2": {
                  "description": "Does not allow the use of uppercase letters in PIN."
                }
              }
            },
            "scope": "device"
          },
          "Policies/Remote": {
            "name": "Remote",
            "description": "Root node for phone sign-in policies",
            "format": "node",
            "scope": "device"
          },
          "Policies/Remote/UseRemotePassport": {
            "name": "UseRemotePassport",
            "description": "Boolean that specifies if phone sign-in can be used with a device. Phone sign-in provides the ability for a portable, registered device to be usable as a companion device for desktop authentication.\r\n\r\nDefault value is false. If you enable this setting, a desktop device will allow a registered, companion device to be used as an authentication factor. If you disable this setting, a companion device cannot be used in desktop authentication scenarios.",
            "format": "bool",
            "scope": "device"
          },
          "Policies/RequireSecurityDevice": {
            "name": "RequireSecurityDevice",
            "description": "A Trusted Platform Module (TPM) provides additional security benefits over software because data stored within it cannot be used on other devices.\r\n\r\nIf you enable this policy setting, only devices with a usable TPM provision Windows Hello for Business.\r\n\r\nIf you disable or do not configure this policy setting, the TPM is still preferred, but all devices provision Windows Hello for Business using software if the TPM is non-functional or unavailable.",
            "format": "bool",
            "scope": "device"
          },
          "Policies/UseCertificateForOnPremAuth": {
            "name": "UseCertificateForOnPremAuth",
            "description": "Windows Hello for Business can use certificates to authenticate to on-premise resources. \r\n\r\nIf you enable this policy setting, Windows Hello for Business will wait until the device has received a certificate payload from the mobile device management server before provisioning a PIN.\r\n\r\nIf you disable or do not configure this policy setting, the PIN will be provisioned when the user logs in, without waiting for a certificate payload.",
            "format": "bool",
            "scope": "device"
          },
          "Policies/UseCloudTrustForOnPremAuth": {
            "name": "UseCloudTrustForOnPremAuth",
            "description": "Boolean value that enables Windows Hello for Business to use Azure AD Kerberos to authenticate to on-premises resources.\r\n\r\nIf you enable this policy setting, Windows Hello for Business will use an Azure AD Kerberos ticket to authenticate to on-premises resources. The Azure AD Kerberos ticket is returned to the client after a successful authentication to Azure AD if Azure AD Kerberos is enabled for the tenant and domain.\r\n\r\nIf you disable or do not configure this policy setting, Windows Hello for Business will use a key or certificate to authenticate to on-premises resources.",
            "format": "bool",
            "scope": "device"
          },
          "Policies/UseHelloCertificatesAsSmartCardCertificates": {
            "name": "UseHelloCertificatesAsSmartCardCertificates",
            "description": "If you enable this policy setting, applications use Windows Hello for Business certificates as smart card certificates. Biometric factors are unavailable when a user is asked to authorize the use of the certificate's private key. This policy setting is designed to allow compatibility with applications that rely exclusively on smart card certificates.\r\n\r\nIf you disable or do not configure this policy setting, applications do not use Windows Hello for Business certificates as smart card certificates, and biometric factors are available when a user is asked to authorize the use of the certificate's private key.\r\n\r\nWindows requires a user to lock and unlock their session after changing this setting if the user is currently signed in.",
            "format": "bool",
            "scope": "device"
          },
          "Policies/UsePassportForWork": {
            "name": "UsePassportForWork",
            "description": "Windows Hello for Business is an alternative method for signing into Windows using your Active Directory or Azure Active Directory account that can replace passwords, Smart Cards, and Virtual Smart Cards.\r\n\r\nIf you enable or do not configure this policy setting, the device provisions Windows Hello for Business for all users.\r\n\r\nIf you disable this policy setting, the device does not provision Windows Hello for Business for any user.",
            "format": "bool",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy": {
    "name": "Policy",
    "policies": {
      "Config": {
        "name": "Config",
        "description": "Node for grouping all policies configured by one source. The configuration source can use this path to set policy values and later query any policy value that it previously set. One policy can be configured by multiple configuration sources. If a configuration source wants to query the result of conflict resolution (for example, if Exchange and MDM both attempt to set a value,) the configuration source can use the Policy/Result path to retrieve the resulting value.",
        "format": "node",
        "scope": "device"
      },
      "Config/{AreaName}": {
        "name": "",
        "title": "AreaName",
        "description": "The area group that can be configured by a single technology for a single provider. Once added, you cannot change the value.  See the individual Area DDFs for Policy CSP for a list of Areas that can be configured.",
        "format": "node",
        "nodes": {
          "{PolicyName}": {
            "name": "",
            "title": "PolicyName",
            "description": "Specifies the name/value pair used in the policy.  See the individual Area DDFs for more information about the policies available to configure.",
            "format": "null",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "ConfigOperations": {
        "name": "ConfigOperations",
        "description": "The root node for grouping different configuration operations.",
        "format": "node",
        "scope": "device"
      },
      "ConfigOperations/ADMXInstall": {
        "name": "ADMXInstall",
        "description": "Allows settings for ADMX files for Win32 and Desktop Bridge apps to be imported (ingested) by your device and processed into new ADMX-backed policies or preferences. By using ADMXInstall, you can add ADMX-backed policies for those Win32 or Desktop Bridge apps that have been added between OS releases. ADMX-backed policies are ingested to your device by using the Policy CSP URI: ./Vendor/MSFT/Policy/ConfigOperations/ADMXInstall. Each ADMX-backed policy or preference that is added is assigned a unique ID. ADMX files that have been installed by using ConfigOperations/ADMXInstall can later be deleted by using the URI delete operation. Deleting an ADMX file will delete the ADMX file from disk, remove the metadata from the ADMXdefault registry hive, and delete all the policies that were set from the file. The MDM server can also delete all ADMX policies that are tied to a particular app by calling delete on the URI, ./Vendor/MSFT/Policy/ConfigOperations/ADMXInstall/{AppName}.",
        "format": "node",
        "scope": "device"
      },
      "ConfigOperations/ADMXInstall/{AppName}": {
        "name": "",
        "title": "AppName",
        "description": "Specifies the name of the Win32 or Desktop Bridge app associated with the ADMX file.",
        "format": "node",
        "nodes": {
          "Properties": {
            "name": "Properties",
            "description": "Properties of Win32 App ADMX Ingestion",
            "format": "node",
            "scope": "device"
          },
          "Properties/{SettingsType}": {
            "name": "",
            "title": "SettingsType",
            "description": "Setting Type of Win32 App. Policy Or Preference",
            "format": "node",
            "nodes": {
              "{AdmxFileId}": {
                "name": "",
                "title": "AdmxFileId",
                "description": "Unique ID of ADMX file",
                "format": "node",
                "nodes": {
                  "Version": {
                    "name": "Version",
                    "description": "Version of ADMX file.  This can be set by the server to keep a record of the versioning of the ADMX file ingested by the device.",
                    "format": "string",
                    "scope": "device"
                  }
                },
                "scope": "device"
              }
            },
            "scope": "device"
          },
          "{SettingsType}": {
            "name": "",
            "title": "SettingsType",
            "description": "Setting Type of Win32 App. Policy Or Preference",
            "format": "node",
            "nodes": {
              "{AdmxFileId}": {
                "name": "",
                "title": "AdmxFileId",
                "description": "Unique ID of ADMX file",
                "format": "string",
                "scope": "device"
              }
            },
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_ActiveXInstallService": {
    "name": "ADMX_ActiveXInstallService",
    "policies": {
      "AxISURLZonePolicies": {
        "name": "AxISURLZonePolicies",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_AdmPwd": {
    "name": "ADMX_AdmPwd",
    "policies": {
      "POL_AdmPwd": {
        "name": "POL_AdmPwd",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "POL_AdmPwd_AdminName": {
        "name": "POL_AdmPwd_AdminName",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "POL_AdmPwd_DontAllowPwdExpirationBehindPolicy": {
        "name": "POL_AdmPwd_DontAllowPwdExpirationBehindPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "POL_AdmPwd_Enabled": {
        "name": "POL_AdmPwd_Enabled",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_AppCompat": {
    "name": "ADMX_AppCompat",
    "policies": {
      "AppCompatPrevent16BitMach": {
        "name": "AppCompatPrevent16BitMach",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AppCompatRemoveProgramCompatPropPage": {
        "name": "AppCompatRemoveProgramCompatPropPage",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AppCompatTurnOffApplicationImpactTelemetry": {
        "name": "AppCompatTurnOffApplicationImpactTelemetry",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AppCompatTurnOffEngine": {
        "name": "AppCompatTurnOffEngine",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AppCompatTurnOffProgramCompatibilityAssistant_2": {
        "name": "AppCompatTurnOffProgramCompatibilityAssistant_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AppCompatTurnOffProgramInventory": {
        "name": "AppCompatTurnOffProgramInventory",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AppCompatTurnOffSwitchBack": {
        "name": "AppCompatTurnOffSwitchBack",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AppCompatTurnOffUserActionRecord": {
        "name": "AppCompatTurnOffUserActionRecord",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_AppXRuntime": {
    "name": "ADMX_AppXRuntime",
    "policies": {
      "AppxRuntimeApplicationContentUriRules": {
        "name": "AppxRuntimeApplicationContentUriRules",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AppxRuntimeBlockFileElevation": {
        "name": "AppxRuntimeBlockFileElevation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AppxRuntimeBlockHostedAppAccessWinRT": {
        "name": "AppxRuntimeBlockHostedAppAccessWinRT",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AppxRuntimeBlockProtocolElevation": {
        "name": "AppxRuntimeBlockProtocolElevation",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_AppxPackageManager": {
    "name": "ADMX_AppxPackageManager",
    "policies": {
      "AllowDeploymentInSpecialProfiles": {
        "name": "AllowDeploymentInSpecialProfiles",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_AuditSettings": {
    "name": "ADMX_AuditSettings",
    "policies": {
      "IncludeCmdLine": {
        "name": "IncludeCmdLine",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Bits": {
    "name": "ADMX_Bits",
    "policies": {
      "BITS_DisableBranchCache": {
        "name": "BITS_DisableBranchCache",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "BITS_DisablePeercachingClient": {
        "name": "BITS_DisablePeercachingClient",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "BITS_DisablePeercachingServer": {
        "name": "BITS_DisablePeercachingServer",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "BITS_EnablePeercaching": {
        "name": "BITS_EnablePeercaching",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "BITS_MaxBandwidthServedForPeers": {
        "name": "BITS_MaxBandwidthServedForPeers",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "BITS_MaxBandwidthV2_Maintenance": {
        "name": "BITS_MaxBandwidthV2_Maintenance",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "BITS_MaxBandwidthV2_Work": {
        "name": "BITS_MaxBandwidthV2_Work",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "BITS_MaxCacheSize": {
        "name": "BITS_MaxCacheSize",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "BITS_MaxContentAge": {
        "name": "BITS_MaxContentAge",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "BITS_MaxDownloadTime": {
        "name": "BITS_MaxDownloadTime",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "BITS_MaxFilesPerJob": {
        "name": "BITS_MaxFilesPerJob",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "BITS_MaxJobsPerMachine": {
        "name": "BITS_MaxJobsPerMachine",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "BITS_MaxJobsPerUser": {
        "name": "BITS_MaxJobsPerUser",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "BITS_MaxRangesPerFile": {
        "name": "BITS_MaxRangesPerFile",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_COM": {
    "name": "ADMX_COM",
    "policies": {
      "AppMgmt_COM_SearchForCLSID_2": {
        "name": "AppMgmt_COM_SearchForCLSID_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_CipherSuiteOrder": {
    "name": "ADMX_CipherSuiteOrder",
    "policies": {
      "SSLCipherSuiteOrder": {
        "name": "SSLCipherSuiteOrder",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SSLCurveOrder": {
        "name": "SSLCurveOrder",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_ControlPanelDisplay": {
    "name": "ADMX_ControlPanelDisplay",
    "policies": {
      "CPL_Personalization_ForceDefaultLockScreen": {
        "name": "CPL_Personalization_ForceDefaultLockScreen",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CPL_Personalization_NoChangingLockScreen": {
        "name": "CPL_Personalization_NoChangingLockScreen",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CPL_Personalization_NoChangingStartMenuBackground": {
        "name": "CPL_Personalization_NoChangingStartMenuBackground",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CPL_Personalization_NoLockScreen": {
        "name": "CPL_Personalization_NoLockScreen",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CPL_Personalization_PersonalColors": {
        "name": "CPL_Personalization_PersonalColors",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CPL_Personalization_SetTheme": {
        "name": "CPL_Personalization_SetTheme",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CPL_Personalization_StartBackground": {
        "name": "CPL_Personalization_StartBackground",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Cpls": {
    "name": "ADMX_Cpls",
    "policies": {
      "UseDefaultTile": {
        "name": "UseDefaultTile",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_CredSsp": {
    "name": "ADMX_CredSsp",
    "policies": {
      "AllowDefCredentialsWhenNTLMOnly": {
        "name": "AllowDefCredentialsWhenNTLMOnly",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowDefaultCredentials": {
        "name": "AllowDefaultCredentials",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowEncryptionOracle": {
        "name": "AllowEncryptionOracle",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowFreshCredentials": {
        "name": "AllowFreshCredentials",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowFreshCredentialsWhenNTLMOnly": {
        "name": "AllowFreshCredentialsWhenNTLMOnly",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowSavedCredentials": {
        "name": "AllowSavedCredentials",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowSavedCredentialsWhenNTLMOnly": {
        "name": "AllowSavedCredentialsWhenNTLMOnly",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DenyDefaultCredentials": {
        "name": "DenyDefaultCredentials",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DenyFreshCredentials": {
        "name": "DenyFreshCredentials",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DenySavedCredentials": {
        "name": "DenySavedCredentials",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedRemoteAdministration": {
        "name": "RestrictedRemoteAdministration",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_CredUI": {
    "name": "ADMX_CredUI",
    "policies": {
      "EnableSecureCredentialPrompting": {
        "name": "EnableSecureCredentialPrompting",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NoLocalPasswordResetQuestions": {
        "name": "NoLocalPasswordResetQuestions",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_CredentialProviders": {
    "name": "ADMX_CredentialProviders",
    "policies": {
      "AllowDomainDelayLock": {
        "name": "AllowDomainDelayLock",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DefaultCredentialProvider": {
        "name": "DefaultCredentialProvider",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ExcludedCredentialProviders": {
        "name": "ExcludedCredentialProviders",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_DCOM": {
    "name": "ADMX_DCOM",
    "policies": {
      "DCOMActivationSecurityCheckAllowLocalList": {
        "name": "DCOMActivationSecurityCheckAllowLocalList",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DCOMActivationSecurityCheckExemptionList": {
        "name": "DCOMActivationSecurityCheckExemptionList",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_DFS": {
    "name": "ADMX_DFS",
    "policies": {
      "DFSDiscoverDC": {
        "name": "DFSDiscoverDC",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_DWM": {
    "name": "ADMX_DWM",
    "policies": {
      "DwmDefaultColorizationColor_2": {
        "name": "DwmDefaultColorizationColor_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DwmDisallowAnimations_2": {
        "name": "DwmDisallowAnimations_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DwmDisallowColorizationColorChanges_2": {
        "name": "DwmDisallowColorizationColorChanges_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_DataCollection": {
    "name": "ADMX_DataCollection",
    "policies": {
      "CommercialIdPolicy": {
        "name": "CommercialIdPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Desktop": {
    "name": "ADMX_Desktop",
    "policies": {
      "NoDesktop": {
        "name": "NoDesktop",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_DeviceCompat": {
    "name": "ADMX_DeviceCompat",
    "policies": {
      "DeviceFlags": {
        "name": "DeviceFlags",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DriverShims": {
        "name": "DriverShims",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_DeviceGuard": {
    "name": "ADMX_DeviceGuard",
    "policies": {
      "ConfigCIPolicy": {
        "name": "ConfigCIPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_DeviceInstallation": {
    "name": "ADMX_DeviceInstallation",
    "policies": {
      "DeviceInstall_AllowAdminInstall": {
        "name": "DeviceInstall_AllowAdminInstall",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DeviceInstall_DeniedPolicy_DetailText": {
        "name": "DeviceInstall_DeniedPolicy_DetailText",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DeviceInstall_DeniedPolicy_SimpleText": {
        "name": "DeviceInstall_DeniedPolicy_SimpleText",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DeviceInstall_InstallTimeout": {
        "name": "DeviceInstall_InstallTimeout",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DeviceInstall_Policy_RebootTime": {
        "name": "DeviceInstall_Policy_RebootTime",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DeviceInstall_Removable_Deny": {
        "name": "DeviceInstall_Removable_Deny",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DeviceInstall_SystemRestore": {
        "name": "DeviceInstall_SystemRestore",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DriverInstall_Classes_AllowUser": {
        "name": "DriverInstall_Classes_AllowUser",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_DeviceSetup": {
    "name": "ADMX_DeviceSetup",
    "policies": {
      "DeviceInstall_BalloonTips": {
        "name": "DeviceInstall_BalloonTips",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DriverSearchPlaces_SearchOrderConfiguration": {
        "name": "DriverSearchPlaces_SearchOrderConfiguration",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_DigitalLocker": {
    "name": "ADMX_DigitalLocker",
    "policies": {
      "Digitalx_DiableApplication_TitleText_2": {
        "name": "Digitalx_DiableApplication_TitleText_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_DiskDiagnostic": {
    "name": "ADMX_DiskDiagnostic",
    "policies": {
      "DfdAlertPolicy": {
        "name": "DfdAlertPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WdiScenarioExecutionPolicy": {
        "name": "WdiScenarioExecutionPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_DiskNVCache": {
    "name": "ADMX_DiskNVCache",
    "policies": {
      "BootResumePolicy": {
        "name": "BootResumePolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CachePowerModePolicy": {
        "name": "CachePowerModePolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "FeatureOffPolicy": {
        "name": "FeatureOffPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SolidStatePolicy": {
        "name": "SolidStatePolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_DiskQuota": {
    "name": "ADMX_DiskQuota",
    "policies": {
      "DQ_Enable": {
        "name": "DQ_Enable",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DQ_Enforce": {
        "name": "DQ_Enforce",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DQ_Limit": {
        "name": "DQ_Limit",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DQ_LogEventOverLimit": {
        "name": "DQ_LogEventOverLimit",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DQ_LogEventOverThreshold": {
        "name": "DQ_LogEventOverThreshold",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DQ_RemovableMedia": {
        "name": "DQ_RemovableMedia",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_DistributedLinkTracking": {
    "name": "ADMX_DistributedLinkTracking",
    "policies": {
      "DLT_AllowDomainMode": {
        "name": "DLT_AllowDomainMode",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_DnsClient": {
    "name": "ADMX_DnsClient",
    "policies": {
      "DNS_AllowFQDNNetBiosQueries": {
        "name": "DNS_AllowFQDNNetBiosQueries",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_AppendToMultiLabelName": {
        "name": "DNS_AppendToMultiLabelName",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_Domain": {
        "name": "DNS_Domain",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_DomainNameDevolutionLevel": {
        "name": "DNS_DomainNameDevolutionLevel",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_IdnEncoding": {
        "name": "DNS_IdnEncoding",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_IdnMapping": {
        "name": "DNS_IdnMapping",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_NameServer": {
        "name": "DNS_NameServer",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_PreferLocalResponsesOverLowerOrderDns": {
        "name": "DNS_PreferLocalResponsesOverLowerOrderDns",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_PrimaryDnsSuffix": {
        "name": "DNS_PrimaryDnsSuffix",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_RegisterAdapterName": {
        "name": "DNS_RegisterAdapterName",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_RegisterReverseLookup": {
        "name": "DNS_RegisterReverseLookup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_RegistrationEnabled": {
        "name": "DNS_RegistrationEnabled",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_RegistrationOverwritesInConflict": {
        "name": "DNS_RegistrationOverwritesInConflict",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_RegistrationRefreshInterval": {
        "name": "DNS_RegistrationRefreshInterval",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_RegistrationTtl": {
        "name": "DNS_RegistrationTtl",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_SearchList": {
        "name": "DNS_SearchList",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_SmartMultiHomedNameResolution": {
        "name": "DNS_SmartMultiHomedNameResolution",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_SmartProtocolReorder": {
        "name": "DNS_SmartProtocolReorder",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_UpdateSecurityLevel": {
        "name": "DNS_UpdateSecurityLevel",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_UpdateTopLevelDomainZones": {
        "name": "DNS_UpdateTopLevelDomainZones",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DNS_UseDomainNameDevolution": {
        "name": "DNS_UseDomainNameDevolution",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Turn_Off_Multicast": {
        "name": "Turn_Off_Multicast",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_EncryptFilesonMove": {
    "name": "ADMX_EncryptFilesonMove",
    "policies": {
      "NoEncryptOnMove": {
        "name": "NoEncryptOnMove",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_EnhancedStorage": {
    "name": "ADMX_EnhancedStorage",
    "policies": {
      "ApprovedEnStorDevices": {
        "name": "ApprovedEnStorDevices",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ApprovedSilos": {
        "name": "ApprovedSilos",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisablePasswordAuthentication": {
        "name": "DisablePasswordAuthentication",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisallowLegacyDiskDevices": {
        "name": "DisallowLegacyDiskDevices",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockDeviceOnMachineLock": {
        "name": "LockDeviceOnMachineLock",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RootHubConnectedEnStorDevices": {
        "name": "RootHubConnectedEnStorDevices",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_ErrorReporting": {
    "name": "ADMX_ErrorReporting",
    "policies": {
      "PCH_AllOrNoneDef": {
        "name": "PCH_AllOrNoneDef",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PCH_AllOrNoneEx": {
        "name": "PCH_AllOrNoneEx",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PCH_AllOrNoneInc": {
        "name": "PCH_AllOrNoneInc",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PCH_ConfigureReport": {
        "name": "PCH_ConfigureReport",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PCH_ReportOperatingSystemFaults": {
        "name": "PCH_ReportOperatingSystemFaults",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WerArchive_2": {
        "name": "WerArchive_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WerAutoApproveOSDumps_2": {
        "name": "WerAutoApproveOSDumps_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WerBypassDataThrottling_2": {
        "name": "WerBypassDataThrottling_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WerBypassNetworkCostThrottling_2": {
        "name": "WerBypassNetworkCostThrottling_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WerBypassPowerThrottling_2": {
        "name": "WerBypassPowerThrottling_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WerCER": {
        "name": "WerCER",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WerConsentOverride_2": {
        "name": "WerConsentOverride_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WerDefaultConsent_2": {
        "name": "WerDefaultConsent_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WerExlusion_2": {
        "name": "WerExlusion_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WerNoLogging_2": {
        "name": "WerNoLogging_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WerQueue_2": {
        "name": "WerQueue_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_EventForwarding": {
    "name": "ADMX_EventForwarding",
    "policies": {
      "ForwarderResourceUsage": {
        "name": "ForwarderResourceUsage",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SubscriptionManager": {
        "name": "SubscriptionManager",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_EventLog": {
    "name": "ADMX_EventLog",
    "policies": {
      "Channel_LogEnabled": {
        "name": "Channel_LogEnabled",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_LogFilePath_1": {
        "name": "Channel_LogFilePath_1",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_LogFilePath_2": {
        "name": "Channel_LogFilePath_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_LogFilePath_3": {
        "name": "Channel_LogFilePath_3",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_LogFilePath_4": {
        "name": "Channel_LogFilePath_4",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_LogMaxSize_3": {
        "name": "Channel_LogMaxSize_3",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_AutoBackup_1": {
        "name": "Channel_Log_AutoBackup_1",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_AutoBackup_2": {
        "name": "Channel_Log_AutoBackup_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_AutoBackup_3": {
        "name": "Channel_Log_AutoBackup_3",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_AutoBackup_4": {
        "name": "Channel_Log_AutoBackup_4",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_FileLogAccess_1": {
        "name": "Channel_Log_FileLogAccess_1",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_FileLogAccess_2": {
        "name": "Channel_Log_FileLogAccess_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_FileLogAccess_3": {
        "name": "Channel_Log_FileLogAccess_3",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_FileLogAccess_4": {
        "name": "Channel_Log_FileLogAccess_4",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_FileLogAccess_5": {
        "name": "Channel_Log_FileLogAccess_5",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_FileLogAccess_6": {
        "name": "Channel_Log_FileLogAccess_6",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_FileLogAccess_7": {
        "name": "Channel_Log_FileLogAccess_7",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_FileLogAccess_8": {
        "name": "Channel_Log_FileLogAccess_8",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_Retention_2": {
        "name": "Channel_Log_Retention_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_Retention_3": {
        "name": "Channel_Log_Retention_3",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Channel_Log_Retention_4": {
        "name": "Channel_Log_Retention_4",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_EventLogging": {
    "name": "ADMX_EventLogging",
    "policies": {
      "EnableProtectedEventLogging": {
        "name": "EnableProtectedEventLogging",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_EventViewer": {
    "name": "ADMX_EventViewer",
    "policies": {
      "EventViewer_RedirectionProgram": {
        "name": "EventViewer_RedirectionProgram",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EventViewer_RedirectionProgramCommandLineParameters": {
        "name": "EventViewer_RedirectionProgramCommandLineParameters",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EventViewer_RedirectionURL": {
        "name": "EventViewer_RedirectionURL",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Explorer": {
    "name": "ADMX_Explorer",
    "policies": {
      "AdminInfoUrl": {
        "name": "AdminInfoUrl",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableRoamedProfileInit": {
        "name": "DisableRoamedProfileInit",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_ExternalBoot": {
    "name": "ADMX_ExternalBoot",
    "policies": {
      "PortableOperatingSystem_Hibernate": {
        "name": "PortableOperatingSystem_Hibernate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PortableOperatingSystem_Launcher": {
        "name": "PortableOperatingSystem_Launcher",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PortableOperatingSystem_Sleep": {
        "name": "PortableOperatingSystem_Sleep",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_FileRecovery": {
    "name": "ADMX_FileRecovery",
    "policies": {
      "WdiScenarioExecutionPolicy": {
        "name": "WdiScenarioExecutionPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_FileServerVSSProvider": {
    "name": "ADMX_FileServerVSSProvider",
    "policies": {
      "Pol_EncryptProtocol": {
        "name": "Pol_EncryptProtocol",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_FileSys": {
    "name": "ADMX_FileSys",
    "policies": {
      "DisableCompression": {
        "name": "DisableCompression",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableDeleteNotification": {
        "name": "DisableDeleteNotification",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableEncryption": {
        "name": "DisableEncryption",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnablePagefileEncryption": {
        "name": "EnablePagefileEncryption",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LongPathsEnabled": {
        "name": "LongPathsEnabled",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ShortNameCreationSettings": {
        "name": "ShortNameCreationSettings",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SymlinkEvaluation": {
        "name": "SymlinkEvaluation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TxfDeprecatedFunctionality": {
        "name": "TxfDeprecatedFunctionality",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_FolderRedirection": {
    "name": "ADMX_FolderRedirection",
    "policies": {
      "LocalizeXPRelativePaths_2": {
        "name": "LocalizeXPRelativePaths_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PrimaryComputer_FR_2": {
        "name": "PrimaryComputer_FR_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Globalization": {
    "name": "ADMX_Globalization",
    "policies": {
      "BlockUserInputMethodsForSignIn": {
        "name": "BlockUserInputMethodsForSignIn",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CustomLocalesNoSelect_2": {
        "name": "CustomLocalesNoSelect_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ImplicitDataCollectionOff_2": {
        "name": "ImplicitDataCollectionOff_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocaleSystemRestrict": {
        "name": "LocaleSystemRestrict",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocaleUserRestrict_2": {
        "name": "LocaleUserRestrict_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockMachineUILanguage": {
        "name": "LockMachineUILanguage",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventGeoIdChange_2": {
        "name": "PreventGeoIdChange_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventUserOverrides_2": {
        "name": "PreventUserOverrides_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_GroupPolicy": {
    "name": "ADMX_GroupPolicy",
    "policies": {
      "AllowX-ForestPolicy-and-RUP": {
        "name": "AllowX-ForestPolicy-and-RUP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CSE_AppMgmt": {
        "name": "CSE_AppMgmt",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CSE_DiskQuota": {
        "name": "CSE_DiskQuota",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CSE_EFSRecovery": {
        "name": "CSE_EFSRecovery",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CSE_FolderRedirection": {
        "name": "CSE_FolderRedirection",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CSE_IEM": {
        "name": "CSE_IEM",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CSE_IPSecurity": {
        "name": "CSE_IPSecurity",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CSE_Registry": {
        "name": "CSE_Registry",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CSE_Scripts": {
        "name": "CSE_Scripts",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CSE_Security": {
        "name": "CSE_Security",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CSE_Wired": {
        "name": "CSE_Wired",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CSE_Wireless": {
        "name": "CSE_Wireless",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CorpConnSyncWaitTime": {
        "name": "CorpConnSyncWaitTime",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DenyRsopToInteractiveUser_2": {
        "name": "DenyRsopToInteractiveUser_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableAOACProcessing": {
        "name": "DisableAOACProcessing",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableBackgroundPolicy": {
        "name": "DisableBackgroundPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableLGPOProcessing": {
        "name": "DisableLGPOProcessing",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableUsersFromMachGP": {
        "name": "DisableUsersFromMachGP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableCDP": {
        "name": "EnableCDP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableLogonOptimization": {
        "name": "EnableLogonOptimization",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableLogonOptimizationOnServerSKU": {
        "name": "EnableLogonOptimizationOnServerSKU",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableMMX": {
        "name": "EnableMMX",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "FontMitigation": {
        "name": "FontMitigation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "GPTransferRate_2": {
        "name": "GPTransferRate_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "GroupPolicyRefreshRate": {
        "name": "GroupPolicyRefreshRate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "GroupPolicyRefreshRateDC": {
        "name": "GroupPolicyRefreshRateDC",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LogonScriptDelay": {
        "name": "LogonScriptDelay",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "OnlyUseLocalAdminFiles": {
        "name": "OnlyUseLocalAdminFiles",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ProcessMitigationOptions": {
        "name": "ProcessMitigationOptions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RSoPLogging": {
        "name": "RSoPLogging",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ResetDfsClientInfoDuringRefreshPolicy": {
        "name": "ResetDfsClientInfoDuringRefreshPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SlowLinkDefaultForDirectAccess": {
        "name": "SlowLinkDefaultForDirectAccess",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SlowlinkDefaultToAsync": {
        "name": "SlowlinkDefaultToAsync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SyncWaitTime": {
        "name": "SyncWaitTime",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "UserPolicyMode": {
        "name": "UserPolicyMode",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Help": {
    "name": "ADMX_Help",
    "policies": {
      "DisableHHDEP": {
        "name": "DisableHHDEP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "HelpQualifiedRootDir_Comp": {
        "name": "HelpQualifiedRootDir_Comp",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictRunFromHelp_Comp": {
        "name": "RestrictRunFromHelp_Comp",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_HelpAndSupport": {
    "name": "ADMX_HelpAndSupport",
    "policies": {
      "ActiveHelp": {
        "name": "ActiveHelp",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_ICM": {
    "name": "ADMX_ICM",
    "policies": {
      "CEIPEnable": {
        "name": "CEIPEnable",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CertMgr_DisableAutoRootUpdates": {
        "name": "CertMgr_DisableAutoRootUpdates",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DriverSearchPlaces_DontSearchWindowsUpdate": {
        "name": "DriverSearchPlaces_DontSearchWindowsUpdate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EventViewer_DisableLinks": {
        "name": "EventViewer_DisableLinks",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "HSS_HeadlinesPolicy": {
        "name": "HSS_HeadlinesPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "HSS_KBSearchPolicy": {
        "name": "HSS_KBSearchPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetManagement_RestrictCommunication_2": {
        "name": "InternetManagement_RestrictCommunication_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NC_ExitOnISP": {
        "name": "NC_ExitOnISP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NC_NoRegistration": {
        "name": "NC_NoRegistration",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PCH_DoNotReport": {
        "name": "PCH_DoNotReport",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RemoveWindowsUpdate_ICM": {
        "name": "RemoveWindowsUpdate_ICM",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SearchCompanion_DisableFileUpdates": {
        "name": "SearchCompanion_DisableFileUpdates",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ShellNoUseInternetOpenWith_2": {
        "name": "ShellNoUseInternetOpenWith_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ShellNoUseStoreOpenWith_2": {
        "name": "ShellNoUseStoreOpenWith_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ShellRemoveOrderPrints_2": {
        "name": "ShellRemoveOrderPrints_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ShellRemovePublishToWeb_2": {
        "name": "ShellRemovePublishToWeb_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WinMSG_NoInstrumentation_2": {
        "name": "WinMSG_NoInstrumentation_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_IIS": {
    "name": "ADMX_IIS",
    "policies": {
      "PreventIISInstall": {
        "name": "PreventIISInstall",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Kerberos": {
    "name": "ADMX_Kerberos",
    "policies": {
      "AlwaysSendCompoundId": {
        "name": "AlwaysSendCompoundId",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DevicePKInitEnabled": {
        "name": "DevicePKInitEnabled",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "HostToRealm": {
        "name": "HostToRealm",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "KdcProxyDisableServerRevocationCheck": {
        "name": "KdcProxyDisableServerRevocationCheck",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "KdcProxyServer": {
        "name": "KdcProxyServer",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MitRealms": {
        "name": "MitRealms",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ServerAcceptsCompound": {
        "name": "ServerAcceptsCompound",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StrictTarget": {
        "name": "StrictTarget",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_LanmanServer": {
    "name": "ADMX_LanmanServer",
    "policies": {
      "Pol_CipherSuiteOrder": {
        "name": "Pol_CipherSuiteOrder",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_HashPublication": {
        "name": "Pol_HashPublication",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_HashSupportVersion": {
        "name": "Pol_HashSupportVersion",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_HonorCipherSuiteOrder": {
        "name": "Pol_HonorCipherSuiteOrder",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_LanmanWorkstation": {
    "name": "ADMX_LanmanWorkstation",
    "policies": {
      "Pol_CipherSuiteOrder": {
        "name": "Pol_CipherSuiteOrder",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_EnableHandleCachingForCAFiles": {
        "name": "Pol_EnableHandleCachingForCAFiles",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_EnableOfflineFilesforCAShares": {
        "name": "Pol_EnableOfflineFilesforCAShares",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_LeakDiagnostic": {
    "name": "ADMX_LeakDiagnostic",
    "policies": {
      "WdiScenarioExecutionPolicy": {
        "name": "WdiScenarioExecutionPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_LinkLayerTopologyDiscovery": {
    "name": "ADMX_LinkLayerTopologyDiscovery",
    "policies": {
      "LLTD_EnableLLTDIO": {
        "name": "LLTD_EnableLLTDIO",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LLTD_EnableRspndr": {
        "name": "LLTD_EnableRspndr",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_LocationProviderAdm": {
    "name": "ADMX_LocationProviderAdm",
    "policies": {
      "DisableWindowsLocationProvider_1": {
        "name": "DisableWindowsLocationProvider_1",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Logon": {
    "name": "ADMX_Logon",
    "policies": {
      "BlockUserFromShowingAccountDetailsOnSignin": {
        "name": "BlockUserFromShowingAccountDetailsOnSignin",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableAcrylicBackgroundOnLogon": {
        "name": "DisableAcrylicBackgroundOnLogon",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableExplorerRunLegacy_2": {
        "name": "DisableExplorerRunLegacy_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableExplorerRunOnceLegacy_2": {
        "name": "DisableExplorerRunOnceLegacy_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableStatusMessages": {
        "name": "DisableStatusMessages",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DontEnumerateConnectedUsers": {
        "name": "DontEnumerateConnectedUsers",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NoWelcomeTips_2": {
        "name": "NoWelcomeTips_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Run_2": {
        "name": "Run_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SyncForegroundPolicy": {
        "name": "SyncForegroundPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "UseOEMBackground": {
        "name": "UseOEMBackground",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "VerboseStatus": {
        "name": "VerboseStatus",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_MSAPolicy": {
    "name": "ADMX_MSAPolicy",
    "policies": {
      "MicrosoftAccount_DisableUserAuth": {
        "name": "MicrosoftAccount_DisableUserAuth",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_MSDT": {
    "name": "ADMX_MSDT",
    "policies": {
      "MsdtSupportProvider": {
        "name": "MsdtSupportProvider",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MsdtToolDownloadPolicy": {
        "name": "MsdtToolDownloadPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WdiScenarioExecutionPolicy": {
        "name": "WdiScenarioExecutionPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_MSI": {
    "name": "ADMX_MSI",
    "policies": {
      "AllowLockdownBrowse": {
        "name": "AllowLockdownBrowse",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowLockdownMedia": {
        "name": "AllowLockdownMedia",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowLockdownPatch": {
        "name": "AllowLockdownPatch",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableAutomaticApplicationShutdown": {
        "name": "DisableAutomaticApplicationShutdown",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableBrowse": {
        "name": "DisableBrowse",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableFlyweightPatching": {
        "name": "DisableFlyweightPatching",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableLoggingFromPackage": {
        "name": "DisableLoggingFromPackage",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableMSI": {
        "name": "DisableMSI",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisablePatch": {
        "name": "DisablePatch",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableRollback_2": {
        "name": "DisableRollback_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableSharedComponent": {
        "name": "DisableSharedComponent",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MSILogging": {
        "name": "MSILogging",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MSI_DisableLUAPatching": {
        "name": "MSI_DisableLUAPatching",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MSI_DisablePatchUninstall": {
        "name": "MSI_DisablePatchUninstall",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MSI_DisableSRCheckPoints": {
        "name": "MSI_DisableSRCheckPoints",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MSI_DisableUserInstalls": {
        "name": "MSI_DisableUserInstalls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MSI_EnforceUpgradeComponentRules": {
        "name": "MSI_EnforceUpgradeComponentRules",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MSI_MaxPatchCacheSize": {
        "name": "MSI_MaxPatchCacheSize",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MsiDisableEmbeddedUI": {
        "name": "MsiDisableEmbeddedUI",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SafeForScripting": {
        "name": "SafeForScripting",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TransformsSecure": {
        "name": "TransformsSecure",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_MSS-legacy": {
    "name": "ADMX_MSS-legacy",
    "policies": {
      "Pol_MSS_AutoAdminLogon": {
        "name": "Pol_MSS_AutoAdminLogon",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_AutoReboot": {
        "name": "Pol_MSS_AutoReboot",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_AutoShareServer": {
        "name": "Pol_MSS_AutoShareServer",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_AutoShareWks": {
        "name": "Pol_MSS_AutoShareWks",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_DisableSavePassword": {
        "name": "Pol_MSS_DisableSavePassword",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_EnableDeadGWDetect": {
        "name": "Pol_MSS_EnableDeadGWDetect",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_HideFromBrowseList": {
        "name": "Pol_MSS_HideFromBrowseList",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_KeepAliveTime": {
        "name": "Pol_MSS_KeepAliveTime",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_NoDefaultExempt": {
        "name": "Pol_MSS_NoDefaultExempt",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_NtfsDisable8dot3NameCreation": {
        "name": "Pol_MSS_NtfsDisable8dot3NameCreation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_PerformRouterDiscovery": {
        "name": "Pol_MSS_PerformRouterDiscovery",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_SafeDllSearchMode": {
        "name": "Pol_MSS_SafeDllSearchMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_ScreenSaverGracePeriod": {
        "name": "Pol_MSS_ScreenSaverGracePeriod",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_SynAttackProtect": {
        "name": "Pol_MSS_SynAttackProtect",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_TcpMaxConnectResponseRetransmissions": {
        "name": "Pol_MSS_TcpMaxConnectResponseRetransmissions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_TcpMaxDataRetransmissions": {
        "name": "Pol_MSS_TcpMaxDataRetransmissions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_TcpMaxDataRetransmissionsIPv6": {
        "name": "Pol_MSS_TcpMaxDataRetransmissionsIPv6",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_MSS_WarningLevel": {
        "name": "Pol_MSS_WarningLevel",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_MicrosoftDefenderAntivirus": {
    "name": "ADMX_MicrosoftDefenderAntivirus",
    "policies": {
      "AllowFastServiceStartup": {
        "name": "AllowFastServiceStartup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableAntiSpywareDefender": {
        "name": "DisableAntiSpywareDefender",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableAutoExclusions": {
        "name": "DisableAutoExclusions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableBlockAtFirstSeen": {
        "name": "DisableBlockAtFirstSeen",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableLocalAdminMerge": {
        "name": "DisableLocalAdminMerge",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableRealtimeMonitoring": {
        "name": "DisableRealtimeMonitoring",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableRoutinelyTakingAction": {
        "name": "DisableRoutinelyTakingAction",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Exclusions_Extensions": {
        "name": "Exclusions_Extensions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Exclusions_Paths": {
        "name": "Exclusions_Paths",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Exclusions_Processes": {
        "name": "Exclusions_Processes",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ExploitGuard_ASR_ASROnlyExclusions": {
        "name": "ExploitGuard_ASR_ASROnlyExclusions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ExploitGuard_ASR_Rules": {
        "name": "ExploitGuard_ASR_Rules",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ExploitGuard_ControlledFolderAccess_AllowedApplications": {
        "name": "ExploitGuard_ControlledFolderAccess_AllowedApplications",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ExploitGuard_ControlledFolderAccess_ProtectedFolders": {
        "name": "ExploitGuard_ControlledFolderAccess_ProtectedFolders",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MpEngine_EnableFileHashComputation": {
        "name": "MpEngine_EnableFileHashComputation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Nis_Consumers_IPS_DisableSignatureRetirement": {
        "name": "Nis_Consumers_IPS_DisableSignatureRetirement",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Nis_Consumers_IPS_sku_differentiation_Signature_Set_Guid": {
        "name": "Nis_Consumers_IPS_sku_differentiation_Signature_Set_Guid",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Nis_DisableProtocolRecognition": {
        "name": "Nis_DisableProtocolRecognition",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ProxyBypass": {
        "name": "ProxyBypass",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ProxyPacUrl": {
        "name": "ProxyPacUrl",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ProxyServer": {
        "name": "ProxyServer",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Quarantine_LocalSettingOverridePurgeItemsAfterDelay": {
        "name": "Quarantine_LocalSettingOverridePurgeItemsAfterDelay",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Quarantine_PurgeItemsAfterDelay": {
        "name": "Quarantine_PurgeItemsAfterDelay",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RandomizeScheduleTaskTimes": {
        "name": "RandomizeScheduleTaskTimes",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RealtimeProtection_DisableBehaviorMonitoring": {
        "name": "RealtimeProtection_DisableBehaviorMonitoring",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RealtimeProtection_DisableIOAVProtection": {
        "name": "RealtimeProtection_DisableIOAVProtection",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RealtimeProtection_DisableOnAccessProtection": {
        "name": "RealtimeProtection_DisableOnAccessProtection",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RealtimeProtection_DisableRawWriteNotification": {
        "name": "RealtimeProtection_DisableRawWriteNotification",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RealtimeProtection_DisableScanOnRealtimeEnable": {
        "name": "RealtimeProtection_DisableScanOnRealtimeEnable",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RealtimeProtection_IOAVMaxSize": {
        "name": "RealtimeProtection_IOAVMaxSize",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RealtimeProtection_LocalSettingOverrideDisableBehaviorMonitoring": {
        "name": "RealtimeProtection_LocalSettingOverrideDisableBehaviorMonitoring",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RealtimeProtection_LocalSettingOverrideDisableIOAVProtection": {
        "name": "RealtimeProtection_LocalSettingOverrideDisableIOAVProtection",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RealtimeProtection_LocalSettingOverrideDisableOnAccessProtection": {
        "name": "RealtimeProtection_LocalSettingOverrideDisableOnAccessProtection",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RealtimeProtection_LocalSettingOverrideDisableRealtimeMonitoring": {
        "name": "RealtimeProtection_LocalSettingOverrideDisableRealtimeMonitoring",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RealtimeProtection_LocalSettingOverrideRealtimeScanDirection": {
        "name": "RealtimeProtection_LocalSettingOverrideRealtimeScanDirection",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Remediation_LocalSettingOverrideScan_ScheduleTime": {
        "name": "Remediation_LocalSettingOverrideScan_ScheduleTime",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Remediation_Scan_ScheduleDay": {
        "name": "Remediation_Scan_ScheduleDay",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Remediation_Scan_ScheduleTime": {
        "name": "Remediation_Scan_ScheduleTime",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Reporting_AdditionalActionTimeout": {
        "name": "Reporting_AdditionalActionTimeout",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Reporting_CriticalFailureTimeout": {
        "name": "Reporting_CriticalFailureTimeout",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Reporting_DisableEnhancedNotifications": {
        "name": "Reporting_DisableEnhancedNotifications",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Reporting_DisablegenericrePorts": {
        "name": "Reporting_DisablegenericrePorts",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Reporting_NonCriticalTimeout": {
        "name": "Reporting_NonCriticalTimeout",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Reporting_RecentlyCleanedTimeout": {
        "name": "Reporting_RecentlyCleanedTimeout",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Reporting_WppTracingComponents": {
        "name": "Reporting_WppTracingComponents",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Reporting_WppTracingLevel": {
        "name": "Reporting_WppTracingLevel",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_AllowPause": {
        "name": "Scan_AllowPause",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_ArchiveMaxDepth": {
        "name": "Scan_ArchiveMaxDepth",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_ArchiveMaxSize": {
        "name": "Scan_ArchiveMaxSize",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_DisableArchiveScanning": {
        "name": "Scan_DisableArchiveScanning",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_DisableEmailScanning": {
        "name": "Scan_DisableEmailScanning",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_DisableHeuristics": {
        "name": "Scan_DisableHeuristics",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_DisablePackedExeScanning": {
        "name": "Scan_DisablePackedExeScanning",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_DisableRemovableDriveScanning": {
        "name": "Scan_DisableRemovableDriveScanning",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_DisableReparsePointScanning": {
        "name": "Scan_DisableReparsePointScanning",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_DisableRestorePoint": {
        "name": "Scan_DisableRestorePoint",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_DisableScanningMappedNetworkDrivesForFullScan": {
        "name": "Scan_DisableScanningMappedNetworkDrivesForFullScan",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_DisableScanningNetworkFiles": {
        "name": "Scan_DisableScanningNetworkFiles",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_LocalSettingOverrideAvgCPULoadFactor": {
        "name": "Scan_LocalSettingOverrideAvgCPULoadFactor",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_LocalSettingOverrideScanParameters": {
        "name": "Scan_LocalSettingOverrideScanParameters",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_LocalSettingOverrideScheduleDay": {
        "name": "Scan_LocalSettingOverrideScheduleDay",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_LocalSettingOverrideScheduleQuickScantime": {
        "name": "Scan_LocalSettingOverrideScheduleQuickScantime",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_LocalSettingOverrideScheduleTime": {
        "name": "Scan_LocalSettingOverrideScheduleTime",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_LowCpuPriority": {
        "name": "Scan_LowCpuPriority",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_MissedScheduledScanCountBeforeCatchup": {
        "name": "Scan_MissedScheduledScanCountBeforeCatchup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_PurgeItemsAfterDelay": {
        "name": "Scan_PurgeItemsAfterDelay",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_QuickScanInterval": {
        "name": "Scan_QuickScanInterval",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_ScanOnlyIfIdle": {
        "name": "Scan_ScanOnlyIfIdle",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_ScheduleDay": {
        "name": "Scan_ScheduleDay",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Scan_ScheduleTime": {
        "name": "Scan_ScheduleTime",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ServiceKeepAlive": {
        "name": "ServiceKeepAlive",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_ASSignatureDue": {
        "name": "SignatureUpdate_ASSignatureDue",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_AVSignatureDue": {
        "name": "SignatureUpdate_AVSignatureDue",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_DefinitionUpdateFileSharesSources": {
        "name": "SignatureUpdate_DefinitionUpdateFileSharesSources",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_DisableScanOnUpdate": {
        "name": "SignatureUpdate_DisableScanOnUpdate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_DisableScheduledSignatureUpdateonBattery": {
        "name": "SignatureUpdate_DisableScheduledSignatureUpdateonBattery",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_DisableUpdateOnStartupWithoutEngine": {
        "name": "SignatureUpdate_DisableUpdateOnStartupWithoutEngine",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_FallbackOrder": {
        "name": "SignatureUpdate_FallbackOrder",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_ForceUpdateFromMU": {
        "name": "SignatureUpdate_ForceUpdateFromMU",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_RealtimeSignatureDelivery": {
        "name": "SignatureUpdate_RealtimeSignatureDelivery",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_ScheduleDay": {
        "name": "SignatureUpdate_ScheduleDay",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_ScheduleTime": {
        "name": "SignatureUpdate_ScheduleTime",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_SharedSignaturesLocation": {
        "name": "SignatureUpdate_SharedSignaturesLocation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_SignatureDisableNotification": {
        "name": "SignatureUpdate_SignatureDisableNotification",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_SignatureUpdateCatchupInterval": {
        "name": "SignatureUpdate_SignatureUpdateCatchupInterval",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdate_UpdateOnStartup": {
        "name": "SignatureUpdate_UpdateOnStartup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SpynetReporting": {
        "name": "SpynetReporting",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Spynet_LocalSettingOverrideSpynetReporting": {
        "name": "Spynet_LocalSettingOverrideSpynetReporting",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Threats_ThreatIdDefaultAction": {
        "name": "Threats_ThreatIdDefaultAction",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "UX_Configuration_CustomDefaultActionToastString": {
        "name": "UX_Configuration_CustomDefaultActionToastString",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "UX_Configuration_Notification_Suppress": {
        "name": "UX_Configuration_Notification_Suppress",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "UX_Configuration_SuppressRebootNotification": {
        "name": "UX_Configuration_SuppressRebootNotification",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "UX_Configuration_UILockdown": {
        "name": "UX_Configuration_UILockdown",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_MobilePCMobilityCenter": {
    "name": "ADMX_MobilePCMobilityCenter",
    "policies": {
      "MobilityCenterEnable_2": {
        "name": "MobilityCenterEnable_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_MobilePCPresentationSettings": {
    "name": "ADMX_MobilePCPresentationSettings",
    "policies": {
      "PresentationSettingsEnable_2": {
        "name": "PresentationSettingsEnable_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_MsiFileRecovery": {
    "name": "ADMX_MsiFileRecovery",
    "policies": {
      "WdiScenarioExecutionPolicy": {
        "name": "WdiScenarioExecutionPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_NCSI": {
    "name": "ADMX_NCSI",
    "policies": {
      "NCSI_CorpDnsProbeContent": {
        "name": "NCSI_CorpDnsProbeContent",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NCSI_CorpDnsProbeHost": {
        "name": "NCSI_CorpDnsProbeHost",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NCSI_CorpSitePrefixes": {
        "name": "NCSI_CorpSitePrefixes",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NCSI_CorpWebProbeUrl": {
        "name": "NCSI_CorpWebProbeUrl",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NCSI_DomainLocationDeterminationUrl": {
        "name": "NCSI_DomainLocationDeterminationUrl",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NCSI_GlobalDns": {
        "name": "NCSI_GlobalDns",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NCSI_PassivePolling": {
        "name": "NCSI_PassivePolling",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Netlogon": {
    "name": "ADMX_Netlogon",
    "policies": {
      "Netlogon_AddressLookupOnPingBehavior": {
        "name": "Netlogon_AddressLookupOnPingBehavior",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_AddressTypeReturned": {
        "name": "Netlogon_AddressTypeReturned",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_AllowDnsSuffixSearch": {
        "name": "Netlogon_AllowDnsSuffixSearch",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_AllowNT4Crypto": {
        "name": "Netlogon_AllowNT4Crypto",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_AllowSingleLabelDnsDomain": {
        "name": "Netlogon_AllowSingleLabelDnsDomain",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_AutoSiteCoverage": {
        "name": "Netlogon_AutoSiteCoverage",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_AvoidFallbackNetbiosDiscovery": {
        "name": "Netlogon_AvoidFallbackNetbiosDiscovery",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_AvoidPdcOnWan": {
        "name": "Netlogon_AvoidPdcOnWan",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_BackgroundRetryInitialPeriod": {
        "name": "Netlogon_BackgroundRetryInitialPeriod",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_BackgroundRetryMaximumPeriod": {
        "name": "Netlogon_BackgroundRetryMaximumPeriod",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_BackgroundRetryQuitTime": {
        "name": "Netlogon_BackgroundRetryQuitTime",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_BackgroundSuccessfulRefreshPeriod": {
        "name": "Netlogon_BackgroundSuccessfulRefreshPeriod",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_DebugFlag": {
        "name": "Netlogon_DebugFlag",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_DnsAvoidRegisterRecords": {
        "name": "Netlogon_DnsAvoidRegisterRecords",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_DnsRefreshInterval": {
        "name": "Netlogon_DnsRefreshInterval",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_DnsSrvRecordUseLowerCaseHostNames": {
        "name": "Netlogon_DnsSrvRecordUseLowerCaseHostNames",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_DnsTtl": {
        "name": "Netlogon_DnsTtl",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_ExpectedDialupDelay": {
        "name": "Netlogon_ExpectedDialupDelay",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_ForceRediscoveryInterval": {
        "name": "Netlogon_ForceRediscoveryInterval",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_GcSiteCoverage": {
        "name": "Netlogon_GcSiteCoverage",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_IgnoreIncomingMailslotMessages": {
        "name": "Netlogon_IgnoreIncomingMailslotMessages",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_LdapSrvPriority": {
        "name": "Netlogon_LdapSrvPriority",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_LdapSrvWeight": {
        "name": "Netlogon_LdapSrvWeight",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_MaximumLogFileSize": {
        "name": "Netlogon_MaximumLogFileSize",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_NdncSiteCoverage": {
        "name": "Netlogon_NdncSiteCoverage",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_NegativeCachePeriod": {
        "name": "Netlogon_NegativeCachePeriod",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_NetlogonShareCompatibilityMode": {
        "name": "Netlogon_NetlogonShareCompatibilityMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_NonBackgroundSuccessfulRefreshPeriod": {
        "name": "Netlogon_NonBackgroundSuccessfulRefreshPeriod",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_PingUrgencyMode": {
        "name": "Netlogon_PingUrgencyMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_ScavengeInterval": {
        "name": "Netlogon_ScavengeInterval",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_SiteCoverage": {
        "name": "Netlogon_SiteCoverage",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_SiteName": {
        "name": "Netlogon_SiteName",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_SysvolShareCompatibilityMode": {
        "name": "Netlogon_SysvolShareCompatibilityMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_TryNextClosestSite": {
        "name": "Netlogon_TryNextClosestSite",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Netlogon_UseDynamicDns": {
        "name": "Netlogon_UseDynamicDns",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_NetworkConnections": {
    "name": "ADMX_NetworkConnections",
    "policies": {
      "NC_DoNotShowLocalOnlyIcon": {
        "name": "NC_DoNotShowLocalOnlyIcon",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NC_ForceTunneling": {
        "name": "NC_ForceTunneling",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NC_PersonalFirewallConfig": {
        "name": "NC_PersonalFirewallConfig",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NC_ShowSharedAccessUI": {
        "name": "NC_ShowSharedAccessUI",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NC_StdDomainUserSetLocation": {
        "name": "NC_StdDomainUserSetLocation",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_OfflineFiles": {
    "name": "ADMX_OfflineFiles",
    "policies": {
      "Pol_AlwaysPinSubFolders": {
        "name": "Pol_AlwaysPinSubFolders",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_AssignedOfflineFiles_2": {
        "name": "Pol_AssignedOfflineFiles_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_BackgroundSyncSettings": {
        "name": "Pol_BackgroundSyncSettings",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_CacheSize": {
        "name": "Pol_CacheSize",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_CustomGoOfflineActions_2": {
        "name": "Pol_CustomGoOfflineActions_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_DefCacheSize": {
        "name": "Pol_DefCacheSize",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_Enabled": {
        "name": "Pol_Enabled",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_EncryptOfflineFiles": {
        "name": "Pol_EncryptOfflineFiles",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_EventLoggingLevel_2": {
        "name": "Pol_EventLoggingLevel_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_ExclusionListSettings": {
        "name": "Pol_ExclusionListSettings",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_ExtExclusionList": {
        "name": "Pol_ExtExclusionList",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_GoOfflineAction_2": {
        "name": "Pol_GoOfflineAction_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_NoCacheViewer_2": {
        "name": "Pol_NoCacheViewer_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_NoConfigCache_2": {
        "name": "Pol_NoConfigCache_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_NoMakeAvailableOffline_2": {
        "name": "Pol_NoMakeAvailableOffline_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_NoPinFiles_2": {
        "name": "Pol_NoPinFiles_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_NoReminders_2": {
        "name": "Pol_NoReminders_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_OnlineCachingSettings": {
        "name": "Pol_OnlineCachingSettings",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_PurgeAtLogoff": {
        "name": "Pol_PurgeAtLogoff",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_QuickAdimPin": {
        "name": "Pol_QuickAdimPin",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_ReminderFreq_2": {
        "name": "Pol_ReminderFreq_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_ReminderInitTimeout_2": {
        "name": "Pol_ReminderInitTimeout_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_ReminderTimeout_2": {
        "name": "Pol_ReminderTimeout_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_SlowLinkSettings": {
        "name": "Pol_SlowLinkSettings",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_SlowLinkSpeed": {
        "name": "Pol_SlowLinkSpeed",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_SyncAtLogoff_2": {
        "name": "Pol_SyncAtLogoff_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_SyncAtLogon_2": {
        "name": "Pol_SyncAtLogon_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_SyncAtSuspend_2": {
        "name": "Pol_SyncAtSuspend_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_SyncOnCostedNetwork": {
        "name": "Pol_SyncOnCostedNetwork",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Pol_WorkOfflineDisabled_2": {
        "name": "Pol_WorkOfflineDisabled_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_PeerToPeerCaching": {
    "name": "ADMX_PeerToPeerCaching",
    "policies": {
      "EnableWindowsBranchCache": {
        "name": "EnableWindowsBranchCache",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableWindowsBranchCache_Distributed": {
        "name": "EnableWindowsBranchCache_Distributed",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableWindowsBranchCache_Hosted": {
        "name": "EnableWindowsBranchCache_Hosted",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableWindowsBranchCache_HostedCacheDiscovery": {
        "name": "EnableWindowsBranchCache_HostedCacheDiscovery",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableWindowsBranchCache_HostedMultipleServers": {
        "name": "EnableWindowsBranchCache_HostedMultipleServers",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableWindowsBranchCache_SMB": {
        "name": "EnableWindowsBranchCache_SMB",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SetCachePercent": {
        "name": "SetCachePercent",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SetDataCacheEntryMaxAge": {
        "name": "SetDataCacheEntryMaxAge",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SetDowngrading": {
        "name": "SetDowngrading",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_PenTraining": {
    "name": "ADMX_PenTraining",
    "policies": {
      "PenTrainingOff_2": {
        "name": "PenTrainingOff_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_PerformanceDiagnostics": {
    "name": "ADMX_PerformanceDiagnostics",
    "policies": {
      "WdiScenarioExecutionPolicy_1": {
        "name": "WdiScenarioExecutionPolicy_1",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WdiScenarioExecutionPolicy_2": {
        "name": "WdiScenarioExecutionPolicy_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WdiScenarioExecutionPolicy_3": {
        "name": "WdiScenarioExecutionPolicy_3",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WdiScenarioExecutionPolicy_4": {
        "name": "WdiScenarioExecutionPolicy_4",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Power": {
    "name": "ADMX_Power",
    "policies": {
      "ACConnectivityInStandby_2": {
        "name": "ACConnectivityInStandby_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ACCriticalSleepTransitionsDisable_2": {
        "name": "ACCriticalSleepTransitionsDisable_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ACStartMenuButtonAction_2": {
        "name": "ACStartMenuButtonAction_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowSystemPowerRequestAC": {
        "name": "AllowSystemPowerRequestAC",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowSystemPowerRequestDC": {
        "name": "AllowSystemPowerRequestDC",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowSystemSleepWithRemoteFilesOpenAC": {
        "name": "AllowSystemSleepWithRemoteFilesOpenAC",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowSystemSleepWithRemoteFilesOpenDC": {
        "name": "AllowSystemSleepWithRemoteFilesOpenDC",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CustomActiveSchemeOverride_2": {
        "name": "CustomActiveSchemeOverride_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DCBatteryDischargeAction0_2": {
        "name": "DCBatteryDischargeAction0_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DCBatteryDischargeAction1_2": {
        "name": "DCBatteryDischargeAction1_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DCBatteryDischargeLevel0_2": {
        "name": "DCBatteryDischargeLevel0_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DCBatteryDischargeLevel1UINotification_2": {
        "name": "DCBatteryDischargeLevel1UINotification_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DCBatteryDischargeLevel1_2": {
        "name": "DCBatteryDischargeLevel1_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DCConnectivityInStandby_2": {
        "name": "DCConnectivityInStandby_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DCCriticalSleepTransitionsDisable_2": {
        "name": "DCCriticalSleepTransitionsDisable_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DCStartMenuButtonAction_2": {
        "name": "DCStartMenuButtonAction_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DiskACPowerDownTimeOut_2": {
        "name": "DiskACPowerDownTimeOut_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DiskDCPowerDownTimeOut_2": {
        "name": "DiskDCPowerDownTimeOut_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Dont_PowerOff_AfterShutdown": {
        "name": "Dont_PowerOff_AfterShutdown",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableDesktopSlideShowAC": {
        "name": "EnableDesktopSlideShowAC",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableDesktopSlideShowDC": {
        "name": "EnableDesktopSlideShowDC",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InboxActiveSchemeOverride_2": {
        "name": "InboxActiveSchemeOverride_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PowerThrottlingTurnOff": {
        "name": "PowerThrottlingTurnOff",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ReserveBatteryNotificationLevel": {
        "name": "ReserveBatteryNotificationLevel",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_PowerShellExecutionPolicy": {
    "name": "ADMX_PowerShellExecutionPolicy",
    "policies": {
      "EnableModuleLogging": {
        "name": "EnableModuleLogging",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableScripts": {
        "name": "EnableScripts",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableTranscripting": {
        "name": "EnableTranscripting",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableUpdateHelpDefaultSourcePath": {
        "name": "EnableUpdateHelpDefaultSourcePath",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_PreviousVersions": {
    "name": "ADMX_PreviousVersions",
    "policies": {
      "DisableBackupRestore_2": {
        "name": "DisableBackupRestore_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableLocalPage_2": {
        "name": "DisableLocalPage_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableLocalRestore_2": {
        "name": "DisableLocalRestore_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableRemotePage_2": {
        "name": "DisableRemotePage_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableRemoteRestore_2": {
        "name": "DisableRemoteRestore_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "HideBackupEntries_2": {
        "name": "HideBackupEntries_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Printing": {
    "name": "ADMX_Printing",
    "policies": {
      "AllowWebPrinting": {
        "name": "AllowWebPrinting",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ApplicationDriverIsolation": {
        "name": "ApplicationDriverIsolation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CustomizedSupportUrl": {
        "name": "CustomizedSupportUrl",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DoNotInstallCompatibleDriverFromWindowsUpdate": {
        "name": "DoNotInstallCompatibleDriverFromWindowsUpdate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DomainPrinters": {
        "name": "DomainPrinters",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EMFDespooling": {
        "name": "EMFDespooling",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ForceSoftwareRasterization": {
        "name": "ForceSoftwareRasterization",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "KMPrintersAreBlocked": {
        "name": "KMPrintersAreBlocked",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MXDWUseLegacyOutputFormatMSXPS": {
        "name": "MXDWUseLegacyOutputFormatMSXPS",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NonDomainPrinters": {
        "name": "NonDomainPrinters",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PackagePointAndPrintOnly_Win7": {
        "name": "PackagePointAndPrintOnly_Win7",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PackagePointAndPrintServerList_Win7": {
        "name": "PackagePointAndPrintServerList_Win7",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PhysicalLocation": {
        "name": "PhysicalLocation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PhysicalLocationSupport": {
        "name": "PhysicalLocationSupport",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PrintDriverIsolationExecutionPolicy": {
        "name": "PrintDriverIsolationExecutionPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PrintDriverIsolationOverrideCompat": {
        "name": "PrintDriverIsolationOverrideCompat",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PrinterServerThread": {
        "name": "PrinterServerThread",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ShowJobTitleInEventLogs": {
        "name": "ShowJobTitleInEventLogs",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "V4DriverDisallowPrinterExtension": {
        "name": "V4DriverDisallowPrinterExtension",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Printing2": {
    "name": "ADMX_Printing2",
    "policies": {
      "AutoPublishing": {
        "name": "AutoPublishing",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ImmortalPrintQueue": {
        "name": "ImmortalPrintQueue",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PruneDownlevel": {
        "name": "PruneDownlevel",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PruningInterval": {
        "name": "PruningInterval",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PruningPriority": {
        "name": "PruningPriority",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PruningRetries": {
        "name": "PruningRetries",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PruningRetryLog": {
        "name": "PruningRetryLog",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RegisterSpoolerRemoteRpcEndPoint": {
        "name": "RegisterSpoolerRemoteRpcEndPoint",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "VerifyPublishedState": {
        "name": "VerifyPublishedState",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_PushToInstall": {
    "name": "ADMX_PushToInstall",
    "policies": {
      "DisablePushToInstall": {
        "name": "DisablePushToInstall",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_QOS": {
    "name": "ADMX_QOS",
    "policies": {
      "QosMaxOutstandingSends": {
        "name": "QosMaxOutstandingSends",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosNonBestEffortLimit": {
        "name": "QosNonBestEffortLimit",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeBestEffort_C": {
        "name": "QosServiceTypeBestEffort_C",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeBestEffort_NC": {
        "name": "QosServiceTypeBestEffort_NC",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeBestEffort_PV": {
        "name": "QosServiceTypeBestEffort_PV",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeControlledLoad_C": {
        "name": "QosServiceTypeControlledLoad_C",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeControlledLoad_NC": {
        "name": "QosServiceTypeControlledLoad_NC",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeControlledLoad_PV": {
        "name": "QosServiceTypeControlledLoad_PV",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeGuaranteed_C": {
        "name": "QosServiceTypeGuaranteed_C",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeGuaranteed_NC": {
        "name": "QosServiceTypeGuaranteed_NC",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeGuaranteed_PV": {
        "name": "QosServiceTypeGuaranteed_PV",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeNetworkControl_C": {
        "name": "QosServiceTypeNetworkControl_C",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeNetworkControl_NC": {
        "name": "QosServiceTypeNetworkControl_NC",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeNetworkControl_PV": {
        "name": "QosServiceTypeNetworkControl_PV",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeNonConforming": {
        "name": "QosServiceTypeNonConforming",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeQualitative_C": {
        "name": "QosServiceTypeQualitative_C",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeQualitative_NC": {
        "name": "QosServiceTypeQualitative_NC",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosServiceTypeQualitative_PV": {
        "name": "QosServiceTypeQualitative_PV",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "QosTimerResolution": {
        "name": "QosTimerResolution",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_RPC": {
    "name": "ADMX_RPC",
    "policies": {
      "RpcExtendedErrorInformation": {
        "name": "RpcExtendedErrorInformation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RpcIgnoreDelegationFailure": {
        "name": "RpcIgnoreDelegationFailure",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RpcMinimumHttpConnectionTimeout": {
        "name": "RpcMinimumHttpConnectionTimeout",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RpcStateInformation": {
        "name": "RpcStateInformation",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Radar": {
    "name": "ADMX_Radar",
    "policies": {
      "WdiScenarioExecutionPolicy": {
        "name": "WdiScenarioExecutionPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Reliability": {
    "name": "ADMX_Reliability",
    "policies": {
      "EE_EnablePersistentTimeStamp": {
        "name": "EE_EnablePersistentTimeStamp",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PCH_ReportShutdownEvents": {
        "name": "PCH_ReportShutdownEvents",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ShutdownEventTrackerStateFile": {
        "name": "ShutdownEventTrackerStateFile",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ShutdownReason": {
        "name": "ShutdownReason",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_RemoteAssistance": {
    "name": "ADMX_RemoteAssistance",
    "policies": {
      "RA_EncryptedTicketOnly": {
        "name": "RA_EncryptedTicketOnly",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RA_Optimize_Bandwidth": {
        "name": "RA_Optimize_Bandwidth",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_RemovableStorage": {
    "name": "ADMX_RemovableStorage",
    "policies": {
      "AccessRights_RebootTime_2": {
        "name": "AccessRights_RebootTime_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CDandDVD_DenyExecute_Access_2": {
        "name": "CDandDVD_DenyExecute_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CDandDVD_DenyRead_Access_2": {
        "name": "CDandDVD_DenyRead_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CDandDVD_DenyWrite_Access_2": {
        "name": "CDandDVD_DenyWrite_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CustomClasses_DenyRead_Access_2": {
        "name": "CustomClasses_DenyRead_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CustomClasses_DenyWrite_Access_2": {
        "name": "CustomClasses_DenyWrite_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "FloppyDrives_DenyExecute_Access_2": {
        "name": "FloppyDrives_DenyExecute_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "FloppyDrives_DenyRead_Access_2": {
        "name": "FloppyDrives_DenyRead_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "FloppyDrives_DenyWrite_Access_2": {
        "name": "FloppyDrives_DenyWrite_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RemovableDisks_DenyExecute_Access_2": {
        "name": "RemovableDisks_DenyExecute_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RemovableDisks_DenyRead_Access_2": {
        "name": "RemovableDisks_DenyRead_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RemovableStorageClasses_DenyAll_Access_2": {
        "name": "RemovableStorageClasses_DenyAll_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Removable_Remote_Allow_Access": {
        "name": "Removable_Remote_Allow_Access",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TapeDrives_DenyExecute_Access_2": {
        "name": "TapeDrives_DenyExecute_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TapeDrives_DenyRead_Access_2": {
        "name": "TapeDrives_DenyRead_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TapeDrives_DenyWrite_Access_2": {
        "name": "TapeDrives_DenyWrite_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WPDDevices_DenyRead_Access_2": {
        "name": "WPDDevices_DenyRead_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WPDDevices_DenyWrite_Access_2": {
        "name": "WPDDevices_DenyWrite_Access_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Scripts": {
    "name": "ADMX_Scripts",
    "policies": {
      "Allow_Logon_Script_NetbiosDisabled": {
        "name": "Allow_Logon_Script_NetbiosDisabled",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MaxGPOScriptWaitPolicy": {
        "name": "MaxGPOScriptWaitPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Run_Computer_PS_Scripts_First": {
        "name": "Run_Computer_PS_Scripts_First",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Run_Logon_Script_Sync_2": {
        "name": "Run_Logon_Script_Sync_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Run_Shutdown_Script_Visible": {
        "name": "Run_Shutdown_Script_Visible",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Run_Startup_Script_Sync": {
        "name": "Run_Startup_Script_Sync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Run_Startup_Script_Visible": {
        "name": "Run_Startup_Script_Visible",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Run_User_PS_Scripts_First": {
        "name": "Run_User_PS_Scripts_First",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Securitycenter": {
    "name": "ADMX_Securitycenter",
    "policies": {
      "SecurityCenter_SecurityCenterInDomain": {
        "name": "SecurityCenter_SecurityCenterInDomain",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Sensors": {
    "name": "ADMX_Sensors",
    "policies": {
      "DisableLocationScripting_2": {
        "name": "DisableLocationScripting_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableSensors_2": {
        "name": "DisableSensors_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_ServerManager": {
    "name": "ADMX_ServerManager",
    "policies": {
      "DoNotLaunchInitialConfigurationTasks": {
        "name": "DoNotLaunchInitialConfigurationTasks",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DoNotLaunchServerManager": {
        "name": "DoNotLaunchServerManager",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Do_not_display_Manage_Your_Server_page": {
        "name": "Do_not_display_Manage_Your_Server_page",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ServerManagerAutoRefreshRate": {
        "name": "ServerManagerAutoRefreshRate",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Servicing": {
    "name": "ADMX_Servicing",
    "policies": {
      "Servicing": {
        "name": "Servicing",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_SettingSync": {
    "name": "ADMX_SettingSync",
    "policies": {
      "DisableAppSyncSettingSync": {
        "name": "DisableAppSyncSettingSync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableApplicationSettingSync": {
        "name": "DisableApplicationSettingSync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableCredentialsSettingSync": {
        "name": "DisableCredentialsSettingSync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableDesktopThemeSettingSync": {
        "name": "DisableDesktopThemeSettingSync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisablePersonalizationSettingSync": {
        "name": "DisablePersonalizationSettingSync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableSettingSync": {
        "name": "DisableSettingSync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableStartLayoutSettingSync": {
        "name": "DisableStartLayoutSettingSync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableSyncOnPaidNetwork": {
        "name": "DisableSyncOnPaidNetwork",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableWindowsSettingSync": {
        "name": "DisableWindowsSettingSync",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Sharing": {
    "name": "ADMX_Sharing",
    "policies": {
      "DisableHomeGroup": {
        "name": "DisableHomeGroup",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Smartcard": {
    "name": "ADMX_Smartcard",
    "policies": {
      "AllowCertificatesWithNoEKU": {
        "name": "AllowCertificatesWithNoEKU",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowIntegratedUnblock": {
        "name": "AllowIntegratedUnblock",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowSignatureOnlyKeys": {
        "name": "AllowSignatureOnlyKeys",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowTimeInvalidCertificates": {
        "name": "AllowTimeInvalidCertificates",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CertPropEnabledString": {
        "name": "CertPropEnabledString",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CertPropRootCleanupString": {
        "name": "CertPropRootCleanupString",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CertPropRootEnabledString": {
        "name": "CertPropRootEnabledString",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisallowPlaintextPin": {
        "name": "DisallowPlaintextPin",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnumerateECCCerts": {
        "name": "EnumerateECCCerts",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "FilterDuplicateCerts": {
        "name": "FilterDuplicateCerts",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ForceReadingAllCertificates": {
        "name": "ForceReadingAllCertificates",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntegratedUnblockPromptString": {
        "name": "IntegratedUnblockPromptString",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ReverseSubject": {
        "name": "ReverseSubject",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SCPnPEnabled": {
        "name": "SCPnPEnabled",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SCPnPNotification": {
        "name": "SCPnPNotification",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "X509HintsNeeded": {
        "name": "X509HintsNeeded",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Snmp": {
    "name": "ADMX_Snmp",
    "policies": {
      "SNMP_Communities": {
        "name": "SNMP_Communities",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SNMP_PermittedManagers": {
        "name": "SNMP_PermittedManagers",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SNMP_Traps_Public": {
        "name": "SNMP_Traps_Public",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_SoundRec": {
    "name": "ADMX_SoundRec",
    "policies": {
      "Soundrec_DiableApplication_TitleText_2": {
        "name": "Soundrec_DiableApplication_TitleText_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_StartMenu": {
    "name": "ADMX_StartMenu",
    "policies": {
      "HidePowerOptions": {
        "name": "HidePowerOptions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NoChangeStartMenu": {
        "name": "NoChangeStartMenu",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NoMoreProgramsList": {
        "name": "NoMoreProgramsList",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NoRun": {
        "name": "NoRun",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NoSetTaskbar": {
        "name": "NoSetTaskbar",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NoTrayContextMenu": {
        "name": "NoTrayContextMenu",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NoUninstallFromStart": {
        "name": "NoUninstallFromStart",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StartPinAppsWhenInstalled": {
        "name": "StartPinAppsWhenInstalled",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_SystemRestore": {
    "name": "ADMX_SystemRestore",
    "policies": {
      "SR_DisableConfig": {
        "name": "SR_DisableConfig",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_TPM": {
    "name": "ADMX_TPM",
    "policies": {
      "BlockedCommandsList_Name": {
        "name": "BlockedCommandsList_Name",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ClearTPMIfNotReady_Name": {
        "name": "ClearTPMIfNotReady_Name",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IgnoreDefaultList_Name": {
        "name": "IgnoreDefaultList_Name",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IgnoreLocalList_Name": {
        "name": "IgnoreLocalList_Name",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "OSManagedAuth_Name": {
        "name": "OSManagedAuth_Name",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "OptIntoDSHA_Name": {
        "name": "OptIntoDSHA_Name",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StandardUserAuthorizationFailureDuration_Name": {
        "name": "StandardUserAuthorizationFailureDuration_Name",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StandardUserAuthorizationFailureIndividualThreshold_Name": {
        "name": "StandardUserAuthorizationFailureIndividualThreshold_Name",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StandardUserAuthorizationFailureTotalThreshold_Name": {
        "name": "StandardUserAuthorizationFailureTotalThreshold_Name",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "UseLegacyDAP_Name": {
        "name": "UseLegacyDAP_Name",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_TabletPCInputPanel": {
    "name": "ADMX_TabletPCInputPanel",
    "policies": {
      "AutoComplete_2": {
        "name": "AutoComplete_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EdgeTarget_2": {
        "name": "EdgeTarget_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IPTIPTarget_2": {
        "name": "IPTIPTarget_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IPTIPTouchTarget_2": {
        "name": "IPTIPTouchTarget_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PasswordSecurity_2": {
        "name": "PasswordSecurity_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Prediction_2": {
        "name": "Prediction_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RareChar_2": {
        "name": "RareChar_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ScratchOut_2": {
        "name": "ScratchOut_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_TabletShell": {
    "name": "ADMX_TabletShell",
    "policies": {
      "DisableInkball_2": {
        "name": "DisableInkball_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableJournal_2": {
        "name": "DisableJournal_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableNoteWriterPrinting_2": {
        "name": "DisableNoteWriterPrinting_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableSnippingTool_2": {
        "name": "DisableSnippingTool_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventBackEscMapping_2": {
        "name": "PreventBackEscMapping_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventFlicksLearningMode_2": {
        "name": "PreventFlicksLearningMode_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventFlicks_2": {
        "name": "PreventFlicks_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventLaunchApp_2": {
        "name": "PreventLaunchApp_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventPressAndHold_2": {
        "name": "PreventPressAndHold_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TurnOffButtons_2": {
        "name": "TurnOffButtons_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TurnOffFeedback_2": {
        "name": "TurnOffFeedback_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Taskbar": {
    "name": "ADMX_Taskbar",
    "policies": {
      "DisableNotificationCenter": {
        "name": "DisableNotificationCenter",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TaskbarNoPinnedList": {
        "name": "TaskbarNoPinnedList",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_TerminalServer": {
    "name": "ADMX_TerminalServer",
    "policies": {
      "TS_AUTO_RECONNECT": {
        "name": "TS_AUTO_RECONNECT",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CAMERA_REDIRECTION": {
        "name": "TS_CAMERA_REDIRECTION",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CERTIFICATE_TEMPLATE_POLICY": {
        "name": "TS_CERTIFICATE_TEMPLATE_POLICY",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CLIENT_ALLOW_SIGNED_FILES_2": {
        "name": "TS_CLIENT_ALLOW_SIGNED_FILES_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CLIENT_ALLOW_UNSIGNED_FILES_2": {
        "name": "TS_CLIENT_ALLOW_UNSIGNED_FILES_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CLIENT_AUDIO": {
        "name": "TS_CLIENT_AUDIO",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CLIENT_AUDIO_CAPTURE": {
        "name": "TS_CLIENT_AUDIO_CAPTURE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CLIENT_AUDIO_QUALITY": {
        "name": "TS_CLIENT_AUDIO_QUALITY",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CLIENT_CLIPBOARD": {
        "name": "TS_CLIENT_CLIPBOARD",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CLIENT_COM": {
        "name": "TS_CLIENT_COM",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CLIENT_DEFAULT_M": {
        "name": "TS_CLIENT_DEFAULT_M",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CLIENT_DISABLE_HARDWARE_MODE": {
        "name": "TS_CLIENT_DISABLE_HARDWARE_MODE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CLIENT_LPT": {
        "name": "TS_CLIENT_LPT",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CLIENT_PNP": {
        "name": "TS_CLIENT_PNP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CLIENT_PRINTER": {
        "name": "TS_CLIENT_PRINTER",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CLIENT_TRUSTED_CERTIFICATE_THUMBPRINTS_1": {
        "name": "TS_CLIENT_TRUSTED_CERTIFICATE_THUMBPRINTS_1",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_CLIENT_TURN_OFF_UDP": {
        "name": "TS_CLIENT_TURN_OFF_UDP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_COLORDEPTH": {
        "name": "TS_COLORDEPTH",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_DELETE_ROAMING_USER_PROFILES": {
        "name": "TS_DELETE_ROAMING_USER_PROFILES",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_DISABLE_REMOTE_DESKTOP_WALLPAPER": {
        "name": "TS_DISABLE_REMOTE_DESKTOP_WALLPAPER",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_DX_USE_FULL_HWGPU": {
        "name": "TS_DX_USE_FULL_HWGPU",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_EASY_PRINT": {
        "name": "TS_EASY_PRINT",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_EnableVirtualGraphics": {
        "name": "TS_EnableVirtualGraphics",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_FALLBACKPRINTDRIVERTYPE": {
        "name": "TS_FALLBACKPRINTDRIVERTYPE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_FORCIBLE_LOGOFF": {
        "name": "TS_FORCIBLE_LOGOFF",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_JOIN_SESSION_DIRECTORY": {
        "name": "TS_JOIN_SESSION_DIRECTORY",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_KEEP_ALIVE": {
        "name": "TS_KEEP_ALIVE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_LICENSE_SECGROUP": {
        "name": "TS_LICENSE_SECGROUP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_LICENSE_SERVERS": {
        "name": "TS_LICENSE_SERVERS",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_LICENSE_TOOLTIP": {
        "name": "TS_LICENSE_TOOLTIP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_LICENSING_MODE": {
        "name": "TS_LICENSING_MODE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_MAXDISPLAYRES": {
        "name": "TS_MAXDISPLAYRES",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_MAXMONITOR": {
        "name": "TS_MAXMONITOR",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_MAX_CON_POLICY": {
        "name": "TS_MAX_CON_POLICY",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_NoDisconnectMenu": {
        "name": "TS_NoDisconnectMenu",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_NoSecurityMenu": {
        "name": "TS_NoSecurityMenu",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_PROMT_CREDS_CLIENT_COMP": {
        "name": "TS_PROMT_CREDS_CLIENT_COMP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_PreventLicenseUpgrade": {
        "name": "TS_PreventLicenseUpgrade",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_RDSAppX_WaitForRegistration": {
        "name": "TS_RDSAppX_WaitForRegistration",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_RemoteControl_2": {
        "name": "TS_RemoteControl_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_RemoteDesktopVirtualGraphics": {
        "name": "TS_RemoteDesktopVirtualGraphics",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SD_ClustName": {
        "name": "TS_SD_ClustName",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SD_EXPOSE_ADDRESS": {
        "name": "TS_SD_EXPOSE_ADDRESS",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SD_Loc": {
        "name": "TS_SD_Loc",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SECURITY_LAYER_POLICY": {
        "name": "TS_SECURITY_LAYER_POLICY",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SELECT_NETWORK_DETECT": {
        "name": "TS_SELECT_NETWORK_DETECT",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SELECT_TRANSPORT": {
        "name": "TS_SELECT_TRANSPORT",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SERVER_ADVANCED_REMOTEFX_REMOTEAPP": {
        "name": "TS_SERVER_ADVANCED_REMOTEFX_REMOTEAPP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SERVER_AUTH": {
        "name": "TS_SERVER_AUTH",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SERVER_AVC444_MODE_PREFERRED": {
        "name": "TS_SERVER_AVC444_MODE_PREFERRED",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SERVER_AVC_HW_ENCODE_PREFERRED": {
        "name": "TS_SERVER_AVC_HW_ENCODE_PREFERRED",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SERVER_COMPRESSOR": {
        "name": "TS_SERVER_COMPRESSOR",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SERVER_IMAGE_QUALITY": {
        "name": "TS_SERVER_IMAGE_QUALITY",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SERVER_LEGACY_RFX": {
        "name": "TS_SERVER_LEGACY_RFX",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SERVER_PROFILE": {
        "name": "TS_SERVER_PROFILE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SERVER_VISEXP": {
        "name": "TS_SERVER_VISEXP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SERVER_WDDM_GRAPHICS_DRIVER": {
        "name": "TS_SERVER_WDDM_GRAPHICS_DRIVER",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SESSIONS_Disconnected_Timeout_2": {
        "name": "TS_SESSIONS_Disconnected_Timeout_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SESSIONS_Idle_Limit_2": {
        "name": "TS_SESSIONS_Idle_Limit_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SESSIONS_Limits_2": {
        "name": "TS_SESSIONS_Limits_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SINGLE_SESSION": {
        "name": "TS_SINGLE_SESSION",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_SMART_CARD": {
        "name": "TS_SMART_CARD",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_START_PROGRAM_2": {
        "name": "TS_START_PROGRAM_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_Session_End_On_Limit_2": {
        "name": "TS_Session_End_On_Limit_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_TEMP_DELETE": {
        "name": "TS_TEMP_DELETE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_TEMP_PER_SESSION": {
        "name": "TS_TEMP_PER_SESSION",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_TIME_ZONE": {
        "name": "TS_TIME_ZONE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_TSCC_PERMISSIONS_POLICY": {
        "name": "TS_TSCC_PERMISSIONS_POLICY",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_TURNOFF_SINGLEAPP": {
        "name": "TS_TURNOFF_SINGLEAPP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_UIA": {
        "name": "TS_UIA",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_USB_REDIRECTION_DISABLE": {
        "name": "TS_USB_REDIRECTION_DISABLE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_USER_AUTHENTICATION_POLICY": {
        "name": "TS_USER_AUTHENTICATION_POLICY",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_USER_HOME": {
        "name": "TS_USER_HOME",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_USER_MANDATORY_PROFILES": {
        "name": "TS_USER_MANDATORY_PROFILES",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TS_USER_PROFILES": {
        "name": "TS_USER_PROFILES",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_TouchInput": {
    "name": "ADMX_TouchInput",
    "policies": {
      "PanningEverywhereOff_2": {
        "name": "PanningEverywhereOff_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TouchInputOff_2": {
        "name": "TouchInputOff_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_UserExperienceVirtualization": {
    "name": "ADMX_UserExperienceVirtualization",
    "policies": {
      "Calculator": {
        "name": "Calculator",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureSyncMethod": {
        "name": "ConfigureSyncMethod",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureVdi": {
        "name": "ConfigureVdi",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ContactITDescription": {
        "name": "ContactITDescription",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ContactITUrl": {
        "name": "ContactITUrl",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableWin8Sync": {
        "name": "DisableWin8Sync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableWindowsOSSettings": {
        "name": "DisableWindowsOSSettings",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableUEV": {
        "name": "EnableUEV",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Finance": {
        "name": "Finance",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "FirstUseNotificationEnabled": {
        "name": "FirstUseNotificationEnabled",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Games": {
        "name": "Games",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetExplorer10": {
        "name": "InternetExplorer10",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetExplorer11": {
        "name": "InternetExplorer11",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetExplorer8": {
        "name": "InternetExplorer8",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetExplorer9": {
        "name": "InternetExplorer9",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetExplorerCommon": {
        "name": "InternetExplorerCommon",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Maps": {
        "name": "Maps",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MaxPackageSizeInBytes": {
        "name": "MaxPackageSizeInBytes",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2010Access": {
        "name": "MicrosoftOffice2010Access",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2010Common": {
        "name": "MicrosoftOffice2010Common",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2010Excel": {
        "name": "MicrosoftOffice2010Excel",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2010InfoPath": {
        "name": "MicrosoftOffice2010InfoPath",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2010Lync": {
        "name": "MicrosoftOffice2010Lync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2010OneNote": {
        "name": "MicrosoftOffice2010OneNote",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2010Outlook": {
        "name": "MicrosoftOffice2010Outlook",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2010PowerPoint": {
        "name": "MicrosoftOffice2010PowerPoint",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2010Project": {
        "name": "MicrosoftOffice2010Project",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2010Publisher": {
        "name": "MicrosoftOffice2010Publisher",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2010SharePointDesigner": {
        "name": "MicrosoftOffice2010SharePointDesigner",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2010SharePointWorkspace": {
        "name": "MicrosoftOffice2010SharePointWorkspace",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2010Visio": {
        "name": "MicrosoftOffice2010Visio",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2010Word": {
        "name": "MicrosoftOffice2010Word",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013Access": {
        "name": "MicrosoftOffice2013Access",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013AccessBackup": {
        "name": "MicrosoftOffice2013AccessBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013Common": {
        "name": "MicrosoftOffice2013Common",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013CommonBackup": {
        "name": "MicrosoftOffice2013CommonBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013Excel": {
        "name": "MicrosoftOffice2013Excel",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013ExcelBackup": {
        "name": "MicrosoftOffice2013ExcelBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013InfoPath": {
        "name": "MicrosoftOffice2013InfoPath",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013InfoPathBackup": {
        "name": "MicrosoftOffice2013InfoPathBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013Lync": {
        "name": "MicrosoftOffice2013Lync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013LyncBackup": {
        "name": "MicrosoftOffice2013LyncBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013OneDriveForBusiness": {
        "name": "MicrosoftOffice2013OneDriveForBusiness",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013OneNote": {
        "name": "MicrosoftOffice2013OneNote",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013OneNoteBackup": {
        "name": "MicrosoftOffice2013OneNoteBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013Outlook": {
        "name": "MicrosoftOffice2013Outlook",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013OutlookBackup": {
        "name": "MicrosoftOffice2013OutlookBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013PowerPoint": {
        "name": "MicrosoftOffice2013PowerPoint",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013PowerPointBackup": {
        "name": "MicrosoftOffice2013PowerPointBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013Project": {
        "name": "MicrosoftOffice2013Project",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013ProjectBackup": {
        "name": "MicrosoftOffice2013ProjectBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013Publisher": {
        "name": "MicrosoftOffice2013Publisher",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013PublisherBackup": {
        "name": "MicrosoftOffice2013PublisherBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013SharePointDesigner": {
        "name": "MicrosoftOffice2013SharePointDesigner",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013SharePointDesignerBackup": {
        "name": "MicrosoftOffice2013SharePointDesignerBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013UploadCenter": {
        "name": "MicrosoftOffice2013UploadCenter",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013Visio": {
        "name": "MicrosoftOffice2013Visio",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013VisioBackup": {
        "name": "MicrosoftOffice2013VisioBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013Word": {
        "name": "MicrosoftOffice2013Word",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2013WordBackup": {
        "name": "MicrosoftOffice2013WordBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016Access": {
        "name": "MicrosoftOffice2016Access",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016AccessBackup": {
        "name": "MicrosoftOffice2016AccessBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016Common": {
        "name": "MicrosoftOffice2016Common",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016CommonBackup": {
        "name": "MicrosoftOffice2016CommonBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016Excel": {
        "name": "MicrosoftOffice2016Excel",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016ExcelBackup": {
        "name": "MicrosoftOffice2016ExcelBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016Lync": {
        "name": "MicrosoftOffice2016Lync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016LyncBackup": {
        "name": "MicrosoftOffice2016LyncBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016OneDriveForBusiness": {
        "name": "MicrosoftOffice2016OneDriveForBusiness",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016OneNote": {
        "name": "MicrosoftOffice2016OneNote",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016OneNoteBackup": {
        "name": "MicrosoftOffice2016OneNoteBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016Outlook": {
        "name": "MicrosoftOffice2016Outlook",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016OutlookBackup": {
        "name": "MicrosoftOffice2016OutlookBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016PowerPoint": {
        "name": "MicrosoftOffice2016PowerPoint",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016PowerPointBackup": {
        "name": "MicrosoftOffice2016PowerPointBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016Project": {
        "name": "MicrosoftOffice2016Project",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016ProjectBackup": {
        "name": "MicrosoftOffice2016ProjectBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016Publisher": {
        "name": "MicrosoftOffice2016Publisher",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016PublisherBackup": {
        "name": "MicrosoftOffice2016PublisherBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016UploadCenter": {
        "name": "MicrosoftOffice2016UploadCenter",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016Visio": {
        "name": "MicrosoftOffice2016Visio",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016VisioBackup": {
        "name": "MicrosoftOffice2016VisioBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016Word": {
        "name": "MicrosoftOffice2016Word",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice2016WordBackup": {
        "name": "MicrosoftOffice2016WordBackup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Access2013": {
        "name": "MicrosoftOffice365Access2013",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Access2016": {
        "name": "MicrosoftOffice365Access2016",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Common2013": {
        "name": "MicrosoftOffice365Common2013",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Common2016": {
        "name": "MicrosoftOffice365Common2016",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Excel2013": {
        "name": "MicrosoftOffice365Excel2013",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Excel2016": {
        "name": "MicrosoftOffice365Excel2016",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365InfoPath2013": {
        "name": "MicrosoftOffice365InfoPath2013",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Lync2013": {
        "name": "MicrosoftOffice365Lync2013",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Lync2016": {
        "name": "MicrosoftOffice365Lync2016",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365OneNote2013": {
        "name": "MicrosoftOffice365OneNote2013",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365OneNote2016": {
        "name": "MicrosoftOffice365OneNote2016",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Outlook2013": {
        "name": "MicrosoftOffice365Outlook2013",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Outlook2016": {
        "name": "MicrosoftOffice365Outlook2016",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365PowerPoint2013": {
        "name": "MicrosoftOffice365PowerPoint2013",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365PowerPoint2016": {
        "name": "MicrosoftOffice365PowerPoint2016",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Project2013": {
        "name": "MicrosoftOffice365Project2013",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Project2016": {
        "name": "MicrosoftOffice365Project2016",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Publisher2013": {
        "name": "MicrosoftOffice365Publisher2013",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Publisher2016": {
        "name": "MicrosoftOffice365Publisher2016",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365SharePointDesigner2013": {
        "name": "MicrosoftOffice365SharePointDesigner2013",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Visio2013": {
        "name": "MicrosoftOffice365Visio2013",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Visio2016": {
        "name": "MicrosoftOffice365Visio2016",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Word2013": {
        "name": "MicrosoftOffice365Word2013",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftOffice365Word2016": {
        "name": "MicrosoftOffice365Word2016",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Music": {
        "name": "Music",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "News": {
        "name": "News",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Notepad": {
        "name": "Notepad",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Reader": {
        "name": "Reader",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RepositoryTimeout": {
        "name": "RepositoryTimeout",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SettingsStoragePath": {
        "name": "SettingsStoragePath",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SettingsTemplateCatalogPath": {
        "name": "SettingsTemplateCatalogPath",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Sports": {
        "name": "Sports",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SyncEnabled": {
        "name": "SyncEnabled",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SyncOverMeteredNetwork": {
        "name": "SyncOverMeteredNetwork",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SyncOverMeteredNetworkWhenRoaming": {
        "name": "SyncOverMeteredNetworkWhenRoaming",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SyncProviderPingEnabled": {
        "name": "SyncProviderPingEnabled",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SyncUnlistedWindows8Apps": {
        "name": "SyncUnlistedWindows8Apps",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Travel": {
        "name": "Travel",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrayIconEnabled": {
        "name": "TrayIconEnabled",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Video": {
        "name": "Video",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Weather": {
        "name": "Weather",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Wordpad": {
        "name": "Wordpad",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_UserProfiles": {
    "name": "ADMX_UserProfiles",
    "policies": {
      "CleanupProfiles": {
        "name": "CleanupProfiles",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DontForceUnloadHive": {
        "name": "DontForceUnloadHive",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LeaveAppMgmtData": {
        "name": "LeaveAppMgmtData",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ProfileErrorAction": {
        "name": "ProfileErrorAction",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SlowLinkTimeOut": {
        "name": "SlowLinkTimeOut",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "USER_HOME": {
        "name": "USER_HOME",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "UserInfoAccessAction": {
        "name": "UserInfoAccessAction",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_W32Time": {
    "name": "ADMX_W32Time",
    "policies": {
      "W32TIME_POLICY_CONFIG": {
        "name": "W32TIME_POLICY_CONFIG",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "W32TIME_POLICY_CONFIGURE_NTPCLIENT": {
        "name": "W32TIME_POLICY_CONFIGURE_NTPCLIENT",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "W32TIME_POLICY_ENABLE_NTPCLIENT": {
        "name": "W32TIME_POLICY_ENABLE_NTPCLIENT",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "W32TIME_POLICY_ENABLE_NTPSERVER": {
        "name": "W32TIME_POLICY_ENABLE_NTPSERVER",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_WCM": {
    "name": "ADMX_WCM",
    "policies": {
      "WCM_DisablePowerManagement": {
        "name": "WCM_DisablePowerManagement",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WCM_EnableSoftDisconnect": {
        "name": "WCM_EnableSoftDisconnect",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WCM_MinimizeConnections": {
        "name": "WCM_MinimizeConnections",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_WDI": {
    "name": "ADMX_WDI",
    "policies": {
      "WdiDpsScenarioDataSizeLimitPolicy": {
        "name": "WdiDpsScenarioDataSizeLimitPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WdiDpsScenarioExecutionPolicy": {
        "name": "WdiDpsScenarioExecutionPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_WPN": {
    "name": "ADMX_WPN",
    "policies": {
      "NoToastNotification": {
        "name": "NoToastNotification",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_WinCal": {
    "name": "ADMX_WinCal",
    "policies": {
      "TurnOffWinCal_2": {
        "name": "TurnOffWinCal_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_WinInit": {
    "name": "ADMX_WinInit",
    "policies": {
      "DisableNamedPipeShutdownPolicyDescription": {
        "name": "DisableNamedPipeShutdownPolicyDescription",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Hiberboot": {
        "name": "Hiberboot",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ShutdownTimeoutHungSessionsDescription": {
        "name": "ShutdownTimeoutHungSessionsDescription",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_WinLogon": {
    "name": "ADMX_WinLogon",
    "policies": {
      "DisplayLastLogonInfoDescription": {
        "name": "DisplayLastLogonInfoDescription",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ReportCachedLogonPolicyDescription": {
        "name": "ReportCachedLogonPolicyDescription",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SoftwareSASGeneration": {
        "name": "SoftwareSASGeneration",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_WindowsColorSystem": {
    "name": "ADMX_WindowsColorSystem",
    "policies": {
      "ProhibitChangingInstalledProfileList_2": {
        "name": "ProhibitChangingInstalledProfileList_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_WindowsConnectNow": {
    "name": "ADMX_WindowsConnectNow",
    "policies": {
      "WCN_DisableWcnUi_2": {
        "name": "WCN_DisableWcnUi_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WCN_EnableRegistrar": {
        "name": "WCN_EnableRegistrar",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_WindowsExplorer": {
    "name": "ADMX_WindowsExplorer",
    "policies": {
      "CheckSameSourceAndTargetForFRAndDFS": {
        "name": "CheckSameSourceAndTargetForFRAndDFS",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DefaultLibrariesLocation": {
        "name": "DefaultLibrariesLocation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableBindDirectlyToPropertySetStorage": {
        "name": "DisableBindDirectlyToPropertySetStorage",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableShellShortcutIconRemotePath": {
        "name": "EnableShellShortcutIconRemotePath",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableSmartScreen": {
        "name": "EnableSmartScreen",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ExplorerRibbonStartsMinimized": {
        "name": "ExplorerRibbonStartsMinimized",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchPreview_Internet": {
        "name": "IZ_Policy_OpenSearchPreview_Internet",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchPreview_InternetLockdown": {
        "name": "IZ_Policy_OpenSearchPreview_InternetLockdown",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchPreview_Intranet": {
        "name": "IZ_Policy_OpenSearchPreview_Intranet",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchPreview_IntranetLockdown": {
        "name": "IZ_Policy_OpenSearchPreview_IntranetLockdown",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchPreview_LocalMachine": {
        "name": "IZ_Policy_OpenSearchPreview_LocalMachine",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchPreview_LocalMachineLockdown": {
        "name": "IZ_Policy_OpenSearchPreview_LocalMachineLockdown",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchPreview_Restricted": {
        "name": "IZ_Policy_OpenSearchPreview_Restricted",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchPreview_RestrictedLockdown": {
        "name": "IZ_Policy_OpenSearchPreview_RestrictedLockdown",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchPreview_Trusted": {
        "name": "IZ_Policy_OpenSearchPreview_Trusted",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchPreview_TrustedLockdown": {
        "name": "IZ_Policy_OpenSearchPreview_TrustedLockdown",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchQuery_Internet": {
        "name": "IZ_Policy_OpenSearchQuery_Internet",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchQuery_InternetLockdown": {
        "name": "IZ_Policy_OpenSearchQuery_InternetLockdown",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchQuery_Intranet": {
        "name": "IZ_Policy_OpenSearchQuery_Intranet",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchQuery_IntranetLockdown": {
        "name": "IZ_Policy_OpenSearchQuery_IntranetLockdown",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchQuery_LocalMachine": {
        "name": "IZ_Policy_OpenSearchQuery_LocalMachine",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchQuery_LocalMachineLockdown": {
        "name": "IZ_Policy_OpenSearchQuery_LocalMachineLockdown",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchQuery_Restricted": {
        "name": "IZ_Policy_OpenSearchQuery_Restricted",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchQuery_RestrictedLockdown": {
        "name": "IZ_Policy_OpenSearchQuery_RestrictedLockdown",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchQuery_Trusted": {
        "name": "IZ_Policy_OpenSearchQuery_Trusted",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IZ_Policy_OpenSearchQuery_TrustedLockdown": {
        "name": "IZ_Policy_OpenSearchQuery_TrustedLockdown",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NoNewAppAlert": {
        "name": "NoNewAppAlert",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NoStrCmpLogical": {
        "name": "NoStrCmpLogical",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ShellProtocolProtectedModeTitle_2": {
        "name": "ShellProtocolProtectedModeTitle_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ShowHibernateOption": {
        "name": "ShowHibernateOption",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ShowSleepOption": {
        "name": "ShowSleepOption",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_WindowsMediaDRM": {
    "name": "ADMX_WindowsMediaDRM",
    "policies": {
      "DisableOnline": {
        "name": "DisableOnline",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_WindowsMediaPlayer": {
    "name": "ADMX_WindowsMediaPlayer",
    "policies": {
      "DisableAutoUpdate": {
        "name": "DisableAutoUpdate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableSetupFirstUseConfiguration": {
        "name": "DisableSetupFirstUseConfiguration",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DontUseFrameInterpolation": {
        "name": "DontUseFrameInterpolation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventLibrarySharing": {
        "name": "PreventLibrarySharing",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventQuickLaunchShortcut": {
        "name": "PreventQuickLaunchShortcut",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventWMPDeskTopShortcut": {
        "name": "PreventWMPDeskTopShortcut",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_WindowsRemoteManagement": {
    "name": "ADMX_WindowsRemoteManagement",
    "policies": {
      "DisallowKerberos_1": {
        "name": "DisallowKerberos_1",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisallowKerberos_2": {
        "name": "DisallowKerberos_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_WindowsStore": {
    "name": "ADMX_WindowsStore",
    "policies": {
      "DisableAutoDownloadWin8": {
        "name": "DisableAutoDownloadWin8",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableOSUpgrade_2": {
        "name": "DisableOSUpgrade_2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RemoveWindowsStore_2": {
        "name": "RemoveWindowsStore_2",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_Winsrv": {
    "name": "ADMX_Winsrv",
    "policies": {
      "AllowBlockingAppsAtShutdown": {
        "name": "AllowBlockingAppsAtShutdown",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_WorkFoldersClient": {
    "name": "ADMX_WorkFoldersClient",
    "policies": {
      "Pol_MachineEnableWorkFolders": {
        "name": "Pol_MachineEnableWorkFolders",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_fthsvc": {
    "name": "ADMX_fthsvc",
    "policies": {
      "WdiScenarioExecutionPolicy": {
        "name": "WdiScenarioExecutionPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_hotspotauth": {
    "name": "ADMX_hotspotauth",
    "policies": {
      "HotspotAuth_Enable": {
        "name": "HotspotAuth_Enable",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_iSCSI": {
    "name": "ADMX_iSCSI",
    "policies": {
      "iSCSIDiscovery_ConfigureTargetPortals": {
        "name": "iSCSIDiscovery_ConfigureTargetPortals",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "iSCSIDiscovery_ConfigureTargets": {
        "name": "iSCSIDiscovery_ConfigureTargets",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "iSCSIDiscovery_ConfigureiSNSServers": {
        "name": "iSCSIDiscovery_ConfigureiSNSServers",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "iSCSIDiscovery_NewStaticTargets": {
        "name": "iSCSIDiscovery_NewStaticTargets",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "iSCSIGeneral_ChangeIQNName": {
        "name": "iSCSIGeneral_ChangeIQNName",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "iSCSIGeneral_RestrictAdditionalLogins": {
        "name": "iSCSIGeneral_RestrictAdditionalLogins",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "iSCSISecurity_ChangeCHAPSecret": {
        "name": "iSCSISecurity_ChangeCHAPSecret",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "iSCSISecurity_RequireIPSec": {
        "name": "iSCSISecurity_RequireIPSec",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "iSCSISecurity_RequireMutualCHAP": {
        "name": "iSCSISecurity_RequireMutualCHAP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "iSCSISecurity_RequireOneWayCHAP": {
        "name": "iSCSISecurity_RequireOneWayCHAP",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_kdc": {
    "name": "ADMX_kdc",
    "policies": {
      "CbacAndArmor": {
        "name": "CbacAndArmor",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ForestSearch": {
        "name": "ForestSearch",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PKINITFreshness": {
        "name": "PKINITFreshness",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RequestCompoundId": {
        "name": "RequestCompoundId",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TicketSizeThreshold": {
        "name": "TicketSizeThreshold",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "emitlili": {
        "name": "emitlili",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_msched": {
    "name": "ADMX_msched",
    "policies": {
      "ActivationBoundaryPolicy": {
        "name": "ActivationBoundaryPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RandomDelayPolicy": {
        "name": "RandomDelayPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_nca": {
    "name": "ADMX_nca",
    "policies": {
      "CorporateResources": {
        "name": "CorporateResources",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CustomCommands": {
        "name": "CustomCommands",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DTEs": {
        "name": "DTEs",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "FriendlyName": {
        "name": "FriendlyName",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalNamesOn": {
        "name": "LocalNamesOn",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PassiveMode": {
        "name": "PassiveMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ShowUI": {
        "name": "ShowUI",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SupportEmail": {
        "name": "SupportEmail",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_pca": {
    "name": "ADMX_pca",
    "policies": {
      "DetectBlockedDriversPolicy": {
        "name": "DetectBlockedDriversPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DetectDeprecatedCOMComponentFailuresPolicy": {
        "name": "DetectDeprecatedCOMComponentFailuresPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DetectDeprecatedComponentFailuresPolicy": {
        "name": "DetectDeprecatedComponentFailuresPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DetectInstallFailuresPolicy": {
        "name": "DetectInstallFailuresPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DetectUndetectedInstallersPolicy": {
        "name": "DetectUndetectedInstallersPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DetectUpdateFailuresPolicy": {
        "name": "DetectUpdateFailuresPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisablePcaUIPolicy": {
        "name": "DisablePcaUIPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_sam": {
    "name": "ADMX_sam",
    "policies": {
      "SamNGCKeyROCAValidation": {
        "name": "SamNGCKeyROCAValidation",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_sdiageng": {
    "name": "ADMX_sdiageng",
    "policies": {
      "BetterWhenConnected": {
        "name": "BetterWhenConnected",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ScriptedDiagnosticsExecutionPolicy": {
        "name": "ScriptedDiagnosticsExecutionPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ScriptedDiagnosticsSecurityPolicy": {
        "name": "ScriptedDiagnosticsSecurityPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_sdiagschd": {
    "name": "ADMX_sdiagschd",
    "policies": {
      "ScheduledDiagnosticsExecutionPolicy": {
        "name": "ScheduledDiagnosticsExecutionPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_srmfci": {
    "name": "ADMX_srmfci",
    "policies": {
      "AccessDeniedConfiguration": {
        "name": "AccessDeniedConfiguration",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CentralClassificationList": {
        "name": "CentralClassificationList",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableManualUX": {
        "name": "EnableManualUX",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableShellAccessCheck": {
        "name": "EnableShellAccessCheck",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_tcpip": {
    "name": "ADMX_tcpip",
    "policies": {
      "6to4_Router_Name": {
        "name": "6to4_Router_Name",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "6to4_Router_Name_Resolution_Interval": {
        "name": "6to4_Router_Name_Resolution_Interval",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "6to4_State": {
        "name": "6to4_State",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IPHTTPS_ClientState": {
        "name": "IPHTTPS_ClientState",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IP_Stateless_Autoconfiguration_Limits_State": {
        "name": "IP_Stateless_Autoconfiguration_Limits_State",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ISATAP_Router_Name": {
        "name": "ISATAP_Router_Name",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ISATAP_State": {
        "name": "ISATAP_State",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Teredo_Client_Port": {
        "name": "Teredo_Client_Port",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Teredo_Default_Qualified": {
        "name": "Teredo_Default_Qualified",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Teredo_Refresh_Rate": {
        "name": "Teredo_Refresh_Rate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Teredo_Server_Name": {
        "name": "Teredo_Server_Name",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Teredo_State": {
        "name": "Teredo_State",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "Windows_Scaling_Heuristics_State": {
        "name": "Windows_Scaling_Heuristics_State",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ADMX_wlansvc": {
    "name": "ADMX_wlansvc",
    "policies": {
      "SetCost": {
        "name": "SetCost",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SetPINEnforced": {
        "name": "SetPINEnforced",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SetPINPreferred": {
        "name": "SetPINPreferred",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/AboveLock": {
    "name": "AboveLock",
    "policies": {
      "AllowActionCenterNotifications": {
        "name": "AllowActionCenterNotifications",
        "description": "This policy is deprecated",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowCortanaAboveLock": {
        "name": "AllowCortanaAboveLock",
        "description": "Specifies whether or not the user can interact with Cortana using speech while the system is locked. If you enable or don’t configure this setting, the user can interact with Cortana using speech while the system is locked. If you disable this setting, the system will need to be unlocked for the user to interact with Cortana using speech.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowToasts": {
        "name": "AllowToasts",
        "description": "Specifies whether to allow toast notifications above the device lock screen. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Accounts": {
    "name": "Accounts",
    "policies": {
      "AllowAddingNonMicrosoftAccountsManually": {
        "name": "AllowAddingNonMicrosoftAccountsManually",
        "description": "Specifies whether user is allowed to add non-MSA email accounts. Most restricted value is 0. Note This policy will only block UI/UX-based methods for adding non-Microsoft accounts. Even if this policy is enforced, you can still provision non-MSA accounts using the EMAIL2 CSP.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowMicrosoftAccountConnection": {
        "name": "AllowMicrosoftAccountConnection",
        "description": "Specifies whether the user is allowed to use an MSA account for non-email related connection authentication and services. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowMicrosoftAccountSignInAssistant": {
        "name": "AllowMicrosoftAccountSignInAssistant",
        "description": "Allows IT Admins the ability to disable the Microsoft Account Sign-In Assistant (wlidsvc) NT service. Note If the MSA service is disabled, Windows Update will no longer offer feature updates to devices running Windows 10 1709 or higher. See Feature updates are not being offered while other updates are. NoteIf the MSA service is disabled, the Subscription Activation feature will not work properly and your users will not be able to “step-up” from Windows 10 Pro to Windows 10 Enterprise, because the MSA ticket for license authentication cannot be generated. The machine will remain on Windows 10 Pro and no error will be displayed in the Activation Settings app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Manual start."
            }
          }
        },
        "scope": "device"
      },
      "DomainNamesForEmailSync": {
        "name": "DomainNamesForEmailSync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictToEnterpriseDeviceAuthenticationOnly": {
        "name": "RestrictToEnterpriseDeviceAuthenticationOnly",
        "description": "This setting determines whether to only allow enterprise device authentication for the Microsoft Account Sign-in Assistant service (wlidsvc). By default, this setting is disabled and allows both user and device authentication. When the value is set to 1, only allow device authentication, and block user authentication.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow both device and user authentication. Do not block user authentication."
            },
            "1": {
              "description": "Only allow device authentication. Block user authentication."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ActiveXControls": {
    "name": "ActiveXControls",
    "policies": {
      "ApprovedInstallationSites": {
        "name": "ApprovedInstallationSites",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/AppRuntime": {
    "name": "AppRuntime",
    "policies": {
      "AllowMicrosoftAccountsToBeOptional": {
        "name": "AllowMicrosoftAccountsToBeOptional",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/AppVirtualization": {
    "name": "AppVirtualization",
    "policies": {
      "AllowAppVClient": {
        "name": "AllowAppVClient",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowDynamicVirtualization": {
        "name": "AllowDynamicVirtualization",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowPackageCleanup": {
        "name": "AllowPackageCleanup",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowPackageScripts": {
        "name": "AllowPackageScripts",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowPublishingRefreshUX": {
        "name": "AllowPublishingRefreshUX",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowReportingServer": {
        "name": "AllowReportingServer",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowRoamingFileExclusions": {
        "name": "AllowRoamingFileExclusions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowRoamingRegistryExclusions": {
        "name": "AllowRoamingRegistryExclusions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowStreamingAutoload": {
        "name": "AllowStreamingAutoload",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ClientCoexistenceAllowMigrationmode": {
        "name": "ClientCoexistenceAllowMigrationmode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntegrationAllowRootGlobal": {
        "name": "IntegrationAllowRootGlobal",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntegrationAllowRootUser": {
        "name": "IntegrationAllowRootUser",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PublishingAllowServer1": {
        "name": "PublishingAllowServer1",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PublishingAllowServer2": {
        "name": "PublishingAllowServer2",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PublishingAllowServer3": {
        "name": "PublishingAllowServer3",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PublishingAllowServer4": {
        "name": "PublishingAllowServer4",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PublishingAllowServer5": {
        "name": "PublishingAllowServer5",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StreamingAllowCertificateFilterForClient_SSL": {
        "name": "StreamingAllowCertificateFilterForClient_SSL",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StreamingAllowHighCostLaunch": {
        "name": "StreamingAllowHighCostLaunch",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StreamingAllowLocationProvider": {
        "name": "StreamingAllowLocationProvider",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StreamingAllowPackageInstallationRoot": {
        "name": "StreamingAllowPackageInstallationRoot",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StreamingAllowPackageSourceRoot": {
        "name": "StreamingAllowPackageSourceRoot",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StreamingAllowReestablishmentInterval": {
        "name": "StreamingAllowReestablishmentInterval",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StreamingAllowReestablishmentRetries": {
        "name": "StreamingAllowReestablishmentRetries",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StreamingSharedContentStoreMode": {
        "name": "StreamingSharedContentStoreMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StreamingSupportBranchCache": {
        "name": "StreamingSupportBranchCache",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StreamingVerifyCertificateRevocationList": {
        "name": "StreamingVerifyCertificateRevocationList",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "VirtualComponentsAllowList": {
        "name": "VirtualComponentsAllowList",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ApplicationDefaults": {
    "name": "ApplicationDefaults",
    "policies": {
      "DefaultAssociationsConfiguration": {
        "name": "DefaultAssociationsConfiguration",
        "description": "This policy allows an administrator to set default file type and protocol associations. When set, default associations will be applied on sign-in to the PC. The association file can be created using the DISM tool (dism /online /export-defaultappassociations:appassoc. xml), and then needs to be base64 encoded before being added to SyncML. If policy is enabled and the client machine is Azure Active Directory joined, the associations assigned in SyncML will be processed and default associations will be applied.",
        "format": "string",
        "scope": "device"
      },
      "EnableAppUriHandlers": {
        "name": "EnableAppUriHandlers",
        "description": "Enables web-to-app linking, which allows apps to be launched with a http(s) URI",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ApplicationManagement": {
    "name": "ApplicationManagement",
    "policies": {
      "AllowAllTrustedApps": {
        "name": "AllowAllTrustedApps",
        "description": "Specifies whether non Microsoft Store apps are allowed. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Explicit deny."
            },
            "1": {
              "description": "Explicit allow unlock."
            },
            "65535": {
              "description": "Not configured."
            }
          }
        },
        "scope": "device"
      },
      "AllowAppStoreAutoUpdate": {
        "name": "AllowAppStoreAutoUpdate",
        "description": "Specifies whether automatic update of apps from Microsoft Store are allowed. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            },
            "2": {
              "description": "Not configured."
            }
          }
        },
        "scope": "device"
      },
      "AllowAutomaticAppArchiving": {
        "name": "AllowAutomaticAppArchiving",
        "description": "This policy setting controls whether the system can archive infrequently used apps. If you enable this policy setting, then the system will periodically check for and archive infrequently used apps. If you disable this policy setting, then the system will not archive any apps. If you do not configure this policy setting (default), then the system will follow default behavior, which is to periodically check for and archive infrequently used apps, and the user will be able to configure this setting themselves.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Explicit deny."
            },
            "1": {
              "description": "Explicit enable."
            },
            "65535": {
              "description": "Not configured. User's Choice."
            }
          }
        },
        "scope": "device"
      },
      "AllowDeveloperUnlock": {
        "name": "AllowDeveloperUnlock",
        "description": "Specifies whether developer unlock is allowed. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Explicit deny."
            },
            "1": {
              "description": "Explicit allow unlock."
            },
            "65535": {
              "description": "Not configured."
            }
          }
        },
        "scope": "device"
      },
      "AllowGameDVR": {
        "name": "AllowGameDVR",
        "description": "Note The policy is only enforced in Windows 10 for desktop. Specifies whether DVR and broadcasting is allowed. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowSharedUserAppData": {
        "name": "AllowSharedUserAppData",
        "description": "With this policy, you can configure Windows 10 to share application data among multiple users on the system and with other instances of that app. Data shared through the SharedLocal folder is available through the Windows. Storage API. If you previously enabled this policy and now want to disable it, any shared app data remains in the SharedLocal folder.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/not allowed, but Microsoft Edge downloads book files to a per-user folder for each user."
            },
            "1": {
              "description": "Allowed. Microsoft Edge downloads book files into a shared folder. For this policy to work correctly, you must also enable the Allow a Windows app to share application data between users group policy. Also, the users must be signed in with a school or work account."
            }
          }
        },
        "scope": "device"
      },
      "AllowStore": {
        "name": "AllowStore",
        "description": "This policy is deprecated",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disallow."
            },
            "1": {
              "description": "Allow."
            }
          }
        },
        "scope": "device"
      },
      "ApplicationRestrictions": {
        "name": "ApplicationRestrictions",
        "description": "This policy is deprecated",
        "format": "string",
        "scope": "device"
      },
      "BlockNonAdminUserInstall": {
        "name": "BlockNonAdminUserInstall",
        "description": "Manages non-administrator users' ability to install Windows app packages. If you enable this policy, non-administrators will be unable to initiate installation of Windows app packages. Administrators who wish to install an app will need to do so from an Administrator context (for example, an Administrator PowerShell window). All users will still be able to install Windows app packages via the Microsoft Store, if permitted by other policies. If you disable or do not configure this policy, all users will be able to initiate installation of Windows app packages.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled. All users will be able to initiate installation of Windows app packages."
            },
            "1": {
              "description": "Enabled. Non-administrator users will not be able to initiate installation of Windows app packages."
            }
          }
        },
        "scope": "device"
      },
      "DisableStoreOriginatedApps": {
        "name": "DisableStoreOriginatedApps",
        "description": "Boolean value that disables the launch of all apps from Microsoft Store that came pre-installed or were downloaded.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enable launch of apps."
            },
            "1": {
              "description": "Disable launch of apps."
            }
          }
        },
        "scope": "device"
      },
      "LaunchAppAfterLogOn": {
        "name": "LaunchAppAfterLogOn",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. Listed Windows apps are to be launched after logon.",
        "format": "string",
        "scope": "device"
      },
      "MSIAllowUserControlOverInstall": {
        "name": "MSIAllowUserControlOverInstall",
        "description": "This policy setting permits users to change installation options that typically are available only to system administrators. If you enable this policy setting, some of the security features of Windows Installer are bypassed. It permits installations to complete that otherwise would be halted due to a security violation. If you disable or do not configure this policy setting, the security features of Windows Installer prevent users from changing installation options typically reserved for system administrators, such as specifying the directory to which files are installed. If Windows Installer detects that an installation package has permitted the user to change a protected option, it stops the installation and displays a message. These security features operate only when the installation program is running in a privileged security context in which it has access to directories denied to the user. This policy setting is designed for less restrictive environments. It can be used to circumvent errors in an installation program that prevents software from being installed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "MSIAlwaysInstallWithElevatedPrivileges": {
        "name": "MSIAlwaysInstallWithElevatedPrivileges",
        "description": "This policy setting directs Windows Installer to use elevated permissions when it installs any program on the system. If you enable this policy setting, privileges are extended to all programs. These privileges are usually reserved for programs that have been assigned to the user (offered on the desktop), assigned to the computer (installed automatically), or made available in Add or Remove Programs in Control Panel. This profile setting lets users install programs that require access to directories that the user might not have permission to view or change, including directories on highly restricted computers. If you disable or do not configure this policy setting, the system applies the current user's permissions when it installs programs that a system administrator does not distribute or offer. Note: This policy setting appears both in the Computer Configuration and User Configuration folders. To make this policy setting effective, you must enable it in both folders. Caution: Skilled users can take advantage of the permissions this policy setting grants to change their privileges and gain permanent access to restricted files and folders. Note that the User Configuration version of this policy setting is not guaranteed to be secure.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "RequirePrivateStoreOnly": {
        "name": "RequirePrivateStoreOnly",
        "description": "Allows disabling of the retail catalog and only enables the Private store. Most restricted value is 1.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow both public and Private store."
            },
            "1": {
              "description": "Only Private store is enabled."
            }
          }
        },
        "scope": "device"
      },
      "RestrictAppDataToSystemVolume": {
        "name": "RestrictAppDataToSystemVolume",
        "description": "Specifies whether application data is restricted to the system drive. Most restricted value is 1.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not restricted."
            },
            "1": {
              "description": "Restricted."
            }
          }
        },
        "scope": "device"
      },
      "RestrictAppToSystemVolume": {
        "name": "RestrictAppToSystemVolume",
        "description": "Specifies whether the installation of applications is restricted to the system drive. Most restricted value is 1.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not restricted."
            },
            "1": {
              "description": "Restricted."
            }
          }
        },
        "scope": "device"
      },
      "ScheduleForceRestartForUpdateFailures": {
        "name": "ScheduleForceRestartForUpdateFailures",
        "description": "To ensure apps are up-to-date, this policy allows the admins to set a recurring or one time date to restart apps whose update failed due to the app being in use allowing the update to be applied. Value type is string.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Audit": {
    "name": "Audit",
    "policies": {
      "AccountLogonLogoff_AuditAccountLockout": {
        "name": "AccountLogonLogoff_AuditAccountLockout",
        "description": "This policy setting allows you to audit events generated by a failed attempt to log on to an account that is locked out.  If you configure this policy setting, an audit event is generated when an account cannot log on to a computer because the account is locked out. Success audits record successful attempts and Failure audits record unsuccessful attempts.  Logon events are essential for understanding user activity and to detect potential attacks.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountLogonLogoff_AuditGroupMembership": {
        "name": "AccountLogonLogoff_AuditGroupMembership",
        "description": "This policy allows you to audit the group memberhsip information in the user's logon token. Events in this subcategory are generated on the computer on which a logon session is created. For an interactive logon, the security audit event is generated on the computer that the user logged on to. For a network logon, such as accessing a shared folder on the network, the security audit event is generated on the computer hosting the resource.  When this setting is configured, one or more security audit events are generated for each successful logon. You must also enable the Audit Logon setting under Advanced Audit Policy Configuration\\System Audit Policies\\Logon/Logoff. Multiple events are generated if the group memberhsip information cannot fit in a single security audit event.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountLogonLogoff_AuditIPsecExtendedMode": {
        "name": "AccountLogonLogoff_AuditIPsecExtendedMode",
        "description": "This policy setting allows you to audit events generated by Internet Key Exchange protocol (IKE) and Authenticated Internet Protocol (AuthIP) during Extended Mode negotiations.  If you configure this policy setting, an audit event is generated during an IPsec Extended Mode negotiation. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated during an IPsec Extended Mode negotiation.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountLogonLogoff_AuditIPsecMainMode": {
        "name": "AccountLogonLogoff_AuditIPsecMainMode",
        "description": "This policy setting allows you to audit events generated by Internet Key Exchange protocol (IKE) and Authenticated Internet Protocol (AuthIP) during Main Mode negotiations.  If you configure this policy setting, an audit event is generated during an IPsec Main Mode negotiation. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated during an IPsec Main Mode negotiation.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountLogonLogoff_AuditIPsecQuickMode": {
        "name": "AccountLogonLogoff_AuditIPsecQuickMode",
        "description": "This policy setting allows you to audit events generated by Internet Key Exchange protocol (IKE) and Authenticated Internet Protocol (AuthIP) during Quick Mode negotiations.  If you configure this policy setting, an audit event is generated during an IPsec Quick Mode negotiation. Success audits record successful attempts and Failure audits record unsuccessful attempts.If  you do not configure this policy setting, no audit event is generated during an IPsec Quick Mode negotiation.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountLogonLogoff_AuditLogoff": {
        "name": "AccountLogonLogoff_AuditLogoff",
        "description": "This policy setting allows you to audit events generated by the closing of a logon session. These events occur on the computer that was accessed. For an interactive logoff the security audit event is generated on the computer that the user account logged on to.  If you configure this policy setting, an audit event is generated when a logon session is closed. Success audits record successful attempts to close sessions and Failure audits record unsuccessful attempts to close sessions. If you do not configure this policy setting, no audit event is generated when a logon session is closed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountLogonLogoff_AuditLogon": {
        "name": "AccountLogonLogoff_AuditLogon",
        "description": "This policy setting allows you to audit events generated by user account logon attempts on the computer. Events in this subcategory are related to the creation of logon sessions and occur on the computer which was accessed. For an interactive logon, the security audit event is generated on the computer that the user account logged on to. For a network logon, such as accessing a shared folder on the network, the security audit event is generated on the computer hosting the resource. The following events are included:     Successful logon attempts.     Failed logon attempts.     Logon attempts using explicit credentials. This event is generated when a process attempts to log on an account by explicitly specifying that account’s credentials. This most commonly occurs in batch logon configurations, such as scheduled tasks or when using the RUNAS command.     Security identifiers (SIDs) were filtered and not allowed to log on.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountLogonLogoff_AuditNetworkPolicyServer": {
        "name": "AccountLogonLogoff_AuditNetworkPolicyServer",
        "description": "This policy setting allows you to audit events generated by RADIUS (IAS) and Network Access Protection (NAP) user access requests. These requests can be Grant, Deny, Discard, Quarantine, Lock, and Unlock. If you configure this policy setting, an audit event is generated for each IAS and NAP user access request. Success audits record successful user access requests and Failure audits record unsuccessful attempts. If you do not configure this policy settings, IAS and NAP user access requests are not audited.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountLogonLogoff_AuditOtherLogonLogoffEvents": {
        "name": "AccountLogonLogoff_AuditOtherLogonLogoffEvents",
        "description": "This policy setting allows you to audit other logon/logoff-related events that are not covered in the “Logon/Logoff” policy setting such as the following:     Terminal Services session disconnections.     New Terminal Services sessions.     Locking and unlocking a workstation.     Invoking a screen saver.     Dismissal of a screen saver.     Detection of a Kerberos replay attack, in which a Kerberos request was received twice with identical information. This condition could be caused by network misconfiguration.     Access to a wireless network granted to a user or computer account.     Access to a wired 802.1x network granted to a user or computer account.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountLogonLogoff_AuditSpecialLogon": {
        "name": "AccountLogonLogoff_AuditSpecialLogon",
        "description": "This policy setting allows you to audit events generated by special logons such as the following :     The use of a special logon, which is a logon that has administrator-equivalent privileges and can be used to elevate a process to a higher level.     A logon by a member of a Special Group. Special Groups enable you to audit events generated when a member of a certain group has logged on to your network. You can configure a list of group security identifiers (SIDs) in the registry. If any of those SIDs are added to a token during logon and the subcategory is enabled, an event is logged. For more information about this feature, see article 947223 in the Microsoft Knowledge Base (https://go.microsoft.com/fwlink/?LinkId=121697).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountLogonLogoff_AuditUserDeviceClaims": {
        "name": "AccountLogonLogoff_AuditUserDeviceClaims",
        "description": "This policy allows you to audit user and device claims information in the user's logon token. Events in this subcategory are generated on the computer on which a logon session is created. For an interactive logon, the security audit event is generated on the computer that the user logged on to. For a network logon, such as accessing a shared folder on the network, the security audit event is generated on the computer hosting the resource.  User claims are added to a logon token when claims are included with a user's account attributes in Active Directory. Device claims are added to the logon token when claims are included with a device's computer account attributes in Active Directory. In addition, compound identity must be enabled for the domain and on the computer where the user logged on.  When this setting is configured, one or more security audit events are generated for each successful logon. You must also enable the Audit Logon setting under Advanced Audit Policy Configuration\\System Audit Policies\\Logon/Logoff. Multiple events are generated if the user and device claims information cannot fit in a single security audit event.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountLogon_AuditCredentialValidation": {
        "name": "AccountLogon_AuditCredentialValidation",
        "description": "This policy setting allows you to audit events generated by validation tests on user account logon credentials.  Events in this subcategory occur only on the computer that is authoritative for those credentials. For domain accounts, the domain controller is authoritative. For local accounts, the local computer is authoritative.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountLogon_AuditKerberosAuthenticationService": {
        "name": "AccountLogon_AuditKerberosAuthenticationService",
        "description": "This policy setting allows you to audit events generated by Kerberos authentication ticket-granting ticket (TGT) requests.  If you configure this policy setting, an audit event is generated after a Kerberos authentication TGT request. Success audits record successful requests and Failure audits record unsuccessful requests. If you do not configure this policy setting, no audit event is generated after a Kerberos authentication TGT request.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountLogon_AuditKerberosServiceTicketOperations": {
        "name": "AccountLogon_AuditKerberosServiceTicketOperations",
        "description": "This policy setting allows you to audit events generated by Kerberos authentication ticket-granting ticket (TGT) requests submitted for user accounts.  If you configure this policy setting, an audit event is generated after a Kerberos authentication TGT is requested for a user account. Success audits record successful requests and Failure audits record unsuccessful requests. If you do not configure this policy setting, no audit event is generated after a Kerberos authentication TGT is request for a user account.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountLogon_AuditOtherAccountLogonEvents": {
        "name": "AccountLogon_AuditOtherAccountLogonEvents",
        "description": "This policy setting allows you to audit events generated by responses to credential requests submitted for a user account logon that are not credential validation or Kerberos tickets.  Currently, there are no events in this subcategory.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountManagement_AuditApplicationGroupManagement": {
        "name": "AccountManagement_AuditApplicationGroupManagement",
        "description": "This policy setting allows you to audit events generated by changes to application groups such as the following:     Application group is created, changed, or deleted.     Member is added or removed from an application group.  If you configure this policy setting, an audit event is generated when an attempt to change an application group is made. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when an application group changes.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountManagement_AuditComputerAccountManagement": {
        "name": "AccountManagement_AuditComputerAccountManagement",
        "description": "This policy setting allows you to audit events generated by changes to computer accounts such as when a computer account is created, changed, or deleted.  If you configure this policy setting, an audit event is generated when an attempt to change a computer account is made. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when a computer account changes.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountManagement_AuditDistributionGroupManagement": {
        "name": "AccountManagement_AuditDistributionGroupManagement",
        "description": "This policy setting allows you to audit events generated by changes to distribution groups such as the following:     Distribution group is created, changed, or deleted.     Member is added or removed from a distribution group.     Distribution group type is changed.  If you configure this policy setting, an audit event is generated when an attempt to change a distribution group is made. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when a distribution group changes.  Note: Events in this subcategory are logged only on domain controllers.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountManagement_AuditOtherAccountManagementEvents": {
        "name": "AccountManagement_AuditOtherAccountManagementEvents",
        "description": "This policy setting allows you to audit events generated by other user account changes that are not covered in this category, such as the following:     The password hash of a user account was accessed. This typically happens during an Active Directory Management Tool password migration.     The Password Policy Checking API was called. Calls to this function can be part of an attack when a malicious application tests the policy to reduce the number of attempts during a password dictionary attack.     Changes to the Default Domain Group Policy under the following Group Policy paths: Computer Configuration\\Windows Settings\\Security Settings\\Account Policies\\Password Policy Computer Configuration\\Windows Settings\\Security Settings\\Account Policies\\Account Lockout Policy",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountManagement_AuditSecurityGroupManagement": {
        "name": "AccountManagement_AuditSecurityGroupManagement",
        "description": "This policy setting allows you to audit events generated by changes to security groups such as the following:     Security group is created, changed, or deleted.     Member is added or removed from a security group.     Group type is changed.  If you configure this policy setting, an audit event is generated when an attempt to change a security group is made. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when a security group changes.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "AccountManagement_AuditUserAccountManagement": {
        "name": "AccountManagement_AuditUserAccountManagement",
        "description": "This policy setting allows you to audit changes to user accounts. Events include the following:     A user account is created, changed, deleted; renamed, disabled, enabled, locked out, or unlocked.     A user account’s password is set or changed.     A security identifier (SID) is added to the SID History of a user account.     The Directory Services Restore Mode password is configured.     Permissions on administrative user accounts are changed.     Credential Manager credentials are backed up or restored.  If you configure this policy setting, an audit event is generated when an attempt to change a user account is made. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when a user account changes.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "DSAccess_AuditDetailedDirectoryServiceReplication": {
        "name": "DSAccess_AuditDetailedDirectoryServiceReplication",
        "description": "This policy setting allows you to audit events generated by detailed Active Directory Domain Services (AD DS) replication between domain controllers.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "DSAccess_AuditDirectoryServiceAccess": {
        "name": "DSAccess_AuditDirectoryServiceAccess",
        "description": "This policy setting allows you to audit events generated when an Active Directory Domain Services (AD DS) object is accessed.   Only AD DS objects with a matching system access control list (SACL) are logged.  Events in this subcategory are similar to the Directory Service Access events available in previous versions of Windows.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "DSAccess_AuditDirectoryServiceChanges": {
        "name": "DSAccess_AuditDirectoryServiceChanges",
        "description": "This policy setting allows you to audit events generated by changes to objects in Active Directory Domain Services (AD DS). Events are logged when an object is created, deleted, modified, moved, or undeleted.  When possible, events logged in this subcategory indicate the old and new values of the object’s properties.  Events in this subcategory are logged only on domain controllers, and only objects in AD DS with a matching system access control list (SACL) are logged.  Note: Actions on some objects and properties do not cause audit events to be generated due to settings on the object class in the schema.  If you configure this policy setting, an audit event is generated when an attempt to change an object in AD DS is made. Success audits record successful attempts, however unsuccessful attempts are NOT recorded. If you do not configure this policy setting, no audit event is generated when an attempt to change an object in AD DS object is made.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "DSAccess_AuditDirectoryServiceReplication": {
        "name": "DSAccess_AuditDirectoryServiceReplication",
        "description": "This policy setting allows you to audit replication between two Active Directory Domain Services (AD DS) domain controllers.  If you configure this policy setting, an audit event is generated during AD DS replication. Success audits record successful replication and Failure audits record unsuccessful replication. If you do not configure this policy setting, no audit event is generated during AD DS replication.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "DetailedTracking_AuditDPAPIActivity": {
        "name": "DetailedTracking_AuditDPAPIActivity",
        "description": "This policy setting allows you to audit events generated when encryption or decryption requests are made to the Data Protection application interface (DPAPI). DPAPI is used to protect secret information such as stored password and key information. For more information about DPAPI, see https://go.microsoft.com/fwlink/?LinkId=121720.  If you configure this policy setting, an audit event is generated when an encryption or decryption request is made to DPAPI. Success audits record successful requests and Failure audits record unsuccessful requests. If you do not configure this policy setting, no audit event is generated when an encryption or decryption request is made to DPAPI.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "DetailedTracking_AuditPNPActivity": {
        "name": "DetailedTracking_AuditPNPActivity",
        "description": "This policy setting allows you to audit when plug and play detects an external device.  If you configure this policy setting, an audit event is generated whenever plug and play detects an external device. Only Success audits are recorded for this category. If you do not configure this policy setting, no audit event is generated when an external device is detected by plug and play.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "DetailedTracking_AuditProcessCreation": {
        "name": "DetailedTracking_AuditProcessCreation",
        "description": "This policy setting allows you to audit events generated when a process is created or starts. The name of the application or user that created the process is also audited.  If you configure this policy setting, an audit event is generated when a process is created. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when a process is created.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "DetailedTracking_AuditProcessTermination": {
        "name": "DetailedTracking_AuditProcessTermination",
        "description": "This policy setting allows you to audit events generated when a process ends.   If you configure this policy setting, an audit event is generated when a process ends. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when a process ends.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "DetailedTracking_AuditRPCEvents": {
        "name": "DetailedTracking_AuditRPCEvents",
        "description": "This policy setting allows you to audit inbound remote procedure call (RPC) connections.  If you configure this policy setting, an audit event is generated when a remote RPC connection is attempted. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when a remote RPC connection is attempted.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "DetailedTracking_AuditTokenRightAdjusted": {
        "name": "DetailedTracking_AuditTokenRightAdjusted",
        "description": "This policy setting allows you to audit events generated by adjusting the privileges of a token.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "ObjectAccess_AuditApplicationGenerated": {
        "name": "ObjectAccess_AuditApplicationGenerated",
        "description": "This policy setting allows you to audit applications that generate events using the Windows Auditing application programming interfaces (APIs). Applications designed to use the Windows Auditing API use this subcategory to log auditing events related to their function. Events in this subcategory include:     Creation of an application client context.     Deletion of an application client context.     Initialization of an application client context.     Other application operations using the Windows Auditing APIs.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "ObjectAccess_AuditCentralAccessPolicyStaging": {
        "name": "ObjectAccess_AuditCentralAccessPolicyStaging",
        "description": "This policy setting allows you to audit access requests where the permission granted or denied by a proposed policy differs from the current central access policy on an object.  If you configure this policy setting, an audit event is generated each time a user accesses an object and the permission granted by the current central access policy on the object differs from that granted by the proposed policy. The resulting audit event will be generated as follows: 1) Success audits, when configured, records access attempts when the current central access policy grants access but the proposed policy denies access. 2) Failure audits when configured records access attempts when:    a) The current central access policy does not grant access but the proposed policy grants access.    b) A principal requests the maximum access rights they are allowed and the access rights granted by the current central access policy are different than the access rights granted by the proposed policy.  Volume: Potentially high on a file server when the proposed policy differs significantly from the current central access policy.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "ObjectAccess_AuditCertificationServices": {
        "name": "ObjectAccess_AuditCertificationServices",
        "description": "This policy setting allows you to audit Active Directory Certificate Services (AD CS) operations. AD CS operations include the following:     AD CS startup/shutdown/backup/restore.     Changes to the certificate revocation list (CRL).     New certificate requests.     Issuing of a certificate.     Revocation of a certificate.     Changes to the Certificate Manager settings for AD CS.     Changes in the configuration of AD CS.     Changes to a Certificate Services template.     Importing of a certificate.     Publishing of a certification authority certificate is to Active Directory Domain Services.     Changes to the security permissions for AD CS.     Archival of a key.     Importing of a key.     Retrieval of a key.     Starting of Online Certificate Status Protocol (OCSP) Responder Service.     Stopping of Online Certificate Status Protocol (OCSP) Responder Service.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "ObjectAccess_AuditDetailedFileShare": {
        "name": "ObjectAccess_AuditDetailedFileShare",
        "description": "This policy setting allows you to audit attempts to access files and folders on a shared folder. The Detailed File Share setting logs an event every time a file or folder is accessed, whereas the File Share setting only records one event for any connection established between a client and file share.  Detailed File Share audit events include detailed information about the permissions or other criteria used to grant or deny access.  If you configure this policy setting, an audit event is generated when an attempt is made to access a file or folder on a share. The administrator can specify whether to audit only successes, only failures, or both successes and failures.  Note: There are no system access control lists (SACLs) for shared folders. If this policy setting is enabled, access to all shared files and folders on the system is audited.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "ObjectAccess_AuditFileShare": {
        "name": "ObjectAccess_AuditFileShare",
        "description": "This policy setting allows you to audit attempts to access a shared folder.  If you configure this policy setting, an audit event is generated when an attempt is made to access a shared folder. If this policy setting is defined, the administrator can specify whether to audit only successes, only failures, or both successes and failures.  Note: There are no system access control lists (SACLs) for shared folders. If this policy setting is enabled, access to all shared folders on the system is audited.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "ObjectAccess_AuditFileSystem": {
        "name": "ObjectAccess_AuditFileSystem",
        "description": "This policy setting allows you to audit user attempts to access file system objects. A security audit event is generated only for objects that have system access control lists (SACL) specified, and only if the type of access requested, such as Write, Read, or Modify and the account making the request match the settings in the SACL. For more information about enabling object access auditing, see https://go.microsoft.com/fwlink/?LinkId=122083.  If you configure this policy setting, an audit event is generated each time an account accesses a file system object with a matching SACL. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when an account accesses a file system object with a matching SACL.  Note: You can set a SACL on a file system object using the Security tab in that object's Properties dialog box.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "ObjectAccess_AuditFilteringPlatformConnection": {
        "name": "ObjectAccess_AuditFilteringPlatformConnection",
        "description": "This policy setting allows you to audit connections that are allowed or blocked by the Windows Filtering Platform (WFP). The following events are included:     The Windows Firewall Service blocks an application from accepting incoming connections on the network.     The WFP allows a connection.     The WFP blocks a connection.     The WFP permits a bind to a local port.     The WFP blocks a bind to a local port.     The WFP allows a connection.     The WFP blocks a connection.     The WFP permits an application or service to listen on a port for incoming connections.     The WFP blocks an application or service to listen on a port for incoming connections.  If you configure this policy setting, an audit event is generated when connections are allowed or blocked by the WFP. Success audits record events generated when connections are allowed and Failure audits record events generated when connections are blocked. If you do not configure this policy setting, no audit event is generated when connected are allowed or blocked by the WFP.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "ObjectAccess_AuditFilteringPlatformPacketDrop": {
        "name": "ObjectAccess_AuditFilteringPlatformPacketDrop",
        "description": "This policy setting allows you to audit packets that are dropped by Windows Filtering Platform (WFP).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "ObjectAccess_AuditHandleManipulation": {
        "name": "ObjectAccess_AuditHandleManipulation",
        "description": "This policy setting allows you to audit events generated when a handle to an object is opened or closed. Only objects with a matching system access control list (SACL) generate security audit events.  If you configure this policy setting, an audit event is generated when a handle is manipulated. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when a handle is manipulated.  Note: Events in this subcategory generate events only for object types where the corresponding Object Access subcategory is enabled. For example, if File system object access is enabled, handle manipulation security audit events are generated. If Registry object access is not enabled, handle manipulation security audit events will not be generated.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "ObjectAccess_AuditKernelObject": {
        "name": "ObjectAccess_AuditKernelObject",
        "description": "This policy setting allows you to audit attempts to access the kernel, which include mutexes and semaphores.  Only kernel objects with a matching system access control list (SACL) generate security audit events.  Note: The Audit: Audit the access of global system objects policy setting controls the default SACL of kernel objects.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "ObjectAccess_AuditOtherObjectAccessEvents": {
        "name": "ObjectAccess_AuditOtherObjectAccessEvents",
        "description": "This policy setting allows you to audit events generated by the management of task scheduler jobs or COM+ objects.  For scheduler jobs, the following are audited:     Job created.     Job deleted.     Job enabled.     Job disabled.     Job updated. For COM+ objects, the following are audited:     Catalog object added.     Catalog object updated.     Catalog object deleted.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "ObjectAccess_AuditRegistry": {
        "name": "ObjectAccess_AuditRegistry",
        "description": "This policy setting allows you to audit attempts to access registry objects. A security audit event is generated only for objects that have system access control lists (SACLs) specified, and only if the type of access requested, such as Read, Write, or Modify, and the account making the request match the settings in the SACL.  If you configure this policy setting, an audit event is generated each time an account accesses a registry object with a matching SACL. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when an account accesses a registry object with a matching SACL.  Note: You can set a SACL on a registry object using the Permissions dialog box.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "ObjectAccess_AuditRemovableStorage": {
        "name": "ObjectAccess_AuditRemovableStorage",
        "description": "This policy setting allows you to audit user attempts to access file system objects on a removable storage device. A security audit event is generated only for all objects for all types of access requested.  If you configure this policy setting, an audit event is generated each time an account accesses a file system object on a removable storage. Success audits record successful attempts and Failure audits record unsuccessful attempts.  If you do not configure this policy setting, no audit event is generated when an account accesses a file system object on a removable storage.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "ObjectAccess_AuditSAM": {
        "name": "ObjectAccess_AuditSAM",
        "description": "This policy setting allows you to audit events generated by attempts to access to Security Accounts Manager (SAM) objects. SAM objects include the following:     SAM_ALIAS -- A local group.     SAM_GROUP -- A group that is not a local group.     SAM_USER – A user account.     SAM_DOMAIN – A domain.     SAM_SERVER – A computer account. If you configure this policy setting, an audit event is generated when an attempt to access a kernel object is made. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when an attempt to access a kernel object is made. Note: Only the System Access Control List (SACL) for SAM_SERVER can be modified. Volume: High on domain controllers. For information about reducing the amount of events generated in this subcategory, see article 841001 in the Microsoft Knowledge Base (https://go.microsoft.com/fwlink/?LinkId=121698).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "PolicyChange_AuditAuthenticationPolicyChange": {
        "name": "PolicyChange_AuditAuthenticationPolicyChange",
        "description": "This policy setting allows you to audit events generated by changes to the authentication policy such as the following:     Creation of forest and domain trusts.     Modification of forest and domain trusts.     Removal of forest and domain trusts.     Changes to Kerberos policy under Computer Configuration\\Windows Settings\\Security Settings\\Account Policies\\Kerberos Policy.     Granting of any of the following user rights to a user or group:         Access This Computer From the Network.         Allow Logon Locally.         Allow Logon Through Terminal Services.         Logon as a Batch Job.         Logon a Service.     Namespace collision. For example, when a new trust has the same name as an existing namespace name.  If you configure this policy setting, an audit event is generated when an attempt to change the authentication policy is made. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when the authentication policy is changed.  Note: The security audit event is logged when the group policy is applied. It does not occur at the time when the settings are modified.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "PolicyChange_AuditAuthorizationPolicyChange": {
        "name": "PolicyChange_AuditAuthorizationPolicyChange",
        "description": "This policy setting allows you to audit events generated by changes to the authorization policy such as the following:     Assignment of user rights (privileges), such as SeCreateTokenPrivilege, that are not audited through the “Authentication Policy Change” subcategory.     Removal of user rights (privileges), such as SeCreateTokenPrivilege, that are not audited through the “Authentication Policy Change” subcategory.     Changes in the Encrypted File System (EFS) policy.     Changes to the Resource attributes of an object.     Changes to the Central Access Policy (CAP) applied to an object.  If you configure this policy setting, an audit event is generated when an attempt to change the authorization policy is made. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when the authorization policy changes.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "PolicyChange_AuditFilteringPlatformPolicyChange": {
        "name": "PolicyChange_AuditFilteringPlatformPolicyChange",
        "description": "This policy setting allows you to audit events generated by changes to the Windows Filtering Platform (WFP) such as the following:      IPsec services status.     Changes to IPsec policy settings.     Changes to Windows Firewall policy settings.     Changes to WFP providers and engine.  If you configure this policy setting, an audit event is generated when a change to the WFP is attempted. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when a change occurs to the WFP.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "PolicyChange_AuditMPSSVCRuleLevelPolicyChange": {
        "name": "PolicyChange_AuditMPSSVCRuleLevelPolicyChange",
        "description": "This policy setting allows you to audit events generated by changes in policy rules used by the Microsoft Protection Service (MPSSVC). This service is used by Windows Firewall. Events include the following:     Reporting of active policies when Windows Firewall service starts.     Changes to Windows Firewall rules.     Changes to Windows Firewall exception list.     Changes to Windows Firewall settings.     Rules ignored or not applied by Windows Firewall Service.     Changes to Windows Firewall Group Policy settings.  If you configure this policy setting, an audit event is generated by attempts to change policy rules used by the MPSSVC. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated by changes in policy rules used by the MPSSVC.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "PolicyChange_AuditOtherPolicyChangeEvents": {
        "name": "PolicyChange_AuditOtherPolicyChangeEvents",
        "description": "This policy setting allows you to audit events generated by other security policy changes that are not audited in the policy change category, such as the following:     Trusted Platform Module (TPM) configuration changes.     Kernel-mode cryptographic self tests.     Cryptographic provider operations.     Cryptographic context operations or modifications.     Applied Central Access Policies (CAPs) changes.     Boot Configuration Data (BCD) modifications.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "PolicyChange_AuditPolicyChange": {
        "name": "PolicyChange_AuditPolicyChange",
        "description": "This policy setting allows you to audit changes in the security audit policy settings such as the following:     Settings permissions and audit settings on the Audit Policy object.     Changes to the system audit policy.     Registration of security event sources.     De-registration of security event sources.     Changes to the per-user audit settings.     Changes to the value of CrashOnAuditFail.     Changes to the system access control list on a file system or registry object.     Changes to the Special Groups list.  Note: System access control list (SACL) change auditing is done when a SACL for an object changes and the policy change category is enabled. Discretionary access control list (DACL) and ownership changes are audited when object access auditing is enabled and the object's SACL is configured for auditing of DACL/Owner change.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "PrivilegeUse_AuditNonSensitivePrivilegeUse": {
        "name": "PrivilegeUse_AuditNonSensitivePrivilegeUse",
        "description": "This policy setting allows you to audit events generated by the use of non-sensitive privileges (user rights). The following privileges are non-sensitive:         Access Credential Manager as a trusted caller.         Access this computer from the network.         Add workstations to domain.         Adjust memory quotas for a process.         Allow log on locally.         Allow log on through Terminal Services.         Bypass traverse checking.         Change the system time.         Create a pagefile.         Create global objects.                  Create permanent shared objects.         Create symbolic links.         Deny access this computer from the network.         Deny log on as a batch job.         Deny log on as a service.         Deny log on locally.         Deny log on through Terminal Services.         Force shutdown from a remote system.         Increase a process working set.         Increase scheduling priority.         Lock pages in memory.         Log on as a batch job.         Log on as a service.         Modify an object label.         Perform volume maintenance tasks.         Profile single process.         Profile system performance.         Remove computer from docking station.         Shut down the system.         Synchronize directory service data.  If you configure this policy setting, an audit event is generated when a non-sensitive privilege is called. Success audits record successful calls and Failure audits record unsuccessful calls. If you do not configure this policy setting, no audit event is generated when a non-sensitive privilege is called.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "PrivilegeUse_AuditOtherPrivilegeUseEvents": {
        "name": "PrivilegeUse_AuditOtherPrivilegeUseEvents",
        "description": "Not used.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "PrivilegeUse_AuditSensitivePrivilegeUse": {
        "name": "PrivilegeUse_AuditSensitivePrivilegeUse",
        "description": "This policy setting allows you to audit events generated when sensitive privileges (user rights) are used such as the following:     A privileged service is called.     One of the following privileges are called:         Act as part of the operating system.         Back up files and directories.         Create a token object.         Debug programs.         Enable computer and user accounts to be trusted for delegation.         Generate security audits.         Impersonate a client after authentication.         Load and unload device drivers.         Manage auditing and security log.         Modify firmware environment values.         Replace a process-level token.         Restore files and directories.         Take ownership of files or other objects.  If you configure this policy setting, an audit event is generated when sensitive privilege requests are made. Success audits record successful requests and Failure audits record unsuccessful requests. If you do not configure this policy setting, no audit event is generated when sensitive privilege requests are made. ",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "System_AuditIPsecDriver": {
        "name": "System_AuditIPsecDriver",
        "description": "This policy setting allows you to audit events generated by the IPsec filter driver such as the following:     Startup and shutdown of the IPsec services.     Network packets dropped due to integrity check failure.     Network packets dropped due to replay check failure.     Network packets dropped due to being in plaintext.     Network packets received with incorrect Security Parameter Index (SPI). This may indicate that either the network card is not working correctly or the driver needs to be updated.     Inability to process IPsec filters.  If you configure this policy setting, an audit event is generated on an IPsec filter driver operation. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated on an IPSec filter driver operation.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "System_AuditOtherSystemEvents": {
        "name": "System_AuditOtherSystemEvents",
        "description": "This policy setting allows you to audit any of the following events:     Startup and shutdown of the Windows Firewall service and driver.     Security policy processing by the Windows Firewall Service.     Cryptography key file and migration operations.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "System_AuditSecurityStateChange": {
        "name": "System_AuditSecurityStateChange",
        "description": "This policy setting allows you to audit events generated by changes in the security state of the computer such as the following events:     Startup and shutdown of the computer.     Change of system time.     Recovering the system from CrashOnAuditFail, which is logged after a system restarts when the security event log is full and the CrashOnAuditFail registry entry is configured.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "System_AuditSecuritySystemExtension": {
        "name": "System_AuditSecuritySystemExtension",
        "description": "This policy setting allows you to audit events related to security system extensions or services such as the following:     A security system extension, such as an authentication, notification, or security package is loaded and is registered with the Local Security Authority (LSA). It is used to authenticate logon attempts, submit logon requests, and any account or password changes. Examples of security system extensions are Kerberos and NTLM.     A service is installed and registered with the Service Control Manager. The audit log contains information about the service name, binary, type, start type, and service account. If you configure this policy setting, an audit event is generated when an attempt is made to load a security system extension. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when an attempt is made to load a security system extension.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      },
      "System_AuditSystemIntegrity": {
        "name": "System_AuditSystemIntegrity",
        "description": "This policy setting allows you to audit events that violate the integrity of the security subsystem, such as the following:     Events that could not be written to the event log because of a problem with the auditing system.     A process that uses a local procedure call (LPC) port that is not valid in an attempt to impersonate a client by replying, reading, or writing to or from a client address space.     The detection of a Remote Procedure Call (RPC) that compromises system integrity.     The detection of a hash value of an executable file that is not valid as determined by Code Integrity.     Cryptographic operations that compromise system integrity.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off/None"
            },
            "1": {
              "description": "Success"
            },
            "2": {
              "description": "Failure"
            },
            "3": {
              "description": "Success+Failure"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Authentication": {
    "name": "Authentication",
    "policies": {
      "AllowAadPasswordReset": {
        "name": "AllowAadPasswordReset",
        "description": "Specifies whether password reset is enabled for AAD accounts.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowFastReconnect": {
        "name": "AllowFastReconnect",
        "description": "Allows EAP Fast Reconnect from being attempted for EAP Method TLS. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowSecondaryAuthenticationDevice": {
        "name": "AllowSecondaryAuthenticationDevice",
        "description": "Allows secondary authentication devices to work with Windows. The default for this policy must be on for consumer devices (defined as local or Microsoft account connected device) and off for enterprise devices (such as cloud domain-joined, cloud domain-joined in an on-premises only environment, cloud domain-joined in a hybrid environment, and BYOD). In the next major release of Windows 10, the default for this policy for consumer devices will be changed to off. This will only affect users that have not already set up a secondary authentication device.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureWebSignInAllowedUrls": {
        "name": "ConfigureWebSignInAllowedUrls",
        "description": "Specifies a list of URLs that are navigable in Web Sign-in based authentication scenarios.",
        "format": "string",
        "scope": "device"
      },
      "ConfigureWebcamAccessDomainNames": {
        "name": "ConfigureWebcamAccessDomainNames",
        "description": "Specifies a list of domains that are allowed to access the webcam in Web Sign-in based authentication scenarios.",
        "format": "string",
        "scope": "device"
      },
      "EnableFastFirstSignIn": {
        "name": "EnableFastFirstSignIn",
        "description": "Specifies whether new non-admin AAD accounts should auto-connect to pre-created candidate local accounts",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The feature defaults to the existing SKU and device capabilities."
            },
            "1": {
              "description": "Enabled. Auto-connect new non-admin Azure AD accounts to pre-configured candidate local accounts"
            },
            "2": {
              "description": "Disabled. Do not auto-connect new non-admin Azure AD accounts to pre-configured local accounts"
            }
          }
        },
        "scope": "device"
      },
      "EnablePasswordlessExperience": {
        "name": "EnablePasswordlessExperience",
        "description": "Specifies whether connected users on AADJ devices receive a Passwordless experience on Windows",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The feature defaults to the existing edition and device capabilities."
            },
            "1": {
              "description": "Enabled. The Passwordless experience will be enabled on Windows"
            },
            "2": {
              "description": "Disabled. The Passwordless experience will not be enabled on Windows"
            }
          }
        },
        "scope": "device"
      },
      "EnableWebSignIn": {
        "name": "EnableWebSignIn",
        "description": "Specifies whether web-based sign-in is allowed for signing in to Windows",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The feature defaults to the existing SKU and device capabilities."
            },
            "1": {
              "description": "Enabled. Web Sign-in will be enabled for signing in to Windows"
            },
            "2": {
              "description": "Disabled. Web Sign-in will not be enabled for signing in to Windows"
            }
          }
        },
        "scope": "device"
      },
      "PreferredAadTenantDomainName": {
        "name": "PreferredAadTenantDomainName",
        "description": "Specifies the preferred domain among available domains in the AAD tenant.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Autoplay": {
    "name": "Autoplay",
    "policies": {
      "DisallowAutoplayForNonVolumeDevices": {
        "name": "DisallowAutoplayForNonVolumeDevices",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SetDefaultAutoRunBehavior": {
        "name": "SetDefaultAutoRunBehavior",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TurnOffAutoPlay": {
        "name": "TurnOffAutoPlay",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/BITS": {
    "name": "BITS",
    "policies": {
      "BandwidthThrottlingEndTime": {
        "name": "BandwidthThrottlingEndTime",
        "description": "This policy specifies the bandwidth throttling end time that Background Intelligent Transfer Service (BITS) uses for background transfers. This policy setting does not affect foreground transfers. This policy is based on the 24-hour clock. Value type is integer. Default value is 17 (5 PM). Supported value range: 0 - 23You can specify a limit to use during a specific time interval and at all other times. For example, limit the use of network bandwidth to 10 Kbps from 8:00 A. M. to 5:00 P. M. , and use all available unused bandwidth the rest of the day's hours. Using the three policies together (BandwidthThrottlingStartTime, BandwidthThrottlingEndTime, BandwidthThrottlingTransferRate), BITS will limit its bandwidth usage to the specified values. You can specify the limit in kilobits per second (Kbps). If you specify a value less than 2 kilobits, BITS will continue to use approximately 2 kilobits. To prevent BITS transfers from occurring, specify a limit of 0. If you disable or do not configure this policy setting, BITS uses all available unused bandwidth. Note: You should base the limit on the speed of the network link, not the computer's network interface card (NIC). This policy setting does not affect peer caching transfers between peer computers (it does affect transfers from the origin server); the Limit the maximum network bandwidth used for Peercaching policy setting should be used for that purpose. Consider using this setting to prevent BITS transfers from competing for network bandwidth when the client computer has a fast network card (10Mbs), but is connected to the network via a slow link (56Kbs).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 2
        },
        "scope": "device"
      },
      "BandwidthThrottlingStartTime": {
        "name": "BandwidthThrottlingStartTime",
        "description": "This policy specifies the bandwidth throttling start time that Background Intelligent Transfer Service (BITS) uses for background transfers. This policy setting does not affect foreground transfers. This policy is based on the 24-hour clock. Value type is integer. Default value is 8 (8 am). Supported value range: 0 - 23You can specify a limit to use during a specific time interval and at all other times. For example, limit the use of network bandwidth to 10 Kbps from 8:00 A. M. to 5:00 P. M. , and use all available unused bandwidth the rest of the day's hours. Using the three policies together (BandwidthThrottlingStartTime, BandwidthThrottlingEndTime, BandwidthThrottlingTransferRate), BITS will limit its bandwidth usage to the specified values. You can specify the limit in kilobits per second (Kbps). If you specify a value less than 2 kilobits, BITS will continue to use approximately 2 kilobits. To prevent BITS transfers from occurring, specify a limit of 0. If you disable or do not configure this policy setting, BITS uses all available unused bandwidth. Note: You should base the limit on the speed of the network link, not the computer's network interface card (NIC). This policy setting does not affect peer caching transfers between peer computers (it does affect transfers from the origin server); the Limit the maximum network bandwidth used for Peercaching policy setting should be used for that purpose. Consider using this setting to prevent BITS transfers from competing for network bandwidth when the client computer has a fast network card (10Mbs), but is connected to the network via a slow link (56Kbs).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 2
        },
        "scope": "device"
      },
      "BandwidthThrottlingTransferRate": {
        "name": "BandwidthThrottlingTransferRate",
        "description": "This policy specifies the bandwidth throttling transfer rate in kilobits per second (Kbps) that Background Intelligent Transfer Service (BITS) uses for background transfers. This policy setting does not affect foreground transfers. Value type is integer. Default value is 1000. Supported value range: 0 - 4294967200. You can specify a limit to use during a specific time interval and at all other times. For example, limit the use of network bandwidth to 10 Kbps from 8:00 A. M. to 5:00 P. M. , and use all available unused bandwidth the rest of the day's hours. Using the three policies together (BandwidthThrottlingStartTime, BandwidthThrottlingEndTime, BandwidthThrottlingTransferRate), BITS will limit its bandwidth usage to the specified values. You can specify the limit in kilobits per second (Kbps). If you specify a value less than 2 kilobits, BITS will continue to use approximately 2 kilobits. To prevent BITS transfers from occurring, specify a limit of 0. If you disable or do not configure this policy setting, BITS uses all available unused bandwidth. Note: You should base the limit on the speed of the network link, not the computer's network interface card (NIC). This policy setting does not affect peer caching transfers between peer computers (it does affect transfers from the origin server); the Limit the maximum network bandwidth used for Peercaching policy setting should be used for that purpose. Consider using this setting to prevent BITS transfers from competing for network bandwidth when the client computer has a fast network card (10Mbs), but is connected to the network via a slow link (56Kbs).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496720
        },
        "scope": "device"
      },
      "CostedNetworkBehaviorBackgroundPriority": {
        "name": "CostedNetworkBehaviorBackgroundPriority",
        "description": "This policy setting defines the default behavior that the Background Intelligent Transfer Service (BITS) uses for background transfers when the system is connected to a costed network (3G, etc. ). Download behavior policies further limit the network usage of background transfers. If you enable this policy setting, you can define a default download policy for each BITS job priority. This setting does not override a download policy explicitly configured by the application that created the BITS job, but does apply to jobs that are created by specifying only a priority. For example, you can specify that background jobs are by default to transfer only when on uncosted network connections, but foreground jobs should proceed only when not roaming. The values that can be assigned are:1 -  Always transfer2 -  Transfer unless roaming3 -  Transfer unless surcharge applies (when not roaming or overcap)4 -  Transfer unless nearing limit (when not roaming or nearing cap)5 -  Transfer only if unconstrained",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "1": {
              "description": "Always transfer"
            },
            "2": {
              "description": "Transfer unless roaming"
            },
            "3": {
              "description": "Transfer unless surcharge applies (when not roaming or over cap)"
            },
            "4": {
              "description": "Transfer unless nearing limit (when not roaming or nearing cap)"
            },
            "5": {
              "description": "Transfer only if unconstrained"
            }
          }
        },
        "scope": "device"
      },
      "CostedNetworkBehaviorForegroundPriority": {
        "name": "CostedNetworkBehaviorForegroundPriority",
        "description": "This policy setting defines the default behavior that the foreground Intelligent Transfer Service (BITS) uses for foreground transfers when the system is connected to a costed network (3G, etc. ). Download behavior policies further limit the network usage of foreground transfers. If you enable this policy setting, you can define a default download policy for each BITS job priority. This setting does not override a download policy explicitly configured by the application that created the BITS job, but does apply to jobs that are created by specifying only a priority. For example, you can specify that foreground jobs are by default to transfer only when on uncosted network connections, but foreground jobs should proceed only when not roaming. The values that can be assigned are:1 -  Always transfer2 -  Transfer unless roaming3 -  Transfer unless surcharge applies (when not roaming or overcap)4 -  Transfer unless nearing limit (when not roaming or nearing cap)5 -  Transfer only if unconstrained",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "1": {
              "description": "Always transfer"
            },
            "2": {
              "description": "Transfer unless roaming"
            },
            "3": {
              "description": "Transfer unless surcharge applies (when not roaming or over cap)"
            },
            "4": {
              "description": "Transfer unless nearing limit (when not roaming or nearing cap)"
            },
            "5": {
              "description": "Transfer only if unconstrained"
            }
          }
        },
        "scope": "device"
      },
      "JobInactivityTimeout": {
        "name": "JobInactivityTimeout",
        "description": "This policy setting specifies the number of days a pending BITS job can remain inactive before the job is considered abandoned. By default BITS will wait 90 days before considering an inactive job abandoned. After a job is determined to be abandoned, the job is deleted from BITS and any downloaded files for the job are deleted from the disk. NoteAny property changes to the job or any successful download action will reset this timeout. Value type is integer. Default is 90 days. Supported values range: 0 - 999Consider increasing the timeout value if computers tend to stay offline for a long period of time and still have pending jobs. Consider decreasing this value if you are concerned about orphaned jobs occupying disk space. If you disable or do not configure this policy setting, the default value of 90 (days) will be used for the inactive job timeout.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 99
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Bitlocker": {
    "name": "Bitlocker",
    "policies": {
      "EncryptionMethod": {
        "name": "EncryptionMethod",
        "description": "This policy specifies the BitLocker Drive Encryption method and cipher strength.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Bluetooth": {
    "name": "Bluetooth",
    "policies": {
      "AllowAdvertising": {
        "name": "AllowAdvertising",
        "description": "Specifies whether the device can send out Bluetooth advertisements. If this is not set or it is deleted, the default value of 1 (Allow) is used. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. When set to 0, the device will not send out advertisements. To verify, use any Bluetooth LE app and enable it to do advertising. Then, verify that the advertisement is not received by the peripheral."
            },
            "1": {
              "description": "Allowed. When set to 1, the device will send out advertisements. To verify, use any Bluetooth LE app and enable it to do advertising. Then, verify that the advertisement is received by the peripheral."
            }
          }
        },
        "scope": "device"
      },
      "AllowDiscoverableMode": {
        "name": "AllowDiscoverableMode",
        "description": "Specifies whether other Bluetooth-enabled devices can discover the device. If this is not set or it is deleted, the default value of 1 (Allow) is used. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. When set to 0, other devices will not be able to detect the device. To verify, open the Bluetooth control panel on the device. Then, go to another Bluetooth-enabled device, open the Bluetooth control panel, and verify that you cannot see the name of the device."
            },
            "1": {
              "description": "Allowed. When set to 1, other devices will be able to detect the device. To verify, open the Bluetooth control panel on the device. Then, go to another Bluetooth-enabled device, open the Bluetooth control panel and verify that you can discover it."
            }
          }
        },
        "scope": "device"
      },
      "AllowPrepairing": {
        "name": "AllowPrepairing",
        "description": "Specifies whether to allow specific bundled Bluetooth peripherals to automatically pair with the host device.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowPromptedProximalConnections": {
        "name": "AllowPromptedProximalConnections",
        "description": "This policy allows the IT admin to block users on these managed devices from using Swift Pair and other proximity based scenarios.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disallow. Block users on these managed devices from using Swift Pair and other proximity based scenarios"
            },
            "1": {
              "description": "Allow. Allow users on these managed devices to use Swift Pair and other proximity based scenarios"
            }
          }
        },
        "scope": "device"
      },
      "LocalDeviceName": {
        "name": "LocalDeviceName",
        "description": "Sets the local Bluetooth device name. If this is set, the value that it is set to will be used as the Bluetooth device name. To verify the policy is set, open the Bluetooth control panel on the device. Then, go to another Bluetooth-enabled device, open the Bluetooth control panel, and verify that the value that was specified. If this policy is not set or it is deleted, the default local radio name is used.",
        "format": "string",
        "scope": "device"
      },
      "ServicesAllowedList": {
        "name": "ServicesAllowedList",
        "description": "Set a list of allowable services and profiles. String hex formatted array of Bluetooth service UUIDs in canonical format, delimited by semicolons. For example, {782AFCFC-7CAA-436C-8BF0-78CD0FFBD4AF}. The default value is an empty string. For more information, see ServicesAllowedList usage guide",
        "format": "string",
        "scope": "device"
      },
      "SetMinimumEncryptionKeySize": {
        "name": "SetMinimumEncryptionKeySize",
        "description": "There are multiple levels of encryption strength when pairing Bluetooth devices. This policy helps prevent weaker devices cryptographically being used in high security environments.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 1
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Browser": {
    "name": "Browser",
    "policies": {
      "AllowAddressBarDropdown": {
        "name": "AllowAddressBarDropdown",
        "description": "This policy setting lets you decide whether the Address bar drop-down functionality is available in Microsoft Edge. We recommend disabling this setting if you want to minimize network connections from Microsoft Edge to Microsoft services.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/not allowed. Hide the Address bar drop-down functionality and disable the Show search and site suggestions as I type toggle in Settings."
            },
            "1": {
              "description": "Allowed. Show the Address bar drop-down list and make it available."
            }
          }
        },
        "scope": "device"
      },
      "AllowAutofill": {
        "name": "AllowAutofill",
        "description": "This setting lets you decide whether employees can use Autofill to automatically fill in form fields while using Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowBrowser": {
        "name": "AllowBrowser",
        "description": "This policy is deprecated",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowConfigurationUpdateForBooksLibrary": {
        "name": "AllowConfigurationUpdateForBooksLibrary",
        "description": "This policy setting lets you decide whether Microsoft Edge can automatically update the configuration data for the Books Library.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed. Microsoft Edge updates the configuration data for the Books Library automatically."
            }
          }
        },
        "scope": "device"
      },
      "AllowCookies": {
        "name": "AllowCookies",
        "description": "This setting lets you configure how your company deals with cookies.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Block all cookies from all sites"
            },
            "1": {
              "description": "Block only cookies from third party websites"
            },
            "2": {
              "description": "Allow all cookies from all sites"
            }
          }
        },
        "scope": "device"
      },
      "AllowDeveloperTools": {
        "name": "AllowDeveloperTools",
        "description": "This setting lets you decide whether employees can use F12 Developer Tools on Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowDoNotTrack": {
        "name": "AllowDoNotTrack",
        "description": "This setting lets you decide whether employees can send Do Not Track headers to websites that request tracking info.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Never send tracking information."
            },
            "1": {
              "description": "Send tracking information."
            }
          }
        },
        "scope": "device"
      },
      "AllowExtensions": {
        "name": "AllowExtensions",
        "description": "This setting lets you decide whether employees can load extensions in Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowFlash": {
        "name": "AllowFlash",
        "description": "This setting lets you decide whether employees can run Adobe Flash in Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowFlashClickToRun": {
        "name": "AllowFlashClickToRun",
        "description": "Configure the Adobe Flash Click-to-Run setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Load and run Adobe Flash content automatically."
            },
            "1": {
              "description": "Does not load or run Adobe Flash content automatically. Requires action from the user."
            }
          }
        },
        "scope": "device"
      },
      "AllowFullScreenMode": {
        "name": "AllowFullScreenMode",
        "description": "With this policy, you can specify whether to allow full-screen mode, which shows only the web content and hides the Microsoft Edge UI.  If enabled or not configured, full-screen mode is available for use in Microsoft Edge. Your users and extensions must have the proper permissions.  If disabled, full-screen mode is unavailable for use in Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowInPrivate": {
        "name": "AllowInPrivate",
        "description": "This setting lets you decide whether employees can browse using InPrivate website browsing.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowMicrosoftCompatibilityList": {
        "name": "AllowMicrosoftCompatibilityList",
        "description": "This policy setting lets you decide whether the Microsoft Compatibility List is enabled or disabled in Microsoft Edge. This feature uses a Microsoft-provided list to ensure that any sites with known compatibility issues are displayed correctly when a user navigates to them. By default, the Microsoft Compatibility List is enabled and can be viewed by navigating to about:compat.  If you enable or don’t configure this setting, Microsoft Edge will periodically download the latest version of the list from Microsoft and will apply the configurations specified there during browser navigation. If a user visits a site on the Microsoft Compatibility List, he or she will be prompted to open the site in Internet Explorer 11. Once in Internet Explorer, the site will automatically be rendered as if the user is viewing it in the previous version of Internet Explorer it requires to display correctly.  If you disable this setting, the Microsoft Compatibility List will not be used during browser navigation.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowPasswordManager": {
        "name": "AllowPasswordManager",
        "description": "This setting lets you decide whether employees can save their passwords locally, using Password Manager.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowPopups": {
        "name": "AllowPopups",
        "description": "This setting lets you decide whether to turn on Pop-up Blocker and whether to allow pop-ups to appear in secondary windows.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Turn off Pop-up Blocker letting pop-up windows open."
            },
            "1": {
              "description": "Turn on Pop-up Blocker stopping pop-up windows from opening."
            }
          }
        },
        "scope": "device"
      },
      "AllowPrelaunch": {
        "name": "AllowPrelaunch",
        "description": "Allow Microsoft Edge to pre-launch at Windows startup, when the system is idle, and each time Microsoft Edge is closed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowPrinting": {
        "name": "AllowPrinting",
        "description": "With this policy, you can restrict whether printing web content in Microsoft Edge is allowed.  If enabled, printing is allowed.  If disabled, printing is not allowed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowSavingHistory": {
        "name": "AllowSavingHistory",
        "description": "Microsoft Edge saves your user's browsing history, which is made up of info about the websites they visit, on their devices.  If enabled or not configured, the browsing history is saved and visible in the History pane.  If disabled, the browsing history stops saving and is not visible in the History pane. If browsing history exists before this policy was disabled, the previous browsing history remains visible in the History pane. This policy, when disabled, does not stop roaming of existing history or history coming from other roamed devices.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowSearchEngineCustomization": {
        "name": "AllowSearchEngineCustomization",
        "description": "Allow search engine customization for MDM enrolled devices. Users can change their default search engine.  If this setting is turned on or not configured, users can add new search engines and change the default used in the address bar from within Microsoft Edge Settings. If this setting is disabled, users will be unable to add search engines or change the default used in the address bar.  This policy will only apply on domain joined machines or when the device is MDM enrolled. For more information, see Microsoft browser extension policy (aka.ms/browserpolicy).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowSearchSuggestionsinAddressBar": {
        "name": "AllowSearchSuggestionsinAddressBar",
        "description": "This setting lets you decide whether search suggestions should appear in the Address bar of Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed. Hide the search suggestions."
            },
            "1": {
              "description": "Allowed. Show the search suggestions."
            }
          }
        },
        "scope": "device"
      },
      "AllowSideloadingOfExtensions": {
        "name": "AllowSideloadingOfExtensions",
        "description": "This setting lets you decide whether employees can sideload extensions in Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed. Disabling does not prevent sideloading of extensions using Add-AppxPackage via Powershell. To prevent this, set the ApplicationManagement/AllowDeveloperUnlock policy to 1 (enabled)."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowSmartScreen": {
        "name": "AllowSmartScreen",
        "description": "This setting lets you decide whether to turn on Windows Defender SmartScreen.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Turned off. Do not protect users from potential threats and prevent users from turning it on."
            },
            "1": {
              "description": "Turned on. Protect users from potential threats and prevent users from turning it off."
            }
          }
        },
        "scope": "device"
      },
      "AllowTabPreloading": {
        "name": "AllowTabPreloading",
        "description": "Prevent Microsoft Edge from starting and loading the Start and New Tab page at Windows startup and each time Microsoft Edge is closed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed. Preload Start and New tab pages."
            }
          }
        },
        "scope": "device"
      },
      "AllowWebContentOnNewTabPage": {
        "name": "AllowWebContentOnNewTabPage",
        "description": "This policy setting lets you configure what appears when Microsoft Edge opens a new tab. By default, Microsoft Edge opens the New Tab page.  If you enable this setting, Microsoft Edge opens a new tab with the New Tab page.  If you disable this setting, Microsoft Edge opens a new tab with a blank page. If you use this setting, employees can't change it.  If you don't configure this setting, employees can choose how new tabs appears.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Load a blank page instead of the default New tab page and prevent users from changing it."
            },
            "1": {
              "description": "Load the default New tab page."
            }
          }
        },
        "scope": "device"
      },
      "AlwaysEnableBooksLibrary": {
        "name": "AlwaysEnableBooksLibrary",
        "description": "Specifies whether the Books Library in Microsoft Edge will always be visible regardless of the country or region setting for the device.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Show the Books Library only in countries or regions where supported."
            },
            "1": {
              "description": "Show the Books Library, regardless of the device's country or region."
            }
          }
        },
        "scope": "device"
      },
      "ClearBrowsingDataOnExit": {
        "name": "ClearBrowsingDataOnExit",
        "description": "Specifies whether to always clear browsing history on exiting Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/not allowed. Users can configure the 'Clear browsing data' option in Settings."
            },
            "1": {
              "description": "Allowed. Clear the browsing data upon exit automatically."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureAdditionalSearchEngines": {
        "name": "ConfigureAdditionalSearchEngines",
        "description": "Allows you to add up to 5 additional search engines for MDM-enrolled devices.  If this setting is turned on, you can add up to 5 additional search engines for your employee. For each additional search engine you wish to add, you must specify a link to the OpenSearch XML file that contains, at minimum, the short name and the URL to the search engine. This policy does not affect the default search engine. Employees will not be able to remove these search engines, but they can set any one of these as the default.  If this setting is not configured, the search engines are the ones specified in the App settings. If this setting is disabled, the search engines you had added will be deleted from your employee's machine.  Due to Protected Settings (aka.ms/browserpolicy), this policy will only apply on domain-joined machines or when the device is MDM-enrolled.",
        "format": "string",
        "scope": "device"
      },
      "ConfigureFavoritesBar": {
        "name": "ConfigureFavoritesBar",
        "description": "The favorites bar shows your user's links to sites they have added to it. With this policy, you can specify whether to set the favorites bar to always be visible or hidden on any page.  If enabled, favorites bar is always visible on any page, and the favorites bar toggle in Settings sets to On, but disabled preventing your users from making changes. An error message also shows at the top of the Settings pane indicating that your organization manages some settings. The show bar/hide bar option is hidden from the context menu.  If disabled, the favorites bar is hidden, and the favorites bar toggle resets to Off, but disabled preventing your users from making changes. An error message also shows at the top of the Settings pane indicating that your organization manages some settings.  If not configured, the favorites bar is hidden but is visible on the Start and New Tab pages, and the favorites bar toggle in Settings sets to Off but is enabled allowing the user to make changes.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Hide the favorites bar on all pages. Also, the favorites bar toggle, in Settings, is set to Off and disabled preventing users from making changes. Microsoft Edge also hides the “show bar/hide bar” option in the context menu."
            },
            "1": {
              "description": "Show the favorites bar on all pages. Also, the favorites bar toggle, in Settings, is set to On and disabled preventing users from making changes. Microsoft Edge also hides the “show bar/hide bar” option in the context menu."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureHomeButton": {
        "name": "ConfigureHomeButton",
        "description": "The Home button loads either the default Start page, the New tab page, or a URL defined in the Set Home Button URL policy.  By default, this policy is disabled or not configured and clicking the home button loads the default Start page.  When enabled, the home button is locked down preventing your users from making changes in Microsoft Edge's UI settings. To let your users change the Microsoft Edge UI settings, enable the Unlock Home Button policy.  If Enabled AND: - Show home button & set to Start page is selected, clicking the home button loads the Start page. - Show home button & set to New tab page is selected, clicking the home button loads a New tab page. - Show home button & set a specific page is selected, clicking the home button loads the URL specified in the Set Home Button URL policy. - Hide home button is selected, the home button is hidden in Microsoft Edge.  Default setting: Disabled or not configured Related policies: - Set Home Button URL - Unlock Home Button",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Show home button and load the Start page"
            },
            "1": {
              "description": "Show home button and load the New tab page"
            },
            "2": {
              "description": "Show home button and load the custom URL defined in the Set Home Button URL policy"
            },
            "3": {
              "description": "Hide home button"
            }
          }
        },
        "scope": "device"
      },
      "ConfigureKioskMode": {
        "name": "ConfigureKioskMode",
        "description": "Configure how Microsoft Edge behaves when it’s running in kiosk mode with assigned access, either as a single app or as one of multiple apps running on the kiosk device. You can control whether Microsoft Edge runs InPrivate full screen, InPrivate multi-tab with limited functionality, or normal Microsoft Edge.  You need to configure Microsoft Edge in assigned access for this policy to take effect; otherwise, these settings are ignored. To learn more about assigned access and kiosk configuration, see “Configure kiosk and shared devices running Windows desktop editions” (https://aka.ms/E489vw).  If enabled and set to 0 (Default or not configured): - If it’s a single app, it runs InPrivate full screen for digital signage or interactive displays. - If it’s one of many apps, Microsoft Edge runs as normal. If enabled and set to 1: - If it’s a single app, it runs a limited multi-tab version of InPrivate and is the only app available for public browsing. Users can’t minimize, close, or open windows or customize Microsoft Edge, but can clear browsing data and downloads and restart by clicking “End session.” You can configure Microsoft Edge to restart after a period of inactivity by using the “Configure kiosk reset after idle timeout” policy. - If it’s one of many apps, it runs in a limited multi-tab version of InPrivate for public browsing with other apps. Users can minimize, close, and open multiple InPrivate windows, but they can’t customize Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "ConfigureKioskResetAfterIdleTimeout": {
        "name": "ConfigureKioskResetAfterIdleTimeout",
        "description": "You can configure Microsoft Edge to reset to the configured start experience after a specified amount of idle time. The reset timer begins after the last user interaction. Resetting to the configured start experience deletes the current user’s browsing data.  If enabled, you can set the idle time in minutes (0-1440). You must set the Configure kiosk mode policy to 1 and configure Microsoft Edge in assigned access as a single app for this policy to work. Once the idle time meets the time specified, a confirmation message prompts the user to continue, and if no user action, Microsoft Edge resets after 30 seconds.  If you set this policy to 0, Microsoft Edge does not use an idle timer.  If disabled or not configured, the default value is 5 minutes.  If you do not configure Microsoft Edge in assigned access, then this policy does not take effect.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 144
        },
        "scope": "device"
      },
      "ConfigureOpenMicrosoftEdgeWith": {
        "name": "ConfigureOpenMicrosoftEdgeWith",
        "description": "You can configure Microsoft Edge to lock down the Start page, preventing users from changing or customizing it.  If enabled, you can choose one of the following options: - Start page: the Start page loads ignoring the Configure Start Pages policy. - New tab page: the New tab page loads ignoring the Configure Start Pages policy. - Previous pages: all tabs the user had open when Microsoft Edge last closed loads ignoring the Configure Start Pages policy. - A specific page or pages: the URL(s) specified with Configure Start Pages policy load(s). If selected, you must specify at least one URL in Configure Start Pages; otherwise, this policy is ignored.  When enabled, and you want to make changes, you must first set the Disable Lockdown of Start Pages to not configured, make the changes to the Configure Open Edge With policy, and then enable the Disable Lockdown of Start Pages policy.  If disabled or not configured, and you enable the Disable Lockdown of Start Pages policy, your users can change or customize the Start page.  Default setting: A specific page or pages (default) Related policies: -Disable Lockdown of Start Pages -Configure Start Pages",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Load the Start page"
            },
            "1": {
              "description": "Load the New tab page"
            },
            "2": {
              "description": "Load the previous pages"
            },
            "3": {
              "description": "Load a specific page or pages"
            }
          }
        },
        "scope": "device"
      },
      "ConfigureTelemetryForMicrosoft365Analytics": {
        "name": "ConfigureTelemetryForMicrosoft365Analytics",
        "description": "Configures what browsing data will be sent to Microsoft 365 Analytics for devices belonging to an organization.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "No data collected or sent"
            },
            "1": {
              "description": "Send intranet history only"
            },
            "2": {
              "description": "Send Internet history only"
            },
            "3": {
              "description": "Send both intranet and Internet history"
            }
          }
        },
        "scope": "device"
      },
      "DisableLockdownOfStartPages": {
        "name": "DisableLockdownOfStartPages",
        "description": "You can configure Microsoft Edge to disable the lockdown of Start pages allowing users to change or customize their start pages.  To do this, you must also enable the Configure Start Pages or Configure Open Microsoft With policy. When enabled, all configured start pages are editable. Any Start page configured using the Configure Start pages policy is not locked down allowing users to edit their Start pages.  If disabled or not configured, the Start pages configured in the Configure Start Pages policy cannot be changed and remain locked down.  Supported devices: Domain-joined or MDM-enrolled Related policy: - Configure Start Pages - Configure Open Microsoft Edge With",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Lock down Start pages configured in either the ConfigureOpenEdgeWith policy and HomePages policy."
            },
            "1": {
              "description": "Unlocked. Users can make changes to all configured start pages."
            }
          }
        },
        "scope": "device"
      },
      "EnableExtendedBooksTelemetry": {
        "name": "EnableExtendedBooksTelemetry",
        "description": "This setting allows organizations to send extended telemetry on book usage from the Books Library.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Gather and send only basic diagnostic data, depending on the device configuration."
            },
            "1": {
              "description": "Gather all diagnostic data."
            }
          }
        },
        "scope": "device"
      },
      "EnterpriseModeSiteList": {
        "name": "EnterpriseModeSiteList",
        "description": "This setting lets you configure whether your company uses Enterprise Mode and the Enterprise Mode Site List to address common compatibility problems with legacy websites.",
        "format": "string",
        "scope": "device"
      },
      "EnterpriseSiteListServiceUrl": {
        "name": "EnterpriseSiteListServiceUrl",
        "description": "Important. Discontinued in Windows 10, version 1511. Use the Browser/EnterpriseModeSiteList policy instead.",
        "format": "string",
        "scope": "device"
      },
      "FirstRunURL": {
        "name": "FirstRunURL",
        "description": "Configure first run URL.",
        "format": "string",
        "scope": "device"
      },
      "HomePages": {
        "name": "HomePages",
        "description": "When you enable the Configure Open Microsoft Edge With policy, you can configure one or more Start pages. When you enable this policy, users are not allowed to make changes to their Start pages.  If enabled, you must include URLs to the pages, separating multiple pages using angle brackets in the following format:        <support.contoso.com><support.microsoft.com>  If disabled or not configured, the webpages specified in App settings loads as the default Start pages.  Version 1703 or later: If you do not want to send traffic to Microsoft, enable this policy and use the <about:blank> value, which honors domain- and non-domain-joined devices, when it is the only configured URL.  Version 1809: If enabled, and you select either Start page, New Tab page, or previous page in the Configure Open Microsoft Edge With policy, Microsoft Edge ignores the Configure Start Pages policy. If not configured or you set the Configure Open Microsoft Edge With policy to a specific page or pages, Microsoft Edge uses the Configure Start Pages policy.  Supported devices: Domain-joined or MDM-enrolled Related policy: - Configure Open Microsoft Edge With - Disable Lockdown of Start Pages",
        "format": "string",
        "scope": "device"
      },
      "LockdownFavorites": {
        "name": "LockdownFavorites",
        "description": "This policy setting lets you decide whether employees can add, import, sort, or edit the Favorites list on Microsoft Edge.  If you enable this setting, employees won't be able to add, import, or change anything in the Favorites list. Also as part of this, Save a Favorite, Import settings, and the context menu items (such as, Create a new folder) are all turned off.  Important Don't enable both this setting and the Keep favorites in sync between Internet Explorer and Microsoft Edge setting. Enabling both settings stops employees from syncing their favorites between Internet Explorer and Microsoft Edge.  If you disable or don't configure this setting (default), employees can add, import and make changes to the Favorites list.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed/not locked down. Users can add, import, and make changes to the favorites."
            },
            "1": {
              "description": "Prevented/locked down."
            }
          }
        },
        "scope": "device"
      },
      "PreventAccessToAboutFlagsInMicrosoftEdge": {
        "name": "PreventAccessToAboutFlagsInMicrosoftEdge",
        "description": "Prevent access to the about:flags page in Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed."
            },
            "1": {
              "description": "Prevents users from accessing the about:flags page."
            }
          }
        },
        "scope": "device"
      },
      "PreventCertErrorOverrides": {
        "name": "PreventCertErrorOverrides",
        "description": "Web security certificates are used to ensure a site your users go to is legitimate, and in some circumstances encrypts the data. With this policy, you can specify whether to prevent users from bypassing the security warning to sites that have SSL errors.  If enabled, overriding certificate errors are not allowed.  If disabled or not configured, overriding certificate errors are allowed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed/turned on. Override the security warning to sites that have SSL errors."
            },
            "1": {
              "description": "Prevented/turned on."
            }
          }
        },
        "scope": "device"
      },
      "PreventFirstRunPage": {
        "name": "PreventFirstRunPage",
        "description": "Specifies whether the First Run webpage is prevented from automatically opening on the first launch of Microsoft Edge. This policy is only available for Windows 10 version 1703 or later for desktop.  Due to Protected Settings (aka.ms/browserpolicy), this policy will only apply on domain-joined machines or when the device is MDM-enrolled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed. Load the First Run webpage."
            },
            "1": {
              "description": "Prevented/Not allowed."
            }
          }
        },
        "scope": "device"
      },
      "PreventLiveTileDataCollection": {
        "name": "PreventLiveTileDataCollection",
        "description": "This policy lets you decide whether Microsoft Edge can gather Live Tile metadata from the ieonline.microsoft.com service to provide a better experience while pinning a Live Tile to the Start menu.  Due to Protected Settings (aka.ms/browserpolicy), this policy will only apply on domain-joined machines or when the device is MDM-enrolled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Collect and send Live Tile metadata."
            },
            "1": {
              "description": "No data collected."
            }
          }
        },
        "scope": "device"
      },
      "PreventSmartScreenPromptOverride": {
        "name": "PreventSmartScreenPromptOverride",
        "description": "Don't allow Windows Defender SmartScreen warning overrides",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed/turned off. Users can ignore the warning and continue to the site."
            },
            "1": {
              "description": "Prevented/turned on."
            }
          }
        },
        "scope": "device"
      },
      "PreventSmartScreenPromptOverrideForFiles": {
        "name": "PreventSmartScreenPromptOverrideForFiles",
        "description": "Don't allow Windows Defender SmartScreen warning overrides for unverified files.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed/turned off. Users can ignore the warning and continue to download the unverified file(s)."
            },
            "1": {
              "description": "Prevented/turned on."
            }
          }
        },
        "scope": "device"
      },
      "PreventTurningOffRequiredExtensions": {
        "name": "PreventTurningOffRequiredExtensions",
        "description": "You can define a list of extensions in Microsoft Edge that users cannot turn off. You must deploy extensions through any available enterprise deployment channel, such as Microsoft Intune. When you enable this policy, users cannot uninstall extensions from their computer, but they can configure options for extensions defined in this policy, such as allow for InPrivate browsing. Any additional permissions requested by future updates of the extension gets granted automatically.  When you enable this policy, you must provide a semi-colon delimited list of extension package family names (PFNs).  For example, adding Microsoft.OneNoteWebClipper_8wekyb3d8bbwe;Microsoft.OfficeOnline_8wekyb3d8bbwe  prevents a user from turning off the OneNote Web Clipper and Office Online extension.  When enabled, removing extensions from the list does not uninstall the extension from the user’s computer automatically. To uninstall the extension, use any available enterprise deployment channel.  If you enable the Allow Developer Tools policy, then this policy does not prevent users from debugging and altering the logic on an extension.  If disabled or not configured, extensions defined as part of this policy get ignored.  Default setting:  Disabled or not configured Related policies: Allow Developer Tools Related Documents: - Find a package family name (PFN) for per-app VPN (https://docs.microsoft.com/en-us/sccm/protect/deploy-use/find-a-pfn-for-per-app-vpn) - How to manage apps you purchased from the Microsoft Store for Business with Microsoft Intune (https://docs.microsoft.com/en-us/intune/windows-store-for-business) - How to assign apps to groups with Microsoft Intune (https://docs.microsoft.com/en-us/intune/apps-deploy) - Manage apps from the Microsoft Store for Business with System Center Configuration Manager  (https://docs.microsoft.com/en-us/sccm/apps/deploy-use/manage-apps-from-the-windows-store-for-business) - How to add Windows line-of-business (LOB) apps to Microsoft Intune (https://docs.microsoft.com/en-us/intune/lob-apps-windows)",
        "format": "string",
        "scope": "device"
      },
      "PreventUsingLocalHostIPAddressForWebRTC": {
        "name": "PreventUsingLocalHostIPAddressForWebRTC",
        "description": "Prevent using localhost IP address for WebRTC",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed. Show localhost IP addresses."
            },
            "1": {
              "description": "Prevented/Not allowed."
            }
          }
        },
        "scope": "device"
      },
      "ProvisionFavorites": {
        "name": "ProvisionFavorites",
        "description": "This policy setting allows you to configure a default set of favorites, which will appear for employees. Employees cannot modify, sort, move, export or delete these provisioned favorites.  If you enable this setting, you can set favorite URL's and favorite folders to appear on top of users' favorites list (either in the Hub or Favorites Bar). The user favorites will appear after these provisioned favorites.  Important Don't enable both this setting and the Keep favorites in sync between Internet Explorer and Microsoft Edge setting. Enabling both settings stops employees from syncing their favorites between Internet Explorer and Microsoft Edge.  If you disable or don't configure this setting, employees will see the favorites they set in the Hub and Favorites Bar.",
        "format": "string",
        "scope": "device"
      },
      "SendIntranetTraffictoInternetExplorer": {
        "name": "SendIntranetTraffictoInternetExplorer",
        "description": "Sends all intranet traffic over to Internet Explorer.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "All sites, including intranet sites, open in Microsoft Edge automatically."
            },
            "1": {
              "description": "Only intranet sites open in Internet Explorer 11 automatically."
            }
          }
        },
        "scope": "device"
      },
      "SetDefaultSearchEngine": {
        "name": "SetDefaultSearchEngine",
        "description": "Sets the default search engine for MDM-enrolled devices. Users can still change their default search engine.  If this setting is turned on, you are setting the default search engine that you would like your employees to use. Employees can still change the default search engine, unless you apply the AllowSearchEngineCustomization policy which will disable the ability to change it. You must specify a link to the OpenSearch XML file that contains, at minimum, the short name and the URL to the search engine. If you would like for your employees to use the Edge factory settings for the default search engine for their market, set the string EDGEDEFAULT; if you would like for your employees to use Bing as the default search engine, set the string EDGEBING.  If this setting is not configured, the default search engine is set to the one specified in App settings and can be changed by your employees.  If this setting is disabled, the policy-set search engine will be removed, and, if it is the current default, the default will be set back to the factory Microsoft Edge search engine for the market.  Due to Protected Settings (aka.ms/browserpolicy), this policy will only apply on domain-joined machines or when the device is MDM-enrolled.",
        "format": "string",
        "scope": "device"
      },
      "SetHomeButtonURL": {
        "name": "SetHomeButtonURL",
        "description": "The home button can be configured to load a custom URL when your user clicks the home button.  If enabled, or configured, and the Configure Home Button policy is enabled, and the Show home button & set a specific page is selected, a custom URL loads when your user clicks the home button.  Default setting: Blank or not configured Related policy: Configure Home Button",
        "format": "string",
        "scope": "device"
      },
      "SetNewTabPageURL": {
        "name": "SetNewTabPageURL",
        "description": "You can set the default New Tab page URL in Microsoft Edge.  Enabling this policy prevents your users from changing the New tab page setting. When enabled and the Allow web content on New Tab page policy is disabled, Microsoft Edge ignores the URL specified in this policy and opens about:blank.  If enabled, you can set the default New Tab page URL.  If disabled or not configured, the default Microsoft Edge new tab page is used.  Default setting:  Disabled or not configured Related policy: Allow web content on New Tab page",
        "format": "string",
        "scope": "device"
      },
      "ShowMessageWhenOpeningSitesInInternetExplorer": {
        "name": "ShowMessageWhenOpeningSitesInInternetExplorer",
        "description": "You can configure Microsoft Edge to open a site automatically in Internet Explorer 11 and choose to display a notification before the site opens. If you want to display a notification, you must enable Configure the Enterprise Mode Site List or Send all intranets sites to Internet Explorer 11 or both.  If enabled, the notification appears on a new page. If you want users to continue in Microsoft Edge, select the Show Keep going in Microsoft Edge option from the drop-down list under Options.  If disabled or not configured, the default app behavior occurs and no additional page displays.  Default setting: Disabled or not configured Related policies: -Configure the Enterprise Mode Site List -Send all intranet sites to Internet Explorer 11",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "No additional message displays."
            },
            "1": {
              "description": "Show an additional message stating that a site has opened in IE11."
            },
            "2": {
              "description": "Show an additional message with a \"Keep going in Microsoft Edge\" link."
            }
          }
        },
        "scope": "device"
      },
      "SyncFavoritesBetweenIEAndMicrosoftEdge": {
        "name": "SyncFavoritesBetweenIEAndMicrosoftEdge",
        "description": "Specifies whether favorites are kept in sync between Internet Explorer and Microsoft Edge. Changes to favorites in one browser are reflected in the other, including: additions, deletions, modifications, and ordering.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Turned off/not syncing."
            },
            "1": {
              "description": "Turned on/syncing."
            }
          }
        },
        "scope": "device"
      },
      "UnlockHomeButton": {
        "name": "UnlockHomeButton",
        "description": "By default, when enabling Configure Home Button or Set Home Button URL, the home button is locked down to prevent your users from changing what page loads when clicking the home button. Use this policy to let users change the home button even when Configure Home Button or Set Home Button URL are enabled.  If enabled, the UI settings for the home button are enabled allowing your users to make changes, including hiding and showing the home button as well as configuring a custom URL.  If disabled or not configured, the UI settings for the home button are disabled preventing your users from making changes.  Default setting: Disabled or not configured Related policy: -Configure Home Button -Set Home Button URL",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Lock down and prevent users from making changes to the settings."
            },
            "1": {
              "description": "Let users make changes."
            }
          }
        },
        "scope": "device"
      },
      "UseSharedFolderForBooks": {
        "name": "UseSharedFolderForBooks",
        "description": "This setting specifies whether organizations should use a folder shared across users to store books from the Books Library.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/not allowed, but Microsoft Edge downloads book files to a per-user folder for each user."
            },
            "1": {
              "description": "Allowed. Microsoft Edge downloads book files to a shared folder. For this policy to work correctly, you must also enable the Allow a Windows app to share application data between users group policy. Also, the users must be signed in with a school or work account."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Camera": {
    "name": "Camera",
    "policies": {
      "AllowCamera": {
        "name": "AllowCamera",
        "description": "Disables or enables the camera. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Cellular": {
    "name": "Cellular",
    "policies": {
      "LetAppsAccessCellularData": {
        "name": "LetAppsAccessCellularData",
        "description": "This policy setting specifies whether Windows apps can access cellular data.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User is in control"
            },
            "1": {
              "description": "Force Allow"
            },
            "2": {
              "description": "Force Deny"
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessCellularData_ForceAllowTheseApps": {
        "name": "LetAppsAccessCellularData_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows Store Apps. Listed apps are allowed access to cellular data. This setting overrides the default LetAppsAccessCellularData policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessCellularData_ForceDenyTheseApps": {
        "name": "LetAppsAccessCellularData_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are denied access to cellular data. This setting overrides the default LetAppsAccessCellularData policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessCellularData_UserInControlOfTheseApps": {
        "name": "LetAppsAccessCellularData_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the cellular data access setting for the listed apps. This setting overrides the default LetAppsAccessCellularData policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "ShowAppCellularAccessUI": {
        "name": "ShowAppCellularAccessUI",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/CloudDesktop": {
    "name": "CloudDesktop",
    "policies": {
      "BootToCloudMode": {
        "name": "BootToCloudMode",
        "description": "This policy allows the user to configure the boot to cloud mode.  Boot to Cloud mode enables users to seamlessly sign-in to a Cloud PC that is provisioned for them by an IT Admin. For using boot to cloud mode, users need to install and configure a Cloud Provider application (eg: Win365) on their PC and need to have a Cloud PC provisioned to them. For successful use of this policy, OverrideShellProgram policy needs to be configured as well.  This policy supports the below options: 1. Not Configured: Machine will not trigger the Cloud PC connection automatically. 2. Enable Boot to Cloud Desktop: Users who have a Cloud PC provisioned will get connected seamlessly to the Cloud PC as they finish sign-in operation.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not Configured"
            },
            "1": {
              "description": "Enable Boot to Cloud Desktop"
            }
          }
        },
        "scope": "device"
      },
      "SetMaxConnectionTimeout": {
        "name": "SetMaxConnectionTimeout",
        "description": "IT admins can use this policy to set the max connection timeout. The connection timeout decides the max wait time for connecting to Cloud PC after sign in. The default max value is 5 min. For best user experience, it is recommended to continue with the default timeout of 5 min. Update only if it takes more than 5 min to connect to the Cloud PC in your organization.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "10": {
              "description": "10 min"
            },
            "11": {
              "description": "11 min"
            },
            "12": {
              "description": "12 min"
            },
            "13": {
              "description": "13 min"
            },
            "14": {
              "description": "14 min"
            },
            "15": {
              "description": "15 min"
            },
            "16": {
              "description": "16 min"
            },
            "17": {
              "description": "17 min"
            },
            "18": {
              "description": "18 min"
            },
            "19": {
              "description": "19 min"
            },
            "20": {
              "description": "20 min"
            },
            "5": {
              "description": "5 min"
            },
            "6": {
              "description": "6 min"
            },
            "7": {
              "description": "7 min"
            },
            "8": {
              "description": "8 min"
            },
            "9": {
              "description": "9 min"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Connectivity": {
    "name": "Connectivity",
    "policies": {
      "AllowBluetooth": {
        "name": "AllowBluetooth",
        "description": "Allows the user to enable Bluetooth or restrict access. Note  This value is not supported in Windows Phone 8. 1 MDM and EAS, Windows 10 for desktop, or Windows 10 Mobile. If this is not set or it is deleted, the default value of 2 (Allow) is used. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disallow Bluetooth. If this is set to 0, the radio in the Bluetooth control panel will be grayed out and the user will not be able to turn Bluetooth on."
            },
            "2": {
              "description": "Allow Bluetooth. If this is set to 2, the radio in the Bluetooth control panel will be functional and the user will be able to turn Bluetooth on."
            }
          }
        },
        "scope": "device"
      },
      "AllowCellularData": {
        "name": "AllowCellularData",
        "description": "Allows the cellular data channel on the device. Device reboot is not required to enforce the policy.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not allow the cellular data channel. The user cannot turn it on. This value is not supported in Windows 10, version 1511."
            },
            "1": {
              "description": "Allow the cellular data channel. The user can turn it off."
            },
            "2": {
              "description": "Allow the cellular data channel. The user cannot turn it off."
            }
          }
        },
        "scope": "device"
      },
      "AllowCellularDataRoaming": {
        "name": "AllowCellularDataRoaming",
        "description": "Allows or disallows cellular data roaming on the device. Device reboot is not required to enforce the policy. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not allow cellular data roaming. The user cannot turn it on. This value is not supported in Windows 10, version 1511."
            },
            "1": {
              "description": "Allow cellular data roaming."
            },
            "2": {
              "description": "Allow cellular data roaming on. The user cannot turn it off."
            }
          }
        },
        "scope": "device"
      },
      "AllowConnectedDevices": {
        "name": "AllowConnectedDevices",
        "description": "Note This policy requires reboot to take effect.  Allows IT Admins the ability to disable the Connected Devices Platform (CDP) component. CDP enables discovery and connection to other devices (either proximally with BT/LAN or through the cloud) to support remote app launching, remote messaging, remote app sessions, and other cross-device experiences.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable (CDP service not available)."
            },
            "1": {
              "description": "Allow (CDP service available)."
            }
          }
        },
        "scope": "device"
      },
      "AllowNFC": {
        "name": "AllowNFC",
        "description": "This policy is deprecated.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "AllowPhonePCLinking": {
        "name": "AllowPhonePCLinking",
        "description": "This policy allows IT admins to turn off the ability to Link a Phone with a PC to continue tasks, such as reading, email, and other tasks that require linking between Phone and PC. If you enable this policy setting, the Windows device will be able to enroll in Phone-PC linking functionality and participate in 'Continue on PC experiences'. If you disable this policy setting, the Windows device is not allowed to be linked to phones, will remove itself from the device list of any linked Phones, and cannot participate in 'Continue on PC experiences'. If you do not configure this policy setting, the default behavior depends on the Windows edition. Changes to this policy take effect on reboot.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not link."
            },
            "1": {
              "description": "Allow phone-PC linking."
            }
          }
        },
        "scope": "device"
      },
      "AllowUSBConnection": {
        "name": "AllowUSBConnection",
        "description": "NoteCurrently, this policy is supported only in HoloLens 2, Hololens (1st gen) Commercial Suite, and HoloLens (1st gen) Development Edition. Enables USB connection between the device and a computer to sync files with the device or to use developer tools to deploy or debug applications. Changing this policy does not affect USB charging. Both Media Transfer Protocol (MTP) and IP over USB are disabled when this policy is enforced. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowVPNOverCellular": {
        "name": "AllowVPNOverCellular",
        "description": "Specifies what type of underlying connections VPN is allowed to use. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "VPN is not allowed over cellular."
            },
            "1": {
              "description": "VPN can use any connection, including cellular."
            }
          }
        },
        "scope": "device"
      },
      "AllowVPNRoamingOverCellular": {
        "name": "AllowVPNRoamingOverCellular",
        "description": "Prevents the device from connecting to VPN when the device roams over cellular networks. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "DiablePrintingOverHTTP": {
        "name": "DiablePrintingOverHTTP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableDownloadingOfPrintDriversOverHTTP": {
        "name": "DisableDownloadingOfPrintDriversOverHTTP",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableInternetDownloadForWebPublishingAndOnlineOrderingWizards": {
        "name": "DisableInternetDownloadForWebPublishingAndOnlineOrderingWizards",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisallowNetworkConnectivityActiveTests": {
        "name": "DisallowNetworkConnectivityActiveTests",
        "description": "Network Connection Status Indicator (NCSI) detects Internet connectivity and corporate network connectivity status. NCSI sends a DNS request and HTTP query to http://www.msftconnecttest.com/connecttest.txt to determine if the device can communicate with the Internet. This policy disables the NCSI active probe, preventing network connectivity to www. msftconnecttest. com. Value type is integer.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Block"
            },
            "1": {
              "description": "Allow"
            }
          }
        },
        "scope": "device"
      },
      "HardenedUNCPaths": {
        "name": "HardenedUNCPaths",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ProhibitInstallationAndConfigurationOfNetworkBridge": {
        "name": "ProhibitInstallationAndConfigurationOfNetworkBridge",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ControlPolicyConflict": {
    "name": "ControlPolicyConflict",
    "policies": {
      "MDMWinsOverGP": {
        "name": "MDMWinsOverGP",
        "description": "If set to 1 then any MDM policy that is set that has an equivalent GP policy will result in GP service blocking the setting of the policy by GP MMC. Setting the value to 0 (zero) or deleting the policy will remove the GP policy blocks restore the saved GP policies.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": ""
            },
            "1": {
              "description": "The MDM policy is used and the GP policy is blocked."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/CredentialProviders": {
    "name": "CredentialProviders",
    "policies": {
      "AllowPINLogon": {
        "name": "AllowPINLogon",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "BlockPicturePassword": {
        "name": "BlockPicturePassword",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableAutomaticReDeploymentCredentials": {
        "name": "DisableAutomaticReDeploymentCredentials",
        "description": "Boolean policy to disable the visibility of the credential provider that triggers the PC refresh on a device. This policy does not actually trigger the refresh. The admin user is required to authenticate to trigger the refresh on the target device. The Autopilot Reset feature allows admin to reset devices to a known good managed state while preserving the management enrollment. After the Autopilot Reset is triggered the devices are for ready for use by information workers or students.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enable the visibility of the credentials for Autopilot Reset."
            },
            "1": {
              "description": "Disable visibility of the credentials for Autopilot Reset."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/CredentialsDelegation": {
    "name": "CredentialsDelegation",
    "policies": {
      "RemoteHostAllowsDelegationOfNonExportableCredentials": {
        "name": "RemoteHostAllowsDelegationOfNonExportableCredentials",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/CredentialsUI": {
    "name": "CredentialsUI",
    "policies": {
      "DisablePasswordReveal": {
        "name": "DisablePasswordReveal",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnumerateAdministrators": {
        "name": "EnumerateAdministrators",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Cryptography": {
    "name": "Cryptography",
    "policies": {
      "AllowFipsAlgorithmPolicy": {
        "name": "AllowFipsAlgorithmPolicy",
        "description": "Allows or disallows the Federal Information Processing Standard (FIPS) policy.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Block"
            },
            "1": {
              "description": "Allow"
            }
          }
        },
        "scope": "device"
      },
      "ConfigureEllipticCurveCryptography": {
        "name": "ConfigureEllipticCurveCryptography",
        "description": "TLS Elliptic Curves to enable. Format is a semicolon delimited list. Last write wins.",
        "format": "string",
        "scope": "device"
      },
      "ConfigureSystemCryptographyForceStrongKeyProtection": {
        "name": "ConfigureSystemCryptographyForceStrongKeyProtection",
        "description": "System cryptography: Force strong key protection for user keys stored on the computer. Last write wins.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "OverrideMinimumEnabledDTLSVersionClient": {
        "name": "OverrideMinimumEnabledDTLSVersionClient",
        "description": "Override minimal enabled TLS version for client role. Last write wins.",
        "format": "string",
        "scope": "device"
      },
      "OverrideMinimumEnabledDTLSVersionServer": {
        "name": "OverrideMinimumEnabledDTLSVersionServer",
        "description": "Override minimal enabled TLS version for server role. Last write wins.",
        "format": "string",
        "scope": "device"
      },
      "OverrideMinimumEnabledTLSVersionClient": {
        "name": "OverrideMinimumEnabledTLSVersionClient",
        "description": "Override minimal enabled TLS version for client role. Last write wins.",
        "format": "string",
        "scope": "device"
      },
      "OverrideMinimumEnabledTLSVersionServer": {
        "name": "OverrideMinimumEnabledTLSVersionServer",
        "description": "Override minimal enabled TLS version for server role. Last write wins.",
        "format": "string",
        "scope": "device"
      },
      "TLSCipherSuites": {
        "name": "TLSCipherSuites",
        "description": "Lists the Cryptographic Cipher Algorithms allowed for SSL connections. Format is a semicolon delimited list. Last write wins.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/DataProtection": {
    "name": "DataProtection",
    "policies": {
      "AllowDirectMemoryAccess": {
        "name": "AllowDirectMemoryAccess",
        "description": "This policy setting allows you to block direct memory access (DMA) for all hot pluggable PCI downstream ports until a user logs into Windows. Once a user logs in, Windows will enumerate the PCI devices connected to the host plug PCI ports. Every time the user locks the machine, DMA will be blocked on hot plug PCI ports with no children devices until the user logs in again. Devices which were already enumerated when the machine was unlocked will continue to function until unplugged. This policy setting is only enforced when BitLocker Device Encryption is enabled. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "LegacySelectiveWipeID": {
        "name": "LegacySelectiveWipeID",
        "description": "Important. This policy may change in a future release. It may be used for testing purposes, but should not be used in a production environment at this time. Setting used by Windows 8. 1 Selective Wipe. Note This policy is not recommended for use in Windows 10.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/DataUsage": {
    "name": "DataUsage",
    "policies": {
      "SetCost3G": {
        "name": "SetCost3G",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SetCost4G": {
        "name": "SetCost4G",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Defender": {
    "name": "Defender",
    "policies": {
      "AllowArchiveScanning": {
        "name": "AllowArchiveScanning",
        "description": "Allows or disallows scanning of archives.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. Turns off scanning on archived files."
            },
            "1": {
              "description": "Allowed. Scans the archive files."
            }
          }
        },
        "scope": "device"
      },
      "AllowBehaviorMonitoring": {
        "name": "AllowBehaviorMonitoring",
        "description": "Allows or disallows Windows Defender Behavior Monitoring functionality.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. Turns off behavior monitoring."
            },
            "1": {
              "description": "Allowed. Turns on real-time behavior monitoring."
            }
          }
        },
        "scope": "device"
      },
      "AllowCloudProtection": {
        "name": "AllowCloudProtection",
        "description": "To best protect your PC, Windows Defender will send information to Microsoft about any problems it finds. Microsoft will analyze that information, learn more about problems affecting you and other customers, and offer improved solutions.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. Turns off the Microsoft Active Protection Service."
            },
            "1": {
              "description": "Allowed. Turns on the Microsoft Active Protection Service."
            }
          }
        },
        "scope": "device"
      },
      "AllowEmailScanning": {
        "name": "AllowEmailScanning",
        "description": "Allows or disallows scanning of email.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. Turns off email scanning."
            },
            "1": {
              "description": "Allowed. Turns on email scanning."
            }
          }
        },
        "scope": "device"
      },
      "AllowFullScanOnMappedNetworkDrives": {
        "name": "AllowFullScanOnMappedNetworkDrives",
        "description": "Allows or disallows a full scan of mapped network drives.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. Disables scanning on mapped network drives."
            },
            "1": {
              "description": "Allowed. Scans mapped network drives."
            }
          }
        },
        "scope": "device"
      },
      "AllowFullScanRemovableDriveScanning": {
        "name": "AllowFullScanRemovableDriveScanning",
        "description": "Allows or disallows a full scan of removable drives. During a quick scan, removable drives may still be scanned.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. Turns off scanning on removable drives."
            },
            "1": {
              "description": "Allowed. Scans removable drives."
            }
          }
        },
        "scope": "device"
      },
      "AllowIOAVProtection": {
        "name": "AllowIOAVProtection",
        "description": "Allows or disallows Windows Defender IOAVP Protection functionality.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowIntrusionPreventionSystem": {
        "name": "AllowIntrusionPreventionSystem",
        "description": "Allows or disallows Windows Defender Intrusion Prevention functionality.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowOnAccessProtection": {
        "name": "AllowOnAccessProtection",
        "description": "Allows or disallows Windows Defender On Access Protection functionality.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowRealtimeMonitoring": {
        "name": "AllowRealtimeMonitoring",
        "description": "Allows or disallows Windows Defender Realtime Monitoring functionality.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. Turns off the real-time monitoring service."
            },
            "1": {
              "description": "Allowed. Turns on and runs the real-time monitoring service."
            }
          }
        },
        "scope": "device"
      },
      "AllowScanningNetworkFiles": {
        "name": "AllowScanningNetworkFiles",
        "description": "Allows or disallows a scanning of network files.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. Turns off scanning of network files."
            },
            "1": {
              "description": "Allowed. Scans network files."
            }
          }
        },
        "scope": "device"
      },
      "AllowScriptScanning": {
        "name": "AllowScriptScanning",
        "description": "Allows or disallows Windows Defender Script Scanning functionality.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowUserUIAccess": {
        "name": "AllowUserUIAccess",
        "description": "Allows or disallows user access to the Windows Defender UI. If disallowed, all Windows Defender notifications will also be suppressed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. Prevents users from accessing UI."
            },
            "1": {
              "description": "Allowed. Lets users access UI."
            }
          }
        },
        "scope": "device"
      },
      "AttackSurfaceReductionOnlyExclusions": {
        "name": "AttackSurfaceReductionOnlyExclusions",
        "description": "This policy setting allows you to prevent Attack Surface reduction rules from matching on files under the paths specified or for the fully qualified resources specified. Paths should be added under the Options for this setting. Each entry must be listed as a name value pair, where the name should be a string representation of a path or a fully qualified resource name. As an example, a path might be defined as: c:\\Windows to exclude all files in this directory. A fully qualified resource name might be defined as: C:\\Windows\\App.exe. Value type is string.",
        "format": "string",
        "scope": "device"
      },
      "AttackSurfaceReductionRules": {
        "name": "AttackSurfaceReductionRules",
        "description": "This policy setting enables setting the state (Block/Audit/Off) for each Attack surface reduction (ASR) rule. Each ASR rule listed can be set to one of the following states (Block/Audit/Off). The ASR rule ID and state should be added under the Options for this setting. Each entry must be listed as a name value pair. The name defines a valid ASR rule ID, while the value contains the status ID indicating the status of the rule. For more information about ASR rule ID and status ID, see Enable Attack Surface Reduction. Value type is string.",
        "format": "string",
        "scope": "device"
      },
      "AvgCPULoadFactor": {
        "name": "AvgCPULoadFactor",
        "description": "Represents the average CPU load factor for the Windows Defender scan (in percent). The default value is 50.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 10
        },
        "scope": "device"
      },
      "CheckForSignaturesBeforeRunningScan": {
        "name": "CheckForSignaturesBeforeRunningScan",
        "description": "This policy setting allows you to manage whether a check for new virus and spyware definitions will occur before running a scan. This setting applies to scheduled scans as well as the command line mpcmdrun -SigUpdate, but it has no effect on scans initiated manually from the user interface. If you enable this setting, a check for new definitions will occur before running a scan. If you disable this setting or do not configure this setting, the scan will start using the existing definitions. Supported values:0 (default) - Disabled1 - EnabledOMA-URI Path: ./Vendor/MSFT/Policy/Config/Defender/CheckForSignaturesBeforeRunningScan",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "CloudBlockLevel": {
        "name": "CloudBlockLevel",
        "description": "This policy setting determines how aggressive Windows Defender Antivirus will be in blocking and scanning suspicious files. Value type is integer. If this setting is on, Windows Defender Antivirus will be more aggressive when identifying suspicious files to block and scan; otherwise, it will be less aggressive and therefore block and scan with less frequency. For more information about specific values that are supported, see the Windows Defender Antivirus documentation site. NoteThis feature requires the Join Microsoft MAPS setting enabled in order to function.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "NotConfigured"
            },
            "2": {
              "description": "High"
            },
            "4": {
              "description": "HighPlus"
            },
            "6": {
              "description": "ZeroTolerance"
            }
          }
        },
        "scope": "device"
      },
      "CloudExtendedTimeout": {
        "name": "CloudExtendedTimeout",
        "description": "This feature allows Windows Defender Antivirus to block a suspicious file for up to 60 seconds, and scan it in the cloud to make sure it's safe. Value type is integer, range is 0 - 50. The typical cloud check timeout is 10 seconds. To enable the extended cloud check feature, specify the extended time in seconds, up to an additional 50 seconds. For example, if the desired timeout is 60 seconds, specify 50 seconds in this setting, which will enable the extended cloud check feature, and will raise the total time to 60 seconds. NoteThis feature depends on three other MAPS settings the must all be enabled- Configure the 'Block at First Sight' feature; Join Microsoft MAPS; Send file samples when further analysis is required.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 5
        },
        "scope": "device"
      },
      "ControlledFolderAccessAllowedApplications": {
        "name": "ControlledFolderAccessAllowedApplications",
        "description": "The previous name was GuardedFoldersAllowedApplications and changed to ControlledFolderAccessAllowedApplications.  This policy setting allows user-specified applications to the controlled folder access feature. Adding an allowed application means the controlled folder access feature will allow the application to modify or delete content in certain folders such as My Documents. In most cases it will not be necessary to add entries. Windows Defender Antivirus will automatically detect and dynamically add applications that are friendly. Value type is string. Use the | as the substring separator.",
        "format": "string",
        "scope": "device"
      },
      "ControlledFolderAccessProtectedFolders": {
        "name": "ControlledFolderAccessProtectedFolders",
        "description": "The previous name was GuardedFoldersList and changed to ControlledFolderAccessProtectedFolders.  This policy settings allows adding user-specified folder locations to the controlled folder access feature.  These folders will complement the system defined folders such as My Documents and My Pictures. The list of system folders will be displayed in the user interface and can not be changed. Value type is string. Use the | as the substring separator.",
        "format": "string",
        "scope": "device"
      },
      "DaysToRetainCleanedMalware": {
        "name": "DaysToRetainCleanedMalware",
        "description": "Time period (in days) that quarantine items will be stored on the system. The default value is 0, which keeps items in quarantine, and does not automatically remove them.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 9
        },
        "scope": "device"
      },
      "DisableCatchupFullScan": {
        "name": "DisableCatchupFullScan",
        "description": "This policy setting allows you to configure catch-up scans for scheduled full scans. A catch-up scan is a scan that is initiated because a regularly scheduled scan was missed. Usually these scheduled scans are missed because the computer was turned off at the scheduled time. If you disable or do not configure this setting, catch-up scans for scheduled full scans will be turned on. If a computer is offline for two consecutive scheduled scans, a catch-up scan is started the next time someone logs on to the computer. If there is no scheduled scan configured, there will be no catch-up scan run. If you enable this setting, catch-up scans for scheduled full scans will be disabled. Supported values:0 - Disabled1 - Enabled (default)OMA-URI Path: ./Vendor/MSFT/Policy/Config/Defender/DisableCatchupFullScan",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enabled"
            },
            "1": {
              "description": "Disabled"
            }
          }
        },
        "scope": "device"
      },
      "DisableCatchupQuickScan": {
        "name": "DisableCatchupQuickScan",
        "description": "This policy setting allows you to configure catch-up scans for scheduled quick scans. A catch-up scan is a scan that is initiated because a regularly scheduled scan was missed. Usually these scheduled scans are missed because the computer was turned off at the scheduled time. If you enable this setting, catch-up scans for scheduled quick scans will be turned on. If a computer is offline for two consecutive scheduled scans, a catch-up scan is started the next time someone logs on to the computer. If there is no scheduled scan configured, there will be no catch-up scan run. If you disable or do not configure this setting, catch-up scans for scheduled quick scans will be turned off. Supported values:0 - Disabled1 - Enabled (default)OMA-URI Path: ./Vendor/MSFT/Policy/Config/Defender/DisableCatchupQuickScan",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enabled"
            },
            "1": {
              "description": "Disabled"
            }
          }
        },
        "scope": "device"
      },
      "EnableControlledFolderAccess": {
        "name": "EnableControlledFolderAccess",
        "description": "The previous name was EnableGuardMyFolders and changed to EnableControlledFolderAccess.  This policy enables setting the state (Off/On/Audit/DiskOnly/AuditDiskOnly) for the controlled folder access feature. The controlled folder access feature removes modify and delete permissions from untrusted applications to certain folders such as My Documents.  Value type is integer and the range is 0 - 4.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            },
            "2": {
              "description": "Audit Mode"
            },
            "3": {
              "description": "Block disk modification only"
            },
            "4": {
              "description": "Audit disk modification only"
            }
          }
        },
        "scope": "device"
      },
      "EnableLowCPUPriority": {
        "name": "EnableLowCPUPriority",
        "description": "This policy setting allows you to enable or disable low CPU priority for scheduled scans. If you enable this setting, low CPU priority will be used during scheduled scans. If you disable or do not configure this setting, not changes will be made to CPU priority for scheduled scans. Supported values:0 - Disabled (default)1 - Enabled",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "EnableNetworkProtection": {
        "name": "EnableNetworkProtection",
        "description": "This policy allows you to turn network protection on (block/audit) or off. Network protection protects employees using any app from accessing phishing scams, exploit-hosting sites, and malicious content on the Internet. This includes preventing third-party browsers from connecting to dangerous sites. Value type is integer. If you enable this setting, network protection is turned on and employees can't turn it off. Its behavior can be controlled by the following options: Block and Audit. If you enable this policy with the Block option, users/apps will be blocked from connecting to dangerous domains. You will be able to see this activity in Windows Defender Security Center. If you enable this policy with the Audit option, users/apps will not be blocked from connecting to dangerous domains. However, you will still see this activity in Windows Defender Security Center. If you disable this policy, users/apps will not be blocked from connecting to dangerous domains. You will not see any network activity in Windows Defender Security Center. If you do not configure this policy, network blocking will be disabled by default.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled (block mode)"
            },
            "2": {
              "description": "Enabled (audit mode)"
            }
          }
        },
        "scope": "device"
      },
      "ExcludedExtensions": {
        "name": "ExcludedExtensions",
        "description": "Allows an administrator to specify a list of file type extensions to ignore during a scan. Each file type in the list must be separated by a |. For example, lib|obj.",
        "format": "string",
        "scope": "device"
      },
      "ExcludedPaths": {
        "name": "ExcludedPaths",
        "description": "Allows an administrator to specify a list of directory paths to ignore during a scan. Each path in the list must be separated by a |. For example, C:\\Example|C:\\Example1.",
        "format": "string",
        "scope": "device"
      },
      "ExcludedProcesses": {
        "name": "ExcludedProcesses",
        "description": "Allows an administrator to specify a list of files opened by processes to ignore during a scan. ImportantThe process itself is not excluded from the scan, but can be by using the Defender/ExcludedPaths policy to exclude its path. Each file type must be separated by a |. For example, C:\\Example. exe|C:\\Example1.exe.",
        "format": "string",
        "scope": "device"
      },
      "PUAProtection": {
        "name": "PUAProtection",
        "description": "Specifies the level of detection for potentially unwanted applications (PUAs). Windows Defender alerts you when potentially unwanted software is being downloaded or attempts to install itself on your computer.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "PUA Protection off. Windows Defender will not protect against potentially unwanted applications."
            },
            "1": {
              "description": "PUA Protection on. Detected items are blocked. They will show in history along with other threats."
            },
            "2": {
              "description": "Audit mode. Windows Defender will detect potentially unwanted applications, but take no action. You can review information about the applications Windows Defender would have taken action against by searching for events created by Windows Defender in the Event Viewer."
            }
          }
        },
        "scope": "device"
      },
      "RealTimeScanDirection": {
        "name": "RealTimeScanDirection",
        "description": "Controls which sets of files should be monitored. Note If AllowOnAccessProtection is not allowed, then this configuration can be used to monitor specific files.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Monitor all files (bi-directional)."
            },
            "1": {
              "description": "Monitor incoming files."
            },
            "2": {
              "description": "Monitor outgoing files."
            }
          }
        },
        "scope": "device"
      },
      "ScanParameter": {
        "name": "ScanParameter",
        "description": "Selects whether to perform a quick scan or full scan.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "1": {
              "description": "Quick scan"
            },
            "2": {
              "description": "Full scan"
            }
          }
        },
        "scope": "device"
      },
      "ScheduleQuickScanTime": {
        "name": "ScheduleQuickScanTime",
        "description": "Selects the time of day that the Windows Defender quick scan should run. Note The scan type will depends on what scan type is selected in the Defender/ScanParameter setting. For example, a value of 0=12:00AM, a value of 60=1:00AM, a value of 120=2:00, and so on, up to a value of 1380=11:00PM. The default value is 120",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 138
        },
        "scope": "device"
      },
      "ScheduleScanDay": {
        "name": "ScheduleScanDay",
        "description": "Selects the day that the Windows Defender scan should run. Note The scan type will depends on what scan type is selected in the Defender/ScanParameter setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Every day"
            },
            "1": {
              "description": "Sunday"
            },
            "2": {
              "description": "Monday"
            },
            "3": {
              "description": "Tuesday"
            },
            "4": {
              "description": "Wednesday"
            },
            "5": {
              "description": "Thursday"
            },
            "6": {
              "description": "Friday"
            },
            "7": {
              "description": "Saturday"
            },
            "8": {
              "description": "No scheduled scan"
            }
          }
        },
        "scope": "device"
      },
      "ScheduleScanTime": {
        "name": "ScheduleScanTime",
        "description": "Selects the time of day that the Windows Defender scan should run. Note The scan type will depends on what scan type is selected in the Defender/ScanParameter setting. For example, a value of 0=12:00AM, a value of 60=1:00AM, a value of 120=2:00, and so on, up to a value of 1380=11:00PM. The default value is 120.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 138
        },
        "scope": "device"
      },
      "SecurityIntelligenceLocation": {
        "name": "SecurityIntelligenceLocation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdateFallbackOrder": {
        "name": "SignatureUpdateFallbackOrder",
        "description": "This policy setting allows you to define the order in which different definition update sources should be contacted. The value of this setting should be entered as a pipe-separated string enumerating the definition update sources in order. Possible values are:InternalDefinitionUpdateServerMicrosoftUpdateServerMMPCFileSharesFor example: InternalDefinitionUpdateServer | MicrosoftUpdateServer | MMPCIf you enable this setting, definition update sources will be contacted in the order specified. Once definition updates have been successfully downloaded from one specified source, the remaining sources in the list will not be contacted. If you disable or do not configure this setting, definition update sources will be contacted in a default order. OMA-URI Path: ./Vendor/MSFT/Policy/Config/Defender/SignatureUpdateFallbackOrder",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdateFileSharesSources": {
        "name": "SignatureUpdateFileSharesSources",
        "description": "This policy setting allows you to configure UNC file share sources for downloading definition updates. Sources will be contacted in the order specified. The value of this setting should be entered as a pipe-separated string enumerating the definition update sources. For example: \\unc1\\Signatures | \\unc2\\SignaturesThe list is empty by default. If you enable this setting, the specified sources will be contacted for definition updates. Once definition updates have been successfully downloaded from one specified source, the remaining sources in the list will not be contacted. If you disable or do not configure this setting, the list will remain empty by default and no sources will be contacted. OMA-URI Path: ./Vendor/MSFT/Policy/Config/Defender/SignatureUpdateFileSharesSources",
        "format": "string",
        "scope": "device"
      },
      "SignatureUpdateInterval": {
        "name": "SignatureUpdateInterval",
        "description": "Specifies the interval (in hours) that will be used to check for signatures, so instead of using the ScheduleDay and ScheduleTime the check for new signatures will be set according to the interval. A value of 0 means no check for new signatures, a value of 1 means to check every hour, a value of 2 means to check every two hours, and so on, up to a value of 24, which means to check every day. The default value is 8. OMA-URI Path: ./Vendor/MSFT/Policy/Config/Defender/SignatureUpdateInterval",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 2
        },
        "scope": "device"
      },
      "SubmitSamplesConsent": {
        "name": "SubmitSamplesConsent",
        "description": "Checks for the user consent level in Windows Defender to send data. If the required consent has already been granted, Windows Defender submits them. If not, (and if the user has specified never to ask), the UI is launched to ask for user consent (when Defender/AllowCloudProtection is allowed) before sending data.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Always prompt."
            },
            "1": {
              "description": "Send safe samples automatically."
            },
            "2": {
              "description": "Never send."
            },
            "3": {
              "description": "Send all samples automatically."
            }
          }
        },
        "scope": "device"
      },
      "ThreatSeverityDefaultAction": {
        "name": "ThreatSeverityDefaultAction",
        "description": "Allows an administrator to specify any valid threat severity levels and the corresponding default action ID to take. This value is a list of threat severity level IDs and corresponding actions, separated by a | using the format threat level=action|threat level=action. For example, 1=6|2=2|4=10|5=3. The following list shows the supported values for threat severity levels:1 – Low severity threats2 – Moderate severity threats4 – High severity threats5 – Severe threatsThe following list shows the supported values for possible actions:2 – Quarantine. Moves files to quarantine. 3 – Remove. Removes files from system. 6 – Allow. Allows file/does none of the above actions. 8 – User defined. Requires user to make a decision on which action to take. 10 – Block. Blocks file execution.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/DeliveryOptimization": {
    "name": "DeliveryOptimization",
    "policies": {
      "DOAbsoluteMaxCacheSize": {
        "name": "DOAbsoluteMaxCacheSize",
        "description": "Specifies the maximum size in GB of Delivery Optimization cache. This policy overrides the DOMaxCacheSize policy. The value 0 (zero) means unlimited cache. Delivery Optimization will clear the cache when the device is running low on disk space. The default is to use the DOMaxCacheSize value.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "DOAllowVPNPeerCaching": {
        "name": "DOAllowVPNPeerCaching",
        "description": "Specifies whether the device is allowed to participate in Peer Caching while connected via VPN to the domain network. This means the device can download from or upload to other domain network devices, either on VPN or on the corporate domain network.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "DOCacheHost": {
        "name": "DOCacheHost",
        "description": "This policy allows you to set one or more Microsoft Connected Cache servers that will be used by your client(s).",
        "format": "string",
        "scope": "device"
      },
      "DOCacheHostSource": {
        "name": "DOCacheHostSource",
        "description": "This policy allows you to specify how clients can discover Microsoft Connected Cache servers dynamically.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "DODelayBackgroundDownloadFromHttp": {
        "name": "DODelayBackgroundDownloadFromHttp",
        "description": "This policy allows you to delay the use of an HTTP source in a background download that is allowed to use peer-to-peer. After the max delay is reached, the download will resume using HTTP, either downloading the entire payload or complementing the bytes that could not be downloaded from peers. Note that a download that is waiting for peer sources, will appear to be stuck for the end user. The recommended value is 1 hour (3600).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "DODelayCacheServerFallbackBackground": {
        "name": "DODelayCacheServerFallbackBackground",
        "description": "Specifies the time in seconds to delay the fallback from Cache Server to the HTTP source for a background content download. Note that the DODelayBackgroundDownloadFromHttp policy takes precedence over this policy to allow downloads from peers first.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 259200
        },
        "scope": "device"
      },
      "DODelayCacheServerFallbackForeground": {
        "name": "DODelayCacheServerFallbackForeground",
        "description": "Specifies the time in seconds to delay the fallback from Cache Server to the HTTP source for foreground content download. Note that the DODelayForegroundDownloadFromHttp policy takes precedence over this policy to allow downloads from peers first.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 259200
        },
        "scope": "device"
      },
      "DODelayForegroundDownloadFromHttp": {
        "name": "DODelayForegroundDownloadFromHttp",
        "description": "This policy allows you to delay the use of an HTTP source in a foreground (interactive) download that is allowed to use peer-to-peer. After the max delay has reached, the download will resume using HTTP, either downloading the entire payload or complementing the bytes that could not be downloaded from Peers. Note that a download that is waiting for peer sources, will appear to be stuck for the end user. The recommended value is 1 minute (60).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "DODisallowCacheServerDownloadsOnVPN": {
        "name": "DODisallowCacheServerDownloadsOnVPN",
        "description": "Disallow downloads from Microsoft Connected Cache servers when the device connects via VPN. By default, the device is allowed to download from Microsoft Connected Cache when connected via VPN.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed"
            },
            "1": {
              "description": "Not allowed"
            }
          }
        },
        "scope": "device"
      },
      "DODownloadMode": {
        "name": "DODownloadMode",
        "description": "Specifies the download method that Delivery Optimization can use in downloads of Windows Updates, Apps and App updates. The default value is 1.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "HTTP only, no peering."
            },
            "1": {
              "description": "HTTP blended with peering behind the same NAT."
            },
            "100": {
              "description": "Bypass mode. Windows 10: Do not use Delivery Optimization and use BITS instead. Windows 11: Deprecated, use Simple mode instead."
            },
            "2": {
              "description": "When this option is selected, peering will cross NATs. To create a custom group use Group ID in combination with Mode 2."
            },
            "3": {
              "description": "HTTP blended with Internet peering."
            },
            "99": {
              "description": "Simple download mode with no peering. Delivery Optimization downloads using HTTP only and does not attempt to contact the Delivery Optimization cloud services. Added in Windows 10, version 1607."
            }
          }
        },
        "scope": "device"
      },
      "DOGroupId": {
        "name": "DOGroupId",
        "description": "This Policy specifies an arbitrary group ID that the device belongs to. Use this if you need to create a single group for Local Network Peering for branches that are on different domains or are not on the same LAN. Note that this is a best effort optimization and should not be relied on for an authentication of identity. Note You must use a GUID as the group ID.",
        "format": "string",
        "scope": "device"
      },
      "DOGroupIdSource": {
        "name": "DOGroupIdSource",
        "description": "Set this policy to restrict peer selection to a specific source. Available options are: 1 = AD Site, 2 = Authenticated domain SID, 3 = DHCP Option ID, 4 = DNS Suffix, 5 = AAD. When set, the Group ID will be assigned automatically from the selected source. This policy is ignored if the GroupID policy is also set. The options set in this policy only apply to Group (2) download mode. If Group (2) isn't set as Download mode, this policy will be ignored. For option 3 - DHCP Option ID, the client will query DHCP Option ID 234 and use the returned GUID value as the Group ID. Starting with Windows 10, version 1903, you can use the Azure Active Directory (AAD) Tenant ID as a means to define groups. To do this, set the value of DOGroupIdSource to 5.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Unset"
            },
            "1": {
              "description": "AD site"
            },
            "2": {
              "description": "Authenticated domain SID"
            },
            "3": {
              "description": "DHCP user option"
            },
            "4": {
              "description": "DNS suffix"
            },
            "5": {
              "description": "AAD"
            }
          }
        },
        "scope": "device"
      },
      "DOMaxBackgroundDownloadBandwidth": {
        "name": "DOMaxBackgroundDownloadBandwidth",
        "description": "",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "DOMaxCacheAge": {
        "name": "DOMaxCacheAge",
        "description": "Specifies the maximum time in seconds that each file is held in the Delivery Optimization cache after downloading successfully. The value 0 (zero) means unlimited; Delivery Optimization will hold the files in the cache longer and make the files available for uploads to other devices, as long as the cache size has not exceeded. The value 0 is new in Windows 10, version 1607. The default value is 604800 seconds (7 days).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "DOMaxCacheSize": {
        "name": "DOMaxCacheSize",
        "description": "Specifies the maximum cache size that Delivery Optimization can utilize, as a percentage of disk size (1-100). The default value is 20.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 10
        },
        "scope": "device"
      },
      "DOMaxForegroundDownloadBandwidth": {
        "name": "DOMaxForegroundDownloadBandwidth",
        "description": "",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "DOMinBackgroundQos": {
        "name": "DOMinBackgroundQos",
        "description": "Specifies the minimum download QoS (Quality of Service or speed) in KiloBytes/sec for background downloads. This policy affects the blending of peer and HTTP sources. Delivery Optimization complements the download from the HTTP source to achieve the minimum QoS value set. The default value is 20480 (20 MB/s).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 429496729
        },
        "scope": "device"
      },
      "DOMinBatteryPercentageAllowedToUpload": {
        "name": "DOMinBatteryPercentageAllowedToUpload",
        "description": "Specifies any value between 1 and 100 (in percentage) to allow the device to upload data to LAN and Group peers while on battery power. Uploads will automatically pause when the battery level drops below the set minimum battery level. The recommended value to set is 40 (for 40%) if you allow uploads on battery. The default value is 0. The value 0 (zero) means not limited and the cloud service default value will be used.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 10
        },
        "scope": "device"
      },
      "DOMinDiskSizeAllowedToPeer": {
        "name": "DOMinDiskSizeAllowedToPeer",
        "description": "Specifies the required minimum disk size (capacity in GB) for the device to use Peer Caching. Recommended values: 64 GB to 256 GB. If the DOModifyCacheDrive policy is set, the disk size check will apply to the new working directory specified by that policy. The default value is 32 GB.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 10000
        },
        "scope": "device"
      },
      "DOMinFileSizeToCache": {
        "name": "DOMinFileSizeToCache",
        "description": "Specifies the minimum content file size in MB enabled to use Peer Caching. Recommended values: 1 MB to 100,000 MB. The default value is 100 MB.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 10000
        },
        "scope": "device"
      },
      "DOMinRAMAllowedToPeer": {
        "name": "DOMinRAMAllowedToPeer",
        "description": "Specifies the minimum RAM size in GB required to use Peer Caching. For example, if the minimum set is 1 GB, then devices with 1 GB or higher available RAM will be allowed to use Peer caching. Recommended values: 1 GB to 4 GB. The default value is 4 GB.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 10000
        },
        "scope": "device"
      },
      "DOModifyCacheDrive": {
        "name": "DOModifyCacheDrive",
        "description": "Specifies the drive that Delivery Optimization should use for its cache. The drive location can be specified using environment variables, drive letter or using a full path. By default, %SystemDrive% is used to store the cache.",
        "format": "string",
        "scope": "device"
      },
      "DOMonthlyUploadDataCap": {
        "name": "DOMonthlyUploadDataCap",
        "description": "Specifies the maximum total bytes in GB that Delivery Optimization is allowed to upload to Internet peers in each calendar month. The value 0 (zero) means unlimited; No monthly upload limit is applied if 0 is set. The default value is 5120 (5 TB).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "DOPercentageMaxBackgroundBandwidth": {
        "name": "DOPercentageMaxBackgroundBandwidth",
        "description": "Specifies the maximum background download bandwidth that Delivery Optimization uses across all concurrent download activities as a percentage of available download bandwidth. The default value 0 (zero) means that Delivery Optimization dynamically adjusts to use the available bandwidth for background downloads. Note that downloads from LAN peers will not be throttled even when this policy is set.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 10
        },
        "scope": "device"
      },
      "DOPercentageMaxForegroundBandwidth": {
        "name": "DOPercentageMaxForegroundBandwidth",
        "description": "Specifies the maximum foreground download bandwidth that Delivery Optimization uses across all concurrent download activities as a percentage of available download bandwidth. The default value 0 (zero) means that Delivery Optimization dynamically adjusts to use the available bandwidth for foreground downloads. Note that downloads from LAN peers will not be throttled even when this policy is set.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 10
        },
        "scope": "device"
      },
      "DORestrictPeerSelectionBy": {
        "name": "DORestrictPeerSelectionBy",
        "description": "Set this policy to restrict peer selection via selected option. Options available are: 1=Subnet mask, 2 = Local discovery (DNS-SD). These options apply to both Download Mode LAN (1) and Group (2).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "None."
            },
            "1": {
              "description": "Subnet mask."
            },
            "2": {
              "description": "Local peer discovery (DNS-SD)."
            }
          }
        },
        "scope": "device"
      },
      "DOSetHoursToLimitBackgroundDownloadBandwidth": {
        "name": "DOSetHoursToLimitBackgroundDownloadBandwidth",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DOSetHoursToLimitForegroundDownloadBandwidth": {
        "name": "DOSetHoursToLimitForegroundDownloadBandwidth",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DOVpnKeywords": {
        "name": "DOVpnKeywords",
        "description": "This policy allows you to set one or more keywords used to recognize VPN connections.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/DesktopAppInstaller": {
    "name": "DesktopAppInstaller",
    "policies": {
      "EnableAdditionalSources": {
        "name": "EnableAdditionalSources",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableAllowedSources": {
        "name": "EnableAllowedSources",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableAppInstaller": {
        "name": "EnableAppInstaller",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableBypassCertificatePinningForMicrosoftStore": {
        "name": "EnableBypassCertificatePinningForMicrosoftStore",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableDefaultSource": {
        "name": "EnableDefaultSource",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableExperimentalFeatures": {
        "name": "EnableExperimentalFeatures",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableHashOverride": {
        "name": "EnableHashOverride",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableLocalArchiveMalwareScanOverride": {
        "name": "EnableLocalArchiveMalwareScanOverride",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableLocalManifestFiles": {
        "name": "EnableLocalManifestFiles",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableMSAppInstallerProtocol": {
        "name": "EnableMSAppInstallerProtocol",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableMicrosoftStoreSource": {
        "name": "EnableMicrosoftStoreSource",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableSettings": {
        "name": "EnableSettings",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableWindowsPackageManagerCommandLineInterfaces": {
        "name": "EnableWindowsPackageManagerCommandLineInterfaces",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SourceAutoUpdateInterval": {
        "name": "SourceAutoUpdateInterval",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/DeviceGuard": {
    "name": "DeviceGuard",
    "policies": {
      "ConfigureSystemGuardLaunch": {
        "name": "ConfigureSystemGuardLaunch",
        "description": "Secure Launch configuration: 0 - Unmanaged, configurable by Administrative user, 1 - Enables Secure Launch if supported by hardware, 2 - Disables Secure Launch.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Unmanaged Configurable by Administrative user"
            },
            "1": {
              "description": "Unmanaged Enables Secure Launch if supported by hardware"
            },
            "2": {
              "description": "Unmanaged Disables Secure Launch"
            }
          }
        },
        "scope": "device"
      },
      "EnableVirtualizationBasedSecurity": {
        "name": "EnableVirtualizationBasedSecurity",
        "description": "Turns On Virtualization Based Security(VBS)",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "disable virtualization based security."
            },
            "1": {
              "description": "enable virtualization based security."
            }
          }
        },
        "scope": "device"
      },
      "LsaCfgFlags": {
        "name": "LsaCfgFlags",
        "description": "Credential Guard Configuration: 0 - Turns off CredentialGuard remotely if configured previously without UEFI Lock, 1 - Turns on CredentialGuard with UEFI lock. 2 - Turns on CredentialGuard without UEFI lock.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disabled) Turns off Credential Guard remotely if configured previously without UEFI Lock."
            },
            "1": {
              "description": "(Enabled with UEFI lock) Turns on Credential Guard with UEFI lock."
            },
            "2": {
              "description": "(Enabled without lock) Turns on Credential Guard without UEFI lock."
            }
          }
        },
        "scope": "device"
      },
      "RequirePlatformSecurityFeatures": {
        "name": "RequirePlatformSecurityFeatures",
        "description": "Select Platform Security Level: 1 - Turns on VBS with Secure Boot, 3 - Turns on VBS with Secure Boot and DMA. DMA requires hardware support.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "1": {
              "description": "Turns on VBS with Secure Boot."
            },
            "3": {
              "description": "Turns on VBS with Secure Boot and direct memory access (DMA). DMA requires hardware support."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/DeviceHealthMonitoring": {
    "name": "DeviceHealthMonitoring",
    "policies": {
      "AllowDeviceHealthMonitoring": {
        "name": "AllowDeviceHealthMonitoring",
        "description": "Enable/disable 4Nines device health monitoring on devices.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The DeviceHealthMonitoring connection is disabled."
            },
            "1": {
              "description": "The DeviceHealthMonitoring connection is enabled."
            }
          }
        },
        "scope": "device"
      },
      "ConfigDeviceHealthMonitoringScope": {
        "name": "ConfigDeviceHealthMonitoringScope",
        "description": "If the device is not opted-in to the DeviceHealthMonitoring service via the AllowDeviceHealthMonitoring then this policy has no meaning. For devices which are opted in, the value of this policy modifies which types of events are monitored.",
        "format": "string",
        "scope": "device"
      },
      "ConfigDeviceHealthMonitoringServiceInstance": {
        "name": "ConfigDeviceHealthMonitoringServiceInstance",
        "description": "If the device is not opted-in to the DeviceHealthMonitoring service via the AllowDeviceHealthMonitoring then this policy has no meaning. For devices which are opted in, the value of this policy modifies which service instance to which events are to be uploaded.",
        "format": "string",
        "scope": "device"
      },
      "ConfigDeviceHealthMonitoringUploadDestination": {
        "name": "ConfigDeviceHealthMonitoringUploadDestination",
        "description": "If the device is not opted-in to the DeviceHealthMonitoring service via the AllowDeviceHealthMonitoring then this policy has no meaning. For devices which are opted in, the value of this policy modifies which destinations are in-scope for monitored events to be uploaded.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/DeviceInstallation": {
    "name": "DeviceInstallation",
    "policies": {
      "AllowInstallationOfMatchingDeviceIDs": {
        "name": "AllowInstallationOfMatchingDeviceIDs",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowInstallationOfMatchingDeviceInstanceIDs": {
        "name": "AllowInstallationOfMatchingDeviceInstanceIDs",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowInstallationOfMatchingDeviceSetupClasses": {
        "name": "AllowInstallationOfMatchingDeviceSetupClasses",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableInstallationPolicyLayering": {
        "name": "EnableInstallationPolicyLayering",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventDeviceMetadataFromNetwork": {
        "name": "PreventDeviceMetadataFromNetwork",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventInstallationOfDevicesNotDescribedByOtherPolicySettings": {
        "name": "PreventInstallationOfDevicesNotDescribedByOtherPolicySettings",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventInstallationOfMatchingDeviceIDs": {
        "name": "PreventInstallationOfMatchingDeviceIDs",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventInstallationOfMatchingDeviceInstanceIDs": {
        "name": "PreventInstallationOfMatchingDeviceInstanceIDs",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventInstallationOfMatchingDeviceSetupClasses": {
        "name": "PreventInstallationOfMatchingDeviceSetupClasses",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/DeviceLock": {
    "name": "DeviceLock",
    "policies": {
      "AccountLockoutPolicy": {
        "name": "AccountLockoutPolicy",
        "description": " Account lockout threshold - This security setting determines the number of failed logon attempts that causes a user account to be locked out. A locked-out account cannot be used until it is reset by an administrator or until the lockout duration for the account has expired. You can set a value between 0 and 999 failed logon attempts. If you set the value to 0, the account will never be locked out.  Failed password attempts against workstations or member servers that have been locked using either CTRL+ALT+DELETE or password-protected screen savers count as failed logon attempts.  Default: 0   Account lockout duration - This security setting determines the number of minutes a locked-out account remains locked out before automatically becoming unlocked. The available range is from 0 minutes through 99,999 minutes. If you set the account lockout duration to 0, the account will be locked out until an administrator explicitly unlocks it.  If an account lockout threshold is defined, the account lockout duration must be greater than or equal to the reset time.  Default: None, because this policy setting only has meaning when an Account lockout threshold is specified.   Reset account lockout counter after - This security setting determines the number of minutes that must elapse after a failed logon attempt before the failed logon attempt counter is reset to 0 bad logon attempts. The available range is 1 minute to 99,999 minutes.  If an account lockout threshold is defined, this reset time must be less than or equal to the Account lockout duration.  Default: None, because this policy setting only has meaning when an Account lockout threshold is specified.",
        "format": "string",
        "scope": "device"
      },
      "AllowAdministratorLockout": {
        "name": "AllowAdministratorLockout",
        "description": "Allow Administrator account lockout  This security setting determines whether the builtin Administrator account is subject to account lockout policy.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "AllowIdleReturnWithoutPassword": {
        "name": "AllowIdleReturnWithoutPassword",
        "description": "Specifies whether the user must input a PIN or password when the device resumes from an idle state.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowScreenTimeoutWhileLockedUserConfig": {
        "name": "AllowScreenTimeoutWhileLockedUserConfig",
        "description": "Specifies whether to show a user-configurable setting to control the screen timeout while on the lock screen of Windows 10 Mobile devices.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Block"
            },
            "1": {
              "description": "Allow"
            }
          }
        },
        "scope": "device"
      },
      "AllowSimpleDevicePassword": {
        "name": "AllowSimpleDevicePassword",
        "description": "Specifies whether PINs or passwords such as 1111 or 1234 are allowed. For the desktop, it also controls the use of picture passwords.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AlphanumericDevicePasswordRequired": {
        "name": "AlphanumericDevicePasswordRequired",
        "description": "Determines the type of PIN or password required. This policy only applies if the DeviceLock/DevicePasswordEnabled policy is set to 0",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Password or Alphanumeric PIN required."
            },
            "1": {
              "description": "Password or Numeric PIN required."
            },
            "2": {
              "description": "Password, Numeric PIN, or Alphanumeric PIN required."
            }
          }
        },
        "scope": "device"
      },
      "ClearTextPassword": {
        "name": "ClearTextPassword",
        "description": "Store passwords using reversible encryption                                      This security setting determines whether the operating system stores passwords using reversible encryption.  This policy provides support for applications that use protocols that require knowledge of the user's password for authentication purposes. Storing passwords using reversible encryption is essentially the same as storing plaintext versions of the passwords. For this reason, this policy should never be enabled unless application requirements outweigh the need to protect password information.  This policy is required when using Challenge-Handshake Authentication Protocol (CHAP) authentication through remote access or Internet Authentication Services (IAS). It is also required when using Digest Authentication in Internet Information Services (IIS).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "DevicePasswordEnabled": {
        "name": "DevicePasswordEnabled",
        "description": "Specifies whether device lock is enabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enabled"
            },
            "1": {
              "description": "Disabled"
            }
          }
        },
        "scope": "device"
      },
      "DevicePasswordExpiration": {
        "name": "DevicePasswordExpiration",
        "description": "Specifies when the password expires (in days).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 73
        },
        "scope": "device"
      },
      "DevicePasswordHistory": {
        "name": "DevicePasswordHistory",
        "description": "Specifies how many passwords can be stored in the history that can’t be used.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 5
        },
        "scope": "device"
      },
      "EnforceLockScreenAndLogonImage": {
        "name": "EnforceLockScreenAndLogonImage",
        "description": "Specifies the default lock screen and logon image shown when no user is signed in. It also sets the specified image for all users, which replaces the default image. The same image is used for both the lock and logon screens. Users will not be able to change this image.  Value type is a string, which is the full image filepath and filename.",
        "format": "string",
        "scope": "device"
      },
      "EnforceLockScreenProvider": {
        "name": "EnforceLockScreenProvider",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MaxDevicePasswordFailedAttempts": {
        "name": "MaxDevicePasswordFailedAttempts",
        "description": "The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality. Note This policy must be wrapped in an Atomic command. This policy has different behaviors on the mobile device and desktop. On a mobile device, when the user reaches the value set by this policy, then the device is wiped. On a desktop, when the user reaches the value set by this policy, it is not wiped. Instead, the desktop is put on BitLocker recovery mode, which makes the data inaccessible but recoverable. If BitLocker is not enabled, then the policy cannot be enforced. Prior to reaching the failed attempts limit, the user is sent to the lock screen and warned that more failed attempts will lock their computer. When the user reaches the limit, the device automatically reboots and shows the BitLocker recovery page. This page prompts the user for the BitLocker recovery key. Most secure value is 0 if all policy values = 0; otherwise, Min policy value is the most secure value. For additional information about this policy, see Exchange ActiveSync Policy Engine Overview.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 99
        },
        "scope": "device"
      },
      "MaxInactivityTimeDeviceLock": {
        "name": "MaxInactivityTimeDeviceLock",
        "description": "The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 99
        },
        "scope": "device"
      },
      "MaxInactivityTimeDeviceLockWithExternalDisplay": {
        "name": "MaxInactivityTimeDeviceLockWithExternalDisplay",
        "description": "Sets the maximum timeout value for the external display.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 99
        },
        "scope": "device"
      },
      "MaximumPasswordAge": {
        "name": "MaximumPasswordAge",
        "description": "This security setting determines the period of time (in days) that a password can be used before the system requires the user to change it. You can set passwords to expire after a number of days between 1 and 999, or you can specify that passwords never expire by setting the number of days to 0. If the maximum password age is between 1 and 999 days, the Minimum password age must be less than the maximum password age. If the maximum password age is set to 0, the minimum password age can be any value between 0 and 998 days.  Note: It is a security best practice to have passwords expire every 30 to 90 days, depending on your environment. This way, an attacker has a limited amount of time in which to crack a user's password and have access to your network resources.  Default: 42.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 99
        },
        "scope": "device"
      },
      "MinDevicePasswordComplexCharacters": {
        "name": "MinDevicePasswordComplexCharacters",
        "description": "The number of complex element types (uppercase and lowercase letters, numbers, and punctuation) required for a strong PIN or password.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "1": {
              "description": "Digits only"
            },
            "2": {
              "description": "Digits and lowercase letters are required"
            },
            "3": {
              "description": "Digits lowercase letters and uppercase letters are required. Not supported in desktop Microsoft accounts and domain accounts"
            },
            "4": {
              "description": "Digits lowercase letters uppercase letters and special characters are required. Not supported in desktop"
            }
          }
        },
        "scope": "device"
      },
      "MinDevicePasswordLength": {
        "name": "MinDevicePasswordLength",
        "description": "Specifies the minimum number or characters required in the PIN or password.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 4,
          "max": 1
        },
        "scope": "device"
      },
      "MinimumPasswordAge": {
        "name": "MinimumPasswordAge",
        "description": "This security setting determines the period of time (in days) that a password must be used before the user can change it. You can set a value between 1 and 998 days, or you can allow changes immediately by setting the number of days to 0.  The minimum password age must be less than the Maximum password age, unless the maximum password age is set to 0, indicating that passwords will never expire. If the maximum password age is set to 0, the minimum password age can be set to any value between 0 and 998.  Configure the minimum password age to be more than 0 if you want Enforce password history to be effective. Without a minimum password age, users can cycle through passwords repeatedly until they get to an old favorite. The default setting does not follow this recommendation, so that an administrator can specify a password for a user and then require the user to change the administrator-defined password when the user logs on. If the password history is set to 0, the user does not have to choose a new password. For this reason, Enforce password history is set to 1 by default.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 99
        },
        "scope": "device"
      },
      "PasswordComplexity": {
        "name": "PasswordComplexity",
        "description": "Password must meet complexity requirements                    This security setting determines whether passwords must meet complexity requirements.  If this policy is enabled, passwords must meet the following minimum requirements:  Not contain the user's account name or parts of the user's full name that exceed two consecutive characters Be at least six characters in length Contain characters from three of the following four categories: English uppercase characters (A through Z) English lowercase characters (a through z) Base 10 digits (0 through 9) Non-alphabetic characters (for example, !, $, #, %) Complexity requirements are enforced when passwords are changed or created.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "PasswordHistorySize": {
        "name": "PasswordHistorySize",
        "description": "Enforce password history                    This security setting determines the number of unique new passwords that have to be associated with a user account before an old password can be reused. The value must be between 0 and 24 passwords.  This policy enables administrators to enhance security by ensuring that old passwords are not reused continually.  Default:  24 on domain controllers. 0 on stand-alone servers.  Note: By default, member computers follow the configuration of their domain controllers. To maintain the effectiveness of the password history, do not allow passwords to be changed immediately after they were just changed by also enabling the Minimum password age security policy setting. For information about the minimum password age security policy setting, see Minimum password age.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 2
        },
        "scope": "device"
      },
      "PreventEnablingLockScreenCamera": {
        "name": "PreventEnablingLockScreenCamera",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventLockScreenSlideShow": {
        "name": "PreventLockScreenSlideShow",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ScreenTimeoutWhileLocked": {
        "name": "ScreenTimeoutWhileLocked",
        "description": "Specifies whether to show a user-configurable setting to control the screen timeout while on the lock screen of Windows 10 Mobile devices.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 10,
          "max": 180
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Display": {
    "name": "Display",
    "policies": {
      "DisablePerProcessDpiForApps": {
        "name": "DisablePerProcessDpiForApps",
        "description": "This policy allows you to disable Per-Process System DPI for a semicolon-separated list of applications. Applications can be specified either by using full paths or with filenames and extensions. This policy will override the system-wide default value.",
        "format": "string",
        "scope": "device"
      },
      "EnablePerProcessDpi": {
        "name": "EnablePerProcessDpi",
        "description": "Enable or disable Per-Process System DPI for all applications.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable."
            },
            "1": {
              "description": "Enable."
            }
          }
        },
        "scope": "device"
      },
      "EnablePerProcessDpiForApps": {
        "name": "EnablePerProcessDpiForApps",
        "description": "This policy allows you to enable Per-Process System DPI for a semicolon-separated list of applications. Applications can be specified either by using full paths or with filenames and extensions. This policy will override the system-wide default value.",
        "format": "string",
        "scope": "device"
      },
      "TurnOffGdiDPIScalingForApps": {
        "name": "TurnOffGdiDPIScalingForApps",
        "description": "This policy allows to force turn off GDI DPI Scaling for a semicolon separated list of applications. Applications can be specified either by using full path or just filename and extension.",
        "format": "string",
        "scope": "device"
      },
      "TurnOnGdiDPIScalingForApps": {
        "name": "TurnOnGdiDPIScalingForApps",
        "description": "This policy allows to turn on GDI DPI Scaling for a semicolon separated list of applications. Applications can be specified either by using full path or just filename and extension.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/DmaGuard": {
    "name": "DmaGuard",
    "policies": {
      "DeviceEnumerationPolicy": {
        "name": "DeviceEnumerationPolicy",
        "description": "This policy is intended to provide additional security against external DMA capable devices. It allows for more control over the enumeration of external DMA capable devices incompatible with DMA Remapping/device memory isolation and sandboxing. Device memory sandboxing allows the OS to leverage the I/O Memory Management Unit (IOMMU) of a device to block unallowed I/O, or memory access, by the peripheral. In other words, the OS assigns a certain memory range to the peripheral. If the peripheral attempts to read/write to memory outside of the assigned range, the OS blocks it. This policy only takes effect when Kernel DMA Protection is supported and enabled by the system firmware. Kernel DMA Protection is a platform feature that cannot be controlled via policy or by end user. It has to be supported by the system at the time of manufacturing. To check if the system supports Kernel DMA Protection, please check the Kernel DMA Protection field in the Summary page of MSINFO32. exe. NoteThis policy does not apply to 1394/Firewire, PCMCIA, CardBus, or ExpressCard devices. Supported values:0 - Block all (Most restrictive): Devices with DMA remapping compatible drivers will be allowed to enumerate at any time. Devices with DMA remapping incompatible drivers will never be allowed to start and perform DMA at any time. 1 - Only after log in/screen unlock (Default): Devices with DMA remapping compatible drivers will be allowed to enumerate at any time. Devices with DMA remapping incompatible drivers will only be enumerated after the user unlocks the screen2 - Allow all (Least restrictive): All external DMA capable PCIe devices will be enumerated at any time",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Block all (Most restrictive)"
            },
            "1": {
              "description": "Only after log in/screen unlock"
            },
            "2": {
              "description": "Allow all (Least restrictive)"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Eap": {
    "name": "Eap",
    "policies": {
      "AllowTLS1_3": {
        "name": "AllowTLS1_3",
        "description": "Added in Windows 10, version 21H1. Allow or disallow use of TLS 1.3 during EAP client authentication.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Use of TLS version 1.3 is not allowed for authentication."
            },
            "1": {
              "description": "Use of TLS version 1.3 is allowed for authentication."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Education": {
    "name": "Education",
    "policies": {
      "EnableEduThemes": {
        "name": "EnableEduThemes",
        "description": "This policy setting allows you to control whether EDU-specific theme packs are available in Settings > Personalization. If you disable or don't configure this policy setting, EDU-specific theme packs will not be included. If you enable this policy setting, users will be able to personalize their devices with EDU-specific themes.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "IsEducationEnvironment": {
        "name": "IsEducationEnvironment",
        "description": "This policy setting allows tenant to control whether to declare this OS as an education environment",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ErrorReporting": {
    "name": "ErrorReporting",
    "policies": {
      "CustomizeConsentSettings": {
        "name": "CustomizeConsentSettings",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableWindowsErrorReporting": {
        "name": "DisableWindowsErrorReporting",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisplayErrorNotification": {
        "name": "DisplayErrorNotification",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DoNotSendAdditionalData": {
        "name": "DoNotSendAdditionalData",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventCriticalErrorDisplay": {
        "name": "PreventCriticalErrorDisplay",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/EventLogService": {
    "name": "EventLogService",
    "policies": {
      "ControlEventLogBehavior": {
        "name": "ControlEventLogBehavior",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SpecifyMaximumFileSizeApplicationLog": {
        "name": "SpecifyMaximumFileSizeApplicationLog",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SpecifyMaximumFileSizeSecurityLog": {
        "name": "SpecifyMaximumFileSizeSecurityLog",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SpecifyMaximumFileSizeSystemLog": {
        "name": "SpecifyMaximumFileSizeSystemLog",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Experience": {
    "name": "Experience",
    "policies": {
      "AllowClipboardHistory": {
        "name": "AllowClipboardHistory",
        "description": "Allows history of clipboard items to be stored in memory.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowCopyPaste": {
        "name": "AllowCopyPaste",
        "description": "This policy is deprecated.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowCortana": {
        "name": "AllowCortana",
        "description": "Specifies whether Cortana is allowed on the device. If you enable or don’t configure this setting, Cortana is allowed on the device. If you disable this setting, Cortana is turned off. When Cortana is off, users will still be able to use search to find items on the device. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowDeviceDiscovery": {
        "name": "AllowDeviceDiscovery",
        "description": "Allows users to turn on/off device discovery UX. When set to 0 , the projection pane is disabled. The Win+P and Win+K shortcut keys will not work on. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "AllowFindMyDevice": {
        "name": "AllowFindMyDevice",
        "description": "This policy turns on Find My Device. When Find My Device is on, the device and its location are registered in the cloud so that the device can be located when the user initiates a Find command from account. microsoft. com. In Windows 10, version 1709 devices that are compatible with active digitizers, enabling Find My Device will also allow the user to view the last location of use of their active digitizer on their device; this location is stored locally on the user's device after each use of their active digitizer. When Find My Device is off, the device and its location are not registered and the Find My Device feature will not work. In Windows 10, version 1709 the user will not be able to view the location of the last use of their active digitizer on their device.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowManualMDMUnenrollment": {
        "name": "AllowManualMDMUnenrollment",
        "description": "Specifies whether to allow the user to delete the workplace account using the workplace control panel. If the device is Azure Active Directory joined and MDM enrolled (e. g. auto-enrolled), then disabling the MDM unenrollment has no effect. Note The MDM server can always remotely delete the account. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowSIMErrorDialogPromptWhenNoSIM": {
        "name": "AllowSIMErrorDialogPromptWhenNoSIM",
        "description": "Allow SIM error diaglog prompts when no SIM is inserted.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowSaveAsOfOfficeFiles": {
        "name": "AllowSaveAsOfOfficeFiles",
        "description": "This policy is deprecated.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowScreenCapture": {
        "name": "AllowScreenCapture",
        "description": "Allow screen capture",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowSharingOfOfficeFiles": {
        "name": "AllowSharingOfOfficeFiles",
        "description": "This policy is deprecated.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowSyncMySettings": {
        "name": "AllowSyncMySettings",
        "description": "Allows or disallows all Windows sync settings on the device. For information about what settings are sync'ed, see About sync setting on Windows 10 devices.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Sync settings are not allowed."
            },
            "1": {
              "description": "Sync settings allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowTaskSwitcher": {
        "name": "AllowTaskSwitcher",
        "description": "This policy is deprecated.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowVoiceRecording": {
        "name": "AllowVoiceRecording",
        "description": "This policy is deprecated.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowWindowsConsumerFeatures": {
        "name": "AllowWindowsConsumerFeatures",
        "description": "Prior to Windows 10, version 1803, this policy had User scope. This policy allows IT admins to turn on experiences that are typically for consumers only, such as Start suggestions, Membership notifications, Post-OOBE app install and redirect tiles. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowWindowsTips": {
        "name": "AllowWindowsTips",
        "description": "Enables or disables Windows Tips / soft landing.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureChatIcon": {
        "name": "ConfigureChatIcon",
        "description": "This policy is deprecated",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not Configured"
            },
            "1": {
              "description": "Show"
            },
            "2": {
              "description": "Hide"
            },
            "3": {
              "description": "Disabled"
            }
          }
        },
        "scope": "device"
      },
      "DisableCloudOptimizedContent": {
        "name": "DisableCloudOptimizedContent",
        "description": "This policy controls Windows experiences that use the cloud optimized content client component. If you enable this policy, they will present only default content. If you disable or do not configure this policy, they will be able to use cloud provided content.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "DisableConsumerAccountStateContent": {
        "name": "DisableConsumerAccountStateContent",
        "description": "This policy controls Windows experiences that use the cloud consumer account state content client component. If you enable this policy, they will present only default content. If you disable or do not configure this policy, they will be able to use cloud provided content.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "DisableTextTranslation": {
        "name": "DisableTextTranslation",
        "description": "Allows Text Translation feature to be enabled/disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enable Text Translation"
            },
            "1": {
              "description": "Disable Text Translation"
            }
          }
        },
        "scope": "device"
      },
      "DoNotShowFeedbackNotifications": {
        "name": "DoNotShowFeedbackNotifications",
        "description": "Prevents devices from showing feedback questions from Microsoft. If you enable this policy setting, users will no longer see feedback notifications through the Feedback hub app. If you disable or do not configure this policy setting, users may see notifications through the Feedback hub app asking users for feedback. If you disable or do not configure this policy setting, users can control how often they receive feedback questions.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Feedback notifications are not disabled. The actual state of feedback notifications on the device will then depend on what GP has configured or what the user has configured locally."
            },
            "1": {
              "description": "Feedback notifications are disabled."
            }
          }
        },
        "scope": "device"
      },
      "DoNotSyncBrowserSettings": {
        "name": "DoNotSyncBrowserSettings",
        "description": "You can configure Microsoft Edge, when enabled, to prevent the \"browser\" group from using the Sync your Settings option to sync information, such as history and favorites, between user's devices. If you want syncing turned off by default in Microsoft Edge but not disabled, enable the Allow users to turn browser syncing on policy. If disabled or not configured, the Sync your Settings options are turned on in Microsoft Edge by default, and configurable by the user.                          Related policy: PreventUsersFromTurningOnBrowserSyncing                         0 (default) = allow syncing, 2 = disable syncing",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow syncing"
            },
            "2": {
              "description": "Disable Syncing"
            }
          }
        },
        "scope": "device"
      },
      "PreventUsersFromTurningOnBrowserSyncing": {
        "name": "PreventUsersFromTurningOnBrowserSyncing",
        "description": "You can configure Microsoft Edge to allow users to turn on the Sync your Settings option to sync information, such as history and favorites, between user's devices.  When enabled and you enable the Do not sync browser setting policy, browser settings sync automatically. If disabled, users have the option to sync the browser settings.                         Related policy: DoNotSyncBrowserSettings                         1 (default) = Do not allow users to turn on syncing, 0 = Allows users to turn on syncing",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed/turned on. Users can sync the browser settings."
            },
            "1": {
              "description": "Prevented/turned off."
            }
          }
        },
        "scope": "device"
      },
      "ShowLockOnUserTile": {
        "name": "ShowLockOnUserTile",
        "description": "Shows or hides lock from the user tile menu. If you enable this policy setting, the lock option will be shown in the User Tile menu.  If you disable this policy setting, the lock option will never be shown in the User Tile menu.  If you do not configure this policy setting, users will be able to choose whether they want lock to show through the Power Options Control Panel.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The lock option is not displayed in the User Tile menu."
            },
            "1": {
              "description": "The lock option is displayed in the User Tile menu."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ExploitGuard": {
    "name": "ExploitGuard",
    "policies": {
      "ExploitProtectionSettings": {
        "name": "ExploitProtectionSettings",
        "description": "Enables the IT admin to push out a configuration representing the desired system and application mitigation options to all the devices in the organization. The configuration is represented by an XML. For more information Exploit Protection, see Enable Exploit Protection on Devices and Import, export, and deploy Exploit Protection configurations. The system settings require a reboot; the application settings do not require a reboot.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/FederatedAuthentication": {
    "name": "FederatedAuthentication",
    "policies": {
      "EnableWebSignInForPrimaryUser": {
        "name": "EnableWebSignInForPrimaryUser",
        "description": "Specifies whether web-based sign-in is enabled with the Primary User experience",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Feature defaults as appropriate for edition and device capabilities. As of now, all editions/devices exhibit Disabled behavior by default. However, this may change for future editions/devices."
            },
            "1": {
              "description": "Enabled. Web Sign-in Credential Provider will be enabled for device sign-in."
            },
            "2": {
              "description": "Disabled. Web Sign-in Credential Provider will be not be enabled for device sign-in."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/FileExplorer": {
    "name": "FileExplorer",
    "policies": {
      "AllowOptionToShowNetwork": {
        "name": "AllowOptionToShowNetwork",
        "description": "When the Network folder is restricted, give the user the option to enumerate and navigate into it.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not Allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowOptionToShowThisPC": {
        "name": "AllowOptionToShowThisPC",
        "description": "When This PC location is restricted, give the user the option to enumerate and navigate into it.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not Allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "DisableGraphRecentItems": {
        "name": "DisableGraphRecentItems",
        "description": "Turning off files from Office.com will prevent File Explorer from requesting recent cloud file metadata and displaying it in the Quick access view.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "File Explorer will request cloud file metadata and display it in the homepage and other views."
            },
            "1": {
              "description": "File Explorer will not request cloud file metadata or display it in the homepage or other views."
            }
          }
        },
        "scope": "device"
      },
      "SetAllowedFolderLocations": {
        "name": "SetAllowedFolderLocations",
        "description": "A value that can represent one or more folder locations in File Explorer. If not specified, the default is access to all folder locations.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Access to all folder locations."
            },
            "13": {
              "description": "Documents, Pictures, Downloads"
            },
            "15": {
              "description": "Desktop, Documents, Pictures, Downloads"
            },
            "31": {
              "description": "Desktop, Documents, Pictures, Downloads, Network"
            },
            "47": {
              "description": "This PC, Desktop, Documents, Pictures, Downloads"
            },
            "63": {
              "description": "This PC, Desktop, Documents, Pictures, Downloads, Network"
            }
          }
        },
        "scope": "device"
      },
      "SetAllowedStorageLocations": {
        "name": "SetAllowedStorageLocations",
        "description": "A value that can represent one or more storage locations in File Explorer. If not specified, the default is access to all storage locations.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Access to all storage locations."
            },
            "1": {
              "description": "Removable Drives"
            },
            "2": {
              "description": "Sync roots"
            },
            "3": {
              "description": "Removable Drives, Sync roots"
            },
            "4": {
              "description": "Local Drives"
            },
            "5": {
              "description": "Removable Drives, Local Drives"
            },
            "6": {
              "description": "Sync Roots, Local Drives"
            },
            "7": {
              "description": "Removable Drives, Sync Roots, Local Drives"
            }
          }
        },
        "scope": "device"
      },
      "TurnOffDataExecutionPreventionForExplorer": {
        "name": "TurnOffDataExecutionPreventionForExplorer",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TurnOffHeapTerminationOnCorruption": {
        "name": "TurnOffHeapTerminationOnCorruption",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/FileSystem": {
    "name": "FileSystem",
    "policies": {
      "DevDriveAttachPolicy": {
        "name": "DevDriveAttachPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableDevDrive": {
        "name": "EnableDevDrive",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Games": {
    "name": "Games",
    "policies": {
      "AllowAdvancedGamingServices": {
        "name": "AllowAdvancedGamingServices",
        "description": "Specifies whether advanced gaming services can be used. These services may send data to Microsoft or publishers of games that use these services.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Handwriting": {
    "name": "Handwriting",
    "policies": {
      "PanelDefaultModeDocked": {
        "name": "PanelDefaultModeDocked",
        "description": "Specifies whether the handwriting panel comes up floating near the text box or attached to the bottom of the screen",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/HumanPresence": {
    "name": "HumanPresence",
    "policies": {
      "ForceAllowDimWhenExternalDisplayConnected": {
        "name": "ForceAllowDimWhenExternalDisplayConnected",
        "description": "Determines whether Allow Adaptive Dimming When External Display Connected checkbox is forced checked/unchecked by the MDM policy. The user will not be able to change this setting and the checkbox in the UI will be greyed out.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "DefaultToUserChoice."
            },
            "1": {
              "description": "ForcedChecked."
            },
            "2": {
              "description": "ForcedUnchecked."
            }
          }
        },
        "scope": "device"
      },
      "ForceAllowLockWhenExternalDisplayConnected": {
        "name": "ForceAllowLockWhenExternalDisplayConnected",
        "description": "Determines whether Allow Lock on Leave When External Display Connected checkbox is forced checked/unchecked by the MDM policy. The user will not be able to change this setting and the checkbox in the UI will be greyed out.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "DefaultToUserChoice."
            },
            "1": {
              "description": "ForcedChecked."
            },
            "2": {
              "description": "ForcedUnchecked."
            }
          }
        },
        "scope": "device"
      },
      "ForceAllowWakeWhenExternalDisplayConnected": {
        "name": "ForceAllowWakeWhenExternalDisplayConnected",
        "description": "Determines whether Allow Wake on Approach When External Display Connected checkbox is forced checked/unchecked by the MDM policy. The user will not be able to change this setting and the checkbox in the UI will be greyed out.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "DefaultToUserChoice."
            },
            "1": {
              "description": "ForcedChecked."
            },
            "2": {
              "description": "ForcedUnchecked."
            }
          }
        },
        "scope": "device"
      },
      "ForceDisableWakeWhenBatterySaverOn": {
        "name": "ForceDisableWakeWhenBatterySaverOn",
        "description": "Determines whether Disable Wake on Approach When Battery Saver On checkbox is forced checked/unchecked by the MDM policy. The user will not be able to change this setting and the checkbox in the UI will be greyed out.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "DefaultToUserChoice."
            },
            "1": {
              "description": "ForcedChecked."
            },
            "2": {
              "description": "ForcedUnchecked."
            }
          }
        },
        "scope": "device"
      },
      "ForceInstantDim": {
        "name": "ForceInstantDim",
        "description": "Determines whether Attention Based Display Dimming is forced on/off by the MDM policy. The user will not be able to change this setting and the toggle in the UI will be greyed out.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "DefaultToUserChoice."
            },
            "1": {
              "description": "ForcedOn."
            },
            "2": {
              "description": "ForcedOff."
            }
          }
        },
        "scope": "device"
      },
      "ForceInstantLock": {
        "name": "ForceInstantLock",
        "description": "Determines whether Lock on Leave is forced on/off by the MDM policy. The user will not be able to change this setting and the toggle in the UI will be greyed out.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "DefaultToUserChoice."
            },
            "1": {
              "description": "ForcedOn."
            },
            "2": {
              "description": "ForcedOff."
            }
          }
        },
        "scope": "device"
      },
      "ForceInstantWake": {
        "name": "ForceInstantWake",
        "description": "Determines whether Wake on Arrival is forced on/off by the MDM policy. The user will not be able to change this setting and the toggle in the UI will be greyed out.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "DefaultToUserChoice."
            },
            "1": {
              "description": "ForcedOn."
            },
            "2": {
              "description": "ForcedOff."
            }
          }
        },
        "scope": "device"
      },
      "ForceLockTimeout": {
        "name": "ForceLockTimeout",
        "description": "Determines the timeout for Lock on Leave forced by the MDM policy. The user will be unable to change this setting and the toggle in the UI will be greyed out.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "DefaultToUserChoice."
            },
            "1": {
              "description": "Immediate."
            },
            "10": {
              "description": "TenSeconds."
            },
            "120": {
              "description": "TwoMinutes"
            },
            "30": {
              "description": "ThirtySeconds."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/InternetExplorer": {
    "name": "InternetExplorer",
    "policies": {
      "AddSearchProvider": {
        "name": "AddSearchProvider",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowActiveXFiltering": {
        "name": "AllowActiveXFiltering",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowAddOnList": {
        "name": "AllowAddOnList",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowCertificateAddressMismatchWarning": {
        "name": "AllowCertificateAddressMismatchWarning",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowDeletingBrowsingHistoryOnExit": {
        "name": "AllowDeletingBrowsingHistoryOnExit",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowEnhancedProtectedMode": {
        "name": "AllowEnhancedProtectedMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowEnhancedSuggestionsInAddressBar": {
        "name": "AllowEnhancedSuggestionsInAddressBar",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowEnterpriseModeFromToolsMenu": {
        "name": "AllowEnterpriseModeFromToolsMenu",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowEnterpriseModeSiteList": {
        "name": "AllowEnterpriseModeSiteList",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowFallbackToSSL3": {
        "name": "AllowFallbackToSSL3",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowInternetExplorer7PolicyList": {
        "name": "AllowInternetExplorer7PolicyList",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowInternetExplorerStandardsMode": {
        "name": "AllowInternetExplorerStandardsMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowInternetZoneTemplate": {
        "name": "AllowInternetZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowIntranetZoneTemplate": {
        "name": "AllowIntranetZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowLocalMachineZoneTemplate": {
        "name": "AllowLocalMachineZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowLockedDownInternetZoneTemplate": {
        "name": "AllowLockedDownInternetZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowLockedDownIntranetZoneTemplate": {
        "name": "AllowLockedDownIntranetZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowLockedDownLocalMachineZoneTemplate": {
        "name": "AllowLockedDownLocalMachineZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowLockedDownRestrictedSitesZoneTemplate": {
        "name": "AllowLockedDownRestrictedSitesZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowOneWordEntry": {
        "name": "AllowOneWordEntry",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowSaveTargetAsInIEMode": {
        "name": "AllowSaveTargetAsInIEMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowSiteToZoneAssignmentList": {
        "name": "AllowSiteToZoneAssignmentList",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowSoftwareWhenSignatureIsInvalid": {
        "name": "AllowSoftwareWhenSignatureIsInvalid",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowSuggestedSites": {
        "name": "AllowSuggestedSites",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowTrustedSitesZoneTemplate": {
        "name": "AllowTrustedSitesZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowsLockedDownTrustedSitesZoneTemplate": {
        "name": "AllowsLockedDownTrustedSitesZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowsRestrictedSitesZoneTemplate": {
        "name": "AllowsRestrictedSitesZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CheckServerCertificateRevocation": {
        "name": "CheckServerCertificateRevocation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CheckSignaturesOnDownloadedPrograms": {
        "name": "CheckSignaturesOnDownloadedPrograms",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureEdgeRedirectChannel": {
        "name": "ConfigureEdgeRedirectChannel",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConsistentMimeHandlingInternetExplorerProcesses": {
        "name": "ConsistentMimeHandlingInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableBypassOfSmartScreenWarnings": {
        "name": "DisableBypassOfSmartScreenWarnings",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableBypassOfSmartScreenWarningsAboutUncommonFiles": {
        "name": "DisableBypassOfSmartScreenWarningsAboutUncommonFiles",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableCompatView": {
        "name": "DisableCompatView",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableConfiguringHistory": {
        "name": "DisableConfiguringHistory",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableCrashDetection": {
        "name": "DisableCrashDetection",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableCustomerExperienceImprovementProgramParticipation": {
        "name": "DisableCustomerExperienceImprovementProgramParticipation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableDeletingUserVisitedWebsites": {
        "name": "DisableDeletingUserVisitedWebsites",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableEnclosureDownloading": {
        "name": "DisableEnclosureDownloading",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableEncryptionSupport": {
        "name": "DisableEncryptionSupport",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableFeedsBackgroundSync": {
        "name": "DisableFeedsBackgroundSync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableFirstRunWizard": {
        "name": "DisableFirstRunWizard",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableFlipAheadFeature": {
        "name": "DisableFlipAheadFeature",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableGeolocation": {
        "name": "DisableGeolocation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableHTMLApplication": {
        "name": "DisableHTMLApplication",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableIgnoringCertificateErrors": {
        "name": "DisableIgnoringCertificateErrors",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableInPrivateBrowsing": {
        "name": "DisableInPrivateBrowsing",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableInternetExplorerApp": {
        "name": "DisableInternetExplorerApp",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableProcessesInEnhancedProtectedMode": {
        "name": "DisableProcessesInEnhancedProtectedMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableProxyChange": {
        "name": "DisableProxyChange",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableSearchProviderChange": {
        "name": "DisableSearchProviderChange",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableSecondaryHomePageChange": {
        "name": "DisableSecondaryHomePageChange",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableSecuritySettingsCheck": {
        "name": "DisableSecuritySettingsCheck",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableUpdateCheck": {
        "name": "DisableUpdateCheck",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableWebAddressAutoComplete": {
        "name": "DisableWebAddressAutoComplete",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DoNotAllowActiveXControlsInProtectedMode": {
        "name": "DoNotAllowActiveXControlsInProtectedMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DoNotAllowUsersToAddSites": {
        "name": "DoNotAllowUsersToAddSites",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DoNotAllowUsersToChangePolicies": {
        "name": "DoNotAllowUsersToChangePolicies",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DoNotBlockOutdatedActiveXControls": {
        "name": "DoNotBlockOutdatedActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DoNotBlockOutdatedActiveXControlsOnSpecificDomains": {
        "name": "DoNotBlockOutdatedActiveXControlsOnSpecificDomains",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableExtendedIEModeHotkeys": {
        "name": "EnableExtendedIEModeHotkeys",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableGlobalWindowListInIEMode": {
        "name": "EnableGlobalWindowListInIEMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IncludeAllLocalSites": {
        "name": "IncludeAllLocalSites",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IncludeAllNetworkPaths": {
        "name": "IncludeAllNetworkPaths",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowAccessToDataSources": {
        "name": "InternetZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "InternetZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "InternetZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowCopyPasteViaScript": {
        "name": "InternetZoneAllowCopyPasteViaScript",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowDragAndDropCopyAndPasteFiles": {
        "name": "InternetZoneAllowDragAndDropCopyAndPasteFiles",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowFontDownloads": {
        "name": "InternetZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowLessPrivilegedSites": {
        "name": "InternetZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowLoadingOfXAMLFiles": {
        "name": "InternetZoneAllowLoadingOfXAMLFiles",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowNETFrameworkReliantComponents": {
        "name": "InternetZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowOnlyApprovedDomainsToUseActiveXControls": {
        "name": "InternetZoneAllowOnlyApprovedDomainsToUseActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl": {
        "name": "InternetZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowScriptInitiatedWindows": {
        "name": "InternetZoneAllowScriptInitiatedWindows",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowScriptingOfInternetExplorerWebBrowserControls": {
        "name": "InternetZoneAllowScriptingOfInternetExplorerWebBrowserControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowScriptlets": {
        "name": "InternetZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowSmartScreenIE": {
        "name": "InternetZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowUpdatesToStatusBarViaScript": {
        "name": "InternetZoneAllowUpdatesToStatusBarViaScript",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowUserDataPersistence": {
        "name": "InternetZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneAllowVBScriptToRunInInternetExplorer": {
        "name": "InternetZoneAllowVBScriptToRunInInternetExplorer",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneDoNotRunAntimalwareAgainstActiveXControls": {
        "name": "InternetZoneDoNotRunAntimalwareAgainstActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneDownloadSignedActiveXControls": {
        "name": "InternetZoneDownloadSignedActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneDownloadUnsignedActiveXControls": {
        "name": "InternetZoneDownloadUnsignedActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneEnableCrossSiteScriptingFilter": {
        "name": "InternetZoneEnableCrossSiteScriptingFilter",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows": {
        "name": "InternetZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows": {
        "name": "InternetZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneEnableMIMESniffing": {
        "name": "InternetZoneEnableMIMESniffing",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneEnableProtectedMode": {
        "name": "InternetZoneEnableProtectedMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneIncludeLocalPathWhenUploadingFilesToServer": {
        "name": "InternetZoneIncludeLocalPathWhenUploadingFilesToServer",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneInitializeAndScriptActiveXControls": {
        "name": "InternetZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneJavaPermissions": {
        "name": "InternetZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneLaunchingApplicationsAndFilesInIFRAME": {
        "name": "InternetZoneLaunchingApplicationsAndFilesInIFRAME",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneLogonOptions": {
        "name": "InternetZoneLogonOptions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneNavigateWindowsAndFrames": {
        "name": "InternetZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode": {
        "name": "InternetZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneShowSecurityWarningForPotentiallyUnsafeFiles": {
        "name": "InternetZoneShowSecurityWarningForPotentiallyUnsafeFiles",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "InternetZoneUsePopupBlocker": {
        "name": "InternetZoneUsePopupBlocker",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntranetZoneAllowAccessToDataSources": {
        "name": "IntranetZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntranetZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "IntranetZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntranetZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "IntranetZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntranetZoneAllowFontDownloads": {
        "name": "IntranetZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntranetZoneAllowLessPrivilegedSites": {
        "name": "IntranetZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntranetZoneAllowNETFrameworkReliantComponents": {
        "name": "IntranetZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntranetZoneAllowScriptlets": {
        "name": "IntranetZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntranetZoneAllowSmartScreenIE": {
        "name": "IntranetZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntranetZoneAllowUserDataPersistence": {
        "name": "IntranetZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntranetZoneDoNotRunAntimalwareAgainstActiveXControls": {
        "name": "IntranetZoneDoNotRunAntimalwareAgainstActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntranetZoneInitializeAndScriptActiveXControls": {
        "name": "IntranetZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntranetZoneJavaPermissions": {
        "name": "IntranetZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntranetZoneLogonOptions": {
        "name": "IntranetZoneLogonOptions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IntranetZoneNavigateWindowsAndFrames": {
        "name": "IntranetZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "JScriptReplacement": {
        "name": "JScriptReplacement",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "KeepIntranetSitesInInternetExplorer": {
        "name": "KeepIntranetSitesInInternetExplorer",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalMachineZoneAllowAccessToDataSources": {
        "name": "LocalMachineZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalMachineZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "LocalMachineZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalMachineZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "LocalMachineZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalMachineZoneAllowFontDownloads": {
        "name": "LocalMachineZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalMachineZoneAllowLessPrivilegedSites": {
        "name": "LocalMachineZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalMachineZoneAllowNETFrameworkReliantComponents": {
        "name": "LocalMachineZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalMachineZoneAllowScriptlets": {
        "name": "LocalMachineZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalMachineZoneAllowSmartScreenIE": {
        "name": "LocalMachineZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalMachineZoneAllowUserDataPersistence": {
        "name": "LocalMachineZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalMachineZoneDoNotRunAntimalwareAgainstActiveXControls": {
        "name": "LocalMachineZoneDoNotRunAntimalwareAgainstActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalMachineZoneInitializeAndScriptActiveXControls": {
        "name": "LocalMachineZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalMachineZoneJavaPermissions": {
        "name": "LocalMachineZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalMachineZoneLogonOptions": {
        "name": "LocalMachineZoneLogonOptions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LocalMachineZoneNavigateWindowsAndFrames": {
        "name": "LocalMachineZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownInternetZoneAllowAccessToDataSources": {
        "name": "LockedDownInternetZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownInternetZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "LockedDownInternetZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownInternetZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "LockedDownInternetZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownInternetZoneAllowFontDownloads": {
        "name": "LockedDownInternetZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownInternetZoneAllowLessPrivilegedSites": {
        "name": "LockedDownInternetZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownInternetZoneAllowNETFrameworkReliantComponents": {
        "name": "LockedDownInternetZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownInternetZoneAllowScriptlets": {
        "name": "LockedDownInternetZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownInternetZoneAllowSmartScreenIE": {
        "name": "LockedDownInternetZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownInternetZoneAllowUserDataPersistence": {
        "name": "LockedDownInternetZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownInternetZoneInitializeAndScriptActiveXControls": {
        "name": "LockedDownInternetZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownInternetZoneJavaPermissions": {
        "name": "LockedDownInternetZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownInternetZoneNavigateWindowsAndFrames": {
        "name": "LockedDownInternetZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownIntranetJavaPermissions": {
        "name": "LockedDownIntranetJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownIntranetZoneAllowAccessToDataSources": {
        "name": "LockedDownIntranetZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownIntranetZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "LockedDownIntranetZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownIntranetZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "LockedDownIntranetZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownIntranetZoneAllowFontDownloads": {
        "name": "LockedDownIntranetZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownIntranetZoneAllowLessPrivilegedSites": {
        "name": "LockedDownIntranetZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownIntranetZoneAllowNETFrameworkReliantComponents": {
        "name": "LockedDownIntranetZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownIntranetZoneAllowScriptlets": {
        "name": "LockedDownIntranetZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownIntranetZoneAllowSmartScreenIE": {
        "name": "LockedDownIntranetZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownIntranetZoneAllowUserDataPersistence": {
        "name": "LockedDownIntranetZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownIntranetZoneInitializeAndScriptActiveXControls": {
        "name": "LockedDownIntranetZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownIntranetZoneNavigateWindowsAndFrames": {
        "name": "LockedDownIntranetZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownLocalMachineZoneAllowAccessToDataSources": {
        "name": "LockedDownLocalMachineZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownLocalMachineZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "LockedDownLocalMachineZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownLocalMachineZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "LockedDownLocalMachineZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownLocalMachineZoneAllowFontDownloads": {
        "name": "LockedDownLocalMachineZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownLocalMachineZoneAllowLessPrivilegedSites": {
        "name": "LockedDownLocalMachineZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownLocalMachineZoneAllowNETFrameworkReliantComponents": {
        "name": "LockedDownLocalMachineZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownLocalMachineZoneAllowScriptlets": {
        "name": "LockedDownLocalMachineZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownLocalMachineZoneAllowSmartScreenIE": {
        "name": "LockedDownLocalMachineZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownLocalMachineZoneAllowUserDataPersistence": {
        "name": "LockedDownLocalMachineZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownLocalMachineZoneInitializeAndScriptActiveXControls": {
        "name": "LockedDownLocalMachineZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownLocalMachineZoneJavaPermissions": {
        "name": "LockedDownLocalMachineZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownLocalMachineZoneNavigateWindowsAndFrames": {
        "name": "LockedDownLocalMachineZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownRestrictedSitesZoneAllowAccessToDataSources": {
        "name": "LockedDownRestrictedSitesZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownRestrictedSitesZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "LockedDownRestrictedSitesZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownRestrictedSitesZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "LockedDownRestrictedSitesZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownRestrictedSitesZoneAllowFontDownloads": {
        "name": "LockedDownRestrictedSitesZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownRestrictedSitesZoneAllowLessPrivilegedSites": {
        "name": "LockedDownRestrictedSitesZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownRestrictedSitesZoneAllowNETFrameworkReliantComponents": {
        "name": "LockedDownRestrictedSitesZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownRestrictedSitesZoneAllowScriptlets": {
        "name": "LockedDownRestrictedSitesZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownRestrictedSitesZoneAllowSmartScreenIE": {
        "name": "LockedDownRestrictedSitesZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownRestrictedSitesZoneAllowUserDataPersistence": {
        "name": "LockedDownRestrictedSitesZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownRestrictedSitesZoneInitializeAndScriptActiveXControls": {
        "name": "LockedDownRestrictedSitesZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownRestrictedSitesZoneJavaPermissions": {
        "name": "LockedDownRestrictedSitesZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownRestrictedSitesZoneNavigateWindowsAndFrames": {
        "name": "LockedDownRestrictedSitesZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownTrustedSitesZoneAllowAccessToDataSources": {
        "name": "LockedDownTrustedSitesZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownTrustedSitesZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "LockedDownTrustedSitesZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownTrustedSitesZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "LockedDownTrustedSitesZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownTrustedSitesZoneAllowFontDownloads": {
        "name": "LockedDownTrustedSitesZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownTrustedSitesZoneAllowLessPrivilegedSites": {
        "name": "LockedDownTrustedSitesZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownTrustedSitesZoneAllowNETFrameworkReliantComponents": {
        "name": "LockedDownTrustedSitesZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownTrustedSitesZoneAllowScriptlets": {
        "name": "LockedDownTrustedSitesZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownTrustedSitesZoneAllowSmartScreenIE": {
        "name": "LockedDownTrustedSitesZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownTrustedSitesZoneAllowUserDataPersistence": {
        "name": "LockedDownTrustedSitesZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownTrustedSitesZoneInitializeAndScriptActiveXControls": {
        "name": "LockedDownTrustedSitesZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownTrustedSitesZoneJavaPermissions": {
        "name": "LockedDownTrustedSitesZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "LockedDownTrustedSitesZoneNavigateWindowsAndFrames": {
        "name": "LockedDownTrustedSitesZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MKProtocolSecurityRestrictionInternetExplorerProcesses": {
        "name": "MKProtocolSecurityRestrictionInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MimeSniffingSafetyFeatureInternetExplorerProcesses": {
        "name": "MimeSniffingSafetyFeatureInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NewTabDefaultPage": {
        "name": "NewTabDefaultPage",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "NotificationBarInternetExplorerProcesses": {
        "name": "NotificationBarInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventManagingSmartScreenFilter": {
        "name": "PreventManagingSmartScreenFilter",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PreventPerUserInstallationOfActiveXControls": {
        "name": "PreventPerUserInstallationOfActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ProtectionFromZoneElevationInternetExplorerProcesses": {
        "name": "ProtectionFromZoneElevationInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RemoveRunThisTimeButtonForOutdatedActiveXControls": {
        "name": "RemoveRunThisTimeButtonForOutdatedActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ResetZoomForDialogInIEMode": {
        "name": "ResetZoomForDialogInIEMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictActiveXInstallInternetExplorerProcesses": {
        "name": "RestrictActiveXInstallInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictFileDownloadInternetExplorerProcesses": {
        "name": "RestrictFileDownloadInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowAccessToDataSources": {
        "name": "RestrictedSitesZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowActiveScripting": {
        "name": "RestrictedSitesZoneAllowActiveScripting",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "RestrictedSitesZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "RestrictedSitesZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowBinaryAndScriptBehaviors": {
        "name": "RestrictedSitesZoneAllowBinaryAndScriptBehaviors",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowCopyPasteViaScript": {
        "name": "RestrictedSitesZoneAllowCopyPasteViaScript",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowDragAndDropCopyAndPasteFiles": {
        "name": "RestrictedSitesZoneAllowDragAndDropCopyAndPasteFiles",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowFileDownloads": {
        "name": "RestrictedSitesZoneAllowFileDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowFontDownloads": {
        "name": "RestrictedSitesZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowLessPrivilegedSites": {
        "name": "RestrictedSitesZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowLoadingOfXAMLFiles": {
        "name": "RestrictedSitesZoneAllowLoadingOfXAMLFiles",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowMETAREFRESH": {
        "name": "RestrictedSitesZoneAllowMETAREFRESH",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowNETFrameworkReliantComponents": {
        "name": "RestrictedSitesZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowOnlyApprovedDomainsToUseActiveXControls": {
        "name": "RestrictedSitesZoneAllowOnlyApprovedDomainsToUseActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl": {
        "name": "RestrictedSitesZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowScriptInitiatedWindows": {
        "name": "RestrictedSitesZoneAllowScriptInitiatedWindows",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowScriptingOfInternetExplorerWebBrowserControls": {
        "name": "RestrictedSitesZoneAllowScriptingOfInternetExplorerWebBrowserControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowScriptlets": {
        "name": "RestrictedSitesZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowSmartScreenIE": {
        "name": "RestrictedSitesZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowUpdatesToStatusBarViaScript": {
        "name": "RestrictedSitesZoneAllowUpdatesToStatusBarViaScript",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowUserDataPersistence": {
        "name": "RestrictedSitesZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneAllowVBScriptToRunInInternetExplorer": {
        "name": "RestrictedSitesZoneAllowVBScriptToRunInInternetExplorer",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneDoNotRunAntimalwareAgainstActiveXControls": {
        "name": "RestrictedSitesZoneDoNotRunAntimalwareAgainstActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneDownloadSignedActiveXControls": {
        "name": "RestrictedSitesZoneDownloadSignedActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneDownloadUnsignedActiveXControls": {
        "name": "RestrictedSitesZoneDownloadUnsignedActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneEnableCrossSiteScriptingFilter": {
        "name": "RestrictedSitesZoneEnableCrossSiteScriptingFilter",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows": {
        "name": "RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows": {
        "name": "RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneEnableMIMESniffing": {
        "name": "RestrictedSitesZoneEnableMIMESniffing",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneIncludeLocalPathWhenUploadingFilesToServer": {
        "name": "RestrictedSitesZoneIncludeLocalPathWhenUploadingFilesToServer",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneInitializeAndScriptActiveXControls": {
        "name": "RestrictedSitesZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneJavaPermissions": {
        "name": "RestrictedSitesZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneLaunchingApplicationsAndFilesInIFRAME": {
        "name": "RestrictedSitesZoneLaunchingApplicationsAndFilesInIFRAME",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneLogonOptions": {
        "name": "RestrictedSitesZoneLogonOptions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneNavigateWindowsAndFrames": {
        "name": "RestrictedSitesZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneRunActiveXControlsAndPlugins": {
        "name": "RestrictedSitesZoneRunActiveXControlsAndPlugins",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode": {
        "name": "RestrictedSitesZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneScriptActiveXControlsMarkedSafeForScripting": {
        "name": "RestrictedSitesZoneScriptActiveXControlsMarkedSafeForScripting",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneScriptingOfJavaApplets": {
        "name": "RestrictedSitesZoneScriptingOfJavaApplets",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneShowSecurityWarningForPotentiallyUnsafeFiles": {
        "name": "RestrictedSitesZoneShowSecurityWarningForPotentiallyUnsafeFiles",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneTurnOnProtectedMode": {
        "name": "RestrictedSitesZoneTurnOnProtectedMode",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictedSitesZoneUsePopupBlocker": {
        "name": "RestrictedSitesZoneUsePopupBlocker",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ScriptedWindowSecurityRestrictionsInternetExplorerProcesses": {
        "name": "ScriptedWindowSecurityRestrictionsInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SearchProviderList": {
        "name": "SearchProviderList",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SecurityZonesUseOnlyMachineSettings": {
        "name": "SecurityZonesUseOnlyMachineSettings",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SendSitesNotInEnterpriseSiteListToEdge": {
        "name": "SendSitesNotInEnterpriseSiteListToEdge",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SpecifyUseOfActiveXInstallerService": {
        "name": "SpecifyUseOfActiveXInstallerService",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedSitesZoneAllowAccessToDataSources": {
        "name": "TrustedSitesZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedSitesZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "TrustedSitesZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedSitesZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "TrustedSitesZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedSitesZoneAllowFontDownloads": {
        "name": "TrustedSitesZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedSitesZoneAllowLessPrivilegedSites": {
        "name": "TrustedSitesZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedSitesZoneAllowNETFrameworkReliantComponents": {
        "name": "TrustedSitesZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedSitesZoneAllowScriptlets": {
        "name": "TrustedSitesZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedSitesZoneAllowSmartScreenIE": {
        "name": "TrustedSitesZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedSitesZoneAllowUserDataPersistence": {
        "name": "TrustedSitesZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedSitesZoneDoNotRunAntimalwareAgainstActiveXControls": {
        "name": "TrustedSitesZoneDoNotRunAntimalwareAgainstActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedSitesZoneInitializeAndScriptActiveXControls": {
        "name": "TrustedSitesZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedSitesZoneJavaPermissions": {
        "name": "TrustedSitesZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedSitesZoneLogonOptions": {
        "name": "TrustedSitesZoneLogonOptions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedSitesZoneNavigateWindowsAndFrames": {
        "name": "TrustedSitesZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Kerberos": {
    "name": "Kerberos",
    "policies": {
      "AllowForestSearchOrder": {
        "name": "AllowForestSearchOrder",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "CloudKerberosTicketRetrievalEnabled": {
        "name": "CloudKerberosTicketRetrievalEnabled",
        "description": "Allow retrieving the cloud kerberos ticket during the logon",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "KerberosClientSupportsClaimsCompoundArmor": {
        "name": "KerberosClientSupportsClaimsCompoundArmor",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PKInitHashAlgorithmConfiguration": {
        "name": "PKInitHashAlgorithmConfiguration",
        "description": "Configure hash algorithms for certificate logon",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled / Not Configured"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "PKInitHashAlgorithmSHA1": {
        "name": "PKInitHashAlgorithmSHA1",
        "description": "Configure SHA-1 hash algorithm for certificate logon",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not Supported"
            },
            "1": {
              "description": "Default"
            },
            "2": {
              "description": "Audited"
            },
            "3": {
              "description": "Supported"
            }
          }
        },
        "scope": "device"
      },
      "PKInitHashAlgorithmSHA256": {
        "name": "PKInitHashAlgorithmSHA256",
        "description": "Configure SHA-256 hash algorithm for certificate logon",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not Supported"
            },
            "1": {
              "description": "Default"
            },
            "2": {
              "description": "Audited"
            },
            "3": {
              "description": "Supported"
            }
          }
        },
        "scope": "device"
      },
      "PKInitHashAlgorithmSHA384": {
        "name": "PKInitHashAlgorithmSHA384",
        "description": "Configure SHA-384 hash algorithm for certificate logon",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not Supported"
            },
            "1": {
              "description": "Default"
            },
            "2": {
              "description": "Audited"
            },
            "3": {
              "description": "Supported"
            }
          }
        },
        "scope": "device"
      },
      "PKInitHashAlgorithmSHA512": {
        "name": "PKInitHashAlgorithmSHA512",
        "description": "Configure SHA-512 hash algorithm for certificate logon",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not Supported"
            },
            "1": {
              "description": "Default"
            },
            "2": {
              "description": "Audited"
            },
            "3": {
              "description": "Supported"
            }
          }
        },
        "scope": "device"
      },
      "RequireKerberosArmoring": {
        "name": "RequireKerberosArmoring",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RequireStrictKDCValidation": {
        "name": "RequireStrictKDCValidation",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SetMaximumContextTokenSize": {
        "name": "SetMaximumContextTokenSize",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "UPNNameHints": {
        "name": "UPNNameHints",
        "description": "Devices joined to Azure Active Directory in a hybrid environment need to interact with Active Directory Domain Controllers, but they lack the built-in ability to find a Domain Controller that a domain-joined device has. This can cause failures when such a device needs to resolve an AAD UPN into an Active Directory Principal.                                  This parameter adds a list of domains that an Azure Active Directory joined device should attempt to contact if it is otherwise unable to resolve a UPN to a principal.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/KioskBrowser": {
    "name": "KioskBrowser",
    "policies": {
      "BlockedUrlExceptions": {
        "name": "BlockedUrlExceptions",
        "description": "List of exceptions to the blocked website URLs (with wildcard support). This is used to configure URLs kiosk browsers are allowed to navigate to, which are a subset of the blocked URLs.",
        "format": "string",
        "scope": "device"
      },
      "BlockedUrls": {
        "name": "BlockedUrls",
        "description": "List of blocked website URLs (with wildcard support). This is used to configure blocked URLs kiosk browsers can not navigate to.",
        "format": "string",
        "scope": "device"
      },
      "DefaultURL": {
        "name": "DefaultURL",
        "description": "Configures the default URL kiosk browsers to navigate on launch and restart.",
        "format": "string",
        "scope": "device"
      },
      "EnableEndSessionButton": {
        "name": "EnableEndSessionButton",
        "description": "Enable/disable kiosk browser's end session button.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "EnableHomeButton": {
        "name": "EnableHomeButton",
        "description": "Enable/disable kiosk browser's home button.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "EnableNavigationButtons": {
        "name": "EnableNavigationButtons",
        "description": "Enable/disable kiosk browser's navigation buttons (forward/back).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "RestartOnIdleTime": {
        "name": "RestartOnIdleTime",
        "description": "Amount of time in minutes the session is idle until the kiosk browser restarts in a fresh state.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 144
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/LanmanWorkstation": {
    "name": "LanmanWorkstation",
    "policies": {
      "EnableInsecureGuestLogons": {
        "name": "EnableInsecureGuestLogons",
        "description": "This policy setting determines if the SMB client will allow insecure guest logons to an SMB server. If you enable this policy setting or if you do not configure this policy setting, the SMB client will allow insecure guest logons. If you disable this policy setting, the SMB client will reject insecure guest logons. Insecure guest logons are used by file servers to allow unauthenticated access to shared folders. While uncommon in an enterprise environment, insecure guest logons are frequently used by consumer Network Attached Storage (NAS) appliances acting as file servers. Windows file servers require authentication and do not use insecure guest logons by default. Since insecure guest logons are unauthenticated, important security features such as SMB Signing and SMB Encryption are disabled. As a result, clients that allow insecure guest logons are vulnerable to a variety of man-in-the-middle attacks that can result in data loss, data corruption, and exposure to malware. Additionally, any data written to a file server using an insecure guest logon is potentially accessible to anyone on the network. Microsoft recommends disabling insecure guest logons and configuring file servers to require authenticated access.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Licensing": {
    "name": "Licensing",
    "policies": {
      "AllowWindowsEntitlementReactivation": {
        "name": "AllowWindowsEntitlementReactivation",
        "description": "Enables or Disable Windows license reactivation on managed devices.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable Windows license reactivation on managed devices."
            },
            "1": {
              "description": "Enable Windows license reactivation on managed devices."
            }
          }
        },
        "scope": "device"
      },
      "DisallowKMSClientOnlineAVSValidation": {
        "name": "DisallowKMSClientOnlineAVSValidation",
        "description": "Enabling this setting prevents this computer from sending data to Microsoft regarding its activation state.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/LocalPoliciesSecurityOptions": {
    "name": "LocalPoliciesSecurityOptions",
    "policies": {
      "Accounts_BlockMicrosoftAccounts": {
        "name": "Accounts_BlockMicrosoftAccounts",
        "description": "This policy setting prevents users from adding new Microsoft accounts on this computer.  If you select the \"Users can’t add Microsoft accounts\" option, users will not be able to create new Microsoft accounts on this computer, switch a local account to a Microsoft account, or connect a domain account to a Microsoft account. This is the preferred option if you need to limit the use of Microsoft accounts in your enterprise.  If you select the \"Users can’t add or log on with Microsoft accounts\" option, existing Microsoft account users will not be able to log on to Windows. Selecting this option might make it impossible for an existing administrator on this computer to log on and manage the system.  If you disable or do not configure this policy (recommended), users will be able to use Microsoft accounts with Windows.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled (users will be able to use Microsoft accounts with Windows)."
            },
            "1": {
              "description": "Enabled (users can't add Microsoft accounts)."
            },
            "3": {
              "description": "Users can't add or log on with Microsoft accounts"
            }
          }
        },
        "scope": "device"
      },
      "Accounts_EnableAdministratorAccountStatus": {
        "name": "Accounts_EnableAdministratorAccountStatus",
        "description": "This security setting determines whether the local Administrator account is enabled or disabled.  Notes  If you try to reenable the Administrator account after it has been disabled, and if the current Administrator password does not meet the password requirements, you cannot reenable the account. In this case, an alternative member of the Administrators group must reset the password on the Administrator account. For information about how to reset a password, see To reset a password. Disabling the Administrator account can become a maintenance issue under certain circumstances.   Under Safe Mode boot, the disabled Administrator account will only be enabled if the machine is non-domain joined and there are no other local active administrator accounts.  If the computer is domain joined the disabled administrator will not be enabled.  Default: Disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "Accounts_EnableGuestAccountStatus": {
        "name": "Accounts_EnableGuestAccountStatus",
        "description": "This security setting determines if the Guest account is enabled or disabled.  Default: Disabled.  Note: If the Guest account is disabled and the security option Network Access: Sharing and Security Model for local accounts is set to Guest Only, network logons, such as those performed by the Microsoft Network Server (SMB Service), will fail.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "Accounts_LimitLocalAccountUseOfBlankPasswordsToConsoleLogonOnly": {
        "name": "Accounts_LimitLocalAccountUseOfBlankPasswordsToConsoleLogonOnly",
        "description": "Accounts: Limit local account use of blank passwords to console logon only  This security setting determines whether local accounts that are not password protected can be used to log on from locations other than the physical computer console. If enabled, local accounts that are not password protected will only be able to log on at the computer's keyboard.  Default: Enabled.   Warning:  Computers that are not in physically secure locations should always enforce strong password policies for all local user accounts. Otherwise, anyone with physical access to the computer can log on by using a user account that does not have a password. This is especially important for portable computers. If you apply this security policy to the Everyone group, no one will be able to log on through Remote Desktop Services.  Notes  This setting does not affect logons that use domain accounts. It is possible for applications that use remote interactive logons to bypass this setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "Accounts_RenameAdministratorAccount": {
        "name": "Accounts_RenameAdministratorAccount",
        "description": "Accounts: Rename administrator account  This security setting determines whether a different account name is associated with the security identifier (SID) for the account Administrator. Renaming the well-known Administrator account makes it slightly more difficult for unauthorized persons to guess this privileged user name and password combination.  Default: Administrator.",
        "format": "string",
        "scope": "device"
      },
      "Accounts_RenameGuestAccount": {
        "name": "Accounts_RenameGuestAccount",
        "description": "Accounts: Rename guest account  This security setting determines whether a different account name is associated with the security identifier (SID) for the account \"Guest.\" Renaming the well-known Guest account makes it slightly more difficult for unauthorized persons to guess this user name and password combination.  Default: Guest.",
        "format": "string",
        "scope": "device"
      },
      "Audit_AuditTheUseOfBackupAndRestoreprivilege": {
        "name": "Audit_AuditTheUseOfBackupAndRestoreprivilege",
        "description": "Audit: Audit the use of Backup and Restore privilege  This security setting determines whether to audit the use of all user privileges, including Backup and Restore, when the Audit privilege use policy is in effect. Enabling this option when the Audit privilege use policy is also enabled generates an audit event for every file that is backed up or restored. If you disable this policy, then use of the Backup or Restore privilege is not audited even when Audit privilege use is enabled. Note: On Windows versions prior to Windows Vista configuring this security setting, changes will not take effect until you restart Windows. Enabling this setting can cause a LOT of events, sometimes hundreds per second, during a backup operation.  Default: Disabled.",
        "format": "base64",
        "scope": "device"
      },
      "Audit_ForceAuditPolicySubcategorySettingsToOverrideAuditPolicyCategorySettings": {
        "name": "Audit_ForceAuditPolicySubcategorySettingsToOverrideAuditPolicyCategorySettings",
        "description": "Audit: Force audit policy subcategory settings (Windows Vista or later) to override audit policy category settings  Windows Vista and later versions of Windows allow audit policy to be managed in a more precise way using audit policy subcategories. Setting audit policy at the category level will override the new subcategory audit policy feature. Group Policy only allows audit policy to be set at the category level, and existing group policy may override the subcategory settings of new machines as they are joined to the domain or upgraded to Windows Vista or later versions. To allow audit policy to be managed using subcategories without requiring a change to Group Policy, there is a new registry value in Windows Vista and later versions, SCENoApplyLegacyAuditPolicy, which prevents the application of category-level audit policy from Group Policy and from the Local Security Policy administrative tool. If the category level audit policy set here is not consistent with the events that are currently being generated, the cause might be that this registry key is set.  Default: Enabled",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "Audit_ShutdownSystemImmediatelyIfUnableToLogSecurityAudits": {
        "name": "Audit_ShutdownSystemImmediatelyIfUnableToLogSecurityAudits",
        "description": "Audit: Shut down system immediately if unable to log security audits  This security setting determines whether the system shuts down if it is unable to log security events. If this security setting is enabled, it causes the system to stop if a security audit cannot be logged for any reason. Typically, an event fails to be logged when the security audit log is full and the retention method that is specified for the security log is either Do Not Overwrite Events or Overwrite Events by Days. If the security log is full and an existing entry cannot be overwritten, and this security option is enabled, the following Stop error appears:  STOP: C0000244 {Audit Failed} An attempt to generate a security audit failed.  To recover, an administrator must log on, archive the log (optional), clear the log, and reset this option as desired. Until this security setting is reset, no users, other than a member of the Administrators group will be able to log on to the system, even if the security log is not full.  Note: On Windows versions prior to Windows Vista configuring this security setting, changes will not take effect until you restart Windows.  Default: Disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "Devices_AllowUndockWithoutHavingToLogon": {
        "name": "Devices_AllowUndockWithoutHavingToLogon",
        "description": "Devices: Allow undock without having to log on This security setting determines whether a portable computer can be undocked without having to log on. If this policy is enabled, logon is not required and an external hardware eject button can be used to undock the computer. If disabled, a user must log on and have the Remove computer from docking station privilege to undock the computer. Default: Enabled.  Caution Disabling this policy may tempt users to try and physically remove the laptop from its docking station using methods other than the external hardware eject button. Since this may cause damage to the hardware, this setting, in general, should only be disabled on laptop configurations that are physically securable.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Block"
            },
            "1": {
              "description": "Allow"
            }
          }
        },
        "scope": "device"
      },
      "Devices_AllowedToFormatAndEjectRemovableMedia": {
        "name": "Devices_AllowedToFormatAndEjectRemovableMedia",
        "description": "Devices: Allowed to format and eject removable media  This security setting determines who is allowed to format and eject removable NTFS media. This capability can be given to:  Administrators Administrators and Interactive Users  Default: This policy is not defined and only Administrators have this ability.",
        "format": "string",
        "scope": "device"
      },
      "Devices_PreventUsersFromInstallingPrinterDriversWhenConnectingToSharedPrinters": {
        "name": "Devices_PreventUsersFromInstallingPrinterDriversWhenConnectingToSharedPrinters",
        "description": "Devices: Prevent users from installing printer drivers when connecting to shared printers  For a computer to print to a shared printer, the driver for that shared printer must be installed on the local computer. This security setting determines who is allowed to install a printer driver as part of connecting to a shared printer. If this setting is enabled, only Administrators can install a printer driver as part of connecting to a shared printer. If this setting is disabled, any user can install a printer driver as part of connecting to a shared printer.  Default on servers: Enabled. Default on workstations: Disabled  Notes  This setting does not affect the ability to add a local printer. This setting does not affect Administrators.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "Devices_RestrictCDROMAccessToLocallyLoggedOnUserOnly": {
        "name": "Devices_RestrictCDROMAccessToLocallyLoggedOnUserOnly",
        "description": "Devices: Restrict CD-ROM access to locally logged-on user only  This security setting determines whether a CD-ROM is accessible to both local and remote users simultaneously.  If this policy is enabled, it allows only the interactively logged-on user to access removable CD-ROM media. If this policy is enabled and no one is logged on interactively, the CD-ROM can be accessed over the network.  Default: This policy is not defined and CD-ROM access is not restricted to the locally logged-on user.",
        "format": "string",
        "scope": "device"
      },
      "Devices_RestrictFloppyAccessToLocallyLoggedOnUserOnly": {
        "name": "Devices_RestrictFloppyAccessToLocallyLoggedOnUserOnly",
        "description": "Devices: Restrict floppy access to locally logged-on user only  This security setting determines whether removable floppy media are accessible to both local and remote users simultaneously. If this policy is enabled, it allows only the interactively logged-on user to access removable floppy media. If this policy is enabled and no one is logged on interactively, the floppy can be accessed over the network.  Default: This policy is not defined and floppy disk drive access is not restricted to the locally logged-on user.",
        "format": "string",
        "scope": "device"
      },
      "DomainMember_DigitallyEncryptOrSignSecureChannelDataAlways": {
        "name": "DomainMember_DigitallyEncryptOrSignSecureChannelDataAlways",
        "description": "Domain member: Digitally encrypt or sign secure channel data (always)  This security setting determines whether all secure channel traffic initiated by the domain member must be signed or encrypted. When a computer joins a domain, a computer account is created. After that, when the system starts, it uses the computer account password to create a secure channel with a domain controller for its domain. This secure channel is used to perform operations such as NTLM pass through authentication, LSA SID/name Lookup etc. This setting determines whether or not all secure channel traffic initiated by the domain member meets minimum security requirements. Specifically it determines whether all secure channel traffic initiated by the domain member must be signed or encrypted. If this policy is enabled, then the secure channel will not be established unless either signing or encryption of all secure channel traffic is negotiated. If this policy is disabled, then encryption and signing of all secure channel traffic is negotiated with the Domain Controller in which case the level of signing and encryption depends on the version of the Domain Controller and the settings of the following two policies:  Domain member: Digitally encrypt secure channel data (when possible)  Domain member: Digitally sign secure channel data (when possible)  Default: Enabled.  Notes: If this policy is enabled, the policy Domain member: Digitally sign secure channel data (when possible) is assumed to be enabled regardless of its current setting. This ensures that the domain member attempts to negotiate at least signing of the secure channel traffic. Logon information transmitted over the secure channel is always encrypted regardless of whether encryption of ALL other secure channel traffic is negotiated or not.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "DomainMember_DigitallyEncryptSecureChannelDataWhenPossible": {
        "name": "DomainMember_DigitallyEncryptSecureChannelDataWhenPossible",
        "description": "Domain member: Digitally encrypt secure channel data (when possible)  This security setting determines whether a domain member attempts to negotiate encryption for all secure channel traffic that it initiates. When a computer joins a domain, a computer account is created. After that, when the system starts, it uses the computer account password to create a secure channel with a domain controller for its domain. This secure channel is used to perform operations such as NTLM pass-through authentication, LSA SID/name Lookup etc. This setting determines whether or not the domain member attempts to negotiate encryption for all secure channel traffic that it initiates. If enabled, the domain member will request encryption of all secure channel traffic. If the domain controller supports encryption of all secure channel traffic, then all secure channel traffic will be encrypted. Otherwise only logon information transmitted over the secure channel will be encrypted. If this setting is disabled, then the domain member will not attempt to negotiate secure channel encryption.  Default: Enabled.  Important  There is no known reason for disabling this setting. Besides unnecessarily reducing the potential confidentiality level of the secure channel, disabling this setting may unnecessarily reduce secure channel throughput, because concurrent API calls that use the secure channel are only possible when the secure channel is signed or encrypted.  Note: Domain controllers are also domain members and establish secure channels with other domain controllers in the same domain as well as domain controllers in trusted domains.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "DomainMember_DigitallySignSecureChannelDataWhenPossible": {
        "name": "DomainMember_DigitallySignSecureChannelDataWhenPossible",
        "description": "Domain member: Digitally sign secure channel data (when possible)  This security setting determines whether a domain member attempts to negotiate signing for all secure channel traffic that it initiates. When a computer joins a domain, a computer account is created. After that, when the system starts, it uses the computer account password to create a secure channel with a domain controller for its domain. This secure channel is used to perform operations such as NTLM pass through authentication, LSA SID/name Lookup etc. This setting determines whether or not the domain member attempts to negotiate signing for all secure channel traffic that it initiates. If enabled, the domain member will request signing of all secure channel traffic. If the Domain Controller supports signing of all secure channel traffic, then all secure channel traffic will be signed which ensures that it cannot be tampered with in transit.  Default: Enabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "DomainMember_DisableMachineAccountPasswordChanges": {
        "name": "DomainMember_DisableMachineAccountPasswordChanges",
        "description": "Domain member: Disable machine account password changes  Determines whether a domain member periodically changes its computer account password. If this setting is enabled, the domain member does not attempt to change its computer account password. If this setting is disabled, the domain member attempts to change its computer account password as specified by the setting for Domain Member: Maximum age for machine account password, which by default is every 30 days.  Default: Disabled.  Notes  This security setting should not be enabled. Computer account passwords are used to establish secure channel communications between members and domain controllers and, within the domain, between the domain controllers themselves. Once it is established, the secure channel is used to transmit sensitive information that is necessary for making authentication and authorization decisions. This setting should not be used in an attempt to support dual-boot scenarios that use the same computer account. If you want to dual-boot two installations that are joined to the same domain, give the two installations different computer names.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "DomainMember_MaximumMachineAccountPasswordAge": {
        "name": "DomainMember_MaximumMachineAccountPasswordAge",
        "description": "Domain member: Maximum machine account password age  This security setting determines how often a domain member will attempt to change its computer account password.  Default: 30 days.  Important  This setting applies to Windows 2000 computers, but it is not available through the Security Configuration Manager tools on these computers.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 99
        },
        "scope": "device"
      },
      "DomainMember_RequireStrongSessionKey": {
        "name": "DomainMember_RequireStrongSessionKey",
        "description": "Domain member: Require strong (Windows 2000 or later) session key  This security setting determines whether 128-bit key strength is required for encrypted secure channel data. When a computer joins a domain, a computer account is created. After that, when the system starts, it uses the computer account password to create a secure channel with a domain controller within the domain. This secure channel is used to perform operations such as NTLM pass-through authentication, LSA SID/name Lookup, and so on. Depending on what version of Windows is running on the domain controller that the domain member is communicating with and the settings of the parameters:  Domain member: Digitally encrypt or sign secure channel data (always)  Domain member: Digitally encrypt secure channel data (when possible)  Some or all of the information that is transmitted over the secure channel will be encrypted. This policy setting determines whether or not 128-bit key strength is required for the secure channel information that is encrypted. If this setting is enabled, then the secure channel will not be established unless 128-bit encryption can be performed. If this setting is disabled, then the key strength is negotiated with the domain controller.  Default: Enabled.  Important  In order to take advantage of this policy on member workstations and servers, all domain controllers that constitute the member's domain must be running Windows 2000 or later. In order to take advantage of this policy on domain controllers, all domain controllers in the same domain as well as all trusted domains must run Windows 2000 or later.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "InteractiveLogon_DisplayUserInformationWhenTheSessionIsLocked": {
        "name": "InteractiveLogon_DisplayUserInformationWhenTheSessionIsLocked",
        "description": "Interactive Logon:Display user information when the session is locked User display name, domain and user names (1) User display name only (2) Do not display user information (3) Domain and user names only (4)",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "1": {
              "description": "User display name, domain and user names"
            },
            "2": {
              "description": "User display name only"
            },
            "3": {
              "description": "Do not display user information"
            },
            "4": {
              "description": "Domain and user names only"
            }
          }
        },
        "scope": "device"
      },
      "InteractiveLogon_DoNotDisplayLastSignedIn": {
        "name": "InteractiveLogon_DoNotDisplayLastSignedIn",
        "description": "Interactive logon: Don't display last signed-in This security setting determines whether the Windows sign-in screen will show the username of the last person who signed in on this PC. If this policy is enabled, the username will not be shown.  If this policy is disabled, the username will be shown.  Default: Disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled (username will be shown)"
            },
            "1": {
              "description": "Enabled (username will not be shown)"
            }
          }
        },
        "scope": "device"
      },
      "InteractiveLogon_DoNotDisplayUsernameAtSignIn": {
        "name": "InteractiveLogon_DoNotDisplayUsernameAtSignIn",
        "description": "Interactive logon: Don't display username at sign-in This security setting determines whether the username of the person signing in to this PC appears at Windows sign-in, after credentials are entered, and before the PC desktop is shown. If this policy is enabled, the username will not be shown.  If this policy is disabled, the username will be shown.  Default: Disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled (username will be shown)"
            },
            "1": {
              "description": "Enabled (username will not be shown)"
            }
          }
        },
        "scope": "device"
      },
      "InteractiveLogon_DoNotRequireCTRLALTDEL": {
        "name": "InteractiveLogon_DoNotRequireCTRLALTDEL",
        "description": "Interactive logon: Do not require CTRL+ALT+DEL  This security setting determines whether pressing CTRL+ALT+DEL is required before a user can log on.  If this policy is enabled on a computer, a user is not required to press CTRL+ALT+DEL to log on. Not having to press CTRL+ALT+DEL leaves users susceptible to attacks that attempt to intercept the users' passwords. Requiring CTRL+ALT+DEL before users log on ensures that users are communicating by means of a trusted path when entering their passwords.  If this policy is disabled, any user is required to press CTRL+ALT+DEL before logging on to Windows.  Default on domain-computers: Enabled: At least Windows  8/Disabled: Windows 7 or earlier. Default on stand-alone computers: Enabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled (a user is not required to press CTRL+ALT+DEL to log on)"
            }
          }
        },
        "scope": "device"
      },
      "InteractiveLogon_MachineAccountThreshold": {
        "name": "InteractiveLogon_MachineAccountThreshold",
        "description": "Interactive logon: Machine account threshold.  The machine lockout policy is enforced only on those machines that have Bitlocker enabled for protecting OS volumes. Please ensure that appropriate recovery password backup policies are enabled. This security setting determines the number of failed logon attempts that causes the machine to be locked out. A locked out machine can only be recovered by providing recovery key at console. You can set the value between 1 and 999 failed logon attempts. If you set the value to 0, the machine will never be locked out. Values from 1 to 3 will be interpreted as 4. Failed password attempts against workstations or member servers that have been locked using either CTRL+ALT+DELETE or password protected screen savers counts as failed logon attempts. The machine lockout policy is enforced only on those machines that have Bitlocker enabled for protecting OS volumes. Please ensure that the appropriate recovery password backup policies are enabled.  Default: 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 99
        },
        "scope": "device"
      },
      "InteractiveLogon_MachineInactivityLimit": {
        "name": "InteractiveLogon_MachineInactivityLimit",
        "description": "Interactive logon: Machine inactivity limit.  Windows notices inactivity of a logon session, and if the amount of inactive time exceeds the inactivity limit, then the screen saver will run, locking the session.  Default: not enforced.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 59994
        },
        "scope": "device"
      },
      "InteractiveLogon_MessageTextForUsersAttemptingToLogOn": {
        "name": "InteractiveLogon_MessageTextForUsersAttemptingToLogOn",
        "description": "Interactive logon: Message text for users attempting to log on  This security setting specifies a text message that is displayed to users when they log on.  This text is often used for legal reasons, for example, to warn users about the ramifications of misusing company information or to warn them that their actions may be audited.  Default: No message.",
        "format": "string",
        "scope": "device"
      },
      "InteractiveLogon_MessageTitleForUsersAttemptingToLogOn": {
        "name": "InteractiveLogon_MessageTitleForUsersAttemptingToLogOn",
        "description": "Interactive logon: Message title for users attempting to log on  This security setting allows the specification of a title to appear in the title bar of the window that contains the Interactive logon: Message text for users attempting to log on.  Default: No message.",
        "format": "string",
        "scope": "device"
      },
      "InteractiveLogon_NumberOfPreviousLogonsToCache": {
        "name": "InteractiveLogon_NumberOfPreviousLogonsToCache",
        "description": "Interactive logon: Number of previous logons to cache (in case domain controller is not available)  Each unique user's logon information is cached locally so that, in the event that a domain controller is unavailable during subsequent logon attempts, they are able to log on. The cached logon information is stored from the previous logon session. If a domain controller is unavailable and a user's logon information is not cached, the user is prompted with this message: There are currently no logon servers available to service the logon request. In this policy setting, a value of 0 disables logon caching. Any value above 50 only caches 50 logon attempts. Windows supports a maximum of 50 cache entries and the number of entries consumed per user depends on the credential. For example, a maximum of 50 unique password user accounts can be cached on a Windows system, but only 25 smart card user accounts can be cached because both the password information and the smart card information are stored. When a user with cached logon information logs on again, the user’s individual cached information is replaced.  Default:  Windows Server 2008: 25  All Other Versions: 10",
        "format": "string",
        "scope": "device"
      },
      "InteractiveLogon_PromptUserToChangePasswordBeforeExpiration": {
        "name": "InteractiveLogon_PromptUserToChangePasswordBeforeExpiration",
        "description": "Interactive logon: Prompt user to change password before expiration  Determines how far in advance (in days) users are warned that their password is about to expire. With this advance warning, the user has time to construct a password that is sufficiently strong.  Default: 5 days.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 99
        },
        "scope": "device"
      },
      "InteractiveLogon_SmartCardRemovalBehavior": {
        "name": "InteractiveLogon_SmartCardRemovalBehavior",
        "description": "Interactive logon: Smart card removal behavior  This security setting determines what happens when the smart card for a logged-on user is removed from the smart card reader.  The options are:   No Action  Lock Workstation  Force Logoff  Disconnect if a Remote Desktop Services session   If you click Lock Workstation in the Properties dialog box for this policy, the workstation is locked when the smart card is removed, allowing users to leave the area, take their smart card with them, and still maintain a protected session.  If you click Force Logoff in the Properties dialog box for this policy, the user is automatically logged off when the smart card is removed.  If you click Disconnect if a Remote Desktop Services session, removal of the smart card disconnects the session without logging the user off. This allows the user to insert the smart card and resume the session later, or at another smart card reader-equipped computer, without having to log on again. If the session is local, this policy functions identically to Lock Workstation.  Note: Remote Desktop Services was called Terminal Services in previous versions of Windows Server.  Default: This policy is not defined, which means that the system treats it as No action.  On Windows Vista and above: For this setting to work, the Smart Card Removal Policy service must be started.",
        "format": "string",
        "scope": "device"
      },
      "MicrosoftNetworkClient_DigitallySignCommunicationsAlways": {
        "name": "MicrosoftNetworkClient_DigitallySignCommunicationsAlways",
        "description": "Microsoft network client: Digitally sign communications (always)  This security setting determines whether packet signing is required by the SMB client component.  The server message block (SMB) protocol provides the basis for Microsoft file and print sharing and many other networking operations, such as remote Windows administration. To prevent man-in-the-middle attacks that modify SMB packets in transit, the SMB protocol supports the digital signing of SMB packets. This policy setting determines whether SMB packet signing must be negotiated before further communication with an SMB server is permitted.  If this setting is enabled, the Microsoft network client will not communicate with a Microsoft network server unless that server agrees to perform SMB packet signing. If this policy is disabled, SMB packet signing is negotiated between the client and server.  Default: Disabled.  Important  For this policy to take effect on computers running Windows 2000, client-side packet signing must also be enabled. To enable client-side SMB packet signing, set Microsoft network client: Digitally sign communications (if server agrees).  Notes  All Windows operating systems support both a client-side SMB component and a server-side SMB component. On Windows 2000 and later operating systems, enabling or requiring packet signing for client and server-side SMB components is controlled by the following four policy settings: Microsoft network client: Digitally sign communications (always) - Controls whether or not the client-side SMB component requires packet signing. Microsoft network client: Digitally sign communications (if server agrees) - Controls whether or not the client-side SMB component has packet signing enabled. Microsoft network server: Digitally sign communications (always) - Controls whether or not the server-side SMB component requires packet signing. Microsoft network server: Digitally sign communications (if client agrees) - Controls whether or not the server-side SMB component has packet signing enabled. SMB packet signing can significantly degrade SMB performance, depending on dialect version, OS version, file sizes, processor offloading capabilities, and application IO behaviors. For more information, reference: https://go.microsoft.com/fwlink/?LinkID=787136.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "MicrosoftNetworkClient_DigitallySignCommunicationsIfServerAgrees": {
        "name": "MicrosoftNetworkClient_DigitallySignCommunicationsIfServerAgrees",
        "description": "Microsoft network client: Digitally sign communications (if server agrees)  This security setting determines whether the SMB client attempts to negotiate SMB packet signing.  The server message block (SMB) protocol provides the basis for Microsoft file and print sharing and many other networking operations, such as remote Windows administration. To prevent man-in-the-middle attacks that modify SMB packets in transit, the SMB protocol supports the digital signing of SMB packets. This policy setting determines whether the SMB client component attempts to negotiate SMB packet signing when it connects to an SMB server.  If this setting is enabled, the Microsoft network client will ask the server to perform SMB packet signing upon session setup. If packet signing has been enabled on the server, packet signing will be negotiated. If this policy is disabled, the SMB client will never negotiate SMB packet signing.  Default: Enabled.  Notes  All Windows operating systems support both a client-side SMB component and a server-side SMB component. On Windows 2000 and later, enabling or requiring packet signing for client and server-side SMB components is controlled by the following four policy settings: Microsoft network client: Digitally sign communications (always) - Controls whether or not the client-side SMB component requires packet signing. Microsoft network client: Digitally sign communications (if server agrees) - Controls whether or not the client-side SMB component has packet signing enabled. Microsoft network server: Digitally sign communications (always) - Controls whether or not the server-side SMB component requires packet signing. Microsoft network server: Digitally sign communications (if client agrees) - Controls whether or not the server-side SMB component has packet signing enabled. If both client-side and server-side SMB signing is enabled and the client establishes an SMB 1.0 connection to the server, SMB signing will be attempted. SMB packet signing can significantly degrade SMB performance, depending on dialect version, OS version, file sizes, processor offloading capabilities, and application IO behaviors. This setting only applies to SMB 1.0 connections. For more information, reference: https://go.microsoft.com/fwlink/?LinkID=787136.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "MicrosoftNetworkClient_SendUnencryptedPasswordToThirdPartySMBServers": {
        "name": "MicrosoftNetworkClient_SendUnencryptedPasswordToThirdPartySMBServers",
        "description": "Microsoft network client: Send unencrypted password to connect to third-party SMB servers  If this security setting is enabled, the Server Message Block (SMB) redirector is allowed to send plaintext passwords to non-Microsoft SMB servers that do not support password encryption during authentication.  Sending unencrypted passwords is a security risk.  Default: Disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "MicrosoftNetworkServer_AmountOfIdleTimeRequiredBeforeSuspendingSession": {
        "name": "MicrosoftNetworkServer_AmountOfIdleTimeRequiredBeforeSuspendingSession",
        "description": "Microsoft network server: Amount of idle time required before suspending a session  This security setting determines the amount of continuous idle time that must pass in a Server Message Block (SMB) session before the session is suspended due to inactivity. Administrators can use this policy to control when a computer suspends an inactive SMB session. If client activity resumes, the session is automatically reestablished. For this policy setting, a value of 0 means to disconnect an idle session as quickly as is reasonably possible. The maximum value is 99999, which is 208 days; in effect, this value disables the policy.  Default: This policy is not defined, which means that the system treats it as 15 minutes for servers and undefined for workstations.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 1
        },
        "scope": "device"
      },
      "MicrosoftNetworkServer_DigitallySignCommunicationsAlways": {
        "name": "MicrosoftNetworkServer_DigitallySignCommunicationsAlways",
        "description": "Microsoft network server: Digitally sign communications (always)  This security setting determines whether packet signing is required by the SMB server component.  The server message block (SMB) protocol provides the basis for Microsoft file and print sharing and many other networking operations, such as remote Windows administration. To prevent man-in-the-middle attacks that modify SMB packets in transit, the SMB protocol supports the digital signing of SMB packets. This policy setting determines whether SMB packet signing must be negotiated before further communication with an SMB client is permitted.  If this setting is enabled, the Microsoft network server will not communicate with a Microsoft network client unless that client agrees to perform SMB packet signing. If this setting is disabled, SMB packet signing is negotiated between the client and server.  Default:  Disabled for member servers. Enabled for domain controllers.  Notes  All Windows operating systems support both a client-side SMB component and a server-side SMB component. On Windows 2000 and later, enabling or requiring packet signing for client and server-side SMB components is controlled by the following four policy settings: Microsoft network client: Digitally sign communications (always) - Controls whether or not the client-side SMB component requires packet signing. Microsoft network client: Digitally sign communications (if server agrees) - Controls whether or not the client-side SMB component has packet signing enabled. Microsoft network server: Digitally sign communications (always) - Controls whether or not the server-side SMB component requires packet signing. Microsoft network server: Digitally sign communications (if client agrees) - Controls whether or not the server-side SMB component has packet signing enabled. Similarly, if client-side SMB signing is required, that client will not be able to establish a session with servers that do not have packet signing enabled. By default, server-side SMB signing is enabled only on domain controllers. If server-side SMB signing is enabled, SMB packet signing will be negotiated with clients that have client-side SMB signing enabled. SMB packet signing can significantly degrade SMB performance, depending on dialect version, OS version, file sizes, processor offloading capabilities, and application IO behaviors.  Important  For this policy to take effect on computers running Windows 2000, server-side packet signing must also be enabled. To enable server-side SMB packet signing, set the following policy: Microsoft network server: Digitally sign communications (if server agrees)  For Windows 2000 servers to negotiate signing with Windows NT 4.0 clients, the following registry value must be set to 1 on the Windows 2000 server: HKLM\\System\\CurrentControlSet\\Services\\lanmanserver\\parameters\\enableW9xsecuritysignature For more information, reference: https://go.microsoft.com/fwlink/?LinkID=787136.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "MicrosoftNetworkServer_DigitallySignCommunicationsIfClientAgrees": {
        "name": "MicrosoftNetworkServer_DigitallySignCommunicationsIfClientAgrees",
        "description": "Microsoft network server: Digitally sign communications (if client agrees)  This security setting determines whether the SMB server will negotiate SMB packet signing with clients that request it.  The server message block (SMB) protocol provides the basis for Microsoft file and print sharing and many other networking operations, such as remote Windows administration. To prevent man-in-the-middle attacks that modify SMB packets in transit, the SMB protocol supports the digital signing of SMB packets. This policy setting determines whether the SMB server will negotiate SMB packet signing when an SMB client requests it.  If this setting is enabled, the Microsoft network server will negotiate SMB packet signing as requested by the client. That is, if packet signing has been enabled on the client, packet signing will be negotiated. If this policy is disabled, the SMB client will never negotiate SMB packet signing.  Default: Enabled on domain controllers only.  Important  For Windows 2000 servers to negotiate signing with Windows NT 4.0 clients, the following registry value must be set to 1 on the server running Windows 2000: HKLM\\System\\CurrentControlSet\\Services\\lanmanserver\\parameters\\enableW9xsecuritysignature  Notes  All Windows operating systems support both a client-side SMB component and a server-side SMB component. For Windows 2000 and above, enabling or requiring packet signing for client and server-side SMB components is controlled by the following four policy settings: Microsoft network client: Digitally sign communications (always) - Controls whether or not the client-side SMB component requires packet signing. Microsoft network client: Digitally sign communications (if server agrees) - Controls whether or not the client-side SMB component has packet signing enabled. Microsoft network server: Digitally sign communications (always) - Controls whether or not the server-side SMB component requires packet signing. Microsoft network server: Digitally sign communications (if client agrees) - Controls whether or not the server-side SMB component has packet signing enabled. If both client-side and server-side SMB signing is enabled and the client establishes an SMB 1.0 connection to the server, SMB signing will be attempted. SMB packet signing can significantly degrade SMB performance, depending on dialect version, OS version, file sizes, processor offloading capabilities, and application IO behaviors. This setting only applies to SMB 1.0 connections. For more information, reference: https://go.microsoft.com/fwlink/?LinkID=787136.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "MicrosoftNetworkServer_DisconnectClientsWhenLogonHoursExpire": {
        "name": "MicrosoftNetworkServer_DisconnectClientsWhenLogonHoursExpire",
        "description": "Microsoft network server: Disconnect clients when logon hours expire  This security setting determines whether to disconnect users who are connected to the local computer outside their user account's valid logon hours. This setting affects the Server Message Block (SMB) component. When this policy is enabled, it causes client sessions with the SMB Service to be forcibly disconnected when the client's logon hours expire. If this policy is disabled, an established client session is allowed to be maintained after the client's logon hours have expired.  Default on Windows Vista and above: Enabled.  Default on Windows XP: Disabled",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "MicrosoftNetworkServer_ServerSPNTargetNameValidationLevel": {
        "name": "MicrosoftNetworkServer_ServerSPNTargetNameValidationLevel",
        "description": "Microsoft network server: Server SPN target name validation level  This policy setting controls the level of validation a computer with shared folders or printers (the server) performs on the service principal name (SPN) that is provided by the client computer when it establishes a session using the server message block (SMB) protocol. The server message block (SMB) protocol provides the basis for file and print sharing and other networking operations, such as remote Windows administration. The SMB protocol supports validating the SMB server service principal name (SPN) within the authentication blob provided by a SMB client to  prevent a class of attacks against SMB servers referred to as SMB relay attacks. This setting will affect both SMB1 and SMB2. This security setting determines the level of validation a SMB server performs on the service principal name (SPN) provided by the SMB client when trying to establish a session to an SMB server. The options are:  Off – the SPN  is not required or validated by the SMB server from a SMB client.  Accept if provided by client – the SMB server will accept and validate the SPN provided by the SMB client and allow a session to be established if it matches the SMB server’s list of SPN’s for itself. If the SPN does NOT match, the session request for that SMB client will be denied.  Required from client - the SMB client MUST send a SPN name in session setup, and the SPN name provided MUST match the SMB server that is being requested to establish a connection.  If no SPN is provided by client, or the SPN provided does not match, the session is denied.  Default: Off  All Windows operating systems support both a client-side SMB component and a server-side SMB component. This setting affects the server SMB behavior, and its implementation should be carefully evaluated and tested to prevent disruptions to file and print serving capabilities. Additional information on implementing and using this to secure your SMB servers can be found at the Microsoft website  (https://go.microsoft.com/fwlink/?LinkId=144505).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "NetworkAccess_AllowAnonymousSIDOrNameTranslation": {
        "name": "NetworkAccess_AllowAnonymousSIDOrNameTranslation",
        "description": "Network access: Allow anonymous SID/name translation  This policy setting determines whether an anonymous user can request security identifier (SID) attributes for another user. If this policy is enabled, an anonymous user can request the SID attribute for another user. An anonymous user with knowledge of an administrator's SID could contact a computer that has this policy enabled and use the SID to get the administrator's name. This setting affects both the SID-to-name translation as well as the name-to-SID translation. If this policy setting is disabled, an anonymous user cannot request the SID attribute for another user.  Default on workstations and member servers: Disabled.  Default on domain controllers running Windows Server 2008 or later: Disabled.  Default on domain controllers running Windows Server 2003 R2 or earlier: Enabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "NetworkAccess_DoNotAllowAnonymousEnumerationOfSAMAccounts": {
        "name": "NetworkAccess_DoNotAllowAnonymousEnumerationOfSAMAccounts",
        "description": "Network access: Do not allow anonymous enumeration of SAM accounts  This security setting determines what additional permissions will be granted for anonymous connections to the computer.  Windows allows anonymous users to perform certain activities, such as enumerating the names of domain accounts and network shares. This is convenient, for example, when an administrator wants to grant access to users in a trusted domain that does not maintain a reciprocal trust.  This security option allows additional restrictions to be placed on anonymous connections as follows:  Enabled: Do not allow enumeration of SAM accounts. This option replaces Everyone with Authenticated Users in the security permissions for resources. Disabled: No additional restrictions. Rely on default permissions.  Default on workstations: Enabled. Default on server:Enabled.  Important  This policy has no impact on domain controllers.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "NetworkAccess_DoNotAllowAnonymousEnumerationOfSamAccountsAndShares": {
        "name": "NetworkAccess_DoNotAllowAnonymousEnumerationOfSamAccountsAndShares",
        "description": "Network access: Do not allow anonymous enumeration of SAM accounts and shares  This security setting determines whether anonymous enumeration of SAM accounts and shares is allowed.  Windows allows anonymous users to perform certain activities, such as enumerating the names of domain accounts and network shares. This is convenient, for example, when an administrator wants to grant access to users in a trusted domain that does not maintain a reciprocal trust. If you do not want to allow anonymous enumeration of SAM accounts and shares, then enable this policy.  Default: Disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "NetworkAccess_DoNotAllowStorageOfPasswordsAndCredentialsForNetworkAuthentication": {
        "name": "NetworkAccess_DoNotAllowStorageOfPasswordsAndCredentialsForNetworkAuthentication",
        "description": "Network access: Do not allow storage of passwords and credentials for network authentication  This security setting determines whether Credential Manager saves passwords and credentials for later use when it gains domain authentication. If you enable this setting, Credential Manager does not store passwords and credentials on the computer. If you disable or do not configure this policy setting, Credential Manager will store passwords and credentials on this computer for later use for domain authentication. Note: When configuring this security setting, changes will not take effect until you restart Windows.  Default: Disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "NetworkAccess_LetEveryonePermissionsApplyToAnonymousUsers": {
        "name": "NetworkAccess_LetEveryonePermissionsApplyToAnonymousUsers",
        "description": "Network access: Let Everyone permissions apply to anonymous users  This security setting determines what additional permissions are granted for anonymous connections to the computer. Windows allows anonymous users to perform certain activities, such as enumerating the names of domain accounts and network shares. This is convenient, for example, when an administrator wants to grant access to users in a trusted domain that does not maintain a reciprocal trust. By Default, the Everyone security identifier (SID) is removed from the token created for anonymous connections. Therefore, permissions granted to the Everyone group do not apply to anonymous users. If this option is set, anonymous users can only access those resources for which the anonymous user has been explicitly given permission. If this policy is enabled, the Everyone SID is added to the token that is created for anonymous connections. In this case, anonymous users are able to access any resource for which the Everyone group has been given permissions.  Default: Disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "NetworkAccess_NamedPipesThatCanBeAccessedAnonymously": {
        "name": "NetworkAccess_NamedPipesThatCanBeAccessedAnonymously",
        "description": "Network access: Named pipes that can be accessed anonymously  This security setting determines which communication sessions (pipes) will have attributes and permissions that allow anonymous access.  Default: None.",
        "format": "string",
        "scope": "device"
      },
      "NetworkAccess_RemotelyAccessibleRegistryPaths": {
        "name": "NetworkAccess_RemotelyAccessibleRegistryPaths",
        "description": "Network access: Remotely accessible registry paths  This security setting determines which registry keys can be accessed over the network, regardless of the users or groups listed in the access control list (ACL) of the winreg registry key.  Default:  System\\CurrentControlSet\\Control\\ProductOptions  System\\CurrentControlSet\\Control\\Server Applications  Software\\Microsoft\\Windows NT\\CurrentVersion  Caution  Incorrectly editing the registry may severely damage your system. Before making changes to the registry, you should back up any valued data on the computer.  Note: This security setting is not available on earlier versions of Windows. The security setting that appears on computers running Windows XP, &quot;Network access: Remotely accessible registry paths&quot; corresponds to the &quot;Network access: Remotely accessible registry paths and subpaths&quot; security option on members of the Windows Server 2003 family. For more information, see Network access: Remotely accessible registry paths and subpaths.",
        "format": "string",
        "scope": "device"
      },
      "NetworkAccess_RemotelyAccessibleRegistryPathsAndSubpaths": {
        "name": "NetworkAccess_RemotelyAccessibleRegistryPathsAndSubpaths",
        "description": "Network access: Remotely accessible registry paths and subpaths  This security setting determines which registry paths and subpaths can be accessed over the network, regardless of the users or groups listed in the access control list (ACL) of the winreg registry key.  Default:  System\\CurrentControlSet\\Control\\Print\\Printers  System\\CurrentControlSet\\Services\\Eventlog  Software\\Microsoft\\OLAP Server  Software\\Microsoft\\Windows NT\\CurrentVersion\\Print  Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows  System\\CurrentControlSet\\Control\\ContentIndex  System\\CurrentControlSet\\Control\\Terminal Server  System\\CurrentControlSet\\Control\\Terminal Server\\UserConfig  System\\CurrentControlSet\\Control\\Terminal Server\\DefaultUserConfiguration  Software\\Microsoft\\Windows NT\\CurrentVersion\\Perflib  System\\CurrentControlSet\\Services\\SysmonLog  System\\CurrentControlSet\\Services\\CertSvc  System\\CurrentControlSet\\Services\\Wins  Caution  Incorrectly editing the registry may severely damage your system. Before making changes to the registry, you should back up any valued data on the computer.  Note: On Windows XP, this security setting was called \"Network access: Remotely accessible registry paths.\" If you configure this setting on a member of the Windows Server 2003 family that is joined to a domain, this setting is inherited by computers running Windows XP, but will appear as the \"Network access: Remotely accessible registry paths\" security option. For more information, see Network access: Remotely accessible registry paths and subpaths.",
        "format": "string",
        "scope": "device"
      },
      "NetworkAccess_RestrictAnonymousAccessToNamedPipesAndShares": {
        "name": "NetworkAccess_RestrictAnonymousAccessToNamedPipesAndShares",
        "description": "Network access: Restrict anonymous access to Named Pipes and Shares  When enabled, this security setting restricts anonymous access to shares and pipes to the settings for:  Network access: Named pipes that can be accessed anonymously Network access: Shares that can be accessed anonymously Default: Enabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "NetworkAccess_RestrictClientsAllowedToMakeRemoteCallsToSAM": {
        "name": "NetworkAccess_RestrictClientsAllowedToMakeRemoteCallsToSAM",
        "description": "Network access: Restrict clients allowed to make remote calls to SAM  This policy setting allows you to restrict remote rpc connections to SAM.  If not selected, the default security descriptor will be used.  This policy is supported on at least Windows Server 2016.",
        "format": "string",
        "scope": "device"
      },
      "NetworkAccess_SharesThatCanBeAccessedAnonymously": {
        "name": "NetworkAccess_SharesThatCanBeAccessedAnonymously",
        "description": "Network access: Shares that can be accessed anonymously  This security setting determines which network shares can accessed by anonymous users.  Default: None specified.",
        "format": "string",
        "scope": "device"
      },
      "NetworkAccess_SharingAndSecurityModelForLocalAccounts": {
        "name": "NetworkAccess_SharingAndSecurityModelForLocalAccounts",
        "description": "Network access: Sharing and security model for local accounts  This security setting determines how network logons that use local accounts are authenticated. If this setting is set to Classic, network logons that use local account credentials authenticate by using those credentials. The Classic model allows fine control over access to resources. By using the Classic model, you can grant different types of access to different users for the same resource. If this setting is set to Guest only, network logons that use local accounts are automatically mapped to the Guest account. By using the Guest model, you can have all users treated equally. All users authenticate as Guest, and they all receive the same level of access to a given resource, which can be either Read-only or Modify.  Default on domain computers: Classic.  Default on stand-alone computers: Guest only  Important  With the Guest only model, any user who can access your computer over the network (including anonymous Internet users) can access your shared resources. You must use the Windows Firewall or another similar device to protect your computer from unauthorized access. Similarly, with the Classic model, local accounts must be password protected; otherwise, those user accounts can be used by anyone to access shared system resources.  Note: This setting does not affect interactive logons that are performed remotely by using such services as Telnet or Remote Desktop Services. Remote Desktop Services was called Terminal Services in previous versions of Windows Server. This policy will have no impact on computers running Windows 2000. When the computer is not joined to a domain, this setting also modifies the Sharing and Security tabs in File Explorer to correspond to the sharing and security model that is being used.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "NetworkSecurity_AllowLocalSystemNULLSessionFallback": {
        "name": "NetworkSecurity_AllowLocalSystemNULLSessionFallback",
        "description": "Network security: Allow LocalSystem NULL session fallback  Allow NTLM to fall back to NULL session when used with LocalSystem. The default is TRUE up to Windows Vista and FALSE in Windows 7.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "NetworkSecurity_AllowLocalSystemToUseComputerIdentityForNTLM": {
        "name": "NetworkSecurity_AllowLocalSystemToUseComputerIdentityForNTLM",
        "description": "Network security: Allow Local System to use computer identity for NTLM  This policy setting allows Local System services that use Negotiate to use the computer identity when reverting to NTLM authentication.  If you enable this policy setting, services running as Local System that use Negotiate will use the computer identity. This might cause some authentication requests between Windows operating systems to fail and log an error.  If you disable this policy setting, services running as Local System that use Negotiate when reverting to NTLM authentication will authenticate anonymously.  By default, this policy is enabled on Windows 7 and above.  By default, this policy is disabled on Windows Vista.  This policy is supported on at least Windows Vista or Windows Server 2008.  Note: Windows Vista or Windows Server 2008 do not expose this setting in Group Policy.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Block"
            },
            "1": {
              "description": "Allow"
            }
          }
        },
        "scope": "device"
      },
      "NetworkSecurity_AllowPKU2UAuthenticationRequests": {
        "name": "NetworkSecurity_AllowPKU2UAuthenticationRequests",
        "description": "Network security: Allow PKU2U authentication requests to this computer to use online identities.  This policy will be turned off by default on domain joined machines. This would prevent online identities from authenticating to the domain joined machine.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Block"
            },
            "1": {
              "description": "Allow"
            }
          }
        },
        "scope": "device"
      },
      "NetworkSecurity_DoNotStoreLANManagerHashValueOnNextPasswordChange": {
        "name": "NetworkSecurity_DoNotStoreLANManagerHashValueOnNextPasswordChange",
        "description": "Network security: Do not store LAN Manager hash value on next password change  This security setting determines if, at the next password change, the LAN Manager (LM) hash value for the new password is stored. The LM hash is relatively weak and prone to attack, as compared with the cryptographically stronger Windows NT hash. Since the LM hash is stored on the local computer in the security database the passwords can be compromised if the security database is attacked.   Default on Windows Vista and above: Enabled Default on Windows XP: Disabled.  Important  Windows 2000 Service Pack 2 (SP2) and above offer compatibility with authentication to previous versions of Windows, such as Microsoft Windows NT 4.0. This setting can affect the ability of computers running Windows 2000 Server, Windows 2000 Professional, Windows XP, and the Windows Server 2003 family to communicate with computers running Windows 95 and Windows 98.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "NetworkSecurity_ForceLogoffWhenLogonHoursExpire": {
        "name": "NetworkSecurity_ForceLogoffWhenLogonHoursExpire",
        "description": "Network security: Force logoff when logon hours expire  This security setting determines whether to disconnect users who are connected to the local computer outside their user account's valid logon hours. This setting affects the Server Message Block (SMB) component. When this policy is enabled, it causes client sessions with the SMB server to be forcibly disconnected when the client's logon hours expire. If this policy is disabled, an established client session is allowed to be maintained after the client's logon hours have expired.  Default: Enabled.  Note: This security setting behaves as an account policy. For domain accounts, there can be only one account policy. The account policy must be defined in the Default Domain Policy, and it is enforced by the domain controllers that make up the domain. A domain controller always pulls the account policy from the Default Domain Policy Group Policy object (GPO), even if there is a different account policy applied to the organizational unit that contains the domain controller. By default, workstations and servers that are joined to a domain (for example, member computers) also receive the same account policy for their local accounts. However, local account policies for member computers can be different from the domain account policy by defining an account policy for the organizational unit that contains the member computers. Kerberos settings are not applied to member computers.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "NetworkSecurity_LANManagerAuthenticationLevel": {
        "name": "NetworkSecurity_LANManagerAuthenticationLevel",
        "description": "Network security LAN Manager authentication level  This security setting determines which challenge/response authentication protocol is used for network logons. This choice affects the level of authentication protocol used by clients, the level of session security negotiated, and the level of authentication accepted by servers as follows:  Send LM and NTLM responses: Clients use LM and NTLM authentication and never use NTLMv2 session security; domain controllers accept LM, NTLM, and NTLMv2 authentication.  Send LM and NTLM - use NTLMv2 session security if negotiated: Clients use LM and NTLM authentication and use NTLMv2 session security if the server supports it; domain controllers accept LM, NTLM, and NTLMv2 authentication.  Send NTLM response only: Clients use NTLM authentication only and use NTLMv2 session security if the server supports it; domain controllers accept LM, NTLM, and NTLMv2 authentication.  Send NTLMv2 response only: Clients use NTLMv2 authentication only and use NTLMv2 session security if the server supports it; domain controllers accept LM, NTLM, and NTLMv2 authentication.  Send NTLMv2 response only\\refuse LM: Clients use NTLMv2 authentication only and use NTLMv2 session security if the server supports it; domain controllers refuse LM (accept only NTLM and NTLMv2 authentication).  Send NTLMv2 response only\\refuse LM and NTLM: Clients use NTLMv2 authentication only and use NTLMv2 session security if the server supports it; domain controllers refuse LM and NTLM (accept only NTLMv2 authentication).  Important  This setting can affect the ability of computers running Windows 2000 Server, Windows 2000 Professional, Windows XP Professional, and the Windows Server 2003 family to communicate with computers running Windows NT 4.0 and earlier over the network. For example, at the time of this writing, computers running Windows NT 4.0 SP4 and earlier did not support NTLMv2. Computers running Windows 95 and Windows 98 did not support NTLM.  Default:  Windows 2000 and windows XP: send LM and NTLM responses  Windows Server 2003: Send NTLM response only  Windows Vista, Windows Server 2008, Windows 7, and Windows Server 2008 R2: Send NTLMv2 response only",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Send LM and NTLM responses"
            },
            "1": {
              "description": "Send LM and NTLM-use NTLMv2 session security if negotiated"
            },
            "2": {
              "description": "Send LM and NTLM responses only"
            },
            "3": {
              "description": "Send LM and NTLMv2 responses only"
            },
            "4": {
              "description": "Send LM and NTLMv2 responses only. Refuse LM"
            },
            "5": {
              "description": "Send LM and NTLMv2 responses only. Refuse LM and NTLM"
            }
          }
        },
        "scope": "device"
      },
      "NetworkSecurity_LDAPClientSigningRequirements": {
        "name": "NetworkSecurity_LDAPClientSigningRequirements",
        "description": "Network security: LDAP client signing requirements  This security setting determines the level of data signing that is requested on behalf of clients issuing LDAP BIND requests, as follows:  None: The LDAP BIND request is issued with the options that are specified by the caller.  Negotiate signing: If Transport Layer Security/Secure Sockets Layer (TLS\\SSL) has not been started, the LDAP BIND request is initiated with the LDAP data signing option set in addition to the options specified by the caller. If TLS\\SSL has been started, the LDAP BIND request is initiated with the options that are specified by the caller.  Require signature: This is the same as Negotiate signing. However, if the LDAP server's intermediate saslBindInProgress response does not indicate that LDAP traffic signing is required, the caller is told that the LDAP BIND command request failed.  Caution  If you set the server to Require signature, you must also set the client. Not setting the client results in a loss of connection with the server.  Note: This setting does not have any impact on ldap_simple_bind or ldap_simple_bind_s. No Microsoft LDAP clients that are shipped with Windows XP Professional use ldap_simple_bind or ldap_simple_bind_s to talk to a domain controller.  Default: Negotiate signing.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "NetworkSecurity_MinimumSessionSecurityForNTLMSSPBasedClients": {
        "name": "NetworkSecurity_MinimumSessionSecurityForNTLMSSPBasedClients",
        "description": "Network security: Minimum session security for NTLM SSP based (including secure RPC) clients  This security setting allows a client to require the negotiation of 128-bit encryption and/or NTLMv2 session security. These values are dependent on the LAN Manager Authentication Level security setting value. The options are:  Require NTLMv2 session security: The connection will fail if NTLMv2 protocol is not negotiated. Require 128-bit encryption: The connection will fail if strong encryption (128-bit) is not negotiated.  Default:  Windows XP, Windows Vista, Windows 2000 Server, Windows Server 2003, and Windows Server 2008: No requirements.  Windows 7 and Windows Server 2008 R2: Require 128-bit encryption",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "None"
            },
            "524288": {
              "description": "Require NTLMv2 session security"
            },
            "536870912": {
              "description": "Require 128-bit encryption"
            },
            "537395200": {
              "description": "Require NTLM and 128-bit encryption"
            }
          }
        },
        "scope": "device"
      },
      "NetworkSecurity_MinimumSessionSecurityForNTLMSSPBasedServers": {
        "name": "NetworkSecurity_MinimumSessionSecurityForNTLMSSPBasedServers",
        "description": "Network security: Minimum session security for NTLM SSP based (including secure RPC) servers  This security setting allows a server to require the negotiation of 128-bit encryption and/or NTLMv2 session security. These values are dependent on the LAN Manager Authentication Level security setting value. The options are:  Require NTLMv2 session security: The connection will fail if message integrity is not negotiated. Require 128-bit encryption. The connection will fail if strong encryption (128-bit) is not negotiated.  Default:  Windows XP, Windows Vista, Windows 2000 Server, Windows Server 2003, and Windows Server 2008: No requirements.  Windows 7 and Windows Server 2008 R2: Require 128-bit encryption",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "None"
            },
            "524288": {
              "description": "Require NTLMv2 session security"
            },
            "536870912": {
              "description": "Require 128-bit encryption"
            },
            "537395200": {
              "description": "Require NTLM and 128-bit encryption"
            }
          }
        },
        "scope": "device"
      },
      "NetworkSecurity_RestrictNTLM_AddRemoteServerExceptionsForNTLMAuthentication": {
        "name": "NetworkSecurity_RestrictNTLM_AddRemoteServerExceptionsForNTLMAuthentication",
        "description": "Network security: Restrict NTLM: Add remote server exceptions for NTLM authentication  This policy setting allows you to create an exception list of remote servers to which clients are allowed to use NTLM authentication if the  \"Network Security: Restrict NTLM: Outgoing NTLM traffic to remote servers\" policy setting is configured.  If you configure this policy setting, you can define a list of remote servers to which clients are allowed to use NTLM authentication.  If you do not configure this policy setting, no exceptions will be applied.  The naming format for servers on this exception list is the fully qualified domain name (FQDN) or NetBIOS server name used by the application, listed one per line. To ensure exceptions the name used by all applications needs to be in the list, and to ensure an exception is accurate, the server name should be listed in both naming formats . A single asterisk (*) can be used anywhere in the string as a wildcard character.",
        "format": "string",
        "scope": "device"
      },
      "NetworkSecurity_RestrictNTLM_AuditIncomingNTLMTraffic": {
        "name": "NetworkSecurity_RestrictNTLM_AuditIncomingNTLMTraffic",
        "description": "Network security: Restrict NTLM: Audit Incoming NTLM Traffic  This policy setting allows you to audit incoming NTLM traffic.  If you select \"Disable\", or do not configure this policy setting, the server will not log events for incoming NTLM traffic.  If you select \"Enable auditing for domain accounts\", the server will log events for NTLM pass-through authentication requests that would be blocked when the \"Network Security: Restrict NTLM: Incoming NTLM traffic\" policy setting is set to the \"Deny all domain accounts\" option.  If you select \"Enable auditing for all accounts\", the server will log events for all NTLM authentication requests that would be blocked when the \"Network Security: Restrict NTLM: Incoming NTLM traffic\" policy setting is set to the \"Deny all accounts\" option.  This policy is supported on at least Windows 7 or Windows Server 2008 R2.  Note: Audit events are recorded on this computer in the \"Operational\" Log located under the Applications and Services Log/Microsoft/Windows/NTLM.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable auditing for domain accounts"
            },
            "2": {
              "description": "Enable auditing for all accounts"
            }
          }
        },
        "scope": "device"
      },
      "NetworkSecurity_RestrictNTLM_IncomingNTLMTraffic": {
        "name": "NetworkSecurity_RestrictNTLM_IncomingNTLMTraffic",
        "description": "Network security: Restrict NTLM: Incoming NTLM traffic  This policy setting allows you to deny or allow incoming NTLM traffic.  If you select \"Allow all\" or do not configure this policy setting, the server will allow all NTLM authentication requests.  If you select \"Deny all domain accounts,\" the server will deny NTLM authentication requests for domain logon and display an NTLM blocked error, but allow local account logon.  If you select \"Deny all accounts,\" the server will deny NTLM authentication requests from incoming traffic and display an NTLM blocked error.  This policy is supported on at least Windows 7 or Windows Server 2008 R2.  Note: Block events are recorded on this computer in the \"Operational\" Log located under the Applications and Services Log/Microsoft/Windows/NTLM.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow all"
            },
            "1": {
              "description": "Deny all domain accounts"
            },
            "2": {
              "description": "Deny all accounts"
            }
          }
        },
        "scope": "device"
      },
      "NetworkSecurity_RestrictNTLM_OutgoingNTLMTrafficToRemoteServers": {
        "name": "NetworkSecurity_RestrictNTLM_OutgoingNTLMTrafficToRemoteServers",
        "description": "Network security: Restrict NTLM: Outgoing NTLM traffic to remote servers  This policy setting allows you to deny or audit outgoing NTLM traffic from this Windows 7 or this Windows Server 2008 R2 computer to any Windows remote server.  If you select \"Allow all\" or do not configure this policy setting, the client computer can authenticate identities to a remote server by using NTLM authentication.  If you select \"Audit all,\" the client computer logs an event for each NTLM authentication request to a remote server. This allows you to identify those servers receiving NTLM authentication requests from the client computer.  If you select \"Deny all,\" the client computer cannot authenticate identities to a remote server by using NTLM authentication. You can use the \"Network security: Restrict NTLM: Add remote server exceptions for NTLM authentication\" policy setting to define a list of remote servers to which clients are allowed to use NTLM authentication.  This policy is supported on at least Windows 7 or Windows Server 2008 R2.  Note: Audit and block events are recorded on this computer in the \"Operational\" Log located under the Applications and Services Log/Microsoft/Windows/NTLM.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow all"
            },
            "1": {
              "description": "Deny all domain accounts"
            },
            "2": {
              "description": "Deny all accounts"
            }
          }
        },
        "scope": "device"
      },
      "RecoveryConsole_AllowAutomaticAdministrativeLogon": {
        "name": "RecoveryConsole_AllowAutomaticAdministrativeLogon",
        "description": "Recovery console: Allow automatic administrative logon  This security setting determines if the password for the Administrator account must be given before access to the system is granted. If this option is enabled, the Recovery Console does not require you to provide a password, and it automatically logs on to the system.  Default: This policy is not defined and automatic administrative logon is not allowed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "RecoveryConsole_AllowFloppyCopyAndAccessToAllDrivesAndAllFolders": {
        "name": "RecoveryConsole_AllowFloppyCopyAndAccessToAllDrivesAndAllFolders",
        "description": "Recovery console: Allow floppy copy and access to all drives and all folders  Enabling this security option makes the Recovery Console SET command available, which allows you to set the following Recovery Console environment variables:  AllowWildCards: Enable wildcard support for some commands (such as the DEL command).  AllowAllPaths: Allow access to all files and folders on the computer.  AllowRemovableMedia: Allow files to be copied to removable media, such as a floppy disk.  NoCopyPrompt: Do not prompt when overwriting an existing file.  Default: This policy is not defined and the recover console SET command is not available.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "Shutdown_AllowSystemToBeShutDownWithoutHavingToLogOn": {
        "name": "Shutdown_AllowSystemToBeShutDownWithoutHavingToLogOn",
        "description": "Shutdown: Allow system to be shut down without having to log on  This security setting determines whether a computer can be shut down without having to log on to Windows.  When this policy is enabled, the Shut Down command is available on the Windows logon screen.  When this policy is disabled, the option to shut down the computer does not appear on the Windows logon screen. In this case, users must be able to log on to the computer successfully and have the Shut down the system user right before they can perform a system shutdown.  Default on workstations: Enabled. Default on servers: Disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "disabled"
            },
            "1": {
              "description": "enabled (allow system to be shut down without having to log on)"
            }
          }
        },
        "scope": "device"
      },
      "Shutdown_ClearVirtualMemoryPageFile": {
        "name": "Shutdown_ClearVirtualMemoryPageFile",
        "description": "Shutdown: Clear virtual memory pagefile  This security setting determines whether the virtual memory pagefile is cleared when the system is shut down.  Virtual memory support uses a system pagefile to swap pages of memory to disk when they are not used. On a running system, this pagefile is opened exclusively by the operating system, and it is well protected. However, systems that are configured to allow booting to other operating systems might have to make sure that the system pagefile is wiped clean when this system shuts down. This ensures that sensitive information from process memory that might go into the pagefile is not available to an unauthorized user who manages to directly access the pagefile.  When this policy is enabled, it causes the system pagefile to be cleared upon clean shutdown. If you enable this security option, the hibernation file (hiberfil.sys) is also zeroed out when hibernation is disabled.  Default: Disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "SystemCryptography_ForceStrongKeyProtection": {
        "name": "SystemCryptography_ForceStrongKeyProtection",
        "description": "System Cryptography: Force strong key protection for user keys stored on the computer  This security setting determines if users' private keys require a password to be used. The options are:  User input is not required when new keys are stored and used  User is prompted when the key is first used  User must enter a password each time they use a key  For more information, see Public key infrastructure.  Default: This policy is not defined.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "SystemObjects_RequireCaseInsensitivityForNonWindowsSubsystems": {
        "name": "SystemObjects_RequireCaseInsensitivityForNonWindowsSubsystems",
        "description": "System objects: Require case insensitivity for non-Windows subsystems  This security setting determines whether case insensitivity is enforced for all subsystems. The Win32 subsystem is case insensitive. However, the kernel supports case sensitivity for other subsystems, such as POSIX. If this setting is enabled, case insensitivity is enforced for all directory objects, symbolic links, and IO objects, including file objects. Disabling this setting does not allow the Win32 subsystem to become case sensitive.  Default: Enabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "SystemObjects_StrengthenDefaultPermissionsOfInternalSystemObjects": {
        "name": "SystemObjects_StrengthenDefaultPermissionsOfInternalSystemObjects",
        "description": "System objects: Strengthen default permissions of internal system objects (e.g., Symbolic Links)  This security setting determines the strength of the default discretionary access control list (DACL) for objects. Active Directory maintains a global list of shared system resources, such as DOS device names, mutexes, and semaphores. In this way, objects can be located and shared among processes. Each type of object is created with a default DACL that specifies who can access the objects and what permissions are granted. If this policy is enabled, the default DACL is stronger, allowing users who are not administrators to read shared objects but not allowing these users to modify shared objects that they did not create.  Default: Enabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "UserAccountControl_AllowUIAccessApplicationsToPromptForElevation": {
        "name": "UserAccountControl_AllowUIAccessApplicationsToPromptForElevation",
        "description": "User Account Control: Allow UIAccess applications to prompt for elevation without using the secure desktop.  This policy setting controls whether User Interface Accessibility (UIAccess or UIA) programs can automatically disable the secure desktop for elevation prompts used by a standard user.  • Enabled: UIA programs, including Windows Remote Assistance, automatically disable the secure desktop for elevation prompts. If you do not disable the \"User Account Control: Switch to the secure desktop when prompting for elevation\" policy setting, the prompts appear on the interactive user's desktop instead of the secure desktop.  • Disabled: (Default) The secure desktop can be disabled only by the user of the interactive desktop or by disabling the \"User Account Control: Switch to the secure desktop when prompting for elevation\" policy setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "disabled"
            },
            "1": {
              "description": "enabled (allow UIAccess applications to prompt for elevation without using the secure desktop)"
            }
          }
        },
        "scope": "device"
      },
      "UserAccountControl_BehaviorOfTheElevationPromptForAdministrators": {
        "name": "UserAccountControl_BehaviorOfTheElevationPromptForAdministrators",
        "description": "User Account Control: Behavior of the elevation prompt for administrators in Admin Approval Mode  This policy setting controls the behavior of the elevation prompt for administrators.  The options are:  • Elevate without prompting: Allows privileged accounts to perform an operation that requires elevation without requiring consent or credentials. Note: Use this option only in the most constrained environments.  • Prompt for credentials on the secure desktop: When an operation requires elevation of privilege, the user is prompted on the secure desktop to enter a privileged user name and password. If the user enters valid credentials, the operation continues with the user's highest available privilege.  • Prompt for consent on the secure desktop: When an operation requires elevation of privilege, the user is prompted on the secure desktop to select either Permit or Deny. If the user selects Permit, the operation continues with the user's highest available privilege.  • Prompt for credentials: When an operation requires elevation of privilege, the user is prompted to enter an administrative user name and password. If the user enters valid credentials, the operation continues with the applicable privilege.  • Prompt for consent: When an operation requires elevation of privilege, the user is prompted to select either Permit or Deny. If the user selects Permit, the operation continues with the user's highest available privilege.  • Prompt for consent for non-Windows binaries: (Default) When an operation for a non-Microsoft application requires elevation of privilege, the user is prompted on the secure desktop to select either Permit or Deny. If the user selects Permit, the operation continues with the user's highest available privilege.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Elevate without prompting"
            },
            "1": {
              "description": "Prompt for credentials on the secure desktop"
            },
            "2": {
              "description": "Prompt for consent on the secure desktop"
            },
            "3": {
              "description": "Prompt for credentials"
            },
            "4": {
              "description": "Prompt for consent"
            },
            "5": {
              "description": "Prompt for consent for non-Windows binaries"
            }
          }
        },
        "scope": "device"
      },
      "UserAccountControl_BehaviorOfTheElevationPromptForStandardUsers": {
        "name": "UserAccountControl_BehaviorOfTheElevationPromptForStandardUsers",
        "description": "User Account Control: Behavior of the elevation prompt for standard users This policy setting controls the behavior of the elevation prompt for standard users.  The options are:  • Prompt for credentials: (Default) When an operation requires elevation of privilege, the user is prompted to enter an administrative user name and password. If the user enters valid credentials, the operation continues with the applicable privilege.  • Automatically deny elevation requests: When an operation requires elevation of privilege, a configurable access denied error message is displayed. An enterprise that is running desktops as standard user may choose this setting to reduce help desk calls.  • Prompt for credentials on the secure desktop: When an operation requires elevation of privilege, the user is prompted on the secure desktop to enter a different user name and password. If the user enters valid credentials, the operation continues with the applicable privilege.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Automatically deny elevation requests"
            },
            "1": {
              "description": "Prompt for credentials on the secure desktop"
            },
            "3": {
              "description": "Prompt for credentials"
            }
          }
        },
        "scope": "device"
      },
      "UserAccountControl_DetectApplicationInstallationsAndPromptForElevation": {
        "name": "UserAccountControl_DetectApplicationInstallationsAndPromptForElevation",
        "description": "User Account Control: Detect application installations and prompt for elevation  This policy setting controls the behavior of application installation detection for the computer.  The options are:  Enabled: (Default) When an application installation package is detected that requires elevation of privilege, the user is prompted to enter an administrative user name and password. If the user enters valid credentials, the operation continues with the applicable privilege.  Disabled: Application installation packages are not detected and prompted for elevation. Enterprises that are running standard user desktops and use delegated installation technologies such as Group Policy Software Installation or Systems Management Server (SMS) should disable this policy setting. In this case, installer detection is unnecessary.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "UserAccountControl_OnlyElevateExecutableFilesThatAreSignedAndValidated": {
        "name": "UserAccountControl_OnlyElevateExecutableFilesThatAreSignedAndValidated",
        "description": "User Account Control: Only elevate executable files that are signed and validated  This policy setting enforces public key infrastructure (PKI) signature checks for any interactive applications that request elevation of privilege. Enterprise administrators can control which applications are allowed to run by adding certificates to the Trusted Publishers certificate store on local computers.  The options are:  • Enabled: Enforces the PKI certification path validation for a given executable file before it is permitted to run.  • Disabled: (Default) Does not enforce PKI certification path validation before a given executable file is permitted to run.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled: Does not enforce validation."
            },
            "1": {
              "description": "Enabled: Enforces validation."
            }
          }
        },
        "scope": "device"
      },
      "UserAccountControl_OnlyElevateUIAccessApplicationsThatAreInstalledInSecureLocations": {
        "name": "UserAccountControl_OnlyElevateUIAccessApplicationsThatAreInstalledInSecureLocations",
        "description": "User Account Control: Only elevate UIAccess applications that are installed in secure locations  This policy setting controls whether applications that request to run with a User Interface Accessibility (UIAccess) integrity level must reside in a secure location in the file system. Secure locations are limited to the following:  - …\\Program Files\\, including subfolders - …\\Windows\\system32\\ - …\\Program Files (x86)\\, including subfolders for 64-bit versions of Windows  Note: Windows enforces a public key infrastructure (PKI) signature check on any interactive application that requests to run with a UIAccess integrity level regardless of the state of this security setting.  The options are:  • Enabled: (Default) If an application resides in a secure location in the file system, it runs only with UIAccess integrity.  • Disabled: An application runs with UIAccess integrity even if it does not reside in a secure location in the file system.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled: Application runs with UIAccess integrity even if it does not reside in a secure location."
            },
            "1": {
              "description": "Enabled: Application runs with UIAccess integrity only if it resides in secure location."
            }
          }
        },
        "scope": "device"
      },
      "UserAccountControl_RunAllAdministratorsInAdminApprovalMode": {
        "name": "UserAccountControl_RunAllAdministratorsInAdminApprovalMode",
        "description": "User Account Control: Turn on Admin Approval Mode  This policy setting controls the behavior of all User Account Control (UAC) policy settings for the computer. If you change this policy setting, you must restart your computer.  The options are:  • Enabled: (Default) Admin Approval Mode is enabled. This policy must be enabled and related UAC policy settings must also be set appropriately to allow the built-in Administrator account and all other users who are members of the Administrators group to run in Admin Approval Mode.   • Disabled: Admin Approval Mode and all related UAC policy settings are disabled. Note: If this policy setting is disabled, the Security Center notifies you that the overall security of the operating system has been reduced.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "UserAccountControl_SwitchToTheSecureDesktopWhenPromptingForElevation": {
        "name": "UserAccountControl_SwitchToTheSecureDesktopWhenPromptingForElevation",
        "description": "User Account Control: Switch to the secure desktop when prompting for elevation  This policy setting controls whether the elevation request prompt is displayed on the interactive user's desktop or the secure desktop.  The options are:  • Enabled: (Default) All elevation requests go to the secure desktop regardless of prompt behavior policy settings for administrators and standard users.  • Disabled: All elevation requests go to the interactive user's desktop. Prompt behavior policy settings for administrators and standard users are used.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "UserAccountControl_UseAdminApprovalMode": {
        "name": "UserAccountControl_UseAdminApprovalMode",
        "description": "User Account Control: Use Admin Approval Mode for the built-in Administrator account  This policy setting controls the behavior of Admin Approval Mode for the built-in Administrator account.  The options are:  • Enabled: The built-in Administrator account uses Admin Approval Mode. By default, any operation that requires elevation of privilege will prompt the user to approve the operation.  • Disabled: (Default) The built-in Administrator account runs all applications with full administrative privilege.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "UserAccountControl_VirtualizeFileAndRegistryWriteFailuresToPerUserLocations": {
        "name": "UserAccountControl_VirtualizeFileAndRegistryWriteFailuresToPerUserLocations",
        "description": "User Account Control: Virtualize file and registry write failures to per-user locations  This policy setting controls whether application write failures are redirected to defined registry and file system locations. This policy setting mitigates applications that run as administrator and write run-time application data to %ProgramFiles%, %Windir%, %Windir%\\system32, or HKLM\\Software.  The options are:  • Enabled: (Default) Application write failures are redirected at run time to defined user locations for both the file system and registry.  • Disabled: Applications that write data to protected locations fail.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/LocalSecurityAuthority": {
    "name": "LocalSecurityAuthority",
    "policies": {
      "AllowCustomSSPsAPs": {
        "name": "AllowCustomSSPsAPs",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureLsaProtectedProcess": {
        "name": "ConfigureLsaProtectedProcess",
        "description": "If you do not configure this policy and there is no current setting in the registry, LSA will run as protected process for all clean installed, HVCI capable, client SKUs. This configuration is not UEFI locked. This can be overridden if the policy is configured. If you configure and set this policy setting to 'Disabled', LSA will not run as a protected process. If you configure and set this policy setting to 'EnabledWithUEFILock', LSA will run as a protected process and this configuration is UEFI locked. If you configure and set this policy setting to 'EnabledWithoutUEFILock', LSA will run as a protected process and this configuration is not UEFI locked.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled. Default value. LSA will not run as protected process."
            },
            "1": {
              "description": "Enabled with UEFI lock. LSA will run as protected process and this configuration is UEFI locked."
            },
            "2": {
              "description": "Enabled without UEFI lock. LSA will run as protected process and this configuration is not UEFI locked."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/LocalUsersAndGroups": {
    "name": "LocalUsersAndGroups",
    "policies": {
      "Configure": {
        "name": "Configure",
        "description": "This Setting allows an administrator to manage local groups on a Device.                             Possible settings:                             1. Update Group Membership: Update a group and add and/or remove members though the 'U' action.                             When using Update, existing group members that are not specified in the policy remain untouched.                             2. Replace Group Membership: Restrict a group by replacing group membership through the 'R' action.                             When using Replace, existing group membership is replaced by the list of members specified in                             the add member section. This option works in the same way as a Restricted Group and any group                             members that are not specified in the policy are removed.                             Caution: If the same group is configured with both Replace and Update, then Replace will win.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/LockDown": {
    "name": "LockDown",
    "policies": {
      "AllowEdgeSwipe": {
        "name": "AllowEdgeSwipe",
        "description": "Allows the user to invoke any system user interface by swiping in from any screen edge using touch. The easiest way to verify the policy is to restart the explorer process or to reboot after the policy is applied. And then try to swipe from the right edge of the screen. The desired result is for Action Center to not be invoked by the swipe. You can also enter tablet mode and attempt to swipe from the top of the screen to rearrange. That will also be disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disallow edge swipe."
            },
            "1": {
              "description": "Allow edge swipe."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/MSSLegacy": {
    "name": "MSSLegacy",
    "policies": {
      "AllowICMPRedirectsToOverrideOSPFGeneratedRoutes": {
        "name": "AllowICMPRedirectsToOverrideOSPFGeneratedRoutes",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowTheComputerToIgnoreNetBIOSNameReleaseRequestsExceptFromWINSServers": {
        "name": "AllowTheComputerToIgnoreNetBIOSNameReleaseRequestsExceptFromWINSServers",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IPSourceRoutingProtectionLevel": {
        "name": "IPSourceRoutingProtectionLevel",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "IPv6SourceRoutingProtectionLevel": {
        "name": "IPv6SourceRoutingProtectionLevel",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/MSSecurityGuide": {
    "name": "MSSecurityGuide",
    "policies": {
      "ApplyUACRestrictionsToLocalAccountsOnNetworkLogon": {
        "name": "ApplyUACRestrictionsToLocalAccountsOnNetworkLogon",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureSMBV1ClientDriver": {
        "name": "ConfigureSMBV1ClientDriver",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureSMBV1Server": {
        "name": "ConfigureSMBV1Server",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableStructuredExceptionHandlingOverwriteProtection": {
        "name": "EnableStructuredExceptionHandlingOverwriteProtection",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TurnOnWindowsDefenderProtectionAgainstPotentiallyUnwantedApplications": {
        "name": "TurnOnWindowsDefenderProtectionAgainstPotentiallyUnwantedApplications",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WDigestAuthentication": {
        "name": "WDigestAuthentication",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Maps": {
    "name": "Maps",
    "policies": {
      "AllowOfflineMapsDownloadOverMeteredConnection": {
        "name": "AllowOfflineMapsDownloadOverMeteredConnection",
        "description": "Allows the download and update of map data over metered connections. After the policy is applied, you can verify the settings in the user interface in System > Offline Maps.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled. Force disable auto-update over metered connection."
            },
            "1": {
              "description": "Enabled. Force enable auto-update over metered connection."
            },
            "65535": {
              "description": "Not configured. User's choice."
            }
          }
        },
        "scope": "device"
      },
      "EnableOfflineMapsAutoUpdate": {
        "name": "EnableOfflineMapsAutoUpdate",
        "description": "Disables the automatic download and update of map data. After the policy is applied, you can verify the settings in the user interface in System > Offline Maps.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled. Force off auto-update."
            },
            "1": {
              "description": "Enabled. Force on auto-update."
            },
            "65535": {
              "description": "Not configured. User's choice."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/MemoryDump": {
    "name": "MemoryDump",
    "policies": {
      "AllowCrashDump": {
        "name": "AllowCrashDump",
        "description": "This policy setting decides if crash dump collection on the machine is allowed or not.  Supported values: 0 - Disable crash dump collection. 1 (default) - Allow crash dump collection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable crash dump collection."
            },
            "1": {
              "description": "Allow crash dump collection."
            }
          }
        },
        "scope": "device"
      },
      "AllowLiveDump": {
        "name": "AllowLiveDump",
        "description": "This policy setting decides if live dump collection on the machine is allowed or not.  Supported values: 0 - Disable live dump collection. 1 (default) - Allow live dump collection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable live dump collection."
            },
            "1": {
              "description": "Allow live dump collection."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Messaging": {
    "name": "Messaging",
    "policies": {
      "AllowMMS": {
        "name": "AllowMMS",
        "description": "This policy setting allows you to enable or disable the sending and receiving cellular MMS messages.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Block"
            },
            "1": {
              "description": "Allow"
            }
          }
        },
        "scope": "device"
      },
      "AllowMessageSync": {
        "name": "AllowMessageSync",
        "description": "This policy setting allows backup and restore of cellular text messages to Microsoft's cloud services.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "message sync is not allowed and cannot be changed by the user."
            },
            "1": {
              "description": "message sync is allowed. The user can change this setting."
            }
          }
        },
        "scope": "device"
      },
      "AllowRCS": {
        "name": "AllowRCS",
        "description": "This policy setting allows you to enable or disable the sending and receiving of cellular RCS (Rich Communication Services) messages.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Block"
            },
            "1": {
              "description": "Allow"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/MixedReality": {
    "name": "MixedReality",
    "policies": {
      "AADGroupMembershipCacheValidityInDays": {
        "name": "AADGroupMembershipCacheValidityInDays",
        "description": "This policy controls for how many days, AAD group membership cache is allowed to be used for Assigned Access configurations targeting AAD groups for signed in user. Once this policy is set only then cache is used otherwise not. In order for this policy to take effect, user must sign-out and sign-in with Internet available at least once before the cache can be used for subsequent 'disconnected' sessions.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 6
        },
        "scope": "device"
      },
      "AllowCaptivePortalBeforeLogon": {
        "name": "AllowCaptivePortalBeforeLogon",
        "description": "This policy controls whether the device will display the captive portal flow on the HoloLens sign in screen's network selection page when a captive portal network is detected. Displaying the captive portal flow is disabled by default to reduce the potential of gaining unauthorized access to the device through the browser.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Displaying captive portal is not allowed."
            },
            "1": {
              "description": "Displaying captive portal is allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowLaunchUriInSingleAppKiosk": {
        "name": "AllowLaunchUriInSingleAppKiosk",
        "description": "By default, launching applications via Launcher API (Launcher Class (Windows.System) - Windows UWP applications | Microsoft Docs) is disabled in single app kiosk mode. To enable applications to launch in single app kiosk mode on HoloLens devices, set the policy value to true.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Applications are not allowed to be launched with Launcher API, when in single app kiosk mode."
            },
            "1": {
              "description": "Applications are allowed to be launched with Launcher API, when in single app kiosk mode."
            }
          }
        },
        "scope": "device"
      },
      "AutoLogonUser": {
        "name": "AutoLogonUser",
        "description": "This policy controls whether a user will be automatically logged on. When the policy is set to a non-empty value, it specifies the email address of the auto-logon user. The specified user must logon to the device at least once to enable auto-logon.",
        "format": "string",
        "scope": "device"
      },
      "AutomaticDisplayAdjustment": {
        "name": "AutomaticDisplayAdjustment",
        "description": "This policy controls if the HoloLens displays will be automatically adjusted for your eyes to improve hologram visual quality when an user wears the device. When this feature is enabled, a new user upon wearing the device will not be prompted to calibrate and yet the displays will be adjusted to suite them automatically.  However if an immersive application is launched that depends on eye tracking interactions, the user will be prompted to perform the calibration.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "BrightnessButtonDisabled": {
        "name": "BrightnessButtonDisabled",
        "description": "This policy setting controls if pressing the brightness button changes the brightness or not. It only impacts brightness on HoloLens and not the functionality of the button when it's used with other buttons as combination for other purposes.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Brightness can be changed with press of brightness button."
            },
            "1": {
              "description": "Brightness cannot be changed with press of brightness button."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureMovingPlatform": {
        "name": "ConfigureMovingPlatform",
        "description": "This policy controls the behavior of moving platform feature on HoloLens 2, that is, whether it’s turned off / on or it can be toggled by a user. It should only be used by customers who intend to use HoloLens 2 in moving environments with low dynamic motion. Please refer to HoloLens 2 Moving Platform Mode for background information.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Last set user's preference. Initial state is OFF and after that user's preference is persisted across reboots and is used to initialize the system."
            },
            "1": {
              "description": "Moving platform is disabled and cannot be changed by user."
            },
            "2": {
              "description": "Moving platform is enabled and cannot be changed by user."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureNtpClient": {
        "name": "ConfigureNtpClient",
        "description": "This policy setting specifies a set of parameters for controlling the Windows NTP Client. Please refer to https://docs.microsoft.com/en-us/windows/client-management/mdm/policy-csp-admx-w32time#admx-w32time-policy-configure-ntpclient for parameters and https://docs.microsoft.com/en-us/windows/client-management/mdm/policy-csp-mixedreality for setting values for this policy.",
        "format": "string",
        "scope": "device"
      },
      "ConfigureSharedAccount": {
        "name": "ConfigureSharedAccount",
        "description": "This policy specifies the configuration for Shared Accounts on the device. Shared Accounts are AAD accounts that are deployed to the device by an IT admin and can be used by anyone with physical access to the device. These accounts excel in deployments where the HoloLens device is used like a tool shared between multiple people and it doesn't matter which account is used to access AAD resources. Because these accounts can be signed in without requiring the user to provide credentials, you should ensure that these devices are physically secure, with access granted only to authorized personnel. You should also lock down these accounts to only have access to the required resources.",
        "format": "string",
        "scope": "device"
      },
      "DisallowNetworkConnectivityPassivePolling": {
        "name": "DisallowNetworkConnectivityPassivePolling",
        "description": "Network Connection Status Indicator (NCSI) detects Internet connectivity and corporate network connectivity status. This policy allows IT admins to disable NCSI passive polling. Value type is integer.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed."
            },
            "1": {
              "description": "Not allowed."
            }
          }
        },
        "scope": "device"
      },
      "EnableStartMenuSingleHandGesture": {
        "name": "EnableStartMenuSingleHandGesture",
        "description": "This policy setting controls if pinching your thumb and index finger, while looking at the Start icon on your wrist, to open the Start menu is enabled or not.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Don't allow pinching your thumb and index finger, while looking at the Start icon on your wrist, to open the Start menu."
            },
            "1": {
              "description": "Allow pinching your thumb and index finger, while looking at the Start icon on your wrist, to open the Start menu."
            }
          }
        },
        "scope": "device"
      },
      "EnableStartMenuVoiceCommand": {
        "name": "EnableStartMenuVoiceCommand",
        "description": "This policy setting controls if using voice commands to open the Start menu is enabled or not.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Using voice commands to open the Start menu is disabled."
            },
            "1": {
              "description": "Using voice commands to open the Start menu is enabled."
            }
          }
        },
        "scope": "device"
      },
      "EnableStartMenuWristTap": {
        "name": "EnableStartMenuWristTap",
        "description": "This policy setting controls if tapping the Star icon on your wrist to open the Start menu is enabled or not.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Don't allow tapping the Start icon on your wrist to open the Start menu."
            },
            "1": {
              "description": "Allow tapping the Start icon on your wrist to open the Start menu."
            }
          }
        },
        "scope": "device"
      },
      "EyeTrackingCalibrationPrompt": {
        "name": "EyeTrackingCalibrationPrompt",
        "description": "This policy controls when a new person uses Hololens device, if Hololens should automatically ask to run eye calibration.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "FallbackDiagnostics": {
        "name": "FallbackDiagnostics",
        "description": "This policy setting controls, when and if diagnostic logs can be collected using specific button combination on HoloLens.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. Diagnostic logs cannot be collected by pressing the button combination."
            },
            "1": {
              "description": "Allowed for device owners only. Diagnostics logs can be collected by pressing the button combination only if signed-in user is considered as device owner."
            },
            "2": {
              "description": "Allowed for all users. Diagnostic logs can be collected by pressing the button combination."
            }
          }
        },
        "scope": "device"
      },
      "HeadTrackingMode": {
        "name": "HeadTrackingMode",
        "description": "This policy configures behavior of HUP to determine, which algorithm to use for head tracking. It requires a reboot for the policy to take effect.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "ManualDownDirectionDisabled": {
        "name": "ManualDownDirectionDisabled",
        "description": "This policy controls whether the user can change down direction manually or not. If no down direction is set by the user, then an automatically calculated down direction is used by the system. This policy has no dependency on ConfigureMovingPlatform policy and they can be set independently.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User is allowed to manually change down direction."
            },
            "1": {
              "description": "User is not allowed to manually change down direction."
            }
          }
        },
        "scope": "device"
      },
      "MicrophoneDisabled": {
        "name": "MicrophoneDisabled",
        "description": "This policy setting controls whether microphone on HoloLens 2 is disabled or not.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Microphone can be used for voice."
            },
            "1": {
              "description": "Microphone cannot be used for voice."
            }
          }
        },
        "scope": "device"
      },
      "NtpClientEnabled": {
        "name": "NtpClientEnabled",
        "description": "This policy setting specifies whether the Windows NTP Client is enabled. Please refer to https://docs.microsoft.com/en-us/windows/client-management/mdm/policy-csp-mixedreality on setting values for this policy.",
        "format": "string",
        "scope": "device"
      },
      "PreferLogonAsOtherUser": {
        "name": "PreferLogonAsOtherUser",
        "description": "This policy configures whether the Sign-In App should prefer showing Other User panel to user.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "RequireStartIconHold": {
        "name": "RequireStartIconHold",
        "description": "This policy setting controls if it's require that the Start icon to be pressed for 2 seconds to open the Start menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Don't require the Start icon to be pressed for 2 seconds."
            },
            "1": {
              "description": "Require the Start icon to be pressed for 2 seconds."
            }
          }
        },
        "scope": "device"
      },
      "RequireStartIconVisible": {
        "name": "RequireStartIconVisible",
        "description": "This policy setting controls if it's required that the Start icon to be looked at when you tap it to open the Start menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Don't require the Start icon to be looked at when you tap it."
            },
            "1": {
              "description": "Require the Start icon to be looked at when you tap it."
            }
          }
        },
        "scope": "device"
      },
      "SkipCalibrationDuringSetup": {
        "name": "SkipCalibrationDuringSetup",
        "description": "This policy configures whether the device will take the user through the eye tracking calibration process during device setup and first time user setup. If this policy is enabled, the device will not show the eye tracking calibration process during device setup and first time user setup. Note that until the user goes through the calibration process, eye tracking will not work on the device. If an app requires eye tracking and the user has not gone through the calibration process, the user will be prompted to do so.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Eye tracking calibration process will be shown during device setup and first time user setup."
            },
            "1": {
              "description": "Eye tracking calibration process will not be shown during device setup and first time user setup."
            }
          }
        },
        "scope": "device"
      },
      "SkipTrainingDuringSetup": {
        "name": "SkipTrainingDuringSetup",
        "description": "This policy configures whether the device will take the user through a training process during device setup and first time user setup. If this policy is enabled, the device will not show the training process during device setup and first time user setup. If the user wishes to go through that training process, the user can launch the Tips app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Training process will be shown during device setup and first time user setup."
            },
            "1": {
              "description": "Training process will not be shown during device setup and first time user setup."
            }
          }
        },
        "scope": "device"
      },
      "VisitorAutoLogon": {
        "name": "VisitorAutoLogon",
        "description": "This policy controls whether a visitor user will be automatically logged in. Visitor users can only be created and logged in, if an Assigned Access profile has been created targeting visitor users. A visitor user will only be automatically logged in, if no other user has logged in on the device before.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Visitor user will not be signed in automatically."
            },
            "1": {
              "description": "Visitor user will be signed in automatically."
            }
          }
        },
        "scope": "device"
      },
      "VolumeButtonDisabled": {
        "name": "VolumeButtonDisabled",
        "description": "This policy setting controls if pressing the volume button changes the volume or not. It only impacts volume on HoloLens and not the functionality of the button when it's used with other buttons as combination for other purposes.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Volume can be changed with press of the volume button."
            },
            "1": {
              "description": "Volume cannot be changed with press of the volume button."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/NetworkIsolation": {
    "name": "NetworkIsolation",
    "policies": {
      "EnterpriseCloudResources": {
        "name": "EnterpriseCloudResources",
        "description": "Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy. This domain list is a pipe-separated list of cloud resources. Each cloud resource can also be paired optionally with an internal proxy server by using a trailing comma followed by the proxy address. For example, <cloudresource>|<cloudresource>|<cloudresource>,<proxy>|<cloudresource>|<cloudresource>,<proxy>|.",
        "format": "string",
        "scope": "device"
      },
      "EnterpriseIPRange": {
        "name": "EnterpriseIPRange",
        "description": "Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to. This is a comma-separated list of IPv4 and IPv6 ranges.",
        "format": "string",
        "scope": "device"
      },
      "EnterpriseIPRangesAreAuthoritative": {
        "name": "EnterpriseIPRangesAreAuthoritative",
        "description": "Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "EnterpriseInternalProxyServers": {
        "name": "EnterpriseInternalProxyServers",
        "description": "This is the comma-separated list of internal proxy servers. For example 157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseCloudResources policy to force traffic to the matched cloud resources through these proxies.",
        "format": "string",
        "scope": "device"
      },
      "EnterpriseNetworkDomainNames": {
        "name": "EnterpriseNetworkDomainNames",
        "description": "This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to. This is a comma-separated list of domains, for example contoso. sharepoint. com, Fabrikam. com. Note The client requires domain name to be canonical, otherwise the setting will be rejected by the client.  Here are the steps to create canonical domain names:Transform the ASCII characters (A-Z only) to lower case. For example, Microsoft. COM -> microsoft. com. Call IdnToAscii with IDN_USE_STD3_ASCII_RULES as the flags. Call IdnToUnicode with no flags set (dwFlags = 0).",
        "format": "string",
        "scope": "device"
      },
      "EnterpriseProxyServers": {
        "name": "EnterpriseProxyServers",
        "description": "This is a comma-separated list of proxy servers. Any server on this list is considered non-enterprise. For example 157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59.",
        "format": "string",
        "scope": "device"
      },
      "EnterpriseProxyServersAreAuthoritative": {
        "name": "EnterpriseProxyServersAreAuthoritative",
        "description": "Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "NeutralResources": {
        "name": "NeutralResources",
        "description": "List of domain names that can used for work or personal resource.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/NetworkListManager": {
    "name": "NetworkListManager",
    "policies": {
      "AllowedTlsAuthenticationEndpoints": {
        "name": "AllowedTlsAuthenticationEndpoints",
        "description": "List of URLs (seperated by Unicode character 0xF000) to endpoints accessible only within an enterprise's network. If any of the URLs can be resolved over HTTPS, the network would be considered authenticated.",
        "format": "string",
        "scope": "device"
      },
      "ConfiguredTlsAuthenticationNetworkName": {
        "name": "ConfiguredTlsAuthenticationNetworkName",
        "description": "The string will be used to name the network authenticated against one of the endpoints listed in AllowedTlsAuthenticationEndpoints policy",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/NewsAndInterests": {
    "name": "NewsAndInterests",
    "policies": {
      "AllowNewsAndInterests": {
        "name": "AllowNewsAndInterests",
        "description": "Allow widgets",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Notifications": {
    "name": "Notifications",
    "policies": {
      "DisallowCloudNotification": {
        "name": "DisallowCloudNotification",
        "description": "This policy setting blocks applications from using the network to send tile, badge, toast, and raw notifications. Specifically, this policy setting turns off the connection between Windows and the Windows Push Notification Service (WNS). This policy setting also stops applications from being able to use periodic (polling) notifications. If you enable this policy setting, applications and system features will not be able receive notifications from the network from WNS or via notification polling APIs. If you enable this policy setting, notifications can still be raised by applications running on the machine via local API calls from within the application. If you disable or do not configure this policy setting, the client computer will connect to WNS at user login and applications will be allowed to use periodic (polling) notifications. No reboots or service restarts are required for this policy setting to take effect. WarningThis policy is designed for zero exhaust. This policy may cause some MDM processes to break because WNS notification is used by the MDM server to send real time tasks to the device, such as remote wipe, unenroll, remote find, and mandatory app installation. When this policy is set to disallow WNS, those real time processes will no longer work and some time-sensitive actions such as remote wipe when the device is stolen or unenrollment when the device is compromised will not work.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enable cloud notification."
            },
            "1": {
              "description": "Disable cloud notification."
            }
          }
        },
        "scope": "device"
      },
      "WnsEndpoint": {
        "name": "WnsEndpoint",
        "description": "FQDN for the WNS endpoint",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Power": {
    "name": "Power",
    "policies": {
      "AllowHibernate": {
        "name": "AllowHibernate",
        "description": "This policy setting decides if hibernate on the machine is allowed or not.  Supported values: 0 – Disable hibernate. 1 (default) - Allow hibernate.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable hibernate."
            },
            "1": {
              "description": "Allow hibernate."
            }
          }
        },
        "scope": "device"
      },
      "AllowStandbyStatesWhenSleepingOnBattery": {
        "name": "AllowStandbyStatesWhenSleepingOnBattery",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowStandbyWhenSleepingPluggedIn": {
        "name": "AllowStandbyWhenSleepingPluggedIn",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisplayOffTimeoutOnBattery": {
        "name": "DisplayOffTimeoutOnBattery",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisplayOffTimeoutPluggedIn": {
        "name": "DisplayOffTimeoutPluggedIn",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnergySaverBatteryThresholdOnBattery": {
        "name": "EnergySaverBatteryThresholdOnBattery",
        "description": "This policy setting allows you to specify battery charge level at which Energy Saver is turned on.  If you enable this policy setting, you must provide a percent value, indicating the battery charge level. Energy Saver will be automatically turned on at (and below) the specified level.  If you disable or do not configure this policy setting, users control this setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 10
        },
        "scope": "device"
      },
      "EnergySaverBatteryThresholdPluggedIn": {
        "name": "EnergySaverBatteryThresholdPluggedIn",
        "description": "This policy setting allows you to specify battery charge level at which Energy Saver is turned on.  If you enable this policy setting, you must provide a percent value, indicating the battery charge level. Energy Saver will be automatically turned on at (and below) the specified level.  If you disable or do not configure this policy setting, users control this setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 10
        },
        "scope": "device"
      },
      "HibernateTimeoutOnBattery": {
        "name": "HibernateTimeoutOnBattery",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "HibernateTimeoutPluggedIn": {
        "name": "HibernateTimeoutPluggedIn",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RequirePasswordWhenComputerWakesOnBattery": {
        "name": "RequirePasswordWhenComputerWakesOnBattery",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RequirePasswordWhenComputerWakesPluggedIn": {
        "name": "RequirePasswordWhenComputerWakesPluggedIn",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SelectLidCloseActionOnBattery": {
        "name": "SelectLidCloseActionOnBattery",
        "description": "This policy setting specifies the action that Windows takes when a user closes the lid on a mobile PC.  Possible actions include: 0 - Take no action 1 - Sleep 2 - Hibernate 3 - Shut down  If you enable this policy setting, you must select the desired action.  If you disable this policy setting or do not configure it, users can see and change this setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Take no action"
            },
            "1": {
              "description": "Sleep"
            },
            "2": {
              "description": "System hibernate sleep state"
            },
            "3": {
              "description": "System shutdown"
            }
          }
        },
        "scope": "device"
      },
      "SelectLidCloseActionPluggedIn": {
        "name": "SelectLidCloseActionPluggedIn",
        "description": "This policy setting specifies the action that Windows takes when a user closes the lid on a mobile PC.  Possible actions include: 0 - Take no action 1 - Sleep 2 - Hibernate 3 - Shut down  If you enable this policy setting, you must select the desired action.  If you disable this policy setting or do not configure it, users can see and change this setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Take no action"
            },
            "1": {
              "description": "Sleep"
            },
            "2": {
              "description": "System hibernate sleep state"
            },
            "3": {
              "description": "System shutdown"
            }
          }
        },
        "scope": "device"
      },
      "SelectPowerButtonActionOnBattery": {
        "name": "SelectPowerButtonActionOnBattery",
        "description": "This policy setting specifies the action that Windows takes when a user presses the power button.   Possible actions include: 0 - Take no action 1 - Sleep 2 - Hibernate 3 - Shut down  If you enable this policy setting, you must select the desired action.  If you disable this policy setting or do not configure it, users can see and change this setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Take no action"
            },
            "1": {
              "description": "Sleep"
            },
            "2": {
              "description": "System hibernate sleep state"
            },
            "3": {
              "description": "System shutdown"
            }
          }
        },
        "scope": "device"
      },
      "SelectPowerButtonActionPluggedIn": {
        "name": "SelectPowerButtonActionPluggedIn",
        "description": "This policy setting specifies the action that Windows takes when a user presses the power button.   Possible actions include: 0 - Take no action 1 - Sleep 2 - Hibernate 3 - Shut down  If you enable this policy setting, you must select the desired action.  If you disable this policy setting or do not configure it, users can see and change this setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Take no action"
            },
            "1": {
              "description": "Sleep"
            },
            "2": {
              "description": "System hibernate sleep state"
            },
            "3": {
              "description": "System shutdown"
            }
          }
        },
        "scope": "device"
      },
      "SelectSleepButtonActionOnBattery": {
        "name": "SelectSleepButtonActionOnBattery",
        "description": "This policy setting specifies the action that Windows takes when a user presses the sleep button.  Possible actions include: 0 - Take no action 1 - Sleep 2 - Hibernate 3 - Shut down  If you enable this policy setting, you must select the desired action.  If you disable this policy setting or do not configure it, users can see and change this setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Take no action"
            },
            "1": {
              "description": "Sleep"
            },
            "2": {
              "description": "System hibernate sleep state"
            },
            "3": {
              "description": "System shutdown"
            }
          }
        },
        "scope": "device"
      },
      "SelectSleepButtonActionPluggedIn": {
        "name": "SelectSleepButtonActionPluggedIn",
        "description": "This policy setting specifies the action that Windows takes when a user presses the sleep button.  Possible actions include: 0 - Take no action 1 - Sleep 2 - Hibernate 3 - Shut down  If you enable this policy setting, you must select the desired action.  If you disable this policy setting or do not configure it, users can see and change this setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Take no action"
            },
            "1": {
              "description": "Sleep"
            },
            "2": {
              "description": "System hibernate sleep state"
            },
            "3": {
              "description": "System shutdown"
            }
          }
        },
        "scope": "device"
      },
      "StandbyTimeoutOnBattery": {
        "name": "StandbyTimeoutOnBattery",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "StandbyTimeoutPluggedIn": {
        "name": "StandbyTimeoutPluggedIn",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TurnOffHybridSleepOnBattery": {
        "name": "TurnOffHybridSleepOnBattery",
        "description": "This policy setting allows you to turn off hybrid sleep.  If you set this to 0, a hiberfile is not generated when the system transitions to sleep (Stand By).  If you do not configure this policy setting, users control this setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": ""
            },
            "1": {
              "description": "hybrid sleep"
            }
          }
        },
        "scope": "device"
      },
      "TurnOffHybridSleepPluggedIn": {
        "name": "TurnOffHybridSleepPluggedIn",
        "description": "This policy setting allows you to turn off hybrid sleep.  If you set this to 0, a hiberfile is not generated when the system transitions to sleep (Stand By).  If you do not configure this policy setting, users control this setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": ""
            },
            "1": {
              "description": "hybrid sleep"
            }
          }
        },
        "scope": "device"
      },
      "UnattendedSleepTimeoutOnBattery": {
        "name": "UnattendedSleepTimeoutOnBattery",
        "description": "This policy setting allows you to specify the period of inactivity before Windows transitions to sleep automatically when a user is not present at the computer.  If you enable this policy setting, you must provide a value, in seconds, indicating how much idle time should elapse before Windows automatically transitions to sleep when left unattended.  If you specify 0 seconds, Windows does not automatically transition to sleep.  If you disable or do not configure this policy setting, users control this setting.  If the user has configured a slide show to run on the lock screen when the machine is locked, this can prevent the sleep transition from occuring.  The \"Prevent enabling lock screen slide show\" policy setting can be used to disable the slide show feature.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "UnattendedSleepTimeoutPluggedIn": {
        "name": "UnattendedSleepTimeoutPluggedIn",
        "description": "This policy setting allows you to specify the period of inactivity before Windows transitions to sleep automatically when a user is not present at the computer.  If you enable this policy setting, you must provide a value, in seconds, indicating how much idle time should elapse before Windows automatically transitions to sleep when left unattended.  If you specify 0 seconds, Windows does not automatically transition to sleep.  If you disable or do not configure this policy setting, users control this setting.  If the user has configured a slide show to run on the lock screen when the machine is locked, this can prevent the sleep transition from occuring.  The \"Prevent enabling lock screen slide show\" policy setting can be used to disable the slide show feature.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Printers": {
    "name": "Printers",
    "policies": {
      "ApprovedUsbPrintDevices": {
        "name": "ApprovedUsbPrintDevices",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureCopyFilesPolicy": {
        "name": "ConfigureCopyFilesPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureDriverValidationLevel": {
        "name": "ConfigureDriverValidationLevel",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureIppPageCountsPolicy": {
        "name": "ConfigureIppPageCountsPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureRedirectionGuardPolicy": {
        "name": "ConfigureRedirectionGuardPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureRpcAuthnLevelPrivacyEnabled": {
        "name": "ConfigureRpcAuthnLevelPrivacyEnabled",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureRpcConnectionPolicy": {
        "name": "ConfigureRpcConnectionPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureRpcListenerPolicy": {
        "name": "ConfigureRpcListenerPolicy",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureRpcTcpPort": {
        "name": "ConfigureRpcTcpPort",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableDeviceControl": {
        "name": "EnableDeviceControl",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ManageDriverExclusionList": {
        "name": "ManageDriverExclusionList",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PointAndPrintRestrictions": {
        "name": "PointAndPrintRestrictions",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PublishPrinters": {
        "name": "PublishPrinters",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictDriverInstallationToAdministrators": {
        "name": "RestrictDriverInstallationToAdministrators",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Privacy": {
    "name": "Privacy",
    "policies": {
      "AllowAutoAcceptPairingAndPrivacyConsentPrompts": {
        "name": "AllowAutoAcceptPairingAndPrivacyConsentPrompts",
        "description": "Allows or disallows the automatic acceptance of the pairing and privacy user consent dialog when launching apps. NoteThere were issues reported with the previous release of this policy and a fix was  Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowCrossDeviceClipboard": {
        "name": "AllowCrossDeviceClipboard",
        "description": "Allows syncing of Clipboard across devices under the same Microsoft account.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowInputPersonalization": {
        "name": "AllowInputPersonalization",
        "description": "Updated in Windows 10, version 1809. This policy specifies whether users on the device have the option to enable online speech recognition. When enabled, users can use their voice for dictation and to talk to Cortana and other apps that use Microsoft cloud-based speech recognition. Microsoft will use voice input to help improve our speech services. If the policy value is set to 0, online speech recognition will be disabled and users cannot enable online speech recognition via settings. If policy value is set to 1 or is not configured, control is deferred to users. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Choice deferred to user's preference."
            }
          }
        },
        "scope": "device"
      },
      "DisableAdvertisingId": {
        "name": "DisableAdvertisingId",
        "description": "Enables or disables the Advertising ID. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            },
            "65535": {
              "description": "Not configured."
            }
          }
        },
        "scope": "device"
      },
      "DisablePrivacyExperience": {
        "name": "DisablePrivacyExperience",
        "description": "Enabling this policy prevents the privacy experience from launching during user logon for new and upgraded users.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow the 'choose privacy settings for your device' screen for a new user during their first logon or when an existing user logs in for the first time after an upgrade."
            },
            "1": {
              "description": "Do not allow the 'choose privacy settings for your device' screen when a new user logs in or an existing user logs in for the first time after an upgrade."
            }
          }
        },
        "scope": "device"
      },
      "EnableActivityFeed": {
        "name": "EnableActivityFeed",
        "description": "Enables ActivityFeed, which is responsible for mirroring different activity types (as applicable) across device graph of the user.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled. Apps/OS can't publish the activities and roaming is disabled. (not published to the cloud)."
            },
            "1": {
              "description": "Enabled. Apps/OS can publish the activities and will be roamed across device graph."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessAccountInfo": {
        "name": "LetAppsAccessAccountInfo",
        "description": "This policy setting specifies whether Windows apps can access account information.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessAccountInfo_ForceAllowTheseApps": {
        "name": "LetAppsAccessAccountInfo_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. Listed Windows apps are allowed access to account information. This setting overrides the default LetAppsAccessAccountInfo policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessAccountInfo_ForceDenyTheseApps": {
        "name": "LetAppsAccessAccountInfo_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. Listed Windows apps are denied access to account information. This setting overrides the default LetAppsAccessAccountInfo policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessAccountInfo_UserInControlOfTheseApps": {
        "name": "LetAppsAccessAccountInfo_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. The user is able to control the account information privacy setting for the listed Windows apps. This setting overrides the default LetAppsAccessAccountInfo policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessBackgroundSpatialPerception": {
        "name": "LetAppsAccessBackgroundSpatialPerception",
        "description": "This policy setting specifies whether Windows apps can access the movement of the user's head, hands, motion controllers, and other tracked objects, while the apps are running in the background.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessBackgroundSpatialPerception_ForceAllowTheseApps": {
        "name": "LetAppsAccessBackgroundSpatialPerception_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows Store Apps. Listed apps are allowed access to the user's movements while the apps are running in the background. This setting overrides the default LetAppsAccessBackgroundSpatialPerception policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessBackgroundSpatialPerception_ForceDenyTheseApps": {
        "name": "LetAppsAccessBackgroundSpatialPerception_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows Store Apps. Listed apps are denied access to the user's movements while the apps are running in the background. This setting overrides the default LetAppsAccessBackgroundSpatialPerception policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessBackgroundSpatialPerception_UserInControlOfTheseApps": {
        "name": "LetAppsAccessBackgroundSpatialPerception_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows Store Apps. The user is able to control the user movements privacy setting for the listed apps. This setting overrides the default LetAppsAccessBackgroundSpatialPerception policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessCalendar": {
        "name": "LetAppsAccessCalendar",
        "description": "This policy setting specifies whether Windows apps can access the calendar.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessCalendar_ForceAllowTheseApps": {
        "name": "LetAppsAccessCalendar_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. Listed Windows apps are allowed access to the calendar. This setting overrides the default LetAppsAccessCalendar policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessCalendar_ForceDenyTheseApps": {
        "name": "LetAppsAccessCalendar_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. Listed Windows apps are denied access to the calendar. This setting overrides the default LetAppsAccessCalendar policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessCalendar_UserInControlOfTheseApps": {
        "name": "LetAppsAccessCalendar_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. The user is able to control the calendar privacy setting for the listed Windows apps. This setting overrides the default LetAppsAccessCalendar policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessCallHistory": {
        "name": "LetAppsAccessCallHistory",
        "description": "This policy setting specifies whether Windows apps can access call history.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessCallHistory_ForceAllowTheseApps": {
        "name": "LetAppsAccessCallHistory_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. Listed Windows apps are allowed access to call history. This setting overrides the default LetAppsAccessCallHistory policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessCallHistory_ForceDenyTheseApps": {
        "name": "LetAppsAccessCallHistory_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. Listed Windows apps are denied access to call history. This setting overrides the default LetAppsAccessCallHistory policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessCallHistory_UserInControlOfTheseApps": {
        "name": "LetAppsAccessCallHistory_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. The user is able to control the call history privacy setting for the listed Windows apps. This setting overrides the default LetAppsAccessCallHistory policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessCamera": {
        "name": "LetAppsAccessCamera",
        "description": "This policy setting specifies whether Windows apps can access the camera.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessCamera_ForceAllowTheseApps": {
        "name": "LetAppsAccessCamera_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are allowed access to the camera. This setting overrides the default LetAppsAccessCamera policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessCamera_ForceDenyTheseApps": {
        "name": "LetAppsAccessCamera_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are denied access to the camera. This setting overrides the default LetAppsAccessCamera policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessCamera_UserInControlOfTheseApps": {
        "name": "LetAppsAccessCamera_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the camera privacy setting for the listed apps. This setting overrides the default LetAppsAccessCamera policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessContacts": {
        "name": "LetAppsAccessContacts",
        "description": "This policy setting specifies whether Windows apps can access contacts.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessContacts_ForceAllowTheseApps": {
        "name": "LetAppsAccessContacts_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are allowed access to contacts. This setting overrides the default LetAppsAccessContacts policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessContacts_ForceDenyTheseApps": {
        "name": "LetAppsAccessContacts_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are denied access to contacts. This setting overrides the default LetAppsAccessContacts policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessContacts_UserInControlOfTheseApps": {
        "name": "LetAppsAccessContacts_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the contacts privacy setting for the listed apps. This setting overrides the default LetAppsAccessContacts policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessEmail": {
        "name": "LetAppsAccessEmail",
        "description": "This policy setting specifies whether Windows apps can access email.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessEmail_ForceAllowTheseApps": {
        "name": "LetAppsAccessEmail_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are allowed access to email. This setting overrides the default LetAppsAccessEmail policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessEmail_ForceDenyTheseApps": {
        "name": "LetAppsAccessEmail_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are denied access to email. This setting overrides the default LetAppsAccessEmail policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessEmail_UserInControlOfTheseApps": {
        "name": "LetAppsAccessEmail_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the email privacy setting for the listed apps. This setting overrides the default LetAppsAccessEmail policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessGazeInput": {
        "name": "LetAppsAccessGazeInput",
        "description": "This policy setting specifies whether Windows apps can access the eye tracker.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "LetAppsAccessGazeInput_ForceAllowTheseApps": {
        "name": "LetAppsAccessGazeInput_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows Store Apps. Listed apps are allowed access to the eye tracker. This setting overrides the default LetAppsAccessGazeInput policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessGazeInput_ForceDenyTheseApps": {
        "name": "LetAppsAccessGazeInput_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows Store Apps. Listed apps are denied access to the eye tracker. This setting overrides the default LetAppsAccessGazeInput policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessGazeInput_UserInControlOfTheseApps": {
        "name": "LetAppsAccessGazeInput_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows Store Apps. The user is able to control the eye tracker privacy setting for the listed apps. This setting overrides the default LetAppsAccessGazeInput policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessGraphicsCaptureProgrammatic": {
        "name": "LetAppsAccessGraphicsCaptureProgrammatic",
        "description": "This policy setting specifies whether Windows apps can use screen capture on arbitrary windows or displays.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "LetAppsAccessGraphicsCaptureProgrammatic_ForceAllowTheseApps": {
        "name": "LetAppsAccessGraphicsCaptureProgrammatic_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are allowed to use screen capture on arbitrary windows or displays. This setting overrides the default LetAppsAccessGraphicsCaptureWithoutBorder policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessGraphicsCaptureProgrammatic_ForceDenyTheseApps": {
        "name": "LetAppsAccessGraphicsCaptureProgrammatic_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are denied the use of screen capture on arbitrary windows or displays. This setting overrides the default LetAppsAccessGraphicsCaptureWithoutBorder policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessGraphicsCaptureProgrammatic_UserInControlOfTheseApps": {
        "name": "LetAppsAccessGraphicsCaptureProgrammatic_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the programmatic screen capture setting for the listed apps. This setting overrides the default LetAppsAccessGraphicsCaptureWithoutBorder policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessGraphicsCaptureWithoutBorder": {
        "name": "LetAppsAccessGraphicsCaptureWithoutBorder",
        "description": "This policy setting specifies whether Windows apps can disable the screen capture border.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "LetAppsAccessGraphicsCaptureWithoutBorder_ForceAllowTheseApps": {
        "name": "LetAppsAccessGraphicsCaptureWithoutBorder_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are allowed to disable the screen capture border. This setting overrides the default LetAppsAccessGraphicsCaptureWithoutBorder policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessGraphicsCaptureWithoutBorder_ForceDenyTheseApps": {
        "name": "LetAppsAccessGraphicsCaptureWithoutBorder_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are denied configuration access to the screen capture border. This setting overrides the default LetAppsAccessGraphicsCaptureWithoutBorder policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessGraphicsCaptureWithoutBorder_UserInControlOfTheseApps": {
        "name": "LetAppsAccessGraphicsCaptureWithoutBorder_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the screen capture border privacy setting for the listed apps. This setting overrides the default LetAppsAccessGraphicsCaptureWithoutBorder policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessHumanPresence": {
        "name": "LetAppsAccessHumanPresence",
        "description": "This policy setting specifies whether Windows apps can access the human presence sensor.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessHumanPresence_ForceAllowTheseApps": {
        "name": "LetAppsAccessHumanPresence_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are allowed access to the human presence sensor. This setting overrides the default LetAppsAccessHumanPresence policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessHumanPresence_ForceDenyTheseApps": {
        "name": "LetAppsAccessHumanPresence_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are denied access to the human presence sensor. This setting overrides the default LetAppsAccessHumanPresence policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessHumanPresence_UserInControlOfTheseApps": {
        "name": "LetAppsAccessHumanPresence_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the human presence privacy setting for the listed apps. This setting overrides the default LetAppsAccessHumanPresence policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessLocation": {
        "name": "LetAppsAccessLocation",
        "description": "This policy setting specifies whether Windows apps can access location.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessLocation_ForceAllowTheseApps": {
        "name": "LetAppsAccessLocation_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are allowed access to location. This setting overrides the default LetAppsAccessLocation policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessLocation_ForceDenyTheseApps": {
        "name": "LetAppsAccessLocation_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are denied access to location. This setting overrides the default LetAppsAccessLocation policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessLocation_UserInControlOfTheseApps": {
        "name": "LetAppsAccessLocation_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the location privacy setting for the listed apps. This setting overrides the default LetAppsAccessLocation policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessMessaging": {
        "name": "LetAppsAccessMessaging",
        "description": "This policy setting specifies whether Windows apps can read or send messages (text or MMS).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessMessaging_ForceAllowTheseApps": {
        "name": "LetAppsAccessMessaging_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are allowed to read or send messages (text or MMS). This setting overrides the default LetAppsAccessMessaging policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessMessaging_ForceDenyTheseApps": {
        "name": "LetAppsAccessMessaging_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are not allowed to read or send messages (text or MMS). This setting overrides the default LetAppsAccessMessaging policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessMessaging_UserInControlOfTheseApps": {
        "name": "LetAppsAccessMessaging_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the messaging privacy setting for the listed apps. This setting overrides the default LetAppsAccessMessaging policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessMicrophone": {
        "name": "LetAppsAccessMicrophone",
        "description": "This policy setting specifies whether Windows apps can access the microphone.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessMicrophone_ForceAllowTheseApps": {
        "name": "LetAppsAccessMicrophone_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are allowed access to the microphone. This setting overrides the default LetAppsAccessMicrophone policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessMicrophone_ForceDenyTheseApps": {
        "name": "LetAppsAccessMicrophone_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are denied access to the microphone. This setting overrides the default LetAppsAccessMicrophone policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessMicrophone_UserInControlOfTheseApps": {
        "name": "LetAppsAccessMicrophone_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the microphone privacy setting for the listed apps. This setting overrides the default LetAppsAccessMicrophone policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessMotion": {
        "name": "LetAppsAccessMotion",
        "description": "This policy setting specifies whether Windows apps can access motion data.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessMotion_ForceAllowTheseApps": {
        "name": "LetAppsAccessMotion_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are allowed access to motion data. This setting overrides the default LetAppsAccessMotion policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessMotion_ForceDenyTheseApps": {
        "name": "LetAppsAccessMotion_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are denied access to motion data. This setting overrides the default LetAppsAccessMotion policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessMotion_UserInControlOfTheseApps": {
        "name": "LetAppsAccessMotion_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the motion privacy setting for the listed apps. This setting overrides the default LetAppsAccessMotion policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessNotifications": {
        "name": "LetAppsAccessNotifications",
        "description": "This policy setting specifies whether Windows apps can access notifications.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessNotifications_ForceAllowTheseApps": {
        "name": "LetAppsAccessNotifications_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are allowed access to notifications. This setting overrides the default LetAppsAccessNotifications policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessNotifications_ForceDenyTheseApps": {
        "name": "LetAppsAccessNotifications_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are denied access to notifications. This setting overrides the default LetAppsAccessNotifications policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessNotifications_UserInControlOfTheseApps": {
        "name": "LetAppsAccessNotifications_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the notifications privacy setting for the listed apps. This setting overrides the default LetAppsAccessNotifications policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessPhone": {
        "name": "LetAppsAccessPhone",
        "description": "This policy setting specifies whether Windows apps can make phone calls",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessPhone_ForceAllowTheseApps": {
        "name": "LetAppsAccessPhone_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are allowed to make phone calls. This setting overrides the default LetAppsAccessPhone policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessPhone_ForceDenyTheseApps": {
        "name": "LetAppsAccessPhone_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are not allowed to make phone calls. This setting overrides the default LetAppsAccessPhone policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessPhone_UserInControlOfTheseApps": {
        "name": "LetAppsAccessPhone_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the phone call privacy setting for the listed apps. This setting overrides the default LetAppsAccessPhone policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessRadios": {
        "name": "LetAppsAccessRadios",
        "description": "This policy setting specifies whether Windows apps have access to control radios.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessRadios_ForceAllowTheseApps": {
        "name": "LetAppsAccessRadios_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps will have access to control radios. This setting overrides the default LetAppsAccessRadios policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessRadios_ForceDenyTheseApps": {
        "name": "LetAppsAccessRadios_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps will not have access to control radios. This setting overrides the default LetAppsAccessRadios policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessRadios_UserInControlOfTheseApps": {
        "name": "LetAppsAccessRadios_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the radios privacy setting for the listed apps. This setting overrides the default LetAppsAccessRadios policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessTasks": {
        "name": "LetAppsAccessTasks",
        "description": "This policy setting specifies whether Windows apps can access tasks.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "LetAppsAccessTasks_ForceAllowTheseApps": {
        "name": "LetAppsAccessTasks_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are allowed access to tasks. This setting overrides the default LetAppsAccessTasks policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessTasks_ForceDenyTheseApps": {
        "name": "LetAppsAccessTasks_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps are denied access to tasks. This setting overrides the default LetAppsAccessTasks policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessTasks_UserInControlOfTheseApps": {
        "name": "LetAppsAccessTasks_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the tasks privacy setting for the listed apps. This setting overrides the default LetAppsAccessTasks policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessTrustedDevices": {
        "name": "LetAppsAccessTrustedDevices",
        "description": "This policy setting specifies whether Windows apps can access trusted devices.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsAccessTrustedDevices_ForceAllowTheseApps": {
        "name": "LetAppsAccessTrustedDevices_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps will have access to trusted devices. This setting overrides the default LetAppsAccessTrustedDevices policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessTrustedDevices_ForceDenyTheseApps": {
        "name": "LetAppsAccessTrustedDevices_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps will not have access to trusted devices. This setting overrides the default LetAppsAccessTrustedDevices policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsAccessTrustedDevices_UserInControlOfTheseApps": {
        "name": "LetAppsAccessTrustedDevices_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the 'trusted devices' privacy setting for the listed apps. This setting overrides the default LetAppsAccessTrustedDevices policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsActivateWithVoice": {
        "name": "LetAppsActivateWithVoice",
        "description": "This policy setting specifies whether Windows apps can be activated by voice.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control. Users can decide if Windows apps can be activated by voice using Settings > Privacy options on the device."
            },
            "1": {
              "description": "Force allow. Windows apps can be activated by voice and users cannot change it."
            },
            "2": {
              "description": "Force deny. Windows apps cannot be activated by voice and users cannot change it."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsActivateWithVoiceAboveLock": {
        "name": "LetAppsActivateWithVoiceAboveLock",
        "description": "This policy setting specifies whether Windows apps can be activated by voice while the system is locked.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control. Users can decide if Windows apps can be activated by voice while the screen is locked using Settings > Privacy options on the device."
            },
            "1": {
              "description": "Force allow. Windows apps can be activated by voice while the screen is locked, and users cannot change it."
            },
            "2": {
              "description": "Force deny. Windows apps cannot be activated by voice while the screen is locked, and users cannot change it."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsGetDiagnosticInfo": {
        "name": "LetAppsGetDiagnosticInfo",
        "description": "This policy setting specifies whether Windows apps can get diagnostic information about other apps, including user names.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsGetDiagnosticInfo_ForceAllowTheseApps": {
        "name": "LetAppsGetDiagnosticInfo_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. Listed Windows apps are allowed to get diagnostic information about other apps, including user names. This setting overrides the default LetAppsGetDiagnosticInfo policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsGetDiagnosticInfo_ForceDenyTheseApps": {
        "name": "LetAppsGetDiagnosticInfo_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. Listed Windows apps are not allowed to get diagnostic information about other apps, including user names. This setting overrides the default LetAppsGetDiagnosticInfo policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsGetDiagnosticInfo_UserInControlOfTheseApps": {
        "name": "LetAppsGetDiagnosticInfo_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. The user is able to control the app diagnostics privacy setting for the listed Windows apps. This setting overrides the default LetAppsGetDiagnosticInfo policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsRunInBackground": {
        "name": "LetAppsRunInBackground",
        "description": "This policy setting specifies whether Windows apps can run in the background.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsRunInBackground_ForceAllowTheseApps": {
        "name": "LetAppsRunInBackground_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. Listed Windows apps are allowed to run in the background. This setting overrides the default LetAppsRunInBackground policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsRunInBackground_ForceDenyTheseApps": {
        "name": "LetAppsRunInBackground_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. Listed Windows apps are not allowed to run in the background. This setting overrides the default LetAppsRunInBackground policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsRunInBackground_UserInControlOfTheseApps": {
        "name": "LetAppsRunInBackground_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Windows apps. The user is able to control the background apps privacy setting for the listed Windows apps. This setting overrides the default LetAppsRunInBackground policy setting for the specified Windows apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsSyncWithDevices": {
        "name": "LetAppsSyncWithDevices",
        "description": "This policy setting specifies whether Windows apps can communicate with unpaired wireless devices.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User in control."
            },
            "1": {
              "description": "Force allow."
            },
            "2": {
              "description": "Force deny."
            }
          }
        },
        "scope": "device"
      },
      "LetAppsSyncWithDevices_ForceAllowTheseApps": {
        "name": "LetAppsSyncWithDevices_ForceAllowTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps will be allowed to communicate with unpaired wireless devices. This setting overrides the default LetAppsSyncWithDevices policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsSyncWithDevices_ForceDenyTheseApps": {
        "name": "LetAppsSyncWithDevices_ForceDenyTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. Listed apps will not be allowed to communicate with unpaired wireless devices. This setting overrides the default LetAppsSyncWithDevices policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "LetAppsSyncWithDevices_UserInControlOfTheseApps": {
        "name": "LetAppsSyncWithDevices_UserInControlOfTheseApps",
        "description": "List of semi-colon delimited Package Family Names of Microsoft Store Apps. The user is able to control the 'Communicate with unpaired wireless devices' privacy setting for the listed apps. This setting overrides the default LetAppsSyncWithDevices policy setting for the specified apps.",
        "format": "string",
        "scope": "device"
      },
      "PublishUserActivities": {
        "name": "PublishUserActivities",
        "description": "Allows apps/system to publish 'User Activities' into ActivityFeed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled. Apps/OS can't publish the user activities."
            },
            "1": {
              "description": "Enabled. Apps/OS can publish the user activities."
            }
          }
        },
        "scope": "device"
      },
      "UploadUserActivities": {
        "name": "UploadUserActivities",
        "description": "Allows ActivityFeed to upload published 'User Activities'.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/RemoteAssistance": {
    "name": "RemoteAssistance",
    "policies": {
      "CustomizeWarningMessages": {
        "name": "CustomizeWarningMessages",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SessionLogging": {
        "name": "SessionLogging",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SolicitedRemoteAssistance": {
        "name": "SolicitedRemoteAssistance",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "UnsolicitedRemoteAssistance": {
        "name": "UnsolicitedRemoteAssistance",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/RemoteDesktop": {
    "name": "RemoteDesktop",
    "policies": {
      "LoadAadCredKeyFromProfile": {
        "name": "LoadAadCredKeyFromProfile",
        "description": "Allow encrypted DPAPI cred keys to be loaded from user profiles for AAD accounts.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/RemoteDesktopServices": {
    "name": "RemoteDesktopServices",
    "policies": {
      "AllowUsersToConnectRemotely": {
        "name": "AllowUsersToConnectRemotely",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ClientConnectionEncryptionLevel": {
        "name": "ClientConnectionEncryptionLevel",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DoNotAllowDriveRedirection": {
        "name": "DoNotAllowDriveRedirection",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DoNotAllowPasswordSaving": {
        "name": "DoNotAllowPasswordSaving",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DoNotAllowWebAuthnRedirection": {
        "name": "DoNotAllowWebAuthnRedirection",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "PromptForPasswordUponConnection": {
        "name": "PromptForPasswordUponConnection",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RequireSecureRPCCommunication": {
        "name": "RequireSecureRPCCommunication",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/RemoteManagement": {
    "name": "RemoteManagement",
    "policies": {
      "AllowBasicAuthentication_Client": {
        "name": "AllowBasicAuthentication_Client",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowBasicAuthentication_Service": {
        "name": "AllowBasicAuthentication_Service",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowCredSSPAuthenticationClient": {
        "name": "AllowCredSSPAuthenticationClient",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowCredSSPAuthenticationService": {
        "name": "AllowCredSSPAuthenticationService",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowRemoteServerManagement": {
        "name": "AllowRemoteServerManagement",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowUnencryptedTraffic_Client": {
        "name": "AllowUnencryptedTraffic_Client",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "AllowUnencryptedTraffic_Service": {
        "name": "AllowUnencryptedTraffic_Service",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisallowDigestAuthentication": {
        "name": "DisallowDigestAuthentication",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisallowNegotiateAuthenticationClient": {
        "name": "DisallowNegotiateAuthenticationClient",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisallowNegotiateAuthenticationService": {
        "name": "DisallowNegotiateAuthenticationService",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisallowStoringOfRunAsCredentials": {
        "name": "DisallowStoringOfRunAsCredentials",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SpecifyChannelBindingTokenHardeningLevel": {
        "name": "SpecifyChannelBindingTokenHardeningLevel",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TrustedHosts": {
        "name": "TrustedHosts",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TurnOnCompatibilityHTTPListener": {
        "name": "TurnOnCompatibilityHTTPListener",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "TurnOnCompatibilityHTTPSListener": {
        "name": "TurnOnCompatibilityHTTPSListener",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/RemoteProcedureCall": {
    "name": "RemoteProcedureCall",
    "policies": {
      "RPCEndpointMapperClientAuthentication": {
        "name": "RPCEndpointMapperClientAuthentication",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RestrictUnauthenticatedRPCClients": {
        "name": "RestrictUnauthenticatedRPCClients",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/RemoteShell": {
    "name": "RemoteShell",
    "policies": {
      "AllowRemoteShellAccess": {
        "name": "AllowRemoteShellAccess",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "MaxConcurrentUsers": {
        "name": "MaxConcurrentUsers",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SpecifyIdleTimeout": {
        "name": "SpecifyIdleTimeout",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SpecifyMaxMemory": {
        "name": "SpecifyMaxMemory",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SpecifyMaxProcesses": {
        "name": "SpecifyMaxProcesses",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SpecifyMaxRemoteShells": {
        "name": "SpecifyMaxRemoteShells",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "SpecifyShellTimeout": {
        "name": "SpecifyShellTimeout",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/RestrictedGroups": {
    "name": "RestrictedGroups",
    "policies": {
      "ConfigureGroupMembership": {
        "name": "ConfigureGroupMembership",
        "description": "This security setting allows an administrator to define the members of a security-sensitive (restricted) group. When a Restricted Groups Policy is enforced, any current member of a restricted group that is not on the Members list is removed. Any user on the Members list who is not currently a member of the restricted group is added. You can use Restricted Groups policy to control group membership. Using the policy, you can specify what members are part of a group. Any members that are not specified in the policy are removed during configuration or refresh. For example, you can create a Restricted Groups policy to only allow specified users (for example, Alice and John) to be members of the Administrators group. When policy is refreshed, only Alice and John will remain as members of the Administrators group. Caution: If a Restricted Groups policy is applied, any current member not on the Restricted Groups policy members list is removed. This can include default members, such as administrators. Restricted Groups should be used primarily to configure membership of local groups on workstation or member servers. An empty Members list means that the restricted group has no members.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Search": {
    "name": "Search",
    "policies": {
      "AllowCloudSearch": {
        "name": "AllowCloudSearch",
        "description": "Allow search and Cortana to search cloud sources like OneDrive and SharePoint. This policy allows corporate administrators to control whether employees can turn off/on the search of these cloud sources. The default policy value is to allow employees access to the setting that controls search of cloud sources.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowCortanaInAAD": {
        "name": "AllowCortanaInAAD",
        "description": "This features allows you to show the cortana opt-in page during Windows Setup",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. The Cortana consent page will not appear in AAD OOBE during setup."
            },
            "1": {
              "description": "Allowed. The Cortana consent page will appear in Azure AAD OOBE during setup."
            }
          }
        },
        "scope": "device"
      },
      "AllowFindMyFiles": {
        "name": "AllowFindMyFiles",
        "description": "This feature allows you to disable find my files completely on the machine",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Find My Files feature is turned off completely, and the settings UI is disabled."
            },
            "1": {
              "description": "Find My Files feature can be toggled (still off by default), and the settings UI is present."
            }
          }
        },
        "scope": "device"
      },
      "AllowIndexingEncryptedStoresOrItems": {
        "name": "AllowIndexingEncryptedStoresOrItems",
        "description": "Allows or disallows the indexing of items. This switch is for the Windows Search Indexer, which controls whether it will index items that are encrypted, such as the Windows Information Protection (WIP) protected files. When the policy is enabled, WIP protected items are indexed and the metadata about them are stored in an unencrypted location. The metadata includes things like file path and date modified. When the policy is disabled, the WIP protected items are not indexed and do not show up in the results in Cortana or file explorer. There may also be a performance impact on photos and Groove apps if there are a lot of WIP protected media files on the device. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowSearchHighlights": {
        "name": "AllowSearchHighlights",
        "description": "",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "AllowSearchToUseLocation": {
        "name": "AllowSearchToUseLocation",
        "description": "Specifies whether search can leverage location information. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowStoringImagesFromVisionSearch": {
        "name": "AllowStoringImagesFromVisionSearch",
        "description": "This policy has been deprecated.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowUsingDiacritics": {
        "name": "AllowUsingDiacritics",
        "description": "Allows the use of diacritics. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowWindowsIndexer": {
        "name": "AllowWindowsIndexer",
        "description": "Allow Windows indexer. Value type is integer.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "AlwaysUseAutoLangDetection": {
        "name": "AlwaysUseAutoLangDetection",
        "description": "Specifies whether to always use automatic language detection when indexing content and properties. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureSearchOnTaskbarMode": {
        "name": "ConfigureSearchOnTaskbarMode",
        "description": "Configures search on the taskbar. If you disable this policy setting or do not configure it, users can see and change this setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Hide"
            },
            "1": {
              "description": "Search icon only"
            },
            "2": {
              "description": "Search icon and label"
            },
            "3": {
              "description": "Search box"
            }
          }
        },
        "scope": "device"
      },
      "DisableBackoff": {
        "name": "DisableBackoff",
        "description": "If enabled, the search indexer backoff feature will be disabled. Indexing will continue at full speed even when system activity is high. If disabled, backoff logic will be used to throttle back indexing activity when system activity is high. Default is disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable."
            },
            "1": {
              "description": "Enable."
            }
          }
        },
        "scope": "device"
      },
      "DisableRemovableDriveIndexing": {
        "name": "DisableRemovableDriveIndexing",
        "description": "This policy setting configures whether or not locations on removable drives can be added to libraries. If you enable this policy setting, locations on removable drives cannot be added to libraries. In addition, locations on removable drives cannot be indexed. If you disable or do not configure this policy setting, locations on removable drives can be added to libraries. In addition, locations on removable drives can be indexed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable."
            },
            "1": {
              "description": "Enable."
            }
          }
        },
        "scope": "device"
      },
      "DisableSearch": {
        "name": "DisableSearch",
        "description": "Enabling this policy completely disables Search UI and all its entry points such as keyboard shortcuts and touchpad gestures. It removes the Search button from the Taskbar and the corresponding option in the Settings. It also disables type-to-search in the Start menu and removes the Start menu's search box.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not disable."
            },
            "1": {
              "description": "Disable."
            }
          }
        },
        "scope": "device"
      },
      "DoNotUseWebResults": {
        "name": "DoNotUseWebResults",
        "description": "Don't search the web or display web results in Search. This policy setting allows you to control whether or not Search can perform queries on the web, and if the web results are displayed in Search. If you enable this policy setting, queries won't be performed on the web and web results won't be displayed when a user performs a query in Search. If you disable this policy setting, queries will be performed on the web and web results will be displayed when a user performs a query in Search.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. Queries won't be performed on the web and web results won't be displayed when a user performs a query in Search."
            },
            "1": {
              "description": "Allowed. Queries will be performed on the web and web results will be displayed when a user performs a query in Search."
            }
          }
        },
        "scope": "device"
      },
      "PreventIndexingLowDiskSpaceMB": {
        "name": "PreventIndexingLowDiskSpaceMB",
        "description": "Enabling this policy prevents indexing from continuing after less than the specified amount of hard drive space is left on the same drive as the index location. Select between 0 and 1. Enable this policy if computers in your environment have extremely limited hard drive space. When this policy is disabled or not configured, Windows Desktop Search automatically manages your index size.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable."
            },
            "1": {
              "description": "Enable."
            }
          }
        },
        "scope": "device"
      },
      "PreventRemoteQueries": {
        "name": "PreventRemoteQueries",
        "description": "If enabled, clients will be unable to query this computer's index remotely. Thus, when they are browsing network shares that are stored on this computer, they will not search them using the index. If disabled, client search requests will use this computer's index. .",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable."
            },
            "1": {
              "description": "Enable."
            }
          }
        },
        "scope": "device"
      },
      "SafeSearchPermissions": {
        "name": "SafeSearchPermissions",
        "description": "This policy is deprecated.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Security": {
    "name": "Security",
    "policies": {
      "AllowAddProvisioningPackage": {
        "name": "AllowAddProvisioningPackage",
        "description": "Specifies whether to allow the runtime configuration agent to install provisioning packages.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowManualRootCertificateInstallation": {
        "name": "AllowManualRootCertificateInstallation",
        "description": "This policy is deprecated.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowRemoveProvisioningPackage": {
        "name": "AllowRemoveProvisioningPackage",
        "description": "Specifies whether to allow the runtime configuration agent to remove provisioning packages.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AntiTheftMode": {
        "name": "AntiTheftMode",
        "description": "This policy is deprecated.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "ClearTPMIfNotReady": {
        "name": "ClearTPMIfNotReady",
        "description": "Admin access is required. The prompt will appear on first admin logon after a reboot when the TPM is in a non-ready state that can be remediated with a TPM Clear. The prompt will have a description of what clearing the TPM does and that it requires a reboot. The user can dismiss it, but it will appear on next admin logon after restart.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Will not force recovery from a non-ready TPM state."
            },
            "1": {
              "description": "Will prompt to clear the TPM if the TPM is in a non-ready state (or reduced functionality) which can be remediated with a TPM Clear."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureWindowsPasswords": {
        "name": "ConfigureWindowsPasswords",
        "description": "Configures the use of passwords for Windows features",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "-Disallow passwords (Asymmetric credentials will be promoted to replace passwords on Windows features)"
            },
            "1": {
              "description": "Allow passwords (Passwords continue to be allowed to be used for Windows features)"
            },
            "2": {
              "description": "as per SKU and device capabilities. Windows 10 S devices will exhibit \"Disallow passwords\" default, and all other devices will default to \"Allow passwords\")"
            }
          }
        },
        "scope": "device"
      },
      "PreventAutomaticDeviceEncryptionForAzureADJoinedDevices": {
        "name": "PreventAutomaticDeviceEncryptionForAzureADJoinedDevices",
        "description": "Specifies whether to allow automatic device encryption during OOBE when the device is Azure AD joined.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Encryption enabled."
            },
            "1": {
              "description": "Encryption disabled."
            }
          }
        },
        "scope": "device"
      },
      "RecoveryEnvironmentAuthentication": {
        "name": "RecoveryEnvironmentAuthentication",
        "description": "This policy controls the requirement of Admin Authentication in RecoveryEnvironment.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "current) behavior"
            },
            "1": {
              "description": "RequireAuthentication: Admin Authentication is always required for components in RecoveryEnvironment"
            },
            "2": {
              "description": "NoRequireAuthentication: Admin Authentication is not required for components in RecoveryEnvironment"
            }
          }
        },
        "scope": "device"
      },
      "RequireDeviceEncryption": {
        "name": "RequireDeviceEncryption",
        "description": "Allows enterprise to turn on internal storage encryption. Most restricted value is 1. Important. If encryption has been enabled, it cannot be turned off by using this policy.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Encryption is not required."
            },
            "1": {
              "description": "Encryption is required."
            }
          }
        },
        "scope": "device"
      },
      "RequireProvisioningPackageSignature": {
        "name": "RequireProvisioningPackageSignature",
        "description": "Specifies whether provisioning packages must have a certificate signed by a device trusted authority.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not required."
            },
            "1": {
              "description": "Required."
            }
          }
        },
        "scope": "device"
      },
      "RequireRetrieveHealthCertificateOnBoot": {
        "name": "RequireRetrieveHealthCertificateOnBoot",
        "description": "Specifies whether to retrieve and post TCG Boot logs, and get or cache an encrypted or signed Health Attestation Report from the Microsoft Health Attestation Service (HAS) when a device boots or reboots. Setting this policy to 1 (Required):Determines whether a device is capable of Remote Device Health Attestation, by verifying if the device has TPM 2. 0. Improves the performance of the device by enabling the device to fetch and cache data to reduce the latency during Device Health Verification. Note We recommend that this policy is set to Required after MDM enrollment.  Most restricted value is 1.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not required."
            },
            "1": {
              "description": "Required."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/ServiceControlManager": {
    "name": "ServiceControlManager",
    "policies": {
      "SvchostProcessMitigation": {
        "name": "SvchostProcessMitigation",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Settings": {
    "name": "Settings",
    "policies": {
      "AllowAutoPlay": {
        "name": "AllowAutoPlay",
        "description": "Allows the user to change Auto Play settings. Note Setting this policy to 0 (Not allowed) does not affect the autoplay dialog box that appears when a device is connected.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowDataSense": {
        "name": "AllowDataSense",
        "description": "Allows the user to change Data Sense settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowDateTime": {
        "name": "AllowDateTime",
        "description": "Allows the user to change date and time settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowEditDeviceName": {
        "name": "AllowEditDeviceName",
        "description": "Allows the user to edit the device name.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowLanguage": {
        "name": "AllowLanguage",
        "description": "Allows the user to change the language settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowOnlineTips": {
        "name": "AllowOnlineTips",
        "description": "Enables or disables the retrieval of online tips and help for the Settings app. If disabled, Settings will not contact Microsoft content services to retrieve tips and help content.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowPowerSleep": {
        "name": "AllowPowerSleep",
        "description": "Allows the user to change power and sleep settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowRegion": {
        "name": "AllowRegion",
        "description": "Allows the user to change the region settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowSignInOptions": {
        "name": "AllowSignInOptions",
        "description": "Allows the user to change sign-in options.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowVPN": {
        "name": "AllowVPN",
        "description": "Allows the user to change VPN settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowWorkplace": {
        "name": "AllowWorkplace",
        "description": "Allows user to change workplace settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowYourAccount": {
        "name": "AllowYourAccount",
        "description": "Allows user to change account settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "PageVisibilityList": {
        "name": "PageVisibilityList",
        "description": "Allows IT Admins to either prevent specific pages in the System Settings app from being visible or accessible, or to do so for all pages except those specified. The mode will be specified by the policy string beginning with either the string showonly: or hide:.  Pages are identified by a shortened version of their already published URIs, which is the URI minus the ms-settings: prefix. For example, if the URI for a settings page is ms-settings:bluetooth, the page identifier used in the policy will be just bluetooth. Multiple page identifiers are separated by semicolons. The following example illustrates a policy that would allow access only to the about and bluetooth pages, which have URI ms-settings:about and ms-settings:bluetooth respectively:showonly:about;bluetooth. If the policy is not specified, the behavior will be that no pages are affected. If the policy string is formatted incorrectly, it will be ignored entirely (i. e. treated as not set) to prevent the machine from becoming unserviceable if data corruption occurs. Note that if a page is already hidden for another reason, then it will remain hidden even if it is in a showonly: list. The format of the PageVisibilityList value is as follows: The value is a unicode string up to 10,000 characters long, which will be used without case sensitivity. There are two variants: one that shows only the given pages and one which hides the given pages. The first variant starts with the string showonly: and the second with the string hide:. Following the variant identifier is a semicolon-delimited list of page identifiers, which must not have any extra whitespace. Each page identifier is the ms-settings:xyz URI for the page, minus the ms-settings: prefix, so the identifier for the page with URI ms-settings:network-wifi would be just network-wifi. The default value for this setting is an empty string, which is interpreted as show everything. Example 1, specifies that only the wifi and bluetooth pages should be shown (they have URIs ms-settings:network-wifi and ms-settings:bluetooth). All other pages (and the categories they're in) will be hidden:showonly:network-wifi;bluetooth. Example 2, specifies that the wifi page should not be shown:hide:network-wifi",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/SettingsSync": {
    "name": "SettingsSync",
    "policies": {
      "DisableAccessibilitySettingSync": {
        "name": "DisableAccessibilitySettingSync",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableLanguageSettingSync": {
        "name": "DisableLanguageSettingSync",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/SmartScreen": {
    "name": "SmartScreen",
    "policies": {
      "EnableAppInstallControl": {
        "name": "EnableAppInstallControl",
        "description": "Allows IT Admins to control whether users are allowed to install apps from places other than the Store. NoteThis policy will block installation only while the device is online. To block offline installation too, SmartScreen/PreventOverrideForFilesInShell and SmartScreen/EnableSmartScreenInShell policies should also be enabled. This policy setting is intended to prevent malicious content from affecting your user's devices when downloading executable content from the internet.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Turns off Application Installation Control, allowing users to download and install files from anywhere on the web."
            },
            "1": {
              "description": "Turns on Application Installation Control, allowing users to only install apps from the Store."
            }
          }
        },
        "scope": "device"
      },
      "EnableSmartScreenInShell": {
        "name": "EnableSmartScreenInShell",
        "description": "Allows IT Admins to configure SmartScreen for Windows.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "PreventOverrideForFilesInShell": {
        "name": "PreventOverrideForFilesInShell",
        "description": "Allows IT Admins to control whether users can ignore SmartScreen warnings and run malicious files.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not prevent override."
            },
            "1": {
              "description": "Prevent override."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Speech": {
    "name": "Speech",
    "policies": {
      "AllowSpeechModelUpdate": {
        "name": "AllowSpeechModelUpdate",
        "description": "Specifies whether the device will receive updates to the speech recognition and speech synthesis models. A speech model contains data used by the speech engine to convert audio to text (or vice-versa). The models are periodically updated to improve accuracy and performance. Models are non-executable data files. If enabled, the device will periodically check for updated speech models and then download them from a Microsoft service using the Background Internet Transfer Service (BITS).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Start": {
    "name": "Start",
    "policies": {
      "AllowPinnedFolderDocuments": {
        "name": "AllowPinnedFolderDocuments",
        "description": "This policy controls the visibility of the Documents shortcut on the Start menu. The possible values are 0 - means that the shortcut should be hidden and grays out the corresponding toggle in the Settings app, 1 - means that the shortcut should be visible and grays out the corresponding toggle in the Settings app, 65535 - means that there is no enforced configuration and the setting can be changed by the user.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The shortcut is hidden and disables the setting in the Settings app."
            },
            "1": {
              "description": "The shortcut is visible and disables the setting in the Settings app."
            },
            "65535": {
              "description": "There is no enforced configuration and the setting can be changed by the user."
            }
          }
        },
        "scope": "device"
      },
      "AllowPinnedFolderDownloads": {
        "name": "AllowPinnedFolderDownloads",
        "description": "This policy controls the visibility of the Downloads shortcut on the Start menu. The possible values are 0 - means that the shortcut should be hidden and grays out the corresponding toggle in the Settings app, 1 - means that the shortcut should be visible and grays out the corresponding toggle in the Settings app, 65535 - means that there is no enforced configuration and the setting can be changed by the user.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The shortcut is hidden and disables the setting in the Settings app."
            },
            "1": {
              "description": "The shortcut is visible and disables the setting in the Settings app."
            },
            "65535": {
              "description": "There is no enforced configuration and the setting can be changed by the user."
            }
          }
        },
        "scope": "device"
      },
      "AllowPinnedFolderFileExplorer": {
        "name": "AllowPinnedFolderFileExplorer",
        "description": "This policy controls the visibility of the File Explorer shortcut on the Start menu. The possible values are 0 - means that the shortcut should be hidden and grays out the corresponding toggle in the Settings app, 1 - means that the shortcut should be visible and grays out the corresponding toggle in the Settings app, 65535 - means that there is no enforced configuration and the setting can be changed by the user.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The shortcut is hidden and disables the setting in the Settings app."
            },
            "1": {
              "description": "The shortcut is visible and disables the setting in the Settings app."
            },
            "65535": {
              "description": "There is no enforced configuration and the setting can be changed by the user."
            }
          }
        },
        "scope": "device"
      },
      "AllowPinnedFolderHomeGroup": {
        "name": "AllowPinnedFolderHomeGroup",
        "description": "This policy controls the visibility of the HomeGroup shortcut on the Start menu. The possible values are 0 - means that the shortcut should be hidden and grays out the corresponding toggle in the Settings app, 1 - means that the shortcut should be visible and grays out the corresponding toggle in the Settings app, 65535 - means that there is no enforced configuration and the setting can be changed by the user.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The shortcut is hidden and disables the setting in the Settings app."
            },
            "1": {
              "description": "The shortcut is visible and disables the setting in the Settings app."
            },
            "65535": {
              "description": "There is no enforced configuration and the setting can be changed by the user."
            }
          }
        },
        "scope": "device"
      },
      "AllowPinnedFolderMusic": {
        "name": "AllowPinnedFolderMusic",
        "description": "This policy controls the visibility of the Music shortcut on the Start menu. The possible values are 0 - means that the shortcut should be hidden and grays out the corresponding toggle in the Settings app, 1 - means that the shortcut should be visible and grays out the corresponding toggle in the Settings app, 65535 - means that there is no enforced configuration and the setting can be changed by the user.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The shortcut is hidden and disables the setting in the Settings app."
            },
            "1": {
              "description": "The shortcut is visible and disables the setting in the Settings app."
            },
            "65535": {
              "description": "There is no enforced configuration and the setting can be changed by the user."
            }
          }
        },
        "scope": "device"
      },
      "AllowPinnedFolderNetwork": {
        "name": "AllowPinnedFolderNetwork",
        "description": "This policy controls the visibility of the Network shortcut on the Start menu. The possible values are 0 - means that the shortcut should be hidden and grays out the corresponding toggle in the Settings app, 1 - means that the shortcut should be visible and grays out the corresponding toggle in the Settings app, 65535 - means that there is no enforced configuration and the setting can be changed by the user.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The shortcut is hidden and disables the setting in the Settings app."
            },
            "1": {
              "description": "The shortcut is visible and disables the setting in the Settings app."
            },
            "65535": {
              "description": "There is no enforced configuration and the setting can be changed by the user."
            }
          }
        },
        "scope": "device"
      },
      "AllowPinnedFolderPersonalFolder": {
        "name": "AllowPinnedFolderPersonalFolder",
        "description": "This policy controls the visibility of the PersonalFolder shortcut on the Start menu. The possible values are 0 - means that the shortcut should be hidden and grays out the corresponding toggle in the Settings app, 1 - means that the shortcut should be visible and grays out the corresponding toggle in the Settings app, 65535 - means that there is no enforced configuration and the setting can be changed by the user.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The shortcut is hidden and disables the setting in the Settings app."
            },
            "1": {
              "description": "The shortcut is visible and disables the setting in the Settings app."
            },
            "65535": {
              "description": "There is no enforced configuration and the setting can be changed by the user."
            }
          }
        },
        "scope": "device"
      },
      "AllowPinnedFolderPictures": {
        "name": "AllowPinnedFolderPictures",
        "description": "This policy controls the visibility of the Pictures shortcut on the Start menu. The possible values are 0 - means that the shortcut should be hidden and grays out the corresponding toggle in the Settings app, 1 - means that the shortcut should be visible and grays out the corresponding toggle in the Settings app, 65535 - means that there is no enforced configuration and the setting can be changed by the user.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The shortcut is hidden and disables the setting in the Settings app."
            },
            "1": {
              "description": "The shortcut is visible and disables the setting in the Settings app."
            },
            "65535": {
              "description": "There is no enforced configuration and the setting can be changed by the user."
            }
          }
        },
        "scope": "device"
      },
      "AllowPinnedFolderSettings": {
        "name": "AllowPinnedFolderSettings",
        "description": "This policy controls the visibility of the Settings shortcut on the Start menu. The possible values are 0 - means that the shortcut should be hidden and grays out the corresponding toggle in the Settings app, 1 - means that the shortcut should be visible and grays out the corresponding toggle in the Settings app, 65535 - means that there is no enforced configuration and the setting can be changed by the user.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The shortcut is hidden and disables the setting in the Settings app."
            },
            "1": {
              "description": "The shortcut is visible and disables the setting in the Settings app."
            },
            "65535": {
              "description": "There is no enforced configuration and the setting can be changed by the user."
            }
          }
        },
        "scope": "device"
      },
      "AllowPinnedFolderVideos": {
        "name": "AllowPinnedFolderVideos",
        "description": "This policy controls the visibility of the Videos shortcut on the Start menu. The possible values are 0 - means that the shortcut should be hidden and grays out the corresponding toggle in the Settings app, 1 - means that the shortcut should be visible and grays out the corresponding toggle in the Settings app, 65535 - means that there is no enforced configuration and the setting can be changed by the user.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The shortcut is hidden and disables the setting in the Settings app."
            },
            "1": {
              "description": "The shortcut is visible and disables the setting in the Settings app."
            },
            "65535": {
              "description": "There is no enforced configuration and the setting can be changed by the user."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureStartPins": {
        "name": "ConfigureStartPins",
        "description": "Allows admin to override the default items pinned to Start.",
        "format": "string",
        "scope": "device"
      },
      "DisableContextMenus": {
        "name": "DisableContextMenus",
        "description": "Enabling this policy prevents context menus from being invoked in the Start Menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not disable."
            },
            "1": {
              "description": "Disable."
            }
          }
        },
        "scope": "device"
      },
      "DisableEditingQuickSettings": {
        "name": "DisableEditingQuickSettings",
        "description": "Allows admin to disable editing Quick Settings, such as by accessing the 'Edit quick settings' context through right-clicking on Quick Settings buttons.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enable editing Quick Settings."
            },
            "1": {
              "description": "Disable editing Quick Settings."
            }
          }
        },
        "scope": "device"
      },
      "ForceStartSize": {
        "name": "ForceStartSize",
        "description": "Forces the start screen size. If there is policy configuration conflict, the latest configuration request is applied to the device.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not force size of Start."
            },
            "1": {
              "description": "Force non-fullscreen size of Start."
            },
            "2": {
              "description": "Force a fullscreen size of Start."
            }
          }
        },
        "scope": "device"
      },
      "HideAppList": {
        "name": "HideAppList",
        "description": "Setting the value of this policy to 1 or 2 collapses the app list. Setting the value of this policy to 3 removes the app list entirely. Setting the value of this policy to 2 or 3 disables the corresponding toggle in the Settings app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "None."
            },
            "1": {
              "description": "Hide all apps list."
            },
            "2": {
              "description": "Hide all apps list, and Disable \"Show app list in Start menu\" in Settings app."
            },
            "3": {
              "description": "Hide all apps list, remove all apps button, and Disable \"Show app list in Start menu\" in Settings app."
            }
          }
        },
        "scope": "device"
      },
      "HideChangeAccountSettings": {
        "name": "HideChangeAccountSettings",
        "description": "Enabling this policy hides \"Change account settings\" from appearing in the user tile in the start menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "device"
      },
      "HideFrequentlyUsedApps": {
        "name": "HideFrequentlyUsedApps",
        "description": "Enabling this policy hides the most used apps from appearing on the start menu and disables the corresponding toggle in the Settings app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "device"
      },
      "HideHibernate": {
        "name": "HideHibernate",
        "description": "Enabling this policy hides \"Hibernate\" from appearing in the power button in the start menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "device"
      },
      "HideLock": {
        "name": "HideLock",
        "description": "Enabling this policy hides \"Lock\" from appearing in the user tile in the start menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "device"
      },
      "HidePowerButton": {
        "name": "HidePowerButton",
        "description": "Enabling this policy hides the power button from appearing in the start menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "device"
      },
      "HideRecentJumplists": {
        "name": "HideRecentJumplists",
        "description": "Enabling this policy hides recent jumplists from appearing on the start menu/taskbar and disables the corresponding toggle in the Settings app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "device"
      },
      "HideRecentlyAddedApps": {
        "name": "HideRecentlyAddedApps",
        "description": "Enabling this policy hides recently added apps from appearing on the start menu and disables the corresponding toggle in the Settings app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "device"
      },
      "HideRecommendedPersonalizedSites": {
        "name": "HideRecommendedPersonalizedSites",
        "description": "This policy setting allows you to hide the personalized websites in the recommended section of the Start Menu. If you enable this policy setting, the Start Menu will no longer show personalized website recommendations in the recommended section of the start menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Personalized Website Recommendations shown."
            },
            "1": {
              "description": "Personalized Website Recommendations hidden."
            }
          }
        },
        "scope": "device"
      },
      "HideRecommendedSection": {
        "name": "HideRecommendedSection",
        "description": "This policy setting allows you to hide the recommended section of the Start Menu. If you enable this policy setting, the Start Menu will no longer show the section containing a list of recommended files and apps.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Recommended section shown."
            },
            "1": {
              "description": "Recommended section hidden."
            }
          }
        },
        "scope": "device"
      },
      "HideRestart": {
        "name": "HideRestart",
        "description": "Enabling this policy hides \"Restart/Update and restart\" from appearing in the power button in the start menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "device"
      },
      "HideShutDown": {
        "name": "HideShutDown",
        "description": "Enabling this policy hides \"Shut down/Update and shut down\" from appearing in the power button in the start menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "device"
      },
      "HideSignOut": {
        "name": "HideSignOut",
        "description": "Enabling this policy hides \"Sign out\" from appearing in the user tile in the start menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "device"
      },
      "HideSleep": {
        "name": "HideSleep",
        "description": "Enabling this policy hides \"Sleep\" from appearing in the power button in the start menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "device"
      },
      "HideSwitchAccount": {
        "name": "HideSwitchAccount",
        "description": "Enabling this policy hides \"Switch account\" from appearing in the user tile in the start menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "device"
      },
      "HideTaskViewButton": {
        "name": "HideTaskViewButton",
        "description": "This policy setting allows you to hide the TaskView button on the Taskbar. If you enable this policy setting, the TaskView button will be hidden and the Settings toggle will be disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "TaskView button shown."
            },
            "1": {
              "description": "TaskView button hidden."
            }
          }
        },
        "scope": "device"
      },
      "HideUserTile": {
        "name": "HideUserTile",
        "description": "Enabling this policy hides the user tile from appearing in the start menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "device"
      },
      "ImportEdgeAssets": {
        "name": "ImportEdgeAssets",
        "description": "This policy setting allows you to import Edge assets to be used with StartLayout policy. Start layout can contain secondary tile from Edge app which looks for Edge local asset file. Edge local asset would not exist and cause Edge secondary tile to appear empty in this case. This policy only gets applied when StartLayout policy is modified.",
        "format": "string",
        "scope": "device"
      },
      "NoPinningToTaskbar": {
        "name": "NoPinningToTaskbar",
        "description": "This policy setting allows you to control pinning programs to the Taskbar. If you enable this policy setting, users cannot change the programs currently pinned to the Taskbar. If any programs are already pinned to the Taskbar, these programs continue to show in the Taskbar. However, users cannot unpin these programs already pinned to the Taskbar, and they cannot pin new programs to the Taskbar. If you disable or do not configure this policy setting, users can change the programs currently pinned to the Taskbar.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Pinning enabled."
            },
            "1": {
              "description": "Pinning disabled."
            }
          }
        },
        "scope": "device"
      },
      "ShowOrHideMostUsedApps": {
        "name": "ShowOrHideMostUsedApps",
        "description": "This policy controls the visibility of the list of user's most used apps on the Start menu. The possible values are 0 - means that there is no enforced configuration and the setting can be changed by the user (default behavior equivalent to not configuring the policy), 1 - means that the list should be shown and grays out (disables) the corresponding toggle in the Settings app, 2 - means that the list should be hidden and grays out the corresponding toggle in the Settings app. Configuring this policy to 1 or 2 will override any setting of older policy \"HideFrequentlyUsedApps\" (which manages the same part of Start menu but with fewer options).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not enforce visibility of list of most used apps in Start; user can control via Settings app (default behavior equivalent to not configuring this policy)."
            },
            "1": {
              "description": "Force showing of list of most used apps in Start; corresponding toggle in Setting app is disabled."
            },
            "2": {
              "description": "Force hiding of list of most used apps in Start; corresponding toggle in Setting app is disabled."
            }
          }
        },
        "scope": "device"
      },
      "SimplifyQuickSettings": {
        "name": "SimplifyQuickSettings",
        "description": "Allows admin to control the Quick Settings layout. If enabled, fewer Quick Settings buttons will be shown (only WiFi, Bluetooth, VPN, and Accessibility). If disabled or not configured, the regular Quick Settings layout will be loaded.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Load regular Quick Settings layout."
            },
            "1": {
              "description": "Load simplified Quick Settings layout."
            }
          }
        },
        "scope": "device"
      },
      "StartLayout": {
        "name": "StartLayout",
        "description": "Important For more information, see Policy scope. Allows you to override the default Start layout and prevents the user from changing it. If both user and device policies are set, the user policy will be used. Apps pinned to the taskbar can also be changed with this policyFor further details on how to customize the Start layout, please see Customize and export Start layout and Configure Windows 10 taskbar.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Stickers": {
    "name": "Stickers",
    "policies": {
      "EnableStickers": {
        "name": "EnableStickers",
        "description": "This policy setting allows you to control whether you want to allow stickers to be edited and placed on Desktop",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Storage": {
    "name": "Storage",
    "policies": {
      "AllowDiskHealthModelUpdates": {
        "name": "AllowDiskHealthModelUpdates",
        "description": "Allows disk health model updates. Value type is integer.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not allow"
            },
            "1": {
              "description": "Allow"
            }
          }
        },
        "scope": "device"
      },
      "AllowStorageSenseGlobal": {
        "name": "AllowStorageSenseGlobal",
        "description": "Storage Sense can automatically clean some of the user’s files to free up disk space. By default, Storage Sense is automatically turned on when the machine runs into low disk space and is set to run whenever the machine runs into storage pressure. This cadence can be changed in Storage settings or set with the Storage/ConfigStorageSenseGlobalCadence group policy. If you enable this policy setting without setting a cadence, Storage Sense is turned on for the machine with the default cadence of during low free disk space. Users cannot disable Storage Sense, but they can adjust the cadence (unless you also configure the Storage/ConfigStorageSenseGlobalCadence group policy). If you disable this policy setting, the machine will turn off Storage Sense. Users cannot enable Storage Sense. If you do not configure this policy setting, Storage Sense is turned off by default until the user runs into low disk space or the user enables it manually. Users can configure this setting in Storage settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Block"
            },
            "1": {
              "description": "Allow"
            }
          }
        },
        "scope": "device"
      },
      "AllowStorageSenseTemporaryFilesCleanup": {
        "name": "AllowStorageSenseTemporaryFilesCleanup",
        "description": "When Storage Sense runs, it can delete the user’s temporary files that are not in use. If the Storage/AllowStorageSenseGlobal policy is disabled, then this policy does not have any effect. If you enable this policy setting, Storage Sense will delete the user’s temporary files that are not in use. Users cannot disable this setting in Storage settings. If you disable this policy setting, Storage Sense will not delete the user’s temporary files. Users cannot enable this setting in Storage settings. If you do not configure this policy setting, Storage Sense will delete the user’s temporary files by default. Users can configure this setting in Storage settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Block"
            },
            "1": {
              "description": "Allow"
            }
          }
        },
        "scope": "device"
      },
      "ConfigStorageSenseCloudContentDehydrationThreshold": {
        "name": "ConfigStorageSenseCloudContentDehydrationThreshold",
        "description": "When Storage Sense runs, it can dehydrate cloud-backed content that hasn’t been opened in a certain amount of days. If the Storage/AllowStorageSenseGlobal policy is disabled, then this policy does not have any effect. If you enable this policy setting, you must provide the minimum number of days a cloud-backed file can remain unopened before Storage Sense dehydrates it. Supported values are: 0–365. If you set this value to zero, Storage Sense will not dehydrate any cloud-backed content. The default value is 0, which never dehydrates cloud-backed content. If you disable or do not configure this policy setting, then Storage Sense will not dehydrate any cloud-backed content by default. Users can configure this setting in Storage settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 36
        },
        "scope": "device"
      },
      "ConfigStorageSenseDownloadsCleanupThreshold": {
        "name": "ConfigStorageSenseDownloadsCleanupThreshold",
        "description": "When Storage Sense runs, it can delete files in the user’s Downloads folder if they haven’t been opened for more than a certain number of days. If the Storage/AllowStorageSenseGlobal policy is disabled, then this policy does not have any effect. If you enable this policy setting, you must provide the minimum number of days a file can remain unopened before Storage Sense deletes it from the Downloads folder. Supported values are: 0-365. If you set this value to zero, Storage Sense will not delete files in the user’s Downloads folder. The default is 0, or never deleting files in the Downloads folder. If you disable or do not configure this policy setting, then Storage Sense will not delete files in the user’s Downloads folder by default. Users can configure this setting in Storage settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 36
        },
        "scope": "device"
      },
      "ConfigStorageSenseGlobalCadence": {
        "name": "ConfigStorageSenseGlobalCadence",
        "description": "Storage Sense can automatically clean some of the user’s files to free up disk space. If the Storage/AllowStorageSenseGlobal policy is disabled, then this policy does not have any effect. If you enable this policy setting, you must provide the desired Storage Sense cadence. The following are supported options:1 – Daily7 – Weekly30 – Monthly0 – During low free disk spaceThe default is 0 (during low free disk space). If you do not configure this policy setting, then the Storage Sense cadence is set to “during low free disk space” by default. Users can configure this setting in Storage settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "ConfigStorageSenseRecycleBinCleanupThreshold": {
        "name": "ConfigStorageSenseRecycleBinCleanupThreshold",
        "description": "When Storage Sense runs, it can delete files in the user’s Recycle Bin if they have been there for over a certain amount of days. If the Storage/AllowStorageSenseGlobal policy is disabled, then this policy does not have any effect. If you enable this policy setting, you must provide the minimum age threshold (in days) of a file in the Recycle Bin before Storage Sense will delete it. Supported values are: 0–365. If you set this value to zero, Storage Sense will not delete files in the user’s Recycle Bin. The default is 30 days. If you disable or do not configure this policy setting, Storage Sense will delete files in the user’s Recycle Bin that have been there for over 30 days by default. Users can configure this setting in Storage settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 36
        },
        "scope": "device"
      },
      "EnhancedStorageDevices": {
        "name": "EnhancedStorageDevices",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "RemovableDiskDenyWriteAccess": {
        "name": "RemovableDiskDenyWriteAccess",
        "description": "If you enable this policy setting, write access is denied to this removable storage class. If you disable or do not configure this policy setting, write access is allowed to this removable storage class. Note: To require that users write data to BitLocker-protected storage, enable the policy setting \"Deny write access to drives not protected by BitLocker,\" which is located in \"Computer Configuration\\Administrative Templates\\Windows Components\\BitLocker Drive Encryption\\Removable Data Drives.\"",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "WPDDevicesDenyReadAccessPerDevice": {
        "name": "WPDDevicesDenyReadAccessPerDevice",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "WPDDevicesDenyWriteAccessPerDevice": {
        "name": "WPDDevicesDenyWriteAccessPerDevice",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/System": {
    "name": "System",
    "policies": {
      "AllowBuildPreview": {
        "name": "AllowBuildPreview",
        "description": "Note This policy setting applies only to devices running Windows 10 Pro, Windows 10 Enterprise, and Windows 10 Education, Windows 10 Mobile, and Windows 10 Mobile Enterprise. This policy setting determines whether users can access the Insider build controls in the Advanced Options for Windows Update. These controls are located under Get Insider builds, and enable users to make their devices available for downloading and installing Windows preview software. If you enable or do not configure this policy setting, users can download and install Windows preview software on their devices. If you disable this policy setting, the item Get Insider builds will be unavailable.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. The item \"Get Insider builds\" is unavailable, users are unable to make their devices available for preview software."
            },
            "1": {
              "description": "Allowed. Users can make their devices available for downloading and installing preview software."
            },
            "2": {
              "description": "Not configured. Users can make their devices available for downloading and installing preview software."
            }
          }
        },
        "scope": "device"
      },
      "AllowCommercialDataPipeline": {
        "name": "AllowCommercialDataPipeline",
        "description": "This policy is deprecated and will only work on Windows 10 version 1809. Setting this policy will have no effect for other supported versions of Windows.                      AllowCommercialDataPipeline configures an Azure Active Directory joined device so that Microsoft is the processor of the Windows diagnostic data collected from the device, subject to the Product Terms at https://go.microsoft.com/fwlink/?linkid=2185086.                     To enable this behavior:                         1. Enable this policy setting                         2. Join an Azure Active Directory account to the device                     Windows diagnostic data is collected when the Allow Telemetry policy setting is set to value 1  - Required or above. Configuring this setting does not change the Windows diagnostic data collection level set for the device.                     If you disable or do not configure this setting, Microsoft will be the controller of the Windows diagnostic data collected from the device and processed in accordance with Microsoft's privacy statement at https://go.microsoft.com/fwlink/?LinkId=521839 unless you have enabled policies like 'Allow Update Compliance Processing' or 'Allow Desktop Analytics Processing'.                     See the documentation at  https://go.microsoft.com/fwlink/?linkid=2011107 for information on this and other policies that will result in Microsoft being the processor of Windows diagnostic data.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "AllowDesktopAnalyticsProcessing": {
        "name": "AllowDesktopAnalyticsProcessing",
        "description": "This policy is deprecated and will only work on Windows 10 version 1809. Setting this policy will have no effect for other supported versions of Windows.                      This policy setting, in combination with the Allow Telemetry and Configure the Commercial ID, enables organizations to configure the device so that Microsoft is the processor for Windows diagnostic data collected from the device, subject to the Product Terms at https://go.microsoft.com/fwlink/?linkid=2185086.                     To enable this behavior:                         1. Enable this policy setting                         2. Join an Azure Active Directory account to the device                         3. Set Allow Telemetry to value 1 - Required, or higher                         4. Set the Configure the Commercial ID setting for your Desktop Analytics workspace                     When these policies are configured, Windows diagnostic data collected from the device will be subject to Microsoft processor commitments.                     This setting has no effect on devices unless they are properly enrolled in Desktop Analytics. If you disable this policy setting, devices will not appear in Desktop Analytics.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "2": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowDeviceNameInDiagnosticData": {
        "name": "AllowDeviceNameInDiagnosticData",
        "description": "This policy allows the device name to be sent to Microsoft as part of Windows diagnostic data.  If you disable or do not configure this policy setting, then device name will not be sent to Microsoft as part of Windows diagnostic data.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowEmbeddedMode": {
        "name": "AllowEmbeddedMode",
        "description": "Specifies whether set general purpose device to be in embedded mode. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowExperimentation": {
        "name": "AllowExperimentation",
        "description": "NoteThis policy is not supported in Windows 10, version 1607. This policy setting determines the level that Microsoft can experiment with the product to study user preferences or device behavior. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Permits Microsoft to configure device settings only."
            },
            "2": {
              "description": "Allows Microsoft to conduct full experimentation."
            }
          }
        },
        "scope": "device"
      },
      "AllowFontProviders": {
        "name": "AllowFontProviders",
        "description": "Boolean policy setting that determines whether Windows is allowed to download fonts and font catalog data from an online font provider. If you enable this setting, Windows periodically queries an online font provider to determine whether a new font catalog is available. Windows may also download font data if needed to format or render text. If you disable this policy setting, Windows does not connect to an online font provider and only enumerates locally-installed fonts. This MDM setting corresponds to the EnableFontProviders Group Policy setting. If both the Group Policy and the MDM settings are configured, the group policy setting takes precedence. If neither is configured, the behavior depends on a DisableFontProviders registry value. In server editions, this registry value is set to 1 by default, so the default behavior is false (disabled). In all other editions, the registry value is not set by default, so the default behavior is true (enabled). This setting is used by lower-level components for text display and fond handling and has not direct effect on web browsers, which may download web fonts used in web content. NoteReboot is required after setting the policy; alternatively you can stop and restart the FontCache service.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed. No traffic to fs.microsoft.com and only locally installed fonts are available."
            },
            "1": {
              "description": "Allowed. There may be network traffic to fs.microsoft.com and downloadable fonts are available to apps that support them."
            }
          }
        },
        "scope": "device"
      },
      "AllowLocation": {
        "name": "AllowLocation",
        "description": "Specifies whether to allow app access to the Location service. Most restricted value is 0. While the policy is set to 0 (Force Location Off) or 2 (Force Location On), any Location service call from an app would trigger the value set by this policy. When switching the policy back from 0 (Force Location Off) or 2 (Force Location On) to 1 (User Control), the app reverts to its original Location service setting. For example, an app's original Location setting is Off. The administrator then sets the AllowLocation policy to 2 (Force Location On. ) The Location service starts working for that app, overriding the original setting. Later, if the administrator switches the AllowLocation policy back to 1 (User Control), the app will revert to using its original setting of Off.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Force Location Off. All Location Privacy settings are toggled off and grayed out. Users cannot change the settings, and no apps are allowed access to the Location service, including Cortana and Search."
            },
            "1": {
              "description": "Location service is allowed. The user has control and can change Location Privacy settings on or off."
            },
            "2": {
              "description": "Force Location On. All Location Privacy settings are toggled on and grayed out. Users cannot change the settings and all consent permissions will be automatically suppressed."
            }
          }
        },
        "scope": "device"
      },
      "AllowMicrosoftManagedDesktopProcessing": {
        "name": "AllowMicrosoftManagedDesktopProcessing",
        "description": "This policy is deprecated and will only work on Windows 10 version 1809. Setting this policy will have no effect for other supported versions of Windows.                      This policy setting configures an Azure Active Directory joined device so that Microsoft is the processor of the Windows diagnostic data collected from the device, subject to the Product Terms at https://go.microsoft.com/fwlink/?linkid=2185086.                     For customers who enroll into the Microsoft Managed Desktop service, enabling this policy is required to allow Microsoft to process data for operational and analytic needs. See https://go.microsoft.com/fwlink/?linkid=2184944 for more information.                     hen these policies are configured, Windows diagnostic data collected from the device will be subject to Microsoft processor commitments.                     This setting has no effect on devices unless they are properly enrolled in Microsoft Managed Desktop. If you disable this policy setting, devices may not appear in Microsoft Managed Desktop.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "32": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowStorageCard": {
        "name": "AllowStorageCard",
        "description": "Controls whether the user is allowed to use the storage card for device storage. This setting prevents programmatic access to the storage card. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "SD card use is not allowed and USB drives are disabled. This setting does not prevent programmatic access to the storage card."
            },
            "1": {
              "description": "Allow a storage card."
            }
          }
        },
        "scope": "device"
      },
      "AllowTelemetry": {
        "name": "AllowTelemetry",
        "description": "Allow the device to send diagnostic and usage telemetry data, such as Watson. For more information about diagnostic data, including what is and what is not collected by Windows, see Configure Windows diagnostic data in your organization. The following tables describe the supported values:Windows 8. 1 Values:0 - Not allowed. 1 – Allowed, except for Secondary Data Requests. 2 (default) – Allowed. Windows 10 Values:0 – Security. Information that is required to help keep Windows more secure, including data about the Connected User Experience and Telemetry component settings, the Malicious Software Removal Tool, and Windows Defender. Note: This value is only applicable to Windows 10 Enterprise, Windows 10 Education, Windows 10 Mobile Enterprise, Windows 10 IoT Core (IoT Core), and Windows Server 2016. Using this setting on other devices is equivalent to setting the value of 1. 1 – Basic. Basic device info, including: quality-related data, app compatibility, app usage data, and data from the Security level. 2 – Enhanced. Additional insights, including: how Windows, Windows Server, System Center, and apps are used, how they perform, advanced reliability data, and data from both the Basic and the Security levels. 3 – Full. All data necessary to identify and help to fix problems, plus data from the Security, Basic, and Enhanced levels. ImportantIf you are using Windows 8. 1 MDM server and set a value of 0 using the legacy AllowTelemetry policy on a Windows 10 Mobile device, then the value is not respected and the telemetry level is silently set to level 1. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Security. Information that is required to help keep Windows more secure, including data about the Connected User Experience and Telemetry component settings, the Malicious Software Removal Tool, and Windows Defender.\r\nNote: This value is only applicable to Windows 10 Enterprise, Windows 10 Education, Windows 10 Mobile Enterprise, Windows 10 IoT Core (IoT Core), and Windows Server 2016. Using this setting on other devices is equivalent to setting the value of 1."
            },
            "1": {
              "description": "Basic. Basic device info, including: quality-related data, app compatibility, app usage data, and data from the Security level."
            },
            "3": {
              "description": "Full. All data necessary to identify and help to fix problems, plus data from the Security, Basic, and Enhanced levels."
            }
          }
        },
        "scope": "device"
      },
      "AllowUpdateComplianceProcessing": {
        "name": "AllowUpdateComplianceProcessing",
        "description": "This policy is deprecated and will only work on Windows 10 version 1809. Setting this policy will have no effect for other supported versions of Windows.                      This policy setting, in combination with the Allow Telemetry and Configure the Commercial ID, enables organizations to configure the device so that Microsoft is the processor of the Windows diagnostic data collected from the device, subject to the Product Terms at https://go.microsoft.com/fwlink/?linkid=2185086.                     To enable this behavior:                         1. Enable this policy setting                         2. Join an Azure Active Directory account to the device                         3. Set Allow Telemetry to  value 1 - Required, or higher                         4. Set the Configure the Commercial ID setting for your Update Compliance workspace                     When these policies are configured, Windows diagnostic data collected from the device will be subject to Microsoft processor commitments.                     If you disable or do not configure this policy setting, devices will not appear in Update Compliance.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "16": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "AllowUserToResetPhone": {
        "name": "AllowUserToResetPhone",
        "description": "Specifies whether to allow the user to factory reset the device by using control panel and hardware key combination. Most restricted value is 0. Tip, This policy is also applicable to Windows 10 and not exclusive to phone.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed to reset to factory default settings."
            }
          }
        },
        "scope": "device"
      },
      "AllowWUfBCloudProcessing": {
        "name": "AllowWUfBCloudProcessing",
        "description": "This policy is deprecated and will only work on Windows 10 version 1809. Setting this policy will have no effect for other supported versions of Windows.                      This policy setting configures an Azure Active Directory joined device so that Microsoft is the processor of the Windows diagnostic data collected from the device, subject to the Product Terms at https://go.microsoft.com/fwlink/?linkid=2185086.                     To enable this behavior:                         1. Enable this policy setting                         2. Join an Azure Active Directory account to the device                         3. Set Allow Telemetry to  value 1 - Required, or higher                     When these policies are configured, Windows diagnostic data collected from the device will be subject to Microsoft processor commitments.                     If you disable or do not configure this policy setting, devices enrolled to the Windows Update for Business deployment service will not be able to take advantage of some deployment service features.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "8": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "BootStartDriverInitialization": {
        "name": "BootStartDriverInitialization",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigureMicrosoft365UploadEndpoint": {
        "name": "ConfigureMicrosoft365UploadEndpoint",
        "description": "This policy sets the upload endpoint for this device’s diagnostic data as part of the Microsoft 365 Update Readiness program. If your organization is participating in the program and has been instructed to configure a custom upload endpoint, then use this setting to define that endpoint. The value for this setting will be provided by Microsoft as part of the onboarding process for the program. Value type is string.",
        "format": "string",
        "scope": "device"
      },
      "ConfigureTelemetryOptInChangeNotification": {
        "name": "ConfigureTelemetryOptInChangeNotification",
        "description": "",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enable telemetry change notifications."
            },
            "1": {
              "description": "Disable telemetry change notifications."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureTelemetryOptInSettingsUx": {
        "name": "ConfigureTelemetryOptInSettingsUx",
        "description": "",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enable Telemetry opt-in Settings."
            },
            "1": {
              "description": "Disable Telemetry opt-in Settings."
            }
          }
        },
        "scope": "device"
      },
      "DisableDeviceDelete": {
        "name": "DisableDeviceDelete",
        "description": "",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not disabled."
            },
            "1": {
              "description": "Disabled."
            }
          }
        },
        "scope": "device"
      },
      "DisableDiagnosticDataViewer": {
        "name": "DisableDiagnosticDataViewer",
        "description": "",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not disabled."
            },
            "1": {
              "description": "Disabled."
            }
          }
        },
        "scope": "device"
      },
      "DisableDirectXDatabaseUpdate": {
        "name": "DisableDirectXDatabaseUpdate",
        "description": "This group policy allows control over whether the DirectX Database Updater task will be run on the system.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not disabled."
            },
            "1": {
              "description": "Disabled."
            }
          }
        },
        "scope": "device"
      },
      "DisableEnterpriseAuthProxy": {
        "name": "DisableEnterpriseAuthProxy",
        "description": "This policy setting blocks the Connected User Experience and Telemetry service from automatically using an authenticated proxy to send data back to Microsoft on Windows 10. If you disable or do not configure this policy setting, the Connected User Experience and Telemetry service will automatically use an authenticated proxy to send data back to Microsoft. Enabling this policy will block the Connected User Experience and Telemetry service from automatically using an authenticated proxy.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "DisableOneDriveFileSync": {
        "name": "DisableOneDriveFileSync",
        "description": "This policy setting lets you prevent apps and features from working with files on OneDrive. If you enable this policy setting: users can’t access OneDrive from the OneDrive app and file picker; Microsoft Store apps can’t access OneDrive using the WinRT API; OneDrive doesn’t appear in the navigation pane in File Explorer; OneDrive files aren’t kept in sync with the cloud; Users can’t automatically upload photos and videos from the camera roll folder. If you disable or do not configure this policy setting, apps and features can work with OneDrive file storage.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Sync enabled."
            },
            "1": {
              "description": "Sync disabled."
            }
          }
        },
        "scope": "device"
      },
      "DisableOneSettingsDownloads": {
        "name": "DisableOneSettingsDownloads",
        "description": "This policy setting controls whether Windows attempts to connect with the OneSettings service.                             If you enable this policy, Windows will not attempt to connect with the OneSettings Service.                             If you disable or don't configure this policy setting, Windows will periodically attempt to connect with the OneSettings service to download configuration settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not disabled."
            },
            "1": {
              "description": "Disabled."
            }
          }
        },
        "scope": "device"
      },
      "DisableSystemRestore": {
        "name": "DisableSystemRestore",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableOneSettingsAuditing": {
        "name": "EnableOneSettingsAuditing",
        "description": "This policy setting controls whether Windows records attempts to connect with the OneSettings service to the EventLog.                             If you enable this policy, Windows will record attempts to connect with the OneSettings service to the Microsoft\\Windows\\Privacy-Auditing\\Operational EventLog channel.                             If you disable or don't configure this policy setting, Windows will not record attempts to connect with the OneSettings service to the EventLog.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "FeedbackHubAlwaysSaveDiagnosticsLocally": {
        "name": "FeedbackHubAlwaysSaveDiagnosticsLocally",
        "description": "Diagnostic files created when a feedback is filed in the Feedback Hub app will always be saved locally. If this policy is not present or set to false, users will be presented with the option to save locally. The default is to not save locally.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "False. The Feedback Hub will not always save a local copy of diagnostics that may be created when a feedback is submitted. The user will have the option to do so."
            },
            "1": {
              "description": "True. The Feedback Hub should always save a local copy of diagnostics that may be created when a feedback is submitted."
            }
          }
        },
        "scope": "device"
      },
      "HideUnsupportedHardwareNotifications": {
        "name": "HideUnsupportedHardwareNotifications",
        "description": "This policy controls messages which are shown when Windows is running on a device that does not meet the minimum system requirements for this OS version.                     If you enable this policy setting, these messages will never appear on desktop or in the Settings app.                     If you disable or do not configure this policy setting, these messages will appear on desktop and in the Settings app when Windows is running on a device that does not meet the minimum system requirements for this OS version.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "LimitDiagnosticLogCollection": {
        "name": "LimitDiagnosticLogCollection",
        "description": "This policy setting specifies whether diagnostic log data can be collected when more information is needed to troubleshoot a problem. The diagnostic data logs are collected, only if we have permission to collect optional diagnostic data, and only if the device meets the criteria for additional data collection.                     If you disable or do not configure this policy setting, we may occasionally collect advanced diagnostic data if the user has opted to send optional diagnostic data.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "LimitDumpCollection": {
        "name": "LimitDumpCollection",
        "description": "This policy setting limits the type of dumps that can be collected when more information is needed to troubleshoot a problem. These dumps are not sent unless we have permission to collect optional diagnostic data.                             By enabling this policy setting, Windows Error Reporting is limited to sending kernel mini dumps and user mode triage dumps only.                             If you disable or do not configure this policy setting, we may occasionally collect full or heap dumps if the user has opted to send optional diagnostic data.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "LimitEnhancedDiagnosticDataWindowsAnalytics": {
        "name": "LimitEnhancedDiagnosticDataWindowsAnalytics",
        "description": "This policy setting, in combination with the Allow Telemetry policy setting, enables organizations to send Microsoft a specific set of diagnostic data for IT insights via Windows Analytics services. By configuring this setting, you're not stopping people from changing their Telemetry Settings; however, you are stopping them from choosing a higher level than you've set for the organization. To enable this behavior, you must complete two steps: 1. Enable this policy setting 2. Set Allow Telemetry to level 2 (Enhanced).If you configure these policy settings together, you'll send the Basic level of diagnostic data plus any additional events that are required for Windows Analytics, to Microsoft. The additional events are documented here: https://go.Microsoft.com/fwlink/?linked=847594. If you enable Enhanced diagnostic data in the Allow Telemetry policy setting, but you don't configure this policy setting, you'll send the required events for Windows Analytics, plus any additional Enhanced level telemetry data to Microsoft. This setting has no effect on computers configured to send Full, Basic, or Security level diagnostic data to Microsoft. If you disable or don't configure this policy setting, then the level of diagnostic data sent to Microsoft is determined by the Allow Telemetry policy setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "TelemetryProxy": {
        "name": "TelemetryProxy",
        "description": "Allows you to specify the fully qualified domain name (FQDN) or IP address of a proxy server to forward Connected User Experiences and Telemetry requests. The format for this setting is <server>:<port>. The connection is made over a Secure Sockets Layer (SSL) connection. If the named proxy fails, or if there is no proxy specified when this policy is enabled, the Connected User Experiences and Telemetry data will not be transmitted and will remain on the local device. If you disable or do not configure this policy setting, Connected User Experiences and Telemetry will go to Microsoft using the default proxy configuration.",
        "format": "string",
        "scope": "device"
      },
      "TurnOffFileHistory": {
        "name": "TurnOffFileHistory",
        "description": "This policy setting allows you to turn off File History.  If you enable this policy setting, File History cannot be activated to create regular, automatic backups.  If you disable or do not configure this policy setting, File History can be activated to create regular, automatic backups.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow file history."
            },
            "1": {
              "description": "Turn off file history."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/SystemServices": {
    "name": "SystemServices",
    "policies": {
      "ConfigureHomeGroupListenerServiceStartupMode": {
        "name": "ConfigureHomeGroupListenerServiceStartupMode",
        "description": "This setting determines whether the service's start type is Automatic(2), Manual(3), Disabled(4). Default: Manual.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "ConfigureHomeGroupProviderServiceStartupMode": {
        "name": "ConfigureHomeGroupProviderServiceStartupMode",
        "description": "This setting determines whether the service's start type is Automatic(2), Manual(3), Disabled(4). Default: Manual.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "ConfigureXboxAccessoryManagementServiceStartupMode": {
        "name": "ConfigureXboxAccessoryManagementServiceStartupMode",
        "description": "This setting determines whether the service's start type is Automatic(2), Manual(3), Disabled(4). Default: Manual.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "2": {
              "description": "Automatic"
            },
            "3": {
              "description": "Manual"
            },
            "4": {
              "description": "Disabled"
            }
          }
        },
        "scope": "device"
      },
      "ConfigureXboxLiveAuthManagerServiceStartupMode": {
        "name": "ConfigureXboxLiveAuthManagerServiceStartupMode",
        "description": "This setting determines whether the service's start type is Automatic(2), Manual(3), Disabled(4). Default: Manual.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "2": {
              "description": "Automatic"
            },
            "3": {
              "description": "Manual"
            },
            "4": {
              "description": "Disabled"
            }
          }
        },
        "scope": "device"
      },
      "ConfigureXboxLiveGameSaveServiceStartupMode": {
        "name": "ConfigureXboxLiveGameSaveServiceStartupMode",
        "description": "This setting determines whether the service's start type is Automatic(2), Manual(3), Disabled(4). Default: Manual.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "2": {
              "description": "Automatic"
            },
            "3": {
              "description": "Manual"
            },
            "4": {
              "description": "Disabled"
            }
          }
        },
        "scope": "device"
      },
      "ConfigureXboxLiveNetworkingServiceStartupMode": {
        "name": "ConfigureXboxLiveNetworkingServiceStartupMode",
        "description": "This setting determines whether the service's start type is Automatic(2), Manual(3), Disabled(4). Default: Manual.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "2": {
              "description": "Automatic"
            },
            "3": {
              "description": "Manual"
            },
            "4": {
              "description": "Disabled"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/TaskManager": {
    "name": "TaskManager",
    "policies": {
      "AllowEndTask": {
        "name": "AllowEndTask",
        "description": "This setting determines whether non-administrators can use Task Manager to end tasks - enabled (1) or disabled (0). Default: enabled",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled. EndTask functionality is blocked in TaskManager."
            },
            "1": {
              "description": "Enabled. Users can perform EndTask in TaskManager."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/TaskScheduler": {
    "name": "TaskScheduler",
    "policies": {
      "EnableXboxGameSaveTask": {
        "name": "EnableXboxGameSaveTask",
        "description": "This setting determines whether the specific task is enabled (1) or disabled (0). Default: Enabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/TenantDefinedTelemetry": {
    "name": "TenantDefinedTelemetry",
    "policies": {
      "CustomTelemetryId": {
        "name": "CustomTelemetryId",
        "description": "This policy is used to let mission control what type of Edition we are currently in.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Base"
            },
            "1": {
              "description": "Education"
            },
            "2": {
              "description": "Commercial"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/TenantRestrictions": {
    "name": "TenantRestrictions",
    "policies": {
      "ConfigureTenantRestrictions": {
        "name": "ConfigureTenantRestrictions",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/TextInput": {
    "name": "TextInput",
    "policies": {
      "AllowHardwareKeyboardTextSuggestions": {
        "name": "AllowHardwareKeyboardTextSuggestions",
        "description": "Placeholder only. Do not use in production environment.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowIMELogging": {
        "name": "AllowIMELogging",
        "description": "Note The policy is only enforced in Windows 10 for desktop. Allows the user to turn on and off the logging for incorrect conversion and saving auto-tuning result to a file and history-based predictive input. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowIMENetworkAccess": {
        "name": "AllowIMENetworkAccess",
        "description": "Allows the user to turn on Open Extended Dictionary, Internet search integration, or cloud candidate features to provide input suggestions that do not exist in the device's local dictionary. Most restricted value is 0. In Windows 10, version 1803, we introduced new suggestion services in Japanese IME in addition to cloud suggestion. When AllowIMENetworkAccess is set to 1, all suggestion services are available as predictive input.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowInputPanel": {
        "name": "AllowInputPanel",
        "description": "Note The policy is only enforced in Windows 10 for desktop. Allows the IT admin to disable the touch/handwriting keyboard on Windows. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowJapaneseIMESurrogatePairCharacters": {
        "name": "AllowJapaneseIMESurrogatePairCharacters",
        "description": "Note The policy is only enforced in Windows 10 for desktop. Allows the Japanese IME surrogate pair characters. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowJapaneseIVSCharacters": {
        "name": "AllowJapaneseIVSCharacters",
        "description": "Note The policy is only enforced in Windows 10 for desktop. Allows Japanese Ideographic Variation Sequence (IVS) characters. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowJapaneseNonPublishingStandardGlyph": {
        "name": "AllowJapaneseNonPublishingStandardGlyph",
        "description": "Note The policy is only enforced in Windows 10 for desktop. Allows the Japanese non-publishing standard glyph. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowJapaneseUserDictionary": {
        "name": "AllowJapaneseUserDictionary",
        "description": "Note The policy is only enforced in Windows 10 for desktop. Allows the Japanese user dictionary. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowKeyboardTextSuggestions": {
        "name": "AllowKeyboardTextSuggestions",
        "description": "Note The policy is only enforced in Windows 10 for desktop.  Specifies whether text prediction is enabled or disabled for the on-screen keyboard, touch keyboard, and handwriting recognition tool. When this policy is set to disabled, text prediction is disabled. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "AllowLanguageFeaturesUninstall": {
        "name": "AllowLanguageFeaturesUninstall",
        "description": "Note The policy is only enforced in Windows 10 for desktop. Allows the uninstall of language features, such as spell checkers, on a device. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowLinguisticDataCollection": {
        "name": "AllowLinguisticDataCollection",
        "description": "This policy setting controls the ability to send inking and typing data to Microsoft to improve the language recognition and suggestion capabilities of apps and services running on Windows.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowTextInputSuggestionUpdate": {
        "name": "AllowTextInputSuggestionUpdate",
        "description": "Allows the user to turn on or off the automatic downloading of newer versions of the Expressive Input UI. When downloading is not allowed the Expressive Input panel will always display the initial UI included with the base Windows image. Most restricted value is 0. The following list shows the supported values: 0 - Not allowed. 1 (default) - Allowed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureJapaneseIMEVersion": {
        "name": "ConfigureJapaneseIMEVersion",
        "description": "This policy allows the IT admin to configure the Microsoft Japanese IME version in the desktop. The following list shows the supported values: 0 (default) – The new Microsoft Japanese IME is on by default. Allow to control Microsoft Japanese IME version to use. 1 - The previous version of Microsoft Japanese IME is always selected.  Not allowed to control Microsoft Japanese IME version to use. 2 - The new Microsoft Japanese IME is always selected.  Not allowed to control Microsoft Japanese IME version to use.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allows you to configure which Microsoft Japanese IME version to use. The new Microsoft Japanese IME version is configured by default."
            },
            "1": {
              "description": "Does not allow you to configure which Microsoft Japanese IME version to use. The previous version of Microsoft Japanese IME is always selected."
            },
            "2": {
              "description": "Does not allow you to configure which Microsoft Japanese IME version to use. The new Microsoft Japanese IME version is always selected."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureKoreanIMEVersion": {
        "name": "ConfigureKoreanIMEVersion",
        "description": "This policy allows the IT admin to configure the Microsoft Korean IME version in the desktop. The following list shows the supported values: 0 (default) – The new Microsoft Korean IME is on by default. Allow to control Microsoft Korean IME version to use. 1 - The previous version of Microsoft Korean IME is always selected.  Not allowed to control Microsoft Korean IME version to use. 2 - The new Microsoft Korean IME is always selected.  Not allowed to control Microsoft Korean IME version to use.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "ConfigureSimplifiedChineseIMEVersion": {
        "name": "ConfigureSimplifiedChineseIMEVersion",
        "description": "This policy allows the IT admin to configure the Microsoft Simplified Chinese IME version in the desktop. The following list shows the supported values: 0 (default) – The new Microsoft Simplified Chinese IME is on by default. Allow to control Microsoft Simplified Chinese IME version to use. 1 - The previous version of Microsoft Simplified Chinese IME is always selected.  Not allowed to control Microsoft Simplified Chinese IME version to use. 2 - The new Microsoft Simplified Chinese IME is always selected.  Not allowed to control Microsoft Simplified Chinese IME version to use.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allows you to configure which Microsoft Simplified Chinese IME version to use. The new Microsoft Simplified Chinese IME version is configured by default."
            },
            "1": {
              "description": "Does not allow you to configure which Microsoft Simplified Chinese IME version to use. The previous version of Microsoft Simplified Chinese IME is always selected."
            },
            "2": {
              "description": "Does not allow you to configure which Microsoft Simplified Chinese IME version to use. The new Microsoft Simplified Chinese IME version is always selected."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureTraditionalChineseIMEVersion": {
        "name": "ConfigureTraditionalChineseIMEVersion",
        "description": "This policy allows the IT admin to configure the Microsoft Traditional Chinese IME version in the desktop. The following list shows the supported values: 0 (default) – The new Microsoft Traditional Chinese IME is on by default. Allow to control Microsoft Traditional Chinese IME version to use. 1 - The previous version of Microsoft Traditional Chinese IME is always selected.  Not allowed to control Microsoft Traditional Chinese IME version to use. 2 - The new Microsoft Traditional Chinese IME is always selected.  Not allowed to control Microsoft Traditional Chinese IME version to use.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allows you to configure which Microsoft Traditional Chinese IME version to use. The new Microsoft Traditional Chinese IME version is configured by default."
            },
            "1": {
              "description": "Does not allow you to configure which Microsoft Traditional Chinese IME version to use. The previous version of Microsoft Traditional Chinese IME is always selected."
            },
            "2": {
              "description": "Does not allow you to configure which Microsoft Traditional Chinese IME version to use. The new Microsoft Traditional Chinese IME version is always selected."
            }
          }
        },
        "scope": "device"
      },
      "EnableTouchKeyboardAutoInvokeInDesktopMode": {
        "name": "EnableTouchKeyboardAutoInvokeInDesktopMode",
        "description": "This policy allows the IT admin to control whether the touch keyboard should show up on tapping an edit control. By default, when you tap a textbox, the touch keyboard automatically shows up when there's no keyboard attached. When this policy is enabled, the touch keyboard can be shown or suppressed regardless of the hardware keyboard availability. This policy corresponds to Show the touch keyboard setting in the Settings app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Never."
            },
            "1": {
              "description": "When no keyboard attached."
            },
            "2": {
              "description": "Always."
            }
          }
        },
        "scope": "device"
      },
      "ExcludeJapaneseIMEExceptJIS0208": {
        "name": "ExcludeJapaneseIMEExceptJIS0208",
        "description": "Note The policy is only enforced in Windows 10 for desktop. Allows the users to restrict character code range of conversion by setting the character filter.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "No characters are filtered."
            },
            "1": {
              "description": "All characters except JIS0208 are filtered."
            }
          }
        },
        "scope": "device"
      },
      "ExcludeJapaneseIMEExceptJIS0208andEUDC": {
        "name": "ExcludeJapaneseIMEExceptJIS0208andEUDC",
        "description": "Note The policy is only enforced in Windows 10 for desktop. Allows the users to restrict character code range of conversion by setting the character filter.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "No characters are filtered."
            },
            "1": {
              "description": "All characters except JIS0208 and EUDC are filtered."
            }
          }
        },
        "scope": "device"
      },
      "ExcludeJapaneseIMEExceptShiftJIS": {
        "name": "ExcludeJapaneseIMEExceptShiftJIS",
        "description": "Note The policy is only enforced in Windows 10 for desktop. Allows the users to restrict character code range of conversion by setting the character filter.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "No characters are filtered."
            },
            "1": {
              "description": "All characters except ShiftJIS are filtered."
            }
          }
        },
        "scope": "device"
      },
      "ForceTouchKeyboardDockedState": {
        "name": "ForceTouchKeyboardDockedState",
        "description": "Specifies the touch keyboard is always docked. When this policy is set to enabled, the touch keyboard is always docked.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The OS determines when it's most appropriate to be available."
            },
            "1": {
              "description": "Touch keyboard is always docked."
            },
            "2": {
              "description": "Touch keyboard docking can be changed."
            }
          }
        },
        "scope": "device"
      },
      "TouchKeyboardDictationButtonAvailability": {
        "name": "TouchKeyboardDictationButtonAvailability",
        "description": "Specifies whether the dictation input button is enabled or disabled for the touch keyboard. When this policy is set to disabled, the dictation input button on touch keyboard is disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The OS determines when it's most appropriate to be available."
            },
            "1": {
              "description": "Dictation button on the keyboard is always available."
            },
            "2": {
              "description": "Dictation button on the keyboard is always disabled."
            }
          }
        },
        "scope": "device"
      },
      "TouchKeyboardEmojiButtonAvailability": {
        "name": "TouchKeyboardEmojiButtonAvailability",
        "description": "Specifies whether the emoji button is enabled or disabled for the touch keyboard. When this policy is set to disabled, the emoji button on touch keyboard is disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The OS determines when it's most appropriate to be available."
            },
            "1": {
              "description": "Emoji button on keyboard is always available."
            },
            "2": {
              "description": "Emoji button on keyboard is always disabled."
            }
          }
        },
        "scope": "device"
      },
      "TouchKeyboardFullModeAvailability": {
        "name": "TouchKeyboardFullModeAvailability",
        "description": "Specifies whether the full keyboard mode is enabled or disabled for the touch keyboard. When this policy is set to disabled, the full keyboard mode for touch keyboard is disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The OS determines when it's most appropriate to be available."
            },
            "1": {
              "description": "Full keyboard is always available."
            },
            "2": {
              "description": "Full keyboard is always disabled."
            }
          }
        },
        "scope": "device"
      },
      "TouchKeyboardHandwritingModeAvailability": {
        "name": "TouchKeyboardHandwritingModeAvailability",
        "description": "Specifies whether the handwriting input panel is enabled or disabled. When this policy is set to disabled, the handwriting input panel is disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The OS determines when it's most appropriate to be available."
            },
            "1": {
              "description": "Handwriting input panel is always available."
            },
            "2": {
              "description": "Handwriting input panel is always disabled."
            }
          }
        },
        "scope": "device"
      },
      "TouchKeyboardNarrowModeAvailability": {
        "name": "TouchKeyboardNarrowModeAvailability",
        "description": "Specifies whether the narrow keyboard mode is enabled or disabled for the touch keyboard. When this policy is set to disabled, the narrow keyboard mode for touch keyboard is disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The OS determines when it's most appropriate to be available."
            },
            "1": {
              "description": "Narrow keyboard is always available."
            },
            "2": {
              "description": "Narrow keyboard is always disabled."
            }
          }
        },
        "scope": "device"
      },
      "TouchKeyboardSplitModeAvailability": {
        "name": "TouchKeyboardSplitModeAvailability",
        "description": "Specifies whether the split keyboard mode is enabled or disabled for the touch keyboard. When this policy is set to disabled, the split keyboard mode for touch keyboard is disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The OS determines when it's most appropriate to be available."
            },
            "1": {
              "description": "Split keyboard is always available."
            },
            "2": {
              "description": "Split keyboard is always disabled."
            }
          }
        },
        "scope": "device"
      },
      "TouchKeyboardWideModeAvailability": {
        "name": "TouchKeyboardWideModeAvailability",
        "description": "Specifies whether the wide keyboard mode is enabled or disabled for the touch keyboard. When this policy is set to disabled, the wide keyboard mode for touch keyboard is disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The OS determines when it's most appropriate to be available."
            },
            "1": {
              "description": "Wide keyboard is always available."
            },
            "2": {
              "description": "Wide keyboard is always disabled."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/TimeLanguageSettings": {
    "name": "TimeLanguageSettings",
    "policies": {
      "AllowSet24HourClock": {
        "name": "AllowSet24HourClock",
        "description": "This policy is deprecated.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "BlockCleanupOfUnusedPreinstalledLangPacks": {
        "name": "BlockCleanupOfUnusedPreinstalledLangPacks",
        "description": "This policy setting controls whether the LPRemove or Language Packs Uninstaller task will run to clean up language packs installed on a machine but are not used by any users on that machine.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not blocked."
            },
            "1": {
              "description": "Blocked."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureTimeZone": {
        "name": "ConfigureTimeZone",
        "description": "Specifies the time zone to be applied to the device.  This is the standard Windows name for the target time zone.",
        "format": "string",
        "scope": "device"
      },
      "MachineUILanguageOverwrite": {
        "name": "MachineUILanguageOverwrite",
        "description": "This policy setting controls which UI language is used for computers with more than one UI language installed. If you enable this setting, the UI language of Windows menus and dialogs for systems with more than one language is restricted to the machine language.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "RestrictLanguagePacksAndFeaturesInstall": {
        "name": "RestrictLanguagePacksAndFeaturesInstall",
        "description": "This policy setting restricts the install of language packs and language features, such as spell checkers, on a device.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not restricted."
            },
            "1": {
              "description": "Restricted."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Troubleshooting": {
    "name": "Troubleshooting",
    "policies": {
      "AllowRecommendations": {
        "name": "AllowRecommendations",
        "description": "This policy setting allows IT admins to configure how troubleshooting for known problems can be applied on the devices in their domains or IT environments. Supported values: 0 = Off - Do not allow users, system features, or Microsoft to apply troubleshooting. 1 = Critical - Automatically apply troubleshooting for critical problems detected by system features and Microsoft. Do not notify users when troubleshooting has solved a problem. 2 = Prompt - Automatically apply troubleshooting for critical problems detected by system features and Microsoft. Prompt users when troubleshooting for other problems is available and allow the user to choose to apply or ignore. 3 = Notify - Automatically apply troubleshooting for critical and other problems detected by system features and Microsoft. Notify users when troubleshooting has solved a problem. 4 = Silent - Automatically apply troubleshooting for critical and other problems detected by system features and Microsoft. Do not notify users when troubleshooting has solved a problem. 5 = Configurable - Allow the user to choose their own troubleshooting settings.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Off - Do not allow users, system features, or Microsoft to apply troubleshooting."
            },
            "1": {
              "description": "Critical - Automatically apply troubleshooting for critical problems detected by system features and Microsoft. Do not notify users when troubleshooting has solved a problem."
            },
            "2": {
              "description": "Prompt - Automatically apply troubleshooting for critical problems detected by system features and Microsoft. Prompt users when troubleshooting for other problems is available and allow the user to choose to apply or ignore."
            },
            "3": {
              "description": "Notify - Automatically apply troubleshooting for critical and other problems detected by system features and Microsoft. Notify users when troubleshooting has solved a problem."
            },
            "4": {
              "description": "Silent - Automatically apply troubleshooting for critical and other problems detected by system features and Microsoft. Do not notify users when troubleshooting has solved a problem."
            },
            "5": {
              "description": "Configurable - Allow the user to choose their own troubleshooting settings."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Update": {
    "name": "Update",
    "policies": {
      "ActiveHoursEnd": {
        "name": "ActiveHoursEnd",
        "description": "Allows the IT admin (when used with Update/ActiveHoursStart) to manage a range of active hours where update reboots are not scheduled. This value sets the end time. There is a 12 hour maximum from start time. Note The default maximum difference from start time has been increased to 18 in Windows 10, version 1703. In this version of Windows 10, the maximum range of active hours can now be configured. See Update/ActiveHoursMaxRange below for more information. Supported values are 0-23, where 0 is 12 AM, 1 is 1 AM, etc. The default is 17 (5 PM).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 2
        },
        "scope": "device"
      },
      "ActiveHoursMaxRange": {
        "name": "ActiveHoursMaxRange",
        "description": "Allows the IT admin to specify the max active hours range. This value sets max number of active hours from start time. Supported values are 8-18. The default value is 18 (hours).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 8,
          "max": 1
        },
        "scope": "device"
      },
      "ActiveHoursStart": {
        "name": "ActiveHoursStart",
        "description": "Allows the IT admin (when used with Update/ActiveHoursEnd) to manage a range of hours where update reboots are not scheduled. This value sets the start time. There is a 12 hour maximum from end time. Note The default maximum difference from end time has been increased to 18 in Windows 10, version 1703. In this version of Windows 10, the maximum range of active hours can now be configured. See Update/ActiveHoursMaxRange above for more information. Supported values are 0-23, where 0 is 12 AM, 1 is 1 AM, etc. The default value is 8 (8 AM).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 2
        },
        "scope": "device"
      },
      "AllowAutoUpdate": {
        "name": "AllowAutoUpdate",
        "description": "Enables the IT admin to manage automatic update behavior to scan, download, and install updates. Supported operations are Get and Replace. Important. This option should be used only for systems under regulatory compliance, as you will not get security updates as well. If the policy is not configured, end-users get the default behavior (Auto install and restart).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Notify the user before downloading the update. This policy is used by the enterprise who wants to enable the end-users to manage data usage. With this option users are notified when there are updates that apply to the device and are ready for download. Users can download and install the updates from the Windows Update control panel."
            },
            "1": {
              "description": "Auto install the update and then notify the user to schedule a device restart. Updates are downloaded automatically on non-metered networks and installed during \"Automatic Maintenance\" when the device is not in use and is not running on battery power. If automatic maintenance is unable to install updates for two days, Windows Update will install updates immediately. If the installation requires a restart, the end-user is prompted to schedule the restart time. The end-user has up to seven days to schedule the restart and after that, a restart of the device is forced. Enabling the end-user to control the start time reduces the risk of accidental data loss caused by applications that do not shutdown properly on restart."
            },
            "2": {
              "description": "Auto install and restart. Updates are downloaded automatically on non-metered networks and installed during \"Automatic Maintenance\" when the device is not in use and is not running on battery power. If automatic maintenance is unable to install updates for two days, Windows Update will install updates right away. If a restart is required, then the device is automatically restarted when the device is not actively being used. This is the default behavior for unmanaged devices. Devices are updated quickly, but it increases the risk of accidental data loss caused by an application that does not shutdown properly on restart."
            },
            "3": {
              "description": "Auto install and restart at a specified time. The IT specifies the installation day and time. If no day and time are specified, the default is 3 AM daily. Automatic installation happens at this time and device restart happens after a 15-minute countdown. If the user is logged in when Windows is ready to restart, the user can interrupt the 15-minute countdown to delay the restart."
            },
            "4": {
              "description": "Auto install and restart without end-user control. Updates are downloaded automatically on non-metered networks and installed during \"Automatic Maintenance\" when the device is not in use and is not running on battery power. If automatic maintenance is unable to install updates for two days, Windows Update will install updates right away. If a restart is required, then the device is automatically restarted when the device is not actively being used. This setting option also sets the end-user control panel to read-only."
            },
            "5": {
              "description": "Turn off automatic updates."
            }
          }
        },
        "scope": "device"
      },
      "AllowAutoWindowsUpdateDownloadOverMeteredNetwork": {
        "name": "AllowAutoWindowsUpdateDownloadOverMeteredNetwork",
        "description": "Option to download updates automatically over metered connections (off by default). Value type is integer. A significant number of devices primarily use cellular data and do not have Wi-Fi access, which leads to a lower number of devices getting updates. Since a large number of devices have large data plans or unlimited data, this policy can unblock devices from getting updates. This policy is accessible through the Update setting in the user interface or Group Policy.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed"
            },
            "1": {
              "description": "Allowed"
            }
          }
        },
        "scope": "device"
      },
      "AllowMUUpdateService": {
        "name": "AllowMUUpdateService",
        "description": "Allows the IT admin to manage whether to scan for app updates from Microsoft Update.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed or not configured."
            },
            "1": {
              "description": "Allowed. Accepts updates received through Microsoft Update."
            }
          }
        },
        "scope": "device"
      },
      "AllowNonMicrosoftSignedUpdate": {
        "name": "AllowNonMicrosoftSignedUpdate",
        "description": "Allows the IT admin to manage whether Automatic Updates accepts updates signed by entities other than Microsoft when the update is found at the UpdateServiceUrl location. This policy supports using WSUS for 3rd party software and patch distribution. Supported operations are Get and Replace. This policy is specific to desktop and local publishing via WSUS for 3rd party updates (binaries and updates not hosted on Microsoft Update) and allows IT to manage whether Automatic Updates accepts updates signed by entities other than Microsoft when the update is found on an intranet Microsoft update service location.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed or not configured. Updates from an intranet Microsoft update service location must be signed by Microsoft."
            },
            "1": {
              "description": "Allowed. Accepts updates received through an intranet Microsoft update service location, if they are signed by a certificate found in the 'Trusted Publishers' certificate store of the local computer."
            }
          }
        },
        "scope": "device"
      },
      "AllowOptionalContent": {
        "name": "AllowOptionalContent",
        "description": "This policy enables devices to get optional updates (including gradual feature rollouts (CFRs) - learn more by visiting aka.ms/AllowOptionalContent)",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Don't receive optional updates"
            },
            "1": {
              "description": "Automatically receive optional updates (including CFRs)"
            },
            "2": {
              "description": "Automatically receive optional updates"
            },
            "3": {
              "description": "Users can select which optional updates to receive"
            }
          }
        },
        "scope": "device"
      },
      "AllowTemporaryEnterpriseFeatureControl": {
        "name": "AllowTemporaryEnterpriseFeatureControl",
        "description": "Enable features that are off until the next feature update for managed devices",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed"
            },
            "1": {
              "description": "Allowed"
            }
          }
        },
        "scope": "device"
      },
      "AllowUpdateService": {
        "name": "AllowUpdateService",
        "description": "Specifies whether the device could use Microsoft Update, Windows Server Update Services (WSUS), or Microsoft Store. Even when Windows Update is configured to receive updates from an intranet update service, it will periodically retrieve information from the public Windows Update service to enable future connections to Windows Update, and other services like Microsoft Update or the Microsoft Store. Enabling this policy will disable that functionality, and may cause connection to public services such as the Microsoft Store to stop working. Note This policy applies only when the desktop or device is configured to connect to an intranet update service using the Specify intranet Microsoft update service location policy.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AutoRestartDeadlinePeriodInDays": {
        "name": "AutoRestartDeadlinePeriodInDays",
        "description": "For Quality Updates, this policy specifies the deadline in days before automatically executing a scheduled restart outside of active hours. The deadline can be set between 2 and 30 days from the time the restart is scheduled. The system will reboot on or after the specified deadline. The reboot is prioritized over any configured Active Hours and any existing system and user busy checks. Value type is integer. Default is 7 days. Supported values range: 2-30. Note that the PC must restart for certain updates to take effect. If you enable this policy, a restart will automatically occur the specified number of days after the restart was scheduled. If you disable or do not configure this policy, the PC will restart according to the default schedule. If any of the following two policies are enabled, this policy has no effect:No auto-restart with logged on users for scheduled automatic updates installations. Always automatically restart at scheduled time.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 2,
          "max": 3
        },
        "scope": "device"
      },
      "AutoRestartDeadlinePeriodInDaysForFeatureUpdates": {
        "name": "AutoRestartDeadlinePeriodInDaysForFeatureUpdates",
        "description": "For Feature Updates, this policy specifies the deadline in days before automatically executing a scheduled restart outside of active hours. The deadline can be set between 2 and 30 days from the time the restart is scheduled. The system will reboot on or after the specified deadline. The reboot is prioritized over any configured Active Hours and any existing system and user busy checks. Value type is integer. Default is 7 days. Supported values range: 2-30. Note that the PC must restart for certain updates to take effect. If you enable this policy, a restart will automatically occur the specified number of days after the restart was scheduled. If you disable or do not configure this policy, the PC will restart according to the default schedule. If any of the following two policies are enabled, this policy has no effect:No auto-restart with logged on users for scheduled automatic updates installations. Always automatically restart at scheduled time.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 2,
          "max": 3
        },
        "scope": "device"
      },
      "AutoRestartNotificationSchedule": {
        "name": "AutoRestartNotificationSchedule",
        "description": "Allows the IT Admin to specify the period for auto-restart reminder notifications. The default value is 15 (minutes).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "120": {
              "description": "120 Minutes"
            },
            "15": {
              "description": "15 Minutes"
            },
            "240": {
              "description": "240 Minutes"
            },
            "30": {
              "description": "30 Minutes"
            },
            "60": {
              "description": "60 Minutes"
            }
          }
        },
        "scope": "device"
      },
      "AutoRestartRequiredNotificationDismissal": {
        "name": "AutoRestartRequiredNotificationDismissal",
        "description": "Allows the IT Admin to specify the method by which the auto-restart required notification is dismissed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "1": {
              "description": "Auto Dismissal."
            },
            "2": {
              "description": "User Dismissal."
            }
          }
        },
        "scope": "device"
      },
      "AutomaticMaintenanceWakeUp": {
        "name": "AutomaticMaintenanceWakeUp",
        "description": "This policy setting allows you to configure Automatic Maintenance wake up policy.  The maintenance wakeup policy specifies if Automatic Maintenance should make a wake request to the OS for the daily scheduled maintenance. Note, that if the OS power wake policy is explicitly disabled, then this setting has no effect.  If you enable this policy setting, Automatic Maintenance will attempt to set OS wake policy and make a wake request for the daily scheduled time, if required.  If you disable or do not configure this policy setting, the wake setting as specified in Security and Maintenance/Automatic Maintenance Control Panel will apply.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "BranchReadinessLevel": {
        "name": "BranchReadinessLevel",
        "description": "Allows the IT admin to set which branch a device receives their updates from. As of 1903, the branch readiness levels of Semi-Annual Channel (Targeted) and Semi-Annual Channel have been combined into one Semi-Annual Channel set with a value of 16. For devices on 1903 and later releases, the value of 32 is not a supported value.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "128": {
              "description": "{0x80} - Canary Channel."
            },
            "16": {
              "description": "{0x10} - Semi-annual Channel (Targeted). Device gets all applicable feature updates from Semi-annual Channel (Targeted)."
            },
            "2": {
              "description": "{0x2}  - Windows Insider build - Fast (added in Windows 10, version 1709)"
            },
            "32": {
              "description": "2 {0x20} - Semi-annual Channel. Device gets feature updates from Semi-annual Channel. (*Only applicable to releases prior to 1903, for all releases 1903 and after the Semi-annual Channel and Semi-annual Channel (Targeted) into a single Semi-annual Channel with a value of 16)"
            },
            "4": {
              "description": "{0x4}  - Windows Insider build - Slow (added in Windows 10, version 1709)"
            },
            "64": {
              "description": "{0x40} - Release Preview of Quality Updates Only."
            },
            "8": {
              "description": "{0x8}  - Release Windows Insider build (added in Windows 10, version 1709)"
            }
          }
        },
        "scope": "device"
      },
      "ConfigureDeadlineForFeatureUpdates": {
        "name": "ConfigureDeadlineForFeatureUpdates",
        "description": "Number of days before feature updates are installed on devices automatically regardless of active hours. Before the deadline passes, users will be able to schedule restarts, and automatic restarts can happen outside of active hours. When set to 0, updates will download and install immediately, but might not finish within the day due to device availability and network connectivity.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 3
        },
        "scope": "device"
      },
      "ConfigureDeadlineForQualityUpdates": {
        "name": "ConfigureDeadlineForQualityUpdates",
        "description": "Number of days before quality updates are installed on devices automatically regardless of active hours. Before the deadline passes, users will be able to schedule restarts, and automatic restarts can happen outside of active hours. When set to 0, updates will download and install immediately, but might not finish within the day due to device availability and network connectivity.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 3
        },
        "scope": "device"
      },
      "ConfigureDeadlineGracePeriod": {
        "name": "ConfigureDeadlineGracePeriod",
        "description": "Minimum number of days from update installation until restarts occur automatically for quality updates. This policy only takes effect when Update/ConfigureDeadlineForQualityUpdates is configured. If Update/ConfigureDeadlineForQualityUpdates is configured but this policy is not, then the default value of 2 days will take effect.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "ConfigureDeadlineGracePeriodForFeatureUpdates": {
        "name": "ConfigureDeadlineGracePeriodForFeatureUpdates",
        "description": "Minimum number of days from update installation until restarts occur automatically for feature updates. This policy only takes effect when Update/ConfigureDeadlineForFeatureUpdates is configured. If Update/ConfigureDeadlineForFeatureUpdates is configured but this policy is not, then the value configured by Update/ConfigureDeadlineGracePeriod will be used. If Update/ConfigureDeadlineGracePeriod is also not configured, then the default value of 7 days will take effect.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "ConfigureDeadlineNoAutoReboot": {
        "name": "ConfigureDeadlineNoAutoReboot",
        "description": "When enabled, devices will not automatically restart outside of active hours until the deadline and grace period have expired, even if an update is ready for restart. When disabled, an automatic restart may be attempted outside of active hours after update is ready for restart before the deadline is reached. Takes effect only if Update/ConfigureDeadlineForQualityUpdates or Update/ConfigureDeadlineForFeatureUpdates is configured.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureDeadlineNoAutoRebootForFeatureUpdates": {
        "name": "ConfigureDeadlineNoAutoRebootForFeatureUpdates",
        "description": "When enabled, devices will not automatically restart outside of active hours until the deadline and grace period have expired for feature updates, even if an update is ready for restart. When disabled, an automatic restart may be attempted outside of active hours after update is ready for restart before the deadline is reached. Takes effect only if Update/ConfigureDeadlineForFeatureUpdates is configured.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureDeadlineNoAutoRebootForQualityUpdates": {
        "name": "ConfigureDeadlineNoAutoRebootForQualityUpdates",
        "description": "When enabled, devices will not automatically restart outside of active hours until the deadline and grace period have expired for quality updates, even if an update is ready for restart. When disabled, an automatic restart may be attempted outside of active hours after update is ready for restart before the deadline is reached. Takes effect only if Update/ConfigureDeadlineForQualityUpdates is configured.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "ConfigureFeatureUpdateUninstallPeriod": {
        "name": "ConfigureFeatureUpdateUninstallPeriod",
        "description": "Enable enterprises/IT admin to configure feature update uninstall period",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 2,
          "max": 6
        },
        "scope": "device"
      },
      "DeferFeatureUpdatesPeriodInDays": {
        "name": "DeferFeatureUpdatesPeriodInDays",
        "description": "Since this policy is not blocked, you will not get a failure message when you use it to configure a Windows 10 Mobile device. However, the policy will not take effect.  Defers Feature Updates for the specified number of days. Supported values are 0-365 days. Important The default maximum number of days to defer an update has been increased from 180 (Windows 10, version 1607) to 365 in Windows 10, version 1703.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 36
        },
        "scope": "device"
      },
      "DeferQualityUpdatesPeriodInDays": {
        "name": "DeferQualityUpdatesPeriodInDays",
        "description": "Defers Quality Updates for the specified number of days. Supported values are 0-30.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 3
        },
        "scope": "device"
      },
      "DeferUpdatePeriod": {
        "name": "DeferUpdatePeriod",
        "description": "Note. Don't use this policy in Windows 10, version 1607 devices, instead use the new policies listed in Changes in Windows 10, version 1607 for update management. You can continue to use DeferUpdatePeriod for Windows 10, version 1511 devices. Allows IT Admins to specify update delays for up to 4 weeks. Supported values are 0-4, which refers to the number of weeks to defer updates. In Windows 10 Mobile Enterprise version 1511 devices set to automatic updates, for DeferUpdatePeriod to work, you must set the following:Update/RequireDeferUpgrade must be set to 1System/AllowTelemetry must be set to 1 or higherIf the Specify intranet Microsoft update service location policy is enabled, then the Defer upgrades by, Defer updates by and Pause Updates and Upgrades settings have no effect. If the Allow Telemetry policy is enabled and the Options value is set to 0, then the Defer upgrades by, Defer updates by and Pause Updates and Upgrades settings have no effect. OS upgrade:Maximum deferral: 8 monthsDeferral increment: 1 monthUpdate type/notes:Upgrade - 3689BDC8-B205-4AF4-8D4A-A63924C5E9D5Update:Maximum deferral: 1 monthDeferral increment: 1 weekUpdate type/notes:If a machine has Microsoft Update enabled, any Microsoft Updates in these categories will also observe Defer / Pause logic. - Security Update - 0FA1201D-4330-4FA8-8AE9-B877473B6441- Critical Update - E6CF1350-C01B-414D-A61F-263D14D133B4- Update Rollup - 28BC880E-0592-4CBF-8F95-C79B17911D5F- Service Pack - 68C5B0A3-D1A6-4553-AE49-01D3A7827828- Tools - B4832BD8-E735-4761-8DAF-37F882276DAB- Feature Pack - B54E7D24-7ADD-428F-8B75-90A396FA584F- Update - CD5FFD1E-E932-4E3A-BF74-18BF0B1BBD83- Driver - EBFC1FC5-71A4-4F7B-9ACA-3B9A503104A0Other/cannot defer:Maximum deferral: No deferralDeferral increment: No deferralUpdate type/notes:Any update category not specifically enumerated above falls into this category. - Definition Update - E0789628-CE08-4437-BE74-2495B842F43B",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "DeferUpgradePeriod": {
        "name": "DeferUpgradePeriod",
        "description": "NoteSince this policy is not blocked, you will not get a failure message when you use it to configure a Windows 10 Mobile device. However, the policy will not take effect. Don't use this policy in Windows 10, version 1607 devices, instead use the new policies listed in Changes in Windows 10, version 1607 for update management. You can continue to use DeferUpgradePeriod for Windows 10, version 1511 devices. Allows IT Admins to specify additional upgrade delays for up to 8 months. Supported values are 0-8, which refers to the number of months to defer upgrades. If the Specify intranet Microsoft update service location policy is enabled, then the Defer upgrades by, Defer updates by and Pause Updates and Upgrades settings have no effect. If the Allow Telemetry policy is enabled and the Options value is set to 0, then the Defer upgrades by, Defer updates by and Pause Updates and Upgrades settings have no effect.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "DetectionFrequency": {
        "name": "DetectionFrequency",
        "description": "Specifies the scan frequency from every 1 - 22 hours. Default is 22 hours.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 2
        },
        "scope": "device"
      },
      "DisableDualScan": {
        "name": "DisableDualScan",
        "description": "Do not allow update deferral policies to cause scans against Windows Update",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "allow scan against Windows Update"
            },
            "1": {
              "description": "do not allow update deferral policies to cause scans against Windows Update"
            }
          }
        },
        "scope": "device"
      },
      "DisableWUfBSafeguards": {
        "name": "DisableWUfBSafeguards",
        "description": "This policy setting specifies that a Windows Update for Business device should skip safeguards.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Safeguards are enabled and devices may be blocked for upgrades until the safeguard is cleared."
            },
            "1": {
              "description": "Safeguards are not enabled and upgrades will be deployed without blocking on safeguards."
            }
          }
        },
        "scope": "device"
      },
      "DoNotEnforceEnterpriseTLSCertPinningForUpdateDetection": {
        "name": "DoNotEnforceEnterpriseTLSCertPinningForUpdateDetection",
        "description": "",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "EngagedRestartDeadline": {
        "name": "EngagedRestartDeadline",
        "description": "For Quality Updates, this policy specifies the deadline in days before automatically scheduling and executing a pending restart outside of active hours. The deadline can be set between 2 and 30 days from the time the restart becomes pending. If configured, the pending restart will transition from Auto-restart to Engaged restart (pending user schedule) to automatically executed, within the specified period. The system will reboot on or after the specified deadline. The reboot is prioritized over any configured Active Hours and any existing system and user busy checks. Note. If Update/EngagedDeadline is the only policy set (Update/EngagedRestartTransitionSchedule and Update/EngagedRestartSnoozeSchedule are not set), the behavior goes from reboot required -> engaged behavior -> forced reboot after deadline is reached with a 3-day snooze period. Value type is integer. Default is 14. Supported value range: 2 - 30. If no deadline is specified or deadline is set to 0, the restart will not be automatically executed and will remain Engaged restart (e. g. pending user scheduling). If you disable or do not configure this policy, the default behaviors will be used. If any of the following policies are configured, this policy has no effect:No auto-restart with logged on users for scheduled automatic updates installationsAlways automatically restart at scheduled timeSpecify deadline before auto-restart for update installation",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 2,
          "max": 3
        },
        "scope": "device"
      },
      "EngagedRestartDeadlineForFeatureUpdates": {
        "name": "EngagedRestartDeadlineForFeatureUpdates",
        "description": "For Feature Updates, this policy specifies the deadline in days before automatically scheduling and executing a pending restart outside of active hours. The deadline can be set between 2 and 30 days from the time the restart becomes pending. If configured, the pending restart will transition from Auto-restart to Engaged restart (pending user schedule) to automatically executed, within the specified period. Value type is integer. Default is 14. Supported value range: 2 - 30. If no deadline is specified or deadline is set to 0, the restart will not be automatically executed and will remain Engaged restart (e. g. pending user scheduling). If you disable or do not configure this policy, the default behaviors will be used. If any of the following policies are configured, this policy has no effect:No auto-restart with logged on users for scheduled automatic updates installationsAlways automatically restart at scheduled timeSpecify deadline before auto-restart for update installation",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 2,
          "max": 3
        },
        "scope": "device"
      },
      "EngagedRestartSnoozeSchedule": {
        "name": "EngagedRestartSnoozeSchedule",
        "description": "For Quality Updates, this policy specifies the number of days a user can snooze Engaged restart reminder notifications. The snooze period can be set between 1 and 3 days. Value type is integer. Default is 3 days. Supported value range: 1 - 3. If you disable or do not configure this policy, the default behaviors will be used. If any of the following policies are configured, this policy has no effect:No auto-restart with logged on users for scheduled automatic updates installationsAlways automatically restart at scheduled timeSpecify deadline before auto-restart for update installation",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "EngagedRestartSnoozeScheduleForFeatureUpdates": {
        "name": "EngagedRestartSnoozeScheduleForFeatureUpdates",
        "description": "For Feature Updates, this policy specifies the number of days a user can snooze Engaged restart reminder notifications. The snooze period can be set between 1 and 3 days. Value type is integer. Default is 3 days. Supported value range: 1 - 3. If you disable or do not configure this policy, the default behaviors will be used. If any of the following policies are configured, this policy has no effect:No auto-restart with logged on users for scheduled automatic updates installationsAlways automatically restart at scheduled timeSpecify deadline before auto-restart for update installation",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "EngagedRestartTransitionSchedule": {
        "name": "EngagedRestartTransitionSchedule",
        "description": "For Quality Updates, this policy specifies the timing before transitioning from Auto restarts scheduled outside of active hours to Engaged restart, which requires the user to schedule. The period can be set between 2 and 30 days from the time the restart becomes pending. Value type is integer. Default value is 7 days. Supported value range: 2 - 30. If you disable or do not configure this policy, the default behaviors will be used. If any of the following policies are configured, this policy has no effect:No auto-restart with logged on users for scheduled automatic updates installationsAlways automatically restart at scheduled timeSpecify deadline before auto-restart for update installation",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 3
        },
        "scope": "device"
      },
      "EngagedRestartTransitionScheduleForFeatureUpdates": {
        "name": "EngagedRestartTransitionScheduleForFeatureUpdates",
        "description": "For Feature Updates, this policy specifies the timing before transitioning from Auto restarts scheduled_outside of active hours to Engaged restart, which requires the user to schedule. The period can be set between 2 and 30 days from the time the restart becomes pending. Value type is integer. Default value is 7 days. Supported value range: 2 - 30. If you disable or do not configure this policy, the default behaviors will be used. If any of the following policies are configured, this policy has no effect:No auto-restart with logged on users for scheduled automatic updates installationsAlways automatically restart at scheduled timeSpecify deadline before auto-restart for update installation",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 3
        },
        "scope": "device"
      },
      "ExcludeWUDriversInQualityUpdate": {
        "name": "ExcludeWUDriversInQualityUpdate",
        "description": "NoteSince this policy is not blocked, you will not get a failure message when you use it to configure a Windows 10 Mobile device. However, the policy will not take effect.  Allows IT Admins to exclude Windows Update (WU) drivers during updates.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow Windows Update drivers."
            },
            "1": {
              "description": "Exclude Windows Update drivers."
            }
          }
        },
        "scope": "device"
      },
      "FillEmptyContentUrls": {
        "name": "FillEmptyContentUrls",
        "description": "Allows Windows Update Agent to determine the download URL when it is missing from the metadata. This scenario will occur when intranet update service stores the metadata files but the download contents are stored in the ISV file cache (specified as the alternate download URL). NoteThis setting should only be used in combination with an alternate download URL and configured to use ISV file cache. This setting is used when the intranet update service does not provide download URLs in the update metadata for files which are available on the alternate download server.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "IgnoreMOAppDownloadLimit": {
        "name": "IgnoreMOAppDownloadLimit",
        "description": "Specifies whether to ignore the MO download limit (allow unlimited downloading) over a cellular network for apps and their updates. If lower-level limits (for example, mobile caps) are required, those limits are controlled by external policies. WarningSetting this policy might cause devices to incur costs from MO operators.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not ignore MO download limit for apps and their updates."
            },
            "1": {
              "description": "Ignore MO download limit (allow unlimited downloading) for apps and their updates."
            }
          }
        },
        "scope": "device"
      },
      "IgnoreMOUpdateDownloadLimit": {
        "name": "IgnoreMOUpdateDownloadLimit",
        "description": "Specifies whether to ignore the MO download limit (allow unlimited downloading) over a cellular network for OS updates. If lower-level limits (for example, mobile caps) are required, those limits are controlled by external policies. WarningSetting this policy might cause devices to incur costs from MO operators.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not ignore MO download limit for OS updates."
            },
            "1": {
              "description": "Ignore MO download limit (allow unlimited downloading) for OS updates."
            }
          }
        },
        "scope": "device"
      },
      "ManagePreviewBuilds": {
        "name": "ManagePreviewBuilds",
        "description": "Used to manage Windows 10 Insider Preview builds. Value type is integer.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable Preview builds"
            },
            "1": {
              "description": "Disable Preview builds once the next release is public"
            },
            "2": {
              "description": "Enable Preview builds"
            },
            "3": {
              "description": "Preview builds is left to user selection"
            }
          }
        },
        "scope": "device"
      },
      "NoUpdateNotificationsDuringActiveHours": {
        "name": "NoUpdateNotificationsDuringActiveHours",
        "description": "When enabled, notifications will only be disabled during active hours. Takes effect only if Update/UpdateNotificationLevel is configured to 1 or 2. To ensure that the device stays secure, a notification will still be shown if this option is selected once “Specify deadlines for automatic updates and restarts” deadline has been reached if configured, regardless of active hours.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "PauseDeferrals": {
        "name": "PauseDeferrals",
        "description": "NoteDon't use this policy in Windows 10, version 1607 devices, instead use the new policies listed in Changes in Windows 10, version 1607 for update management. You can continue to use PauseDeferrals for Windows 10, version 1511 devices. Allows IT Admins to pause updates and upgrades for up to 5 weeks. Paused deferrals will be reset after 5 weeks. If the Specify intranet Microsoft update service location policy is enabled, then the Defer upgrades by, Defer updates by and Pause Updates and Upgrades settings have no effect. If the Allow Telemetry policy is enabled and the Options value is set to 0, then the Defer upgrades by, Defer updates by and Pause Updates and Upgrades settings have no effect.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Deferrals are not paused."
            },
            "1": {
              "description": "Deferrals are paused."
            }
          }
        },
        "scope": "device"
      },
      "PauseFeatureUpdates": {
        "name": "PauseFeatureUpdates",
        "description": "Since this policy is not blocked, you will not get a failure message when you use it to configure a Windows 10 Mobile device. However, the policy will not take effect.  Allows IT Admins to pause Feature Updates for up to 60 days.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Feature Updates are not paused."
            },
            "1": {
              "description": "Feature Updates are paused for 60 days or until value set to back to 0, whichever is sooner."
            }
          }
        },
        "scope": "device"
      },
      "PauseFeatureUpdatesStartTime": {
        "name": "PauseFeatureUpdatesStartTime",
        "description": "Specifies the date and time when the IT admin wants to start pausing the Feature Updates. Value type is string (yyyy-mm-dd, ex. 2018-10-28). Supported operations are Add, Get, Delete, and Replace.",
        "format": "string",
        "scope": "device"
      },
      "PauseQualityUpdates": {
        "name": "PauseQualityUpdates",
        "description": "Allows IT Admins to pause Quality Updates.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Quality Updates are not paused."
            },
            "1": {
              "description": "Quality Updates are paused for 35 days or until value set back to 0, whichever is sooner."
            }
          }
        },
        "scope": "device"
      },
      "PauseQualityUpdatesStartTime": {
        "name": "PauseQualityUpdatesStartTime",
        "description": "Specifies the date and time when the IT admin wants to start pausing the Quality Updates. Value type is string (yyyy-mm-dd, ex. 2018-10-28). Supported operations are Add, Get, Delete, and Replace.",
        "format": "string",
        "scope": "device"
      },
      "PhoneUpdateRestrictions": {
        "name": "PhoneUpdateRestrictions",
        "description": "This policy is deprecated. Use Update/RequireUpdateApproval instead.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "ProductVersion": {
        "name": "ProductVersion",
        "description": "Enables IT administrators to specify the product version associated with the target feature update they would like their device(s) to move to and/or stay on until they reach end of service or reconfigure the policy. For details about different Windows 10 versions, see Windows release information.",
        "format": "string",
        "scope": "device"
      },
      "RequireDeferUpgrade": {
        "name": "RequireDeferUpgrade",
        "description": "NoteDon't use this policy in Windows 10, version 1607 devices, instead use the new policies listed in Changes in Windows 10, version 1607 for update management. You can continue to use RequireDeferUpgrade for Windows 10, version 1511 devices. Allows the IT admin to set a device to Semi-Annual Channel train.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User gets upgrades from Semi-Annual Channel (Targeted)."
            },
            "1": {
              "description": "User gets upgrades from Semi-Annual Channel."
            }
          }
        },
        "scope": "device"
      },
      "RequireUpdateApproval": {
        "name": "RequireUpdateApproval",
        "description": "Note If you previously used the Update/PhoneUpdateRestrictions policy in previous versions of Windows, it has been deprecated. Please use this policy instead. Allows the IT admin to restrict the updates that are installed on a device to only those on an update approval list. It enables IT to accept the End User License Agreement (EULA) associated with the approved update on behalf of the end-user. EULAs are approved once an update is approved. Supported operations are Get and Replace.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not configured. The device installs all applicable updates."
            },
            "1": {
              "description": "The device only installs updates that are both applicable and on the Approved Updates list. Set this policy to 1 if IT wants to control the deployment of updates on devices, such as when testing is required prior to deployment."
            }
          }
        },
        "scope": "device"
      },
      "ScheduleImminentRestartWarning": {
        "name": "ScheduleImminentRestartWarning",
        "description": "Allows the IT Admin to specify the period for auto-restart imminent warning notifications. The default value is 15 (minutes).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "15": {
              "description": "15 Minutes"
            },
            "30": {
              "description": "30 Minutes"
            },
            "60": {
              "description": "60 Minutes"
            }
          }
        },
        "scope": "device"
      },
      "ScheduleRestartWarning": {
        "name": "ScheduleRestartWarning",
        "description": "Note This policy is available on Windows 10 Pro, Windows 10 Enterprise, Windows 10 Education, and Windows 10 Mobile Enterprise Allows the IT Admin to specify the period for auto-restart warning reminder notifications. The default value is 4 (hours).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "12": {
              "description": "12 Hours"
            },
            "2": {
              "description": "2 Hours"
            },
            "24": {
              "description": "24 Hours"
            },
            "4": {
              "description": "4 Hours"
            },
            "8": {
              "description": "8 Hours"
            }
          }
        },
        "scope": "device"
      },
      "ScheduledInstallDay": {
        "name": "ScheduledInstallDay",
        "description": "Enables the IT admin to schedule the day of the update installation. The data type is a integer. Supported operations are Add, Delete, Get, and Replace.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Every day"
            },
            "1": {
              "description": "Sunday"
            },
            "2": {
              "description": "Monday"
            },
            "3": {
              "description": "Tuesday"
            },
            "4": {
              "description": "Wednesday"
            },
            "5": {
              "description": "Thursday"
            },
            "6": {
              "description": "Friday"
            },
            "7": {
              "description": "Saturday"
            }
          }
        },
        "scope": "device"
      },
      "ScheduledInstallEveryWeek": {
        "name": "ScheduledInstallEveryWeek",
        "description": "Enables the IT admin to schedule the update installation on the every week. Value type is integer. Supported values:0 - no update in the schedule1 - update is scheduled every week",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "no update in the schedule"
            },
            "1": {
              "description": "update is scheduled every week"
            }
          }
        },
        "scope": "device"
      },
      "ScheduledInstallFirstWeek": {
        "name": "ScheduledInstallFirstWeek",
        "description": "Enables the IT admin to schedule the update installation on the first week of the month. Value type is integer. Supported values:0 - no update in the schedule1 - update is scheduled every first week of the month",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "no update in the schedule"
            },
            "1": {
              "description": "update is scheduled every first week of the month"
            }
          }
        },
        "scope": "device"
      },
      "ScheduledInstallFourthWeek": {
        "name": "ScheduledInstallFourthWeek",
        "description": "Enables the IT admin to schedule the update installation on the fourth week of the month. Value type is integer. Supported values:0 - no update in the schedule1 - update is scheduled every fourth week of the month",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "no update in the schedule"
            },
            "1": {
              "description": "update is scheduled every fourth week of the month"
            }
          }
        },
        "scope": "device"
      },
      "ScheduledInstallSecondWeek": {
        "name": "ScheduledInstallSecondWeek",
        "description": "Enables the IT admin to schedule the update installation on the second week of the month. Value type is integer. Supported values:0 - no update in the schedule1 - update is scheduled every second week of the month",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "no update in the schedule"
            },
            "1": {
              "description": "update is scheduled every second week of the month"
            }
          }
        },
        "scope": "device"
      },
      "ScheduledInstallThirdWeek": {
        "name": "ScheduledInstallThirdWeek",
        "description": "Enables the IT admin to schedule the update installation on the third week of the month. Value type is integer. Supported values:0 - no update in the schedule1 - update is scheduled every third week of the month",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "no update in the schedule"
            },
            "1": {
              "description": "update is scheduled every third week of the month"
            }
          }
        },
        "scope": "device"
      },
      "ScheduledInstallTime": {
        "name": "ScheduledInstallTime",
        "description": "Note This policy is available on Windows 10 Pro, Windows 10 Enterprise, Windows 10 Education, and Windows 10 Mobile EnterpriseEnables the IT admin to schedule the time of the update installation. The data type is a integer. Supported operations are Add, Delete, Get, and Replace. Supported values are 0-23, where 0 = 12 AM and 23 = 11 PM. The default value is 3.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 2
        },
        "scope": "device"
      },
      "SetAutoRestartNotificationDisable": {
        "name": "SetAutoRestartNotificationDisable",
        "description": "Allows the IT Admin to disable auto-restart notifications for update installations.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enabled"
            },
            "1": {
              "description": "Disabled"
            }
          }
        },
        "scope": "device"
      },
      "SetDisablePauseUXAccess": {
        "name": "SetDisablePauseUXAccess",
        "description": "This policy allows the IT admin to disable the Pause Updates feature. When this policy is enabled, the user cannot access the Pause updates feature. Value type is integer. Default is 0. Supported values 0, 1.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "device"
      },
      "SetDisableUXWUAccess": {
        "name": "SetDisableUXWUAccess",
        "description": "This policy allows the IT admin to remove access to scan Windows Update. When this policy is enabled, the user cannot access the Windows Update scan, download, and install features. Value type is integer. Default is 0. Supported values 0, 1.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "SetEDURestart": {
        "name": "SetEDURestart",
        "description": "For devices in a cart, this policy skips all restart checks to ensure that the reboot will happen at ScheduledInstallTime. When you set this policy along with Update/ActiveHoursStart, Update/ActiveHoursEnd, and ShareCartPC, it will defer all the update processes (scan, download, install, and reboot) to a time after Active Hours. After a buffer period after ActiveHoursEnd, the device will wake up several times to complete the processes. All processes are blocked before ActiveHoursStart.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "not configured"
            },
            "1": {
              "description": "configured"
            }
          }
        },
        "scope": "device"
      },
      "SetPolicyDrivenUpdateSourceForDriverUpdates": {
        "name": "SetPolicyDrivenUpdateSourceForDriverUpdates",
        "description": "",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Detect, download and deploy Driver Updates from Windows Update"
            },
            "1": {
              "description": "Detect, download and deploy Driver Updates from Windows Server Update Services (WSUS)"
            }
          }
        },
        "scope": "device"
      },
      "SetPolicyDrivenUpdateSourceForFeatureUpdates": {
        "name": "SetPolicyDrivenUpdateSourceForFeatureUpdates",
        "description": "",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Detect, download and deploy Feature Updates from Windows Update"
            },
            "1": {
              "description": "Detect, download and deploy Feature Updates from Windows Server Update Services (WSUS)"
            }
          }
        },
        "scope": "device"
      },
      "SetPolicyDrivenUpdateSourceForOtherUpdates": {
        "name": "SetPolicyDrivenUpdateSourceForOtherUpdates",
        "description": "",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Detect, download and deploy other Updates from Windows Update"
            },
            "1": {
              "description": "Detect, download and deploy other Updates from Windows Server Update Services (WSUS)"
            }
          }
        },
        "scope": "device"
      },
      "SetPolicyDrivenUpdateSourceForQualityUpdates": {
        "name": "SetPolicyDrivenUpdateSourceForQualityUpdates",
        "description": "",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Detect, download and deploy Quality Updates from Windows Update"
            },
            "1": {
              "description": "Detect, download and deploy Quality Updates from Windows Server Update Services (WSUS)"
            }
          }
        },
        "scope": "device"
      },
      "SetProxyBehaviorForUpdateDetection": {
        "name": "SetProxyBehaviorForUpdateDetection",
        "description": "",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Only use system proxy for detecting updates (default)"
            },
            "1": {
              "description": "Allow user proxy to be used as a fallback if detection using system proxy fails"
            }
          }
        },
        "scope": "device"
      },
      "TargetReleaseVersion": {
        "name": "TargetReleaseVersion",
        "description": "Available in Windows 10, version 1803 and later. Enables IT administrators to specify which version they would like their device(s) to move to and/or stay on until they reach end of service or reconfigure the policy. For details about different Windows 10 versions, see Windows 10 release information.",
        "format": "string",
        "scope": "device"
      },
      "UpdateNotificationLevel": {
        "name": "UpdateNotificationLevel",
        "description": "Display options for update notifications. This policy allows you to define what Windows Update notifications users see. This policy doesn't control how and when updates are downloaded and installed. Options:0 (default) – Use the default Windows Update notifications1 – Turn off all notifications, excluding restart warnings2 – Turn off all notifications, including restart warnings. Important. If you choose not to get update notifications and also define other Group policies so that devices aren't automatically getting updates, neither you nor device users will be aware of critical security, quality, or feature updates, and your devices may be at risk.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Use the default Windows Update notifications"
            },
            "1": {
              "description": "Turn off all notifications, excluding restart warnings"
            },
            "2": {
              "description": "Turn off all notifications, including restart warnings"
            }
          }
        },
        "scope": "device"
      },
      "UpdateServiceUrl": {
        "name": "UpdateServiceUrl",
        "description": "ImportantStarting in Windows 10, version 1703 this policy is not supported in Windows 10 Mobile Enterprise and IoT Mobile. Allows the device to check for updates from a WSUS server instead of Microsoft Update. This is useful for on-premises MDMs that need to update devices that cannot connect to the Internet. Supported operations are Get and Replace.",
        "format": "string",
        "scope": "device"
      },
      "UpdateServiceUrlAlternate": {
        "name": "UpdateServiceUrlAlternate",
        "description": "Specifies an alternate intranet server to host updates from Microsoft Update. You can then use this update service to automatically update computers on your network. This setting lets you specify a server on your network to function as an internal update service. The Automatic Updates client will search this service for updates that apply to the computers on your network. To use this setting, you must set two server name values: the server from which the Automatic Updates client detects and downloads updates, and the server to which updated workstations upload statistics. You can set both values to be the same server. An optional server name value can be specified to configure Windows Update agent, and download updates from an alternate download server instead of WSUS Server. Value type is string and the default value is an empty string, . If the setting is not configured, and if Automatic Updates is not disabled by policy or user preference, the Automatic Updates client connects directly to the Windows Update site on the Internet. NoteIf the Configure Automatic Updates Group Policy is disabled, then this policy has no effect. If the Alternate Download Server Group Policy is not set, it will use the WSUS server by default to download updates. This policy is not supported on Windows RT. Setting this policy will not have any effect on Windows RT PCs.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/UserRights": {
    "name": "UserRights",
    "policies": {
      "AccessCredentialManagerAsTrustedCaller": {
        "name": "AccessCredentialManagerAsTrustedCaller",
        "description": "This user right is used by Credential Manager during Backup/Restore. No accounts should have this privilege, as it is only assigned to Winlogon. Users' saved credentials might be compromised if this privilege is given to other entities.",
        "format": "string",
        "scope": "device"
      },
      "AccessFromNetwork": {
        "name": "AccessFromNetwork",
        "description": "This user right determines which users and groups are allowed to connect to the computer over the network. Remote Desktop Services are not affected by this user right.Note: Remote Desktop Services was called Terminal Services in previous versions of Windows Server.",
        "format": "string",
        "scope": "device"
      },
      "ActAsPartOfTheOperatingSystem": {
        "name": "ActAsPartOfTheOperatingSystem",
        "description": "This user right allows a process to impersonate any user without authentication. The process can therefore gain access to the same local resources as that user. Processes that require this privilege should use the LocalSystem account, which already includes this privilege, rather than using a separate user account with this privilege specially assigned. Caution:Assigning this user right can be a security risk. Only assign this user right to trusted users.",
        "format": "string",
        "scope": "device"
      },
      "AllowLocalLogOn": {
        "name": "AllowLocalLogOn",
        "description": "This user right determines which users can log on to the computer. Note: Modifying this setting may affect compatibility with clients, services, and applications. For compatibility information about this setting, see Allow log on locally (https://go.microsoft.com/fwlink/?LinkId=24268 ) at the Microsoft website. ",
        "format": "string",
        "scope": "device"
      },
      "BackupFilesAndDirectories": {
        "name": "BackupFilesAndDirectories",
        "description": "This user right determines which users can bypass file, directory, registry, and other persistent objects permissions when backing up files and directories.Specifically, this user right is similar to granting the following permissions to the user or group in question on all files and folders on the system:Traverse Folder/Execute File, Read. Caution: Assigning this user right can be a security risk. Since users with this user right can read any registry settings and files, only assign this user right to trusted users",
        "format": "string",
        "scope": "device"
      },
      "BypassTraverseChecking": {
        "name": "BypassTraverseChecking",
        "description": "This user right determines which users can traverse directory trees even though the user may not have permissions on the traversed directory. This privilege does not allow the user to list the contents of a directory, only to traverse directories.",
        "format": "string",
        "scope": "device"
      },
      "ChangeSystemTime": {
        "name": "ChangeSystemTime",
        "description": "This user right determines which users and groups can change the time and date on the internal clock of the computer. Users that are assigned this user right can affect the appearance of event logs. If the system time is changed, events that are logged will reflect this new time, not the actual time that the events occurred.",
        "format": "string",
        "scope": "device"
      },
      "ChangeTimeZone": {
        "name": "ChangeTimeZone",
        "description": "This user right determines which users and groups can change the time zone used by the computer for displaying the local time, which is the computer's system time plus the time zone offset. System time itself is absolute and is not affected by a change in the time zone. ",
        "format": "string",
        "scope": "device"
      },
      "CreateGlobalObjects": {
        "name": "CreateGlobalObjects",
        "description": "This security setting determines whether users can create global objects that are available to all sessions. Users can still create objects that are specific to their own session if they do not have this user right. Users who can create global objects could affect processes that run under other users' sessions, which could lead to application failure or data corruption. Caution: Assigning this user right can be a security risk. Assign this user right only to trusted users.",
        "format": "string",
        "scope": "device"
      },
      "CreatePageFile": {
        "name": "CreatePageFile",
        "description": "This user right determines which users and groups can call an internal application programming interface (API) to create and change the size of a page file. This user right is used internally by the operating system and usually does not need to be assigned to any users",
        "format": "string",
        "scope": "device"
      },
      "CreatePermanentSharedObjects": {
        "name": "CreatePermanentSharedObjects",
        "description": "This user right determines which accounts can be used by processes to create a directory object using the object manager. This user right is used internally by the operating system and is useful to kernel-mode components that extend the object namespace. Because components that are running in kernel mode already have this user right assigned to them, it is not necessary to specifically assign it.",
        "format": "string",
        "scope": "device"
      },
      "CreateSymbolicLinks": {
        "name": "CreateSymbolicLinks",
        "description": "This user right determines if the user can create a symbolic link from the computer he is logged on to. Caution: This privilege should only be given to trusted users. Symbolic links can expose security vulnerabilities in applications that aren't designed to handle them. Note: This setting can be used in conjunction a symlink filesystem setting that can be manipulated with the command line utility to control the kinds of symlinks that are allowed on the machine. Type 'fsutil behavior set symlinkevaluation /?' at the command line to get more information about fsutil and symbolic links.",
        "format": "string",
        "scope": "device"
      },
      "CreateToken": {
        "name": "CreateToken",
        "description": "This user right determines which accounts can be used by processes to create a token that can then be used to get access to any local resources when the process uses an internal application programming interface (API) to create an access token. This user right is used internally by the operating system. Unless it is necessary, do not assign this user right to a user, group, or process other than Local System. Caution: Assigning this user right can be a security risk. Do not assign this user right to any user, group, or process that you do not want to take over the system.",
        "format": "string",
        "scope": "device"
      },
      "DebugPrograms": {
        "name": "DebugPrograms",
        "description": "This user right determines which users can attach a debugger to any process or to the kernel. Developers who are debugging their own applications do not need to be assigned this user right. Developers who are debugging new system components will need this user right to be able to do so. This user right provides complete access to sensitive and critical operating system components. Caution:Assigning this user right can be a security risk. Only assign this user right to trusted users.",
        "format": "string",
        "scope": "device"
      },
      "DenyAccessFromNetwork": {
        "name": "DenyAccessFromNetwork",
        "description": "This user right determines which users are prevented from accessing a computer over the network. This policy setting supersedes the Access this computer from the network policy setting if a user account is subject to both policies.",
        "format": "string",
        "scope": "device"
      },
      "DenyLocalLogOn": {
        "name": "DenyLocalLogOn",
        "description": "This security setting determines which service accounts are prevented from registering a process as a service. Note: This security setting does not apply to the System, Local Service, or Network Service accounts.",
        "format": "string",
        "scope": "device"
      },
      "DenyLogOnAsBatchJob": {
        "name": "DenyLogOnAsBatchJob",
        "description": "This security setting determines which accounts are prevented from being able to log on as a batch job. This policy setting supersedes the Log on as a batch job policy setting if a user account is subject to both policies.",
        "format": "string",
        "scope": "device"
      },
      "DenyLogOnAsService": {
        "name": "DenyLogOnAsService",
        "description": "Deny log on as a service -This security setting determines which service accounts are prevented from registering a process as a service. This policy setting supersedes the Log on as a service policy setting if an account is subject to both policies. Note: This security setting does not apply to the System, Local Service, or Network Service accounts. Default: None.",
        "format": "string",
        "scope": "device"
      },
      "DenyRemoteDesktopServicesLogOn": {
        "name": "DenyRemoteDesktopServicesLogOn",
        "description": "This user right determines which users and groups are prohibited from logging on as a Remote Desktop Services client.",
        "format": "string",
        "scope": "device"
      },
      "EnableDelegation": {
        "name": "EnableDelegation",
        "description": "This user right determines which users can set the Trusted for Delegation setting on a user or computer object. The user or object that is granted this privilege must have write access to the account control flags on the user or computer object. A server process running on a computer (or under a user context) that is trusted for delegation can access resources on another computer using delegated credentials of a client, as long as the client account does not have the Account cannot be delegated account control flag set. Caution: Misuse of this user right, or of the Trusted for Delegation setting, could make the network vulnerable to sophisticated attacks using Trojan horse programs that impersonate incoming clients and use their credentials to gain access to network resources.",
        "format": "string",
        "scope": "device"
      },
      "GenerateSecurityAudits": {
        "name": "GenerateSecurityAudits",
        "description": "This user right determines which accounts can be used by a process to add entries to the security log. The security log is used to trace unauthorized system access. Misuse of this user right can result in the generation of many auditing events, potentially hiding evidence of an attack or causing a denial of service. Shut down system immediately if unable to log security audits security policy setting is enabled.",
        "format": "string",
        "scope": "device"
      },
      "ImpersonateClient": {
        "name": "ImpersonateClient",
        "description": "Assigning this user right to a user allows programs running on behalf of that user to impersonate a client. Requiring this user right for this kind of impersonation prevents an unauthorized user from convincing a client to connect (for example, by remote procedure call (RPC) or named pipes) to a service that they have created and then impersonating that client, which can elevate the unauthorized user's permissions to administrative or system levels. Caution: Assigning this user right can be a security risk. Only assign this user right to trusted users. Note: By default, services that are started by the Service Control Manager have the built-in Service group added to their access tokens. Component Object Model (COM) servers that are started by the COM infrastructure and that are configured to run under a specific account also have the Service group added to their access tokens. As a result, these services get this user right when they are started. In addition, a user can also impersonate an access token if any of the following conditions exist.  1) The access token that is being impersonated is for this user. 2) The user, in this logon session, created the access token by logging on to the network with explicit credentials. 3) The requested level is less than Impersonate, such as Anonymous or Identify. Because of these factors, users do not usually need this user right. Warning: If you enable this setting, programs that previously had the Impersonate privilege may lose it, and they may not run.",
        "format": "string",
        "scope": "device"
      },
      "IncreaseProcessWorkingSet": {
        "name": "IncreaseProcessWorkingSet",
        "description": "Increase a process working set. This privilege determines which user accounts can increase or decrease the size of a process’s working set. The working set of a process is the set of memory pages currently visible to the process in physical RAM memory. These pages are resident and available for an application to use without triggering a page fault. The minimum and maximum working set sizes affect the virtual memory paging behavior of a process. Warning: Increasing the working set size for a process decreases the amount of physical memory available to the rest of the system.",
        "format": "string",
        "scope": "device"
      },
      "IncreaseSchedulingPriority": {
        "name": "IncreaseSchedulingPriority",
        "description": "This user right determines which accounts can use a process with Write Property access to another process to increase the execution priority assigned to the other process. A user with this privilege can change the scheduling priority of a process through the Task Manager user interface.",
        "format": "string",
        "scope": "device"
      },
      "LoadUnloadDeviceDrivers": {
        "name": "LoadUnloadDeviceDrivers",
        "description": "This user right determines which users can dynamically load and unload device drivers or other code in to kernel mode. This user right does not apply to Plug and Play device drivers. It is recommended that you do not assign this privilege to other users. Caution: Assigning this user right can be a security risk. Do not assign this user right to any user, group, or process that you do not want to take over the system.",
        "format": "string",
        "scope": "device"
      },
      "LockMemory": {
        "name": "LockMemory",
        "description": "This user right determines which accounts can use a process to keep data in physical memory, which prevents the system from paging the data to virtual memory on disk. Exercising this privilege could significantly affect system performance by decreasing the amount of available random access memory (RAM).",
        "format": "string",
        "scope": "device"
      },
      "LogOnAsBatchJob": {
        "name": "LogOnAsBatchJob",
        "description": "This security setting allows a user to be logged on by means of a batch-queue facility and is provided only for compatibility with older versions of Windows. For example, when a user submits a job by means of the task scheduler, the task scheduler logs that user on as a batch user rather than as an interactive user.",
        "format": "string",
        "scope": "device"
      },
      "LogOnAsService": {
        "name": "LogOnAsService",
        "description": "This security setting allows a security principal to log on as a service. Services can be configured to run under the Local System, Local Service, or Network Service accounts, which have a built in right to log on as a service. Any service that runs under a separate user account must be assigned the right.",
        "format": "string",
        "scope": "device"
      },
      "ManageAuditingAndSecurityLog": {
        "name": "ManageAuditingAndSecurityLog",
        "description": "This user right determines which users can specify object access auditing options for individual resources, such as files, Active Directory objects, and registry keys. This security setting does not allow a user to enable file and object access auditing in general. You can view audited events in the security log of the Event Viewer. A user with this privilege can also view and clear the security log.",
        "format": "string",
        "scope": "device"
      },
      "ManageVolume": {
        "name": "ManageVolume",
        "description": "This user right determines which users and groups can run maintenance tasks on a volume, such as remote defragmentation. Use caution when assigning this user right. Users with this user right can explore disks and extend files in to memory that contains other data. When the extended files are opened, the user might be able to read and modify the acquired data.",
        "format": "string",
        "scope": "device"
      },
      "ModifyFirmwareEnvironment": {
        "name": "ModifyFirmwareEnvironment",
        "description": "This user right determines who can modify firmware environment values. Firmware environment variables are settings stored in the nonvolatile RAM of non-x86-based computers. The effect of the setting depends on the processor.On x86-based computers, the only firmware environment value that can be modified by assigning this user right is the Last Known Good Configuration setting, which should only be modified by the system. On Itanium-based computers, boot information is stored in nonvolatile RAM. Users must be assigned this user right to run bootcfg.exe and to change the Default Operating System setting on Startup and Recovery in System Properties. On all computers, this user right is required to install or upgrade Windows.Note: This security setting does not affect who can modify the system environment variables and user environment variables that are displayed on the Advanced tab of System Properties.",
        "format": "string",
        "scope": "device"
      },
      "ModifyObjectLabel": {
        "name": "ModifyObjectLabel",
        "description": "This user right determines which user accounts can modify the integrity label of objects, such as files, registry keys, or processes owned by other users. Processes running under a user account can modify the label of an object owned by that user to a lower level without this privilege.",
        "format": "string",
        "scope": "device"
      },
      "ProfileSingleProcess": {
        "name": "ProfileSingleProcess",
        "description": "This user right determines which users can use performance monitoring tools to monitor the performance of system processes.",
        "format": "string",
        "scope": "device"
      },
      "ProfileSystemPerformance": {
        "name": "ProfileSystemPerformance",
        "description": "This security setting determines which users can use performance monitoring tools to monitor the performance of system processes.",
        "format": "string",
        "scope": "device"
      },
      "RemoteShutdown": {
        "name": "RemoteShutdown",
        "description": "This user right determines which users are allowed to shut down a computer from a remote location on the network. Misuse of this user right can result in a denial of service.",
        "format": "string",
        "scope": "device"
      },
      "ReplaceProcessLevelToken": {
        "name": "ReplaceProcessLevelToken",
        "description": "This security setting determines which user accounts can call the CreateProcessAsUser() application programming interface (API) so that one service can start another. An example of a process that uses this user right is Task Scheduler. For information about Task Scheduler, see Task Scheduler overview.",
        "format": "string",
        "scope": "device"
      },
      "RestoreFilesAndDirectories": {
        "name": "RestoreFilesAndDirectories",
        "description": "This user right determines which users can bypass file, directory, registry, and other persistent objects permissions when restoring backed up files and directories, and determines which users can set any valid security principal as the owner of an object. Specifically, this user right is similar to granting the following permissions to the user or group in question on all files and folders on the system:Traverse Folder/Execute File, Write. Caution: Assigning this user right can be a security risk. Since users with this user right can overwrite registry settings, hide data, and gain ownership of system objects, only assign this user right to trusted users.",
        "format": "string",
        "scope": "device"
      },
      "ShutDownTheSystem": {
        "name": "ShutDownTheSystem",
        "description": "This security setting determines which users who are logged on locally to the computer can shut down the operating system using the Shut Down command. Misuse of this user right can result in a denial of service.",
        "format": "string",
        "scope": "device"
      },
      "TakeOwnership": {
        "name": "TakeOwnership",
        "description": "This user right determines which users can take ownership of any securable object in the system, including Active Directory objects, files and folders, printers, registry keys, processes, and threads. Caution: Assigning this user right can be a security risk. Since owners of objects have full control of them, only assign this user right to trusted users.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/VirtualizationBasedTechnology": {
    "name": "VirtualizationBasedTechnology",
    "policies": {
      "HypervisorEnforcedCodeIntegrity": {
        "name": "HypervisorEnforcedCodeIntegrity",
        "description": "Hypervisor-Protected Code Integrity: 0 - Turns off Hypervisor-Protected Code Integrity remotely if configured previously without UEFI Lock, 1 - Turns on Hypervisor-Protected Code Integrity with UEFI lock, 2 - Turns on Hypervisor-Protected Code Integrity without UEFI lock.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disabled) Turns off Hypervisor-Protected Code Integrity remotely if configured previously without UEFI Lock."
            },
            "1": {
              "description": "(Enabled with UEFI lock) Turns on Hypervisor-Protected Code Integrity with UEFI lock."
            },
            "2": {
              "description": "(Enabled without lock) Turns on Hypervisor-Protected Code Integrity without UEFI lock."
            }
          }
        },
        "scope": "device"
      },
      "RequireUEFIMemoryAttributesTable": {
        "name": "RequireUEFIMemoryAttributesTable",
        "description": "Require UEFI Memory Attributes Table",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not require UEFI Memory Attributes Table"
            },
            "1": {
              "description": "Require UEFI Memory Attributes Table"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/WebThreatDefense": {
    "name": "WebThreatDefense",
    "policies": {
      "AutomaticDataCollection": {
        "name": "AutomaticDataCollection",
        "description": "Automatically collect website or app content when additional analysis is needed to help identify security threats.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "NotifyMalicious": {
        "name": "NotifyMalicious",
        "description": "Configures Enhanced Phishing Protection notifications for malicious content.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "NotifyPasswordReuse": {
        "name": "NotifyPasswordReuse",
        "description": "Configures Enhanced Phishing Protection notifications for protecting passwords from reuse.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "NotifyUnsafeApp": {
        "name": "NotifyUnsafeApp",
        "description": "Configures Enhanced Phishing Protection notifications for protecting passwords typed into M365 Office applications, Notepad, and Wordpad.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "ServiceEnabled": {
        "name": "ServiceEnabled",
        "description": "Enables Enhanced Phishing Protection in audit mode for Windows 11 H2.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/Wifi": {
    "name": "Wifi",
    "policies": {
      "AllowAutoConnectToWiFiSenseHotspots": {
        "name": "AllowAutoConnectToWiFiSenseHotspots",
        "description": "Allow or disallow the device to automatically connect to Wi-Fi hotspots. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowInternetSharing": {
        "name": "AllowInternetSharing",
        "description": "Allow or disallow internet sharing. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowManualWiFiConfiguration": {
        "name": "AllowManualWiFiConfiguration",
        "description": "Allow or disallow connecting to Wi-Fi outside of MDM server-installed networks. Most restricted value is 0. Note Setting this policy deletes any previously installed user-configured and Wi-Fi sense Wi-Fi profiles from the device. Certain Wi-Fi profiles that are not user configured nor Wi-Fi sense might not be deleted. In addition, not all non-MDM profiles are completely deleted.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "No Wi-Fi connection outside of MDM provisioned network is allowed."
            },
            "1": {
              "description": "Adding new network SSIDs beyond the already MDM provisioned ones is allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowWFAQosManagementDSCPToUPMapping": {
        "name": "AllowWFAQosManagementDSCPToUPMapping",
        "description": "Allow or disallow the device to use the DSCP to UP Mapping feature from the Wi-Fi Alliance QOS Management Suite 2020.  This policy requires a reboot to take effect.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "DSCP to UP Mapping will be disabled."
            },
            "1": {
              "description": "DSCP to UP Mapping will be enabled."
            },
            "2": {
              "description": "DSCP to UP Mapping will be enabled only if it is enabled in the network profile."
            }
          }
        },
        "scope": "device"
      },
      "AllowWFAQosManagementMSCS": {
        "name": "AllowWFAQosManagementMSCS",
        "description": "Allow or disallow the device to automatically request to enable Mirrored Stream Classification Service when connecting to a MSCS capable network.   This is a Quality of Service feature associated with Wi-Fi Alliance QoS Management Suite 2020.  This policy requires a reboot to take effect.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The device will not automatically request to enable MSCS when connecting to a MSCS capable network."
            },
            "1": {
              "description": "The device will automatically request to enable MSCS when connecting to a MSCS capable network."
            }
          }
        },
        "scope": "device"
      },
      "AllowWiFi": {
        "name": "AllowWiFi",
        "description": "Allow or disallow WiFi connection.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowWiFiDirect": {
        "name": "AllowWiFiDirect",
        "description": "Allow WiFi Direct connection. .",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "WLANScanMode": {
        "name": "WLANScanMode",
        "description": "Allow an enterprise to control the WLAN scanning behavior and how aggressively devices should be actively scanning for Wi-Fi networks to get devices connected. Supported values are 0-500, where 100 = normal scan frequency and 500 = low scan frequency. The default value is 0. Supported operations are Add, Delete, Get, and Replace.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 50
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/WindowsAutopilot": {
    "name": "WindowsAutopilot",
    "policies": {
      "EnableAgilityPostEnrollment": {
        "name": "EnableAgilityPostEnrollment",
        "description": "Specifies whether to check for Windows Autopilot updates after enrollment. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not enabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/WindowsConnectionManager": {
    "name": "WindowsConnectionManager",
    "policies": {
      "ProhitConnectionToNonDomainNetworksWhenConnectedToDomainAuthenticatedNetwork": {
        "name": "ProhitConnectionToNonDomainNetworksWhenConnectedToDomainAuthenticatedNetwork",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/WindowsDefenderSecurityCenter": {
    "name": "WindowsDefenderSecurityCenter",
    "policies": {
      "CompanyName": {
        "name": "CompanyName",
        "description": "The company name that is displayed to the users. CompanyName is required for both EnableCustomizedToasts and EnableInAppCustomization. If you disable or do not configure this setting, or do not have EnableCustomizedToasts or EnableInAppCustomization enabled, then devices will not display the contact options. Value type is string. Supported operations are Add, Get, Replace and Delete.",
        "format": "string",
        "scope": "device"
      },
      "DisableAccountProtectionUI": {
        "name": "DisableAccountProtectionUI",
        "description": "Use this policy setting to specify if to display the Account protection area in Windows Defender Security Center. If you disable or do not configure this setting, Windows defender Security Center will display this area.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable) The users can see the display of the Account protection area in Windows Defender Security Center."
            },
            "1": {
              "description": "(Enable) The users cannot see the display of the Account protection area in Windows Defender Security Center."
            }
          }
        },
        "scope": "device"
      },
      "DisableAppBrowserUI": {
        "name": "DisableAppBrowserUI",
        "description": "Use this policy setting if you want to disable the display of the app and browser protection area in Windows Defender Security Center. If you disable or do not configure this setting, Windows defender Security Center will display this area. Value type is integer. Supported operations are Add, Get, Replace and Delete.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable) The users can see the display of the app and browser protection area in Windows Defender Security Center."
            },
            "1": {
              "description": "(Enable) The users cannot see the display of the app and browser protection area in Windows Defender Security Center."
            }
          }
        },
        "scope": "device"
      },
      "DisableClearTpmButton": {
        "name": "DisableClearTpmButton",
        "description": "Disable the Clear TPM button in Windows Security. Enabled:The Clear TPM button will be unavailable for use. Disabled:The Clear TPM button will be available for use on supported systems. Not configured:Same as Disabled. Supported values:0 - Disabled (default)1 - Enabled",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disabled or not configured) The security processor troubleshooting page shows a button that initiates the process to clear the security processor (TPM)."
            },
            "1": {
              "description": "(Enabled) The security processor troubleshooting page will not show a button to initiate the process to clear the security processor (TPM)"
            }
          }
        },
        "scope": "device"
      },
      "DisableDeviceSecurityUI": {
        "name": "DisableDeviceSecurityUI",
        "description": "Use this policy setting if you want to disable the display of the Device security area in the Windows Defender Security Center. If you disable or do not configure this setting, Windows defender Security Center will display this area.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable) The users can see the display of the Device security area in Windows Defender Security Center."
            },
            "1": {
              "description": "(Enable) The users cannot see the display of the Device security area in Windows Defender Security Center."
            }
          }
        },
        "scope": "device"
      },
      "DisableEnhancedNotifications": {
        "name": "DisableEnhancedNotifications",
        "description": "Use this policy if you want Windows Defender Security Center to only display notifications which are considered critical. If you disable or do not configure this setting, Windows Defender Security Center will display critical and non-critical notifications to users. NoteIf Suppress notification is enabled then users will not see critical or non-critical messages. Value type is integer. Supported operations are Add, Get, Replace and Delete.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable) Windows Defender Security Center will display critical and non-critical notifications to users.."
            },
            "1": {
              "description": "(Enable) Windows Defender Security Center only display notifications which are considered critical on clients."
            }
          }
        },
        "scope": "device"
      },
      "DisableFamilyUI": {
        "name": "DisableFamilyUI",
        "description": "Use this policy setting if you want to disable the display of the family options area in Windows Defender Security Center. If you disable or do not configure this setting, Windows defender Security Center will display this area. Value type is integer. Supported operations are Add, Get, Replace and Delete.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable) The users can see the display of the family options area in Windows Defender Security Center."
            },
            "1": {
              "description": "(Enable) The users cannot see the display of the family options area in Windows Defender Security Center."
            }
          }
        },
        "scope": "device"
      },
      "DisableHealthUI": {
        "name": "DisableHealthUI",
        "description": "Use this policy setting if you want to disable the display of the device performance and health area in Windows Defender Security Center. If you disable or do not configure this setting, Windows defender Security Center will display this area. Value type is integer. Supported operations are Add, Get, Replace and Delete.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable) The users can see the display of the device performance and health area in Windows Defender Security Center."
            },
            "1": {
              "description": "(Enable) The users cannot see the display of the device performance and health area in Windows Defender Security Center."
            }
          }
        },
        "scope": "device"
      },
      "DisableNetworkUI": {
        "name": "DisableNetworkUI",
        "description": "Use this policy setting if you want to disable the display of the firewall and network protection area in Windows Defender Security Center. If you disable or do not configure this setting, Windows defender Security Center will display this area. Value type is integer. Supported operations are Add, Get, Replace and Delete.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable) The users can see the display of the firewall and network protection area in Windows Defender Security Center."
            },
            "1": {
              "description": "(Enable) The users cannot see the display of the firewall and network protection area in Windows Defender Security Center."
            }
          }
        },
        "scope": "device"
      },
      "DisableNotifications": {
        "name": "DisableNotifications",
        "description": "Use this policy setting if you want to disable the display of Windows Defender Security Center notifications. If you disable or do not configure this setting, Windows Defender Security Center notifications will display on devices. Value type is integer. Supported operations are Add, Get, Replace and Delete.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable) The users can see the display of Windows Defender Security Center notifications."
            },
            "1": {
              "description": "(Enable) The users cannot see the display of Windows Defender Security Center notifications."
            }
          }
        },
        "scope": "device"
      },
      "DisableTpmFirmwareUpdateWarning": {
        "name": "DisableTpmFirmwareUpdateWarning",
        "description": "Hide the recommendation to update TPM Firmware when a vulnerable firmware is detected. Enabled:Users will not be shown a recommendation to update their TPM Firmware. Disabled:Users will see a recommendation to update their TPM Firmware if Windows Security detects the system contains a TPM with vulnerable firmware. Not configured:Same as Disabled. Supported values:0 - Disabled (default)1 - Enabled",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable or Not configured) A warning will be displayed if the firmware of the security processor (TPM) should be updated for TPMs that have a vulnerability."
            },
            "1": {
              "description": "(Enabled) No warning will be displayed if the firmware of the security processor (TPM) should be updated."
            }
          }
        },
        "scope": "device"
      },
      "DisableVirusUI": {
        "name": "DisableVirusUI",
        "description": "Use this policy setting if you want to disable the display of the virus and threat protection area in Windows Defender Security Center. If you disable or do not configure this setting, Windows defender Security Center will display this area. Value type is integer. Supported operations are Add, Get, Replace and Delete.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable) The users can see the display of the virus and threat protection area in Windows Defender Security Center."
            },
            "1": {
              "description": "(Enable) The users cannot see the display of the virus and threat protection area in Windows Defender Security Center."
            }
          }
        },
        "scope": "device"
      },
      "DisallowExploitProtectionOverride": {
        "name": "DisallowExploitProtectionOverride",
        "description": "Prevent users from making changes to the exploit protection settings area in the Windows Defender Security Center. If you disable or do not configure this setting, local users can make changes in the exploit protection settings area. Value type is integer. Supported operations are Add, Get, Replace and Delete.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable) Local users are allowed to make changes in the exploit protection settings area."
            },
            "1": {
              "description": "(Enable) Local users cannot make changes in the exploit protection settings area."
            }
          }
        },
        "scope": "device"
      },
      "Email": {
        "name": "Email",
        "description": "The email address that is displayed to users.  The default mail application is used to initiate email actions. If you disable or do not configure this setting, or do not have EnableCustomizedToasts or EnableInAppCustomization enabled, then devices will not display contact options. Value type is string. Supported operations are Add, Get, Replace and Delete.",
        "format": "string",
        "scope": "device"
      },
      "EnableCustomizedToasts": {
        "name": "EnableCustomizedToasts",
        "description": "Enable this policy to display your company name and contact options in the notifications. If you disable or do not configure this setting, or do not provide CompanyName and a minimum of one contact method (Phone using Skype, Email, Help portal URL) Windows Defender Security Center will display a default notification text. Value type is integer. Supported operations are Add, Get, Replace, and Delete.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "notification text."
            },
            "1": {
              "description": "(Enable) Notifications contain the company name and contact options."
            }
          }
        },
        "scope": "device"
      },
      "EnableInAppCustomization": {
        "name": "EnableInAppCustomization",
        "description": "Enable this policy to have your company name and contact options displayed in a contact card fly out in Windows Defender Security Center. If you disable or do not configure this setting, or do not provide CompanyName and a minimum of one contact method (Phone using Skype, Email, Help portal URL) Windows Defender Security Center will not display the contact card fly out notification. Value type is integer. Supported operations are Add, Get, Replace, and Delete.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable) Do not display the company name and contact options in the card fly out notification."
            },
            "1": {
              "description": "(Enable) Display the company name and contact options in the card fly out notification."
            }
          }
        },
        "scope": "device"
      },
      "HideRansomwareDataRecovery": {
        "name": "HideRansomwareDataRecovery",
        "description": "Use this policy setting to hide the Ransomware data recovery area in Windows Defender Security Center.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable or not configured) The Ransomware data recovery area will be visible."
            },
            "1": {
              "description": "(Enable) The Ransomware data recovery area is hidden."
            }
          }
        },
        "scope": "device"
      },
      "HideSecureBoot": {
        "name": "HideSecureBoot",
        "description": "Use this policy to hide the Secure boot area in the Windows Defender Security Center.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable or not configured) The Secure boot area is displayed."
            },
            "1": {
              "description": "(Enable) The Secure boot area is hidden."
            }
          }
        },
        "scope": "device"
      },
      "HideTPMTroubleshooting": {
        "name": "HideTPMTroubleshooting",
        "description": "Use this policy to hide the Security processor (TPM) troubleshooting area in the Windows Defender Security Center.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "(Disable or not configured) The Security processor (TPM) troubleshooting area is displayed."
            },
            "1": {
              "description": "(Enable) The Security processor (TPM) troubleshooting area is hidden."
            }
          }
        },
        "scope": "device"
      },
      "HideWindowsSecurityNotificationAreaControl": {
        "name": "HideWindowsSecurityNotificationAreaControl",
        "description": "This policy setting hides the Windows Security notification area control. The user needs to either sign out and sign in or reboot the computer for this setting to take effect. Enabled:Windows Security notification area control will be hidden. Disabled:Windows Security notification area control will be shown. Not configured:Same as Disabled. Supported values:0 - Disabled (default)1 - Enabled",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": ""
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "Phone": {
        "name": "Phone",
        "description": "The phone number or Skype ID that is displayed to users.  Skype is used to initiate the call. If you disable or do not configure this setting, or do not have EnableCustomizedToasts or EnableInAppCustomization enabled, then devices will not display contact options. Value type is string. Supported operations are Add, Get, Replace, and Delete.",
        "format": "string",
        "scope": "device"
      },
      "URL": {
        "name": "URL",
        "description": "The help portal URL this is displayed to users.  The default browser is used to initiate this action. If you disable or do not configure this setting, or do not have EnableCustomizedToasts or EnableInAppCustomization enabled, then the device will not display contact options. Value type is Value type is string. Supported operations are Add, Get, Replace, and Delete.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/WindowsInkWorkspace": {
    "name": "WindowsInkWorkspace",
    "policies": {
      "AllowSuggestedAppsInWindowsInkWorkspace": {
        "name": "AllowSuggestedAppsInWindowsInkWorkspace",
        "description": "Show recommended app suggestions in the ink workspace.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowWindowsInkWorkspace": {
        "name": "AllowWindowsInkWorkspace",
        "description": "Specifies whether to allow the user to access the ink workspace.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "access to ink workspace is disabled. The feature is turned off."
            },
            "1": {
              "description": "ink workspace is enabled (feature is turned on), but the user cannot access it above the lock screen."
            },
            "2": {
              "description": "ink workspace is enabled (feature is turned on), and the user is allowed to use it above the lock screen."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/WindowsLogon": {
    "name": "WindowsLogon",
    "policies": {
      "AllowAutomaticRestartSignOn": {
        "name": "AllowAutomaticRestartSignOn",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ConfigAutomaticRestartSignOn": {
        "name": "ConfigAutomaticRestartSignOn",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DisableLockScreenAppNotifications": {
        "name": "DisableLockScreenAppNotifications",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "DontDisplayNetworkSelectionUI": {
        "name": "DontDisplayNetworkSelectionUI",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnableFirstLogonAnimation": {
        "name": "EnableFirstLogonAnimation",
        "description": "This policy setting allows you to control whether users see the first sign-in animation when signing in to the computer for the first time.  This applies to both the first user of the computer who completes the initial setup and users who are added to the computer later.  It also controls if Microsoft account users will be offered the opt-in prompt for services during their first sign-in.  If you enable this policy setting, Microsoft account users will see the opt-in prompt for services, and users with other accounts will see the sign-in animation.  If you disable this policy setting, users will not see the animation and Microsoft account users will not see the opt-in prompt for services.  If you do not configure this policy setting, the user who completes the initial Windows setup will see the animation during their first sign-in. If the first user had already completed the initial setup and this policy setting is not configured, users new to this computer will not see the animation.  Note: The first sign-in animation will not be shown on Server, so this policy will have no effect.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "device"
      },
      "EnableMPRNotifications": {
        "name": "EnableMPRNotifications",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "EnumerateLocalUsersOnDomainJoinedComputers": {
        "name": "EnumerateLocalUsersOnDomainJoinedComputers",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "HideFastUserSwitching": {
        "name": "HideFastUserSwitching",
        "description": "This policy setting allows you to hide the Switch User interface in the Logon UI, the Start menu and the Task Manager. If you enable this policy setting, the Switch User interface is hidden from the user who is attempting to log on or is logged on to the computer that has this policy applied. The locations that Switch User interface appear are in the Logon UI, the Start menu and the Task Manager. If you disable or do not configure this policy setting, the Switch User interface is accessible to the user in the three locations.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled (visible)."
            },
            "1": {
              "description": "Enabled (hidden)."
            }
          }
        },
        "scope": "device"
      },
      "OverrideShellProgram": {
        "name": "OverrideShellProgram",
        "description": "OverrideShellProgram policy allows IT admin to configure the shell program for Windows OS on a device. This policy has the highest precedence over other ways of configuring the shell program. The policy currently supports below options: 1. Not Configured: Default shell will be launched. 2. Apply Lightweight Shell: Lightweight shell does not have a user interface and helps the device to achieve better performance as the shell consumes limited resources over default shell. Lightweight shell contains a limited set of features which could be consumed by applications. This configuration can be useful if the device needs to have a continuous running user interface application which would consume features offered by Lightweight shell. If you disable or do not configure this policy setting, then the default shell will be launched.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not Configured"
            },
            "1": {
              "description": "Apply Lightweight shell"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/WindowsPowerShell": {
    "name": "WindowsPowerShell",
    "policies": {
      "TurnOnPowerShellScriptBlockLogging": {
        "name": "TurnOnPowerShellScriptBlockLogging",
        "description": "",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/WindowsSandbox": {
    "name": "WindowsSandbox",
    "policies": {
      "AllowAudioInput": {
        "name": "AllowAudioInput",
        "description": "Allow audio input in Windows Sandbox",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "AllowClipboardRedirection": {
        "name": "AllowClipboardRedirection",
        "description": "Allow clipboard sharing with Windows Sandbox",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "AllowNetworking": {
        "name": "AllowNetworking",
        "description": "Allow networking in Windows Sandbox",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "AllowPrinterRedirection": {
        "name": "AllowPrinterRedirection",
        "description": "Allow printer sharing with Windows Sandbox",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "AllowVGPU": {
        "name": "AllowVGPU",
        "description": "Allow vGPU sharing for Windows Sandbox",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "AllowVideoInput": {
        "name": "AllowVideoInput",
        "description": "Allow video input in Windows Sandbox",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Policy/Config/WirelessDisplay": {
    "name": "WirelessDisplay",
    "policies": {
      "AllowMdnsAdvertisement": {
        "name": "AllowMdnsAdvertisement",
        "description": "This policy setting allows you to turn off the Wireless Display multicast DNS service advertisement from a Wireless Display receiver.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowMdnsDiscovery": {
        "name": "AllowMdnsDiscovery",
        "description": "This policy setting allows you to turn off discovering the display service advertised over multicast DNS by a Wireless Display receiver.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowMovementDetectionOnInfrastructure": {
        "name": "AllowMovementDetectionOnInfrastructure",
        "description": "This policy setting allows you to disable the infrastructure movement detection feature.                     If you set it to 0, your PC may stay connected and continue to project if you walk away from a Wireless Display receiver to which you are projecting over infrastructure.                     If you set it to 1, your PC will detect that you have moved and will automatically disconnect your infrastructure Wireless Display session.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowPCReceiverToBeTCPServer": {
        "name": "AllowPCReceiverToBeTCPServer",
        "description": "This policy setting allows a PC acting as a Wireless Display receiver to be a TCP server for the TCP session carrying the projection stream to the receiver.                             If you set it to 0, your PC receiver will start the outbound connection as a TCP client.                             If you set it to 1, your PC may receive the incoming projection as a TCP server.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowPCSenderToBeTCPClient": {
        "name": "AllowPCSenderToBeTCPClient",
        "description": "This policy setting allows a PC acting as a Wireless Display sender to be a TCP client for the TCP session carrying the projection stream to the receiver.                             If you set it to 0, your PC will only participate in an outgoing projection as a TCP server.                             If you set it to 1, your PC may start an outgoing projection as a TCP client.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "device"
      },
      "AllowProjectionFromPC": {
        "name": "AllowProjectionFromPC",
        "description": "This policy allows you to turn off projection from a PC.                             If you set it to 0, your PC cannot discover or project to other devices.                             If you set it to 1, your PC can discover and project to other devices.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Your PC cannot discover or project to other devices."
            },
            "1": {
              "description": "Your PC can discover and project to other devices."
            }
          }
        },
        "scope": "device"
      },
      "AllowProjectionFromPCOverInfrastructure": {
        "name": "AllowProjectionFromPCOverInfrastructure",
        "description": "This policy allows you to turn off projection from a PC over infrastructure.                             If you set it to 0, your PC cannot discover or project to other infrastructure devices, though it may still be possible to discover and project over WiFi Direct.                             If you set it to 1, your PC can discover and project to other devices over infrastructure.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Your PC cannot discover or project to other infrastructure devices, although it is possible to discover and project over WiFi Direct."
            },
            "1": {
              "description": "Your PC can discover and project to other devices over infrastructure."
            }
          }
        },
        "scope": "device"
      },
      "AllowProjectionToPC": {
        "name": "AllowProjectionToPC",
        "description": "This policy setting allows you to turn off projection to a PC                             If you set it to 0, your PC can't be discoverable or projected to over Wi-Fi Direct.                              If you set it to 1, your PC can be discoverable and projected to over Wi-Fi Direct. The user has an option to turn it always on or off except for manual launch, too.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Projection to PC is not allowed. Always off and the user cannot enable it."
            },
            "1": {
              "description": "Projection to PC is allowed. Enabled only above the lock screen."
            }
          }
        },
        "scope": "device"
      },
      "AllowProjectionToPCOverInfrastructure": {
        "name": "AllowProjectionToPCOverInfrastructure",
        "description": "This policy setting allows you to turn off projection to a PC over infrastructure.                             If you set it to 0, your PC cannot be discoverable and can't be projected to over infrastructure, though it may still be possible to project over WiFi Direct.                             If you set it to 1, your PC can be discoverable and can be projected to over infrastructure.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Your PC is not discoverable and other devices cannot project to it over infrastructure, although it is possible to project to it over WiFi Direct."
            },
            "1": {
              "description": "Your PC is discoverable and other devices can project to it over infrastructure."
            }
          }
        },
        "scope": "device"
      },
      "AllowUserInputFromWirelessDisplayReceiver": {
        "name": "AllowUserInputFromWirelessDisplayReceiver",
        "description": "Setting this policy controls whether or not the wireless display can send input—keyboard, mouse, pen, and touch input if the display supports it—back to the source device.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Wireless display input disabled."
            },
            "1": {
              "description": "Wireless display input enabled."
            }
          }
        },
        "scope": "device"
      },
      "RequirePinForPairing": {
        "name": "RequirePinForPairing",
        "description": "This policy setting allows you to require a pin for pairing.                             If you set this to 0, a pin isn't required for pairing.                             If you set this to 1, the pairing ceremony for new devices will always require a PIN.                             If you set this to 2, all pairings will require PIN.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "PIN is not required."
            },
            "1": {
              "description": "Pairing ceremony for new devices will always require a PIN"
            },
            "2": {
              "description": "All pairings will require PIN"
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/Reboot": {
    "name": "Reboot",
    "policies": {
      "RebootNow": {
        "name": "RebootNow",
        "title": "RebootNow",
        "description": "This node executes a reboot of the device. RebootNow triggers a reboot within 5 minutes to allow the user to wrap up any active work. If this node is set to execute during a sync session, the device will reboot at the end of the sync session.",
        "format": "null",
        "scope": "device"
      },
      "Schedule/DailyRecurrent": {
        "name": "DailyRecurrent",
        "title": "DailyRecurrent",
        "description": "Value in ISO8601, time is required. Either setting DailyRecurrent or WeeklyRecurrent is supported but not both at same time. A reboot will be scheduled each day at the configured time starting at the date and time. Setting a null (empty) date will delete the existing schedule.",
        "format": "string",
        "scope": "device"
      },
      "Schedule/Single": {
        "name": "Single",
        "title": "Single",
        "description": "Value in ISO8601, both the date and time are required. A reboot will be scheduled at the configured date time. Setting a null (empty) date will delete the existing schedule.",
        "format": "string",
        "scope": "device"
      },
      "Schedule/WeeklyRecurrent": {
        "name": "WeeklyRecurrent",
        "title": "WeeklyRecurrent",
        "description": "Value in ISO8601, time is required. Either setting DailyRecurrent or WeeklyRecurrent is supported but not both at same time. A reboot will be scheduled every week at the configured time starting at the date and time. Setting a null (empty) date will delete the existing schedule.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/RemoteLock": {
    "name": "RemoteLock",
    "policies": {
      "Lock": {
        "name": "Lock",
        "description": "Required. The setting accepts requests to lock the device screen. The device screen will lock immediately if a PIN has been set. If no PIN is set, the lock request is ignored and the OMA DM (405) Forbidden error is returned over the management channel. All OMA DM errors are listed here in the protocol specification",
        "format": "null",
        "scope": "device"
      },
      "LockAndRecoverPIN": {
        "name": "LockAndRecoverPIN",
        "description": "This setting performs a similar function to the LockAndResetPIN node. With LockAndResetPIN any Windows Hello keys associated with the PIN gets deleted, but with LockAndRecoverPIN those keys are saved. After the Exec operation is called successfully on this setting, the new PIN can be retrieved from the NewPINValue setting. The previous PIN will no longer work. Executing this node requires a ticket from the Microsoft credential reset service. Additionally, the execution of this setting is only supported when the EnablePinRecovery policy is set on the client.",
        "format": "null",
        "scope": "device"
      },
      "LockAndResetPIN": {
        "name": "LockAndResetPIN",
        "description": " This setting can be used to lock and reset the PIN on the device. It is used in conjunction with the NewPINValue node. After the Exec operation is called successfully on this node, the previous PIN will no longer work and cannot be recovered.",
        "format": "null",
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/RootCATrustedCertificates": {
    "name": "RootCATrustedCertificates",
    "policies": {
      "CA/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "Defines the SHA1 hash for the certificate. The 20-byte value of the SHA1 certificate hash is specified as a hexadecimal string value",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "Specifies the X.509 certificate as a Base64-encoded string. The Base-64 string value cannot include extra formatting characters such as embedded linefeeds, etc.",
            "format": "base64",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "OemEsim/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "Defines the SHA1 hash for the certificate. The 20-byte value of the SHA1 certificate hash is specified as a hexadecimal string value",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "Specifies the X.509 certificate as a Base64-encoded string. The Base-64 string value cannot include extra formatting characters such as embedded linefeeds, etc.",
            "format": "base64",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "Root/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "Defines the SHA1 hash for the certificate. The 20-byte value of the SHA1 certificate hash is specified as a hexadecimal string value",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "Specifies the X.509 certificate as a Base64-encoded string. The Base-64 string value cannot include extra formatting characters such as embedded linefeeds, etc.",
            "format": "base64",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "TrustedPeople/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "Defines the SHA1 hash for the certificate. The 20-byte value of the SHA1 certificate hash is specified as a hexadecimal string value",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "Specifies the X.509 certificate as a Base64-encoded string. The Base-64 string value cannot include extra formatting characters such as embedded linefeeds, etc.",
            "format": "base64",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "TrustedPublisher/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "Defines the SHA1 hash for the certificate. The 20-byte value of the SHA1 certificate hash is specified as a hexadecimal string value",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "Specifies the X.509 certificate as a Base64-encoded string. The Base-64 string value cannot include extra formatting characters such as embedded linefeeds, etc.",
            "format": "base64",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "UntrustedCertificates/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "Defines the SHA1 hash for the certificate. The 20-byte value of the SHA1 certificate hash is specified as a hexadecimal string value",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "Specifies the X.509 certificate as a Base64-encoded string. The Base-64 string value cannot include extra formatting characters such as embedded linefeeds, etc.",
            "format": "base64",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/VPNv2": {
    "name": "VPNv2",
    "policies": {
      "{ProfileName}": {
        "name": "",
        "title": "ProfileName",
        "description": "Unique alpha numeric identifier for the profile. The profile name must not include a forward slash (/). If the profile name has a space or other non-alphanumeric character, it must be properly escaped according to the URL encoding standard.",
        "format": "node",
        "nodes": {
          "APNBinding/AccessPointName": {
            "name": "AccessPointName",
            "description": "Reserved for future use.",
            "format": "string",
            "scope": "device"
          },
          "APNBinding/AuthenticationType": {
            "name": "AuthenticationType",
            "description": "Reserved for future use.",
            "format": "string",
            "scope": "device"
          },
          "APNBinding/IsCompressionEnabled": {
            "name": "IsCompressionEnabled",
            "description": "Reserved for future use.",
            "format": "bool",
            "scope": "device"
          },
          "APNBinding/Password": {
            "name": "Password",
            "description": "Reserved for future use.",
            "format": "string",
            "scope": "device"
          },
          "APNBinding/ProviderId": {
            "name": "ProviderId",
            "description": "Reserved for future use.",
            "format": "string",
            "scope": "device"
          },
          "APNBinding/UserName": {
            "name": "UserName",
            "description": "Reserved for future use.",
            "format": "string",
            "scope": "device"
          },
          "AlwaysOn": {
            "name": "AlwaysOn",
            "description": "An optional flag to enable Always On mode. This will automatically connect the VPN at sign-in and will stay connected until the user manually disconnects.",
            "format": "bool",
            "scope": "device"
          },
          "AlwaysOnActive": {
            "name": "AlwaysOnActive",
            "description": "An optional flag to activate Always On mode. This is true by default if AlwaysOn is true. Setting controls whether \"Connect Automatically\" is toggled on profile creation.",
            "format": "bool",
            "scope": "device"
          },
          "AppTriggerList/{appTriggerRowId}": {
            "name": "",
            "title": "appTriggerRowId",
            "description": "A sequential integer identifier which allows the ability to specify multiple apps for App Trigger. Sequencing must start at 0 and you should not skip numbers.",
            "format": "node",
            "nodes": {
              "App/Id": {
                "name": "Id",
                "description": "App Identity. Specified, based on the Type Field.",
                "format": "string",
                "scope": "device"
              }
            },
            "scope": "device"
          },
          "ByPassForLocal": {
            "name": "ByPassForLocal",
            "description": "\r\n                        False : Do not Bypass for Local traffic\r\n                        True : ByPass VPN Interface for Local Traffic\r\n\r\n                        Optional. When this setting is True, requests to local resources that are available on the same Wi-Fi network as the VPN client can bypass the VPN. For example, if enterprise policy for VPN requires force tunnel for VPN, but enterprise intends to allow the remote user to connect locally to media center in their home, then this option should be set to True. The user can bypass VPN for local subnet traffic. When this is set to False, the setting is disabled and no subnet exceptions are allowed.\r\n                    ",
            "format": "bool",
            "scope": "device"
          },
          "DataEncryption": {
            "name": "DataEncryption",
            "description": "Determines the level of data encryption required for the connection.",
            "format": "string",
            "scope": "device"
          },
          "DeviceCompliance": {
            "name": "DeviceCompliance",
            "description": "Nodes under DeviceCompliance can be used to enable AAD based Conditional Access for VPN.",
            "format": "node",
            "scope": "device"
          },
          "DeviceCompliance/Enabled": {
            "name": "Enabled",
            "description": "Enables the Device Compliance flow from the client. If marked as True, the VPN Client will attempt to communicate with AAD to get a certificate to use for authentication. The VPN should be set up to use Certificate Auth and the VPN Server must trust the Server returned by Azure Active Directory.",
            "format": "bool",
            "scope": "device"
          },
          "DeviceCompliance/Sso": {
            "name": "Sso",
            "description": "Nodes under SSO can be used to choose a certificate different from the VPN Authentication cert for the Kerberos Authentication in the case of Device Compliance.",
            "format": "node",
            "scope": "device"
          },
          "DeviceCompliance/Sso/Eku": {
            "name": "Eku",
            "description": "Comma Separated list of EKU's for the VPN Client to look for the correct certificate for Kerberos Authentication.",
            "format": "string",
            "scope": "device"
          },
          "DeviceCompliance/Sso/Enabled": {
            "name": "Enabled",
            "description": "If this field is set to True the VPN Client will look for a separate certificate for Kerberos Authentication.",
            "format": "bool",
            "scope": "device"
          },
          "DeviceCompliance/Sso/IssuerHash": {
            "name": "IssuerHash",
            "description": "Comma Separated list of Issuer Hashes for the VPN Client to look for the correct certificate for Kerberos Authentication.",
            "format": "string",
            "scope": "device"
          },
          "DeviceTunnel": {
            "name": "DeviceTunnel",
            "description": "If turned on a device tunnel profile does four things.\r\n                        First, it automatically becomes an always on profile.\r\n                        Second, it does not require the presence or logging in of any user to the machine in order for it to connect.\r\n                        Third, no other Device Tunnel profile maybe be present on the same machine.\r\nA device tunnel profile must be deleted before another device tunnel profile can be added, removed, or connected.",
            "format": "bool",
            "scope": "device"
          },
          "DisableAdvancedOptionsEditButton": {
            "name": "DisableAdvancedOptionsEditButton",
            "description": "\r\n                        Optional. When this setting is True, the Advanced Options page will have its edit functions disabled, only allowing viewing and Clear Sign-In Info.\r\n                    ",
            "format": "bool",
            "scope": "device"
          },
          "DisableDisconnectButton": {
            "name": "DisableDisconnectButton",
            "description": "\r\n                        Optional. When this setting is True, the Disconnect button will not be visible for connected profiles.\r\n                    ",
            "format": "bool",
            "scope": "device"
          },
          "DisableIKEv2Fragmentation": {
            "name": "DisableIKEv2Fragmentation",
            "description": "Set to disable IKEv2 Fragmentation.",
            "format": "bool",
            "scope": "device"
          },
          "DnsSuffix": {
            "name": "DnsSuffix",
            "description": "Specifies one or more comma separated DNS suffixes. The first in the list is also used as the primary connection specific DNS suffix for the VPN Interface. The entire list will also be added into the SuffixSearchList.",
            "format": "string",
            "scope": "device"
          },
          "DomainNameInformationList/{dniRowId}": {
            "name": "",
            "title": "dniRowId",
            "description": "A sequential integer identifier for the Domain Name information. Sequencing must start at 0.",
            "format": "node",
            "nodes": {
              "AutoTrigger": {
                "name": "AutoTrigger",
                "description": "Boolean to determine whether this domain name rule will trigger the VPN.",
                "format": "bool",
                "scope": "device"
              },
              "DnsServers": {
                "name": "DnsServers",
                "description": "Comma Seperated list of IP addresses for the DNS Servers to use for the domain name.",
                "format": "string",
                "scope": "device"
              },
              "DomainName": {
                "name": "DomainName",
                "description": "Used to indicate the namespace to which the policy applies. When a Name query is issued, the DNS client compares the name in the query to all of the namespaces under DomainNameInformationList to find a match. This parameter can be one of the following types: FQDN - Fully qualified domain name. Suffix - A domain suffix that will be appended to the shortname query for DNS resolution. To specify a suffix, prepend a . to the DNS suffix.",
                "format": "string",
                "scope": "device"
              },
              "Persistent": {
                "name": "Persistent",
                "description": "A boolean value that specifies if the rule being added should persist even when the VPN is not connected.",
                "format": "bool",
                "scope": "device"
              },
              "WebProxyServers": {
                "name": "WebProxyServers",
                "description": "Web Proxy Server IP address if you are redirecting traffic through your intranet.",
                "format": "string",
                "scope": "device"
              }
            },
            "scope": "device"
          },
          "EdpModeId": {
            "name": "EdpModeId",
            "description": "Enterprise ID, which is required for connecting this VPN profile with an WIP policy. When this is set, the networking stack looks for this Enterprise ID in the app token to determine if the traffic is allowed to go over the VPN. If the profile is active, it also automatically triggers the VPN to connect. We recommend having only one such profile per device.",
            "format": "string",
            "scope": "device"
          },
          "IPv4InterfaceMetric": {
            "name": "IPv4InterfaceMetric",
            "description": "The metric for the IPv4 interface.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 1,
              "max": 999
            },
            "scope": "device"
          },
          "IPv6InterfaceMetric": {
            "name": "IPv6InterfaceMetric",
            "description": "The metric for the IPv6 interface.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 1,
              "max": 999
            },
            "scope": "device"
          },
          "NativeProfile": {
            "name": "NativeProfile",
            "description": "Nodes under NativeProfile are required when using a Windows Inbox VPN Protocol (IKEv2, PPTP, L2TP, SSTP).",
            "format": "node",
            "scope": "device"
          },
          "NativeProfile/Authentication/Certificate/Eku": {
            "name": "Eku",
            "description": "Reserved for future use.",
            "format": "string",
            "scope": "device"
          },
          "NativeProfile/Authentication/Certificate/Issuer": {
            "name": "Issuer",
            "description": "Reserved for future use.",
            "format": "string",
            "scope": "device"
          },
          "NativeProfile/Authentication/Eap/Configuration": {
            "name": "Configuration",
            "description": "HTML encoded XML of the EAP configuration. For more information about EAP configuration XML, see https://docs.microsoft.com/en-us/windows/client-management/mdm/eap-configuration.",
            "format": "string",
            "scope": "device"
          },
          "NativeProfile/Authentication/Eap/Type": {
            "name": "Type",
            "description": "\r\n                      Required node for EAP profiles. This specifies the EAP Type ID\r\n                      13 = EAP-TLS\r\n                      26 = Ms-Chapv2\r\n                      27 = Peap\r\n                    ",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "NativeProfile/Authentication/MachineMethod": {
            "name": "MachineMethod",
            "description": "This is only supported in IKEv2.",
            "format": "string",
            "scope": "device"
          },
          "NativeProfile/Authentication/UserMethod": {
            "name": "UserMethod",
            "description": "Type of user authentication.",
            "format": "string",
            "scope": "device"
          },
          "NativeProfile/CryptographySuite/AuthenticationTransformConstants": {
            "name": "AuthenticationTransformConstants",
            "description": "Type of authentication transform constant.",
            "format": "string",
            "scope": "device"
          },
          "NativeProfile/CryptographySuite/CipherTransformConstants": {
            "name": "CipherTransformConstants",
            "description": "Type of Cipher transform constant.",
            "format": "string",
            "scope": "device"
          },
          "NativeProfile/CryptographySuite/DHGroup": {
            "name": "DHGroup",
            "description": "Group used for DH (Diffie-Hellman).",
            "format": "string",
            "scope": "device"
          },
          "NativeProfile/CryptographySuite/EncryptionMethod": {
            "name": "EncryptionMethod",
            "description": "Type of encryption method.",
            "format": "string",
            "scope": "device"
          },
          "NativeProfile/CryptographySuite/IntegrityCheckMethod": {
            "name": "IntegrityCheckMethod",
            "description": "Type of integrity check.",
            "format": "string",
            "scope": "device"
          },
          "NativeProfile/CryptographySuite/PfsGroup": {
            "name": "PfsGroup",
            "description": "Group used for PFS (Perfect Forward Secrecy).",
            "format": "string",
            "scope": "device"
          },
          "NativeProfile/DisableClassBasedDefaultRoute": {
            "name": "DisableClassBasedDefaultRoute",
            "description": "Specifies the class based default routes. For example, if the interface IP begins with 10, it assumes a class a IP and pushes the route to 10.0.0.0/8",
            "format": "bool",
            "scope": "device"
          },
          "NativeProfile/L2tpPsk": {
            "name": "L2tpPsk",
            "description": "The preshared key used for an L2TP connection.",
            "format": "string",
            "scope": "device"
          },
          "NativeProfile/NativeProtocolType": {
            "name": "NativeProtocolType",
            "description": "Required for native profiles. Type of tunneling protocol used.",
            "format": "string",
            "scope": "device"
          },
          "NativeProfile/PlumbIKEv2TSAsRoutes": {
            "name": "PlumbIKEv2TSAsRoutes",
            "description": " True: Plumb traffic selectors as routes onto VPN interface, False: Do not plumb traffic selectors as routes.",
            "format": "bool",
            "scope": "device"
          },
          "NativeProfile/ProtocolList/NativeProtocolList/{NativeProtocolRowId}": {
            "name": "",
            "title": "NativeProtocolRowId",
            "format": "node",
            "nodes": {
              "Type": {
                "name": "Type",
                "description": "Inbox VPN protocols type.",
                "format": "string",
                "scope": "device"
              }
            },
            "scope": "device"
          },
          "NativeProfile/ProtocolList/RetryTimeInHours": {
            "name": "RetryTimeInHours",
            "description": " Default 168, max 500000.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "NativeProfile/RoutingPolicyType": {
            "name": "RoutingPolicyType",
            "description": "Type of routing policy.",
            "format": "string",
            "scope": "device"
          },
          "NativeProfile/Servers": {
            "name": "Servers",
            "description": "Required for native profiles. Public or routable IP address or DNS name for the VPN gateway. It can point to the external IP of a gateway or a virtual IP for a server farm. Examples, 208.147.66.130 or vpn.contoso.com. The name can be a server name plus a friendly name separated with a semi-colon. For example, server2.example.com;server2FriendlyName. When you get the value, the return will include both the server name and the friendly name; if no friendly name had been supplied it will default to the server name. You can make a list of server by making a list of server names (with optional friendly names) seperated by commas. For example, server1.example.com,server2.example.com.",
            "format": "string",
            "scope": "device"
          },
          "NetworkOutageTime": {
            "name": "NetworkOutageTime",
            "description": "The amount of time in seconds the network is allowed to idle. 0 means no limit.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 429496729
            },
            "scope": "device"
          },
          "PluginProfile": {
            "name": "PluginProfile",
            "description": "Nodes under the PluginProfile are required when using a Microsoft Store based VPN plugin.",
            "format": "node",
            "scope": "device"
          },
          "PluginProfile/CustomConfiguration": {
            "name": "CustomConfiguration",
            "description": "Optional. This is an HTML encoded XML blob for SSL-VPN plug-in specific configuration including authentication information that is deployed to the device to make it available for SSL-VPN plug-ins. Contact the plugin provider for format and other details. Most plugins can also configure values based on the server negotiations as well as defaults.",
            "format": "string",
            "scope": "device"
          },
          "PluginProfile/PluginPackageFamilyName": {
            "name": "PluginPackageFamilyName",
            "description": "Required for Plugin Profiles. This node specifies the Package Family Name of the SSL-VPN plugin app.",
            "format": "string",
            "scope": "device"
          },
          "PluginProfile/ServerUrlList": {
            "name": "ServerUrlList",
            "description": "Required for plug-in profiles. Semicolon-separated list of servers in URL, hostname, or IP format.",
            "format": "string",
            "scope": "device"
          },
          "PrivateNetwork": {
            "name": "PrivateNetwork",
            "description": "Determines whether the VPN connection is public or private.",
            "format": "bool",
            "scope": "device"
          },
          "ProfileXML": {
            "name": "ProfileXML",
            "description": "The XML schema for provisioning all the fields of a VPN.",
            "format": "string",
            "scope": "device"
          },
          "Proxy/AutoConfigUrl": {
            "name": "AutoConfigUrl",
            "description": "Optional. Set a URL to automatically retrieve the proxy settings. ",
            "format": "string",
            "scope": "device"
          },
          "Proxy/Manual/Server": {
            "name": "Server",
            "description": "Optional. The value is the proxy server address as a fully qualified hostname or an IP address, with port appended after a colon for example, proxy.constoso.com:80.",
            "format": "string",
            "scope": "device"
          },
          "RegisterDNS": {
            "name": "RegisterDNS",
            "description": "Allows registration of the connection's address in DNS.",
            "format": "bool",
            "scope": "device"
          },
          "RememberCredentials": {
            "name": "RememberCredentials",
            "description": "Boolean value (true or false) for caching credentials.",
            "format": "bool",
            "scope": "device"
          },
          "RouteList/{routeRowId}": {
            "name": "",
            "title": "routeRowId",
            "description": "A sequential integer identifier for the RouteList. This is required if you are adding routes. Sequencing must start at 0.",
            "format": "node",
            "nodes": {
              "Address": {
                "name": "Address",
                "description": "Subnet address in IPv4/v6 address format which, along with the prefix will be used to determine the destination prefix to send via the VPN Interface. This is the IP address part of the destination prefix.",
                "format": "string",
                "scope": "device"
              },
              "ExclusionRoute": {
                "name": "ExclusionRoute",
                "description": "A boolean value that specifies if the route being added should point to the VPN Interface or the Physical Interface as the Gateway.",
                "format": "bool",
                "scope": "device"
              },
              "Metric": {
                "name": "Metric",
                "description": "The route's metric.",
                "format": "int",
                "defaultValue": 0,
                "allowedValues": null,
                "scope": "device"
              },
              "PrefixSize": {
                "name": "PrefixSize",
                "description": "The subnet prefix size part of the destination prefix for the route entry. This, along with the address will be used to determine the destination prefix to route through the VPN Interface.",
                "format": "int",
                "defaultValue": 0,
                "allowedValues": {
                  "valueType": "range",
                  "min": 0,
                  "max": 429496729
                },
                "scope": "device"
              }
            },
            "scope": "device"
          },
          "TrafficFilterList/{trafficFilterId}": {
            "name": "",
            "title": "trafficFilterId",
            "description": "A sequential integer identifier for the Traffic Filter rules. Sequencing must start at 0.",
            "format": "node",
            "nodes": {
              "App/Id": {
                "name": "Id",
                "description": "App identity for the app-based traffic filter. The value for this node can be one of the following: PackageFamilyName - This App/Id value represents the PackageFamilyName of the app. The PackageFamilyName is the unique name of a Microsoft Store application. FilePath - This App/Id value represents the full file path of the app. For example, C:\\Windows\\System\\Notepad.exe. SYSTEM - This value enables Kernel Drivers to send traffic through VPN (for example, PING or SMB).",
                "format": "string",
                "scope": "device"
              },
              "Claims": {
                "name": "Claims",
                "description": "Specifies a rule in Security Descriptor Definition Language (SDDL) format to check against local user token.",
                "format": "string",
                "scope": "device"
              },
              "Direction": {
                "name": "Direction",
                "description": "\r\n                                Outbound - The traffic filter allows traffic to reach destinations matching this rule. This is the default.\r\n                                Inbound - The traffic filter allows traffic coming from external locations matching this rule.\r\n                            ",
                "format": "string",
                "scope": "device"
              },
              "LocalAddressRanges": {
                "name": "LocalAddressRanges",
                "description": "A list of comma separated values specifying local IP address ranges to allow.",
                "format": "string",
                "scope": "device"
              },
              "LocalPortRanges": {
                "name": "LocalPortRanges",
                "title": "LocalPortRanges",
                "description": "Comma Separated list of ranges for eg. 100-120,200,300-320.",
                "format": "string",
                "scope": "device"
              },
              "Protocol": {
                "name": "Protocol",
                "description": "0-255 number representing the ip protocol (TCP = 6, UDP = 17).",
                "format": "int",
                "defaultValue": 0,
                "allowedValues": {
                  "valueType": "range",
                  "min": 0,
                  "max": 25
                },
                "scope": "device"
              },
              "RemoteAddressRanges": {
                "name": "RemoteAddressRanges",
                "description": "A list of comma separated values specifying remote IP address ranges to allow.",
                "format": "string",
                "scope": "device"
              },
              "RemotePortRanges": {
                "name": "RemotePortRanges",
                "description": "A list of comma separated values specifying remote port ranges to allow. For example, 100-120, 200, 300-320.",
                "format": "string",
                "scope": "device"
              },
              "RoutingPolicyType": {
                "name": "RoutingPolicyType",
                "description": "Specifies the routing policy if an App or Claims type is used in the traffic filter. The scope of this property is for this traffic filter rule alone.",
                "format": "string",
                "scope": "device"
              }
            },
            "scope": "device"
          },
          "TrustedNetworkDetection": {
            "name": "TrustedNetworkDetection",
            "description": "Comma separated string to identify the trusted network. VPN will not connect automatically when the user is on their corporate wireless network where protected resources are directly accessible to the device.",
            "format": "string",
            "scope": "device"
          },
          "UseRasCredentials": {
            "name": "UseRasCredentials",
            "description": "Determines whether the credential manager will save ras credentials after a connection.",
            "format": "bool",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/WiFi": {
    "name": "WiFi",
    "policies": {
      "Profile/{SSID}": {
        "name": "",
        "title": "SSID",
        "description": "The Profile name of the Wi-Fi network. This is added when WlanXml node is added and deleted when WlanXml is deleted.",
        "format": "node",
        "nodes": {
          "ProfileSource": {
            "name": "ProfileSource",
            "description": "Allows for defining which administrative entity is setting this Wi-Fi profile. This can currently be set to either 0=Enterprise or 1=Mobile Operator.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Enterprise"
                },
                "1": {
                  "description": "Mobile Operator"
                }
              }
            },
            "scope": "device"
          },
          "Proxy": {
            "name": "Proxy",
            "description": "Optional node. The format is url:port. Configuration of the network proxy (if any).",
            "format": "string",
            "scope": "device"
          },
          "ProxyPacUrl": {
            "name": "ProxyPacUrl",
            "description": "Optional node. URL to the PAC file location.",
            "format": "string",
            "scope": "device"
          },
          "ProxyWPAD": {
            "name": "ProxyWPAD",
            "description": "Optional node. The presence of the field enables WPAD for proxy lookup.",
            "format": "bool",
            "scope": "device"
          },
          "WiFiCost": {
            "name": "WiFiCost",
            "description": "Optional node. If the policy is active selecting one of the values from the following list will set the cost of WLAN connection for the Wi-Fi profile. (1:Unrestricted - unlimited connection, 2: Fixed - capacity constraints  up to a certain data limit, 3: Variable - costed on per byte basic) Default behaviour: Unrestricted",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "1": {
                  "description": "Unrestricted - unlimited connection."
                },
                "2": {
                  "description": "Fixed - capacity constraints up to a certain data limit."
                },
                "3": {
                  "description": "Variable - paid on per byte basic."
                }
              }
            },
            "scope": "device"
          },
          "WlanXml": {
            "name": "WlanXml",
            "description": "\r\n              XML describing the network configuration and follows Windows WLAN_profile schema.\r\n              Link to schema: http://msdn.microsoft.com/en-us/library/windows/desktop/ms707341(v=vs.85).aspx\r\n            ",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/WindowsDefenderApplicationGuard": {
    "name": "WindowsDefenderApplicationGuard",
    "policies": {
      "Audit/AuditApplicationGuard": {
        "name": "AuditApplicationGuard",
        "description": "This policy setting allows you to decide whether auditing events can be collected from Application Guard.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Audit event logs aren't collected for Application Guard."
            },
            "1": {
              "description": "Application Guard inherits its auditing policies from system and starts to audit security events for Application Guard container."
            }
          }
        },
        "scope": "device"
      },
      "InstallWindowsDefenderApplicationGuard": {
        "name": "InstallWindowsDefenderApplicationGuard",
        "description": "Initiates remote installation of Application Guard feature.",
        "format": "string",
        "scope": "device"
      },
      "Settings/AllowCameraMicrophoneRedirection": {
        "name": "AllowCameraMicrophoneRedirection",
        "description": "This policy setting allows you to determine whether applications inside Microsoft Defender Application Guard can access the device’s camera and microphone when these settings are enabled on the user’s device. If you enable this policy setting, applications inside Microsoft Defender Application Guard will be able to access the camera and microphone on the user’s device. If you disable or don't configure this policy setting, applications inside Microsoft Defender Application Guard will be unable to access the camera and microphone on the user’s device.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Microsoft Defender Application Guard cannot access the device’s camera and microphone. When the policy is not configured, it is the same as disabled (0)."
            },
            "1": {
              "description": "Turns on the functionality to allow Microsoft Defender Application Guard to access the device’s camera and microphone."
            }
          }
        },
        "scope": "device"
      },
      "Settings/AllowPersistence": {
        "name": "AllowPersistence",
        "description": "This policy setting allows you to decide whether data should persist across different sessions in Application Guard.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Application Guard discards user-downloaded files and other items (such as, cookies, Favorites, and so on) during machine restart or user log-off."
            },
            "1": {
              "description": "Application Guard saves user-downloaded files and other items (such as, cookies, Favorites, and so on) for use in future Application Guard sessions."
            }
          }
        },
        "scope": "device"
      },
      "Settings/AllowVirtualGPU": {
        "name": "AllowVirtualGPU",
        "description": "This policy setting allows you to determine whether Application Guard can use the virtual Graphics Processing Unit (GPU) to process graphics. If you enable this setting, Microsoft Defender Application Guard uses Hyper-V to access supported, high-security rendering graphics hardware (GPUs). These GPUs improve rendering performance and battery life while using Microsoft Defender Application Guard, particularly for video playback and other graphics-intensive use cases. If you enable this setting without connecting any high-security rendering graphics hardware, Microsoft Defender Application Guard will automatically revert to software-based (CPU) rendering.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Cannot access the vGPU and uses the CPU to support rendering graphics. When the policy is not configured, it is the same as disabled (0)."
            },
            "1": {
              "description": "Turns on the functionality to access the vGPU offloading graphics rendering from the CPU. This can create a faster experience when working with graphics intense websites or watching video within the container."
            }
          }
        },
        "scope": "device"
      },
      "Settings/AllowWindowsDefenderApplicationGuard": {
        "name": "AllowWindowsDefenderApplicationGuard",
        "description": "Turn on Microsoft Defender Application Guard in Enterprise Mode.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable Microsoft Defender Application Guard"
            },
            "1": {
              "description": "Enable Microsoft Defender Application Guard for Microsoft Edge ONLY"
            },
            "2": {
              "description": "Enable Microsoft Defender Application Guard for isolated Windows environments ONLY"
            },
            "3": {
              "description": "Enable Microsoft Defender Application Guard for Microsoft Edge AND isolated Windows environments"
            }
          }
        },
        "scope": "device"
      },
      "Settings/BlockNonEnterpriseContent": {
        "name": "BlockNonEnterpriseContent",
        "description": "This policy setting allows you to decide whether websites can load non-enterprise content in Microsoft Edge and Internet Explorer.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Non-enterprise content embedded in enterprise sites is allowed to open outside of the Microsoft Defender Application Guard container, directly in Internet Explorer and Microsoft Edge."
            },
            "1": {
              "description": "Non-enterprise content embedded on enterprise sites are stopped from opening in Internet Explorer or Microsoft Edge outside of Microsoft Defender Application Guard."
            }
          }
        },
        "scope": "device"
      },
      "Settings/CertificateThumbprints": {
        "name": "CertificateThumbprints",
        "description": "This policy setting allows certain device level Root Certificates to be shared with the Microsoft Defender Application Guard container. If you enable this setting, certificates with a thumbprint matching the ones specified will be transferred into the container. Multiple certificates can be specified by using a comma to separate the thumbprints for each certificate you want to transfer. Here's an example: b4e72779a8a362c860c36a6461f31e3aa7e58c14,1b1d49f06d2a697a544a1059bd59a7b058cda924. If you disable or don’t configure this setting, certificates are not shared with the Microsoft Defender Application Guard container.",
        "format": "string",
        "scope": "device"
      },
      "Settings/ClipboardFileType": {
        "name": "ClipboardFileType",
        "description": "Determines the type of content that can be copied from the host to Application Guard environment and vice versa.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "1": {
              "description": "Allow text copying."
            },
            "2": {
              "description": "Allow image copying."
            },
            "3": {
              "description": "Allow text and image copying."
            }
          }
        },
        "scope": "device"
      },
      "Settings/ClipboardSettings": {
        "name": "ClipboardSettings",
        "description": "This policy setting allows you to decide how the clipboard behaves while in Application Guard.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Completely turns Off the clipboard functionality for the Application Guard."
            },
            "1": {
              "description": "Turns On clipboard operation from an isolated session to the host."
            },
            "2": {
              "description": "Turns On clipboard operation from the host to an isolated session."
            },
            "3": {
              "description": "Turns On clipboard operation in both the directions."
            }
          }
        },
        "scope": "device"
      },
      "Settings/PrintingSettings": {
        "name": "PrintingSettings",
        "description": "This policy setting allows you to decide how the print functionality behaves while in Application Guard.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disables all print functionality."
            },
            "1": {
              "description": "Enables only XPS printing."
            },
            "10": {
              "description": "Enables both network and PDF printing."
            },
            "11": {
              "description": "Enables network, PDF, and XPS printing."
            },
            "12": {
              "description": "Enables both network and local printing."
            },
            "13": {
              "description": "Enables network, local, and XPS printing."
            },
            "14": {
              "description": "Enables network, local, and PDF printing."
            },
            "15": {
              "description": "Enables all printing."
            },
            "2": {
              "description": "Enables only PDF printing."
            },
            "3": {
              "description": "Enables both PDF and XPS printing."
            },
            "4": {
              "description": "Enables only local printing."
            },
            "5": {
              "description": "Enables both local and XPS printing."
            },
            "6": {
              "description": "Enables both local and PDF printing."
            },
            "7": {
              "description": "Enables local, PDF, and XPS printing."
            },
            "8": {
              "description": "Enables only network printing."
            },
            "9": {
              "description": "Enables both network and XPS printing."
            }
          }
        },
        "scope": "device"
      },
      "Settings/SaveFilesToHost": {
        "name": "SaveFilesToHost",
        "description": "This policy setting allows you to determine whether users can elect to download files from Edge in the container and persist files them from container to the host operating system.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "The user cannot download files from Edge in the container to the host file system. When the policy is not configured, it is the same as disabled (0)."
            },
            "1": {
              "description": "Turns on the functionality to allow users to download files from Edge in the container to the host file system."
            }
          }
        },
        "scope": "device"
      }
    }
  },
  "./Device/Vendor/MSFT/WiredNetwork": {
    "name": "WiredNetwork",
    "policies": {
      "EnableBlockPeriod": {
        "name": "EnableBlockPeriod",
        "description": " Enable block period (minutes), used to specify the duration for which automatic authentication attempts will be blocked from occurring after a failed authentication attempt.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "LanXML": {
        "name": "LanXML",
        "description": "XML describing the wired network configuration and follows the LAN_profile schemas https://msdn.microsoft.com/en-us/library/windows/desktop/aa816366(v=vs.85).aspx",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./SyncML/DMAcc": {
    "name": "DMAcc",
    "policies": {
      "{AccountUID}": {
        "name": "",
        "title": "AccountUID",
        "description": "This interior node acts as a placeholder for zero or more OMA DM server accounts. If this OMA DM server account is bootstrapped using the w7 APPLICATION, the name of this                                node is generated from the 256-bit version of SHA-2 hash of the w7 PROVIDER-ID parm.",
        "format": "node",
        "nodes": {
          "AAuthPref": {
            "name": "AAuthPref",
            "title": "Application Authentication Type preference",
            "description": "Specifies the application authentication preference. Supported values: BASIC, DIGEST. If this value is empty, the client attempts to use the authentication mechanism negotiated in the previous session if one exists. If the value is empty, no previous session exists, and MD5 credentials exist, clients try MD5 authorization first. If the criteria are not met then the client tries BASIC authorization first.",
            "format": "string",
            "scope": "device"
          },
          "AppAddr": {
            "name": "AppAddr",
            "title": "A collection of references to DM server address",
            "description": "Interior node for DM server address.",
            "format": "node",
            "scope": "device"
          },
          "AppAddr/{ObjectName}": {
            "name": "",
            "title": "ObjectName",
            "description": "Defines the OMA DM server address. Only one server address can be configured. When mapping the w7 APPLICATION configuration service provider to the DMAcc Configuration Service Provider, the name of this element is \"1\". This is the first DM address encountered in the w7 APPLICATION configuration service provider, other DM accounts are ignored.",
            "format": "node",
            "nodes": {
              "Addr": {
                "name": "Addr",
                "title": "Management Server Address",
                "description": "Specifies the address of the OMA DM account. The type of address stored is specified by the AddrType element.",
                "format": "string",
                "scope": "device"
              },
              "AddrType": {
                "name": "AddrType",
                "title": "Management Server Address Type",
                "description": "Specifies the format and interpretation of the Addr node value. The default is \"URI\". The default value of \"URI\" specifies that the OMA DM account address in Addr is a URI address. A value of \"IPv4\" specifies that the OMA DM account address in Addr is an IP address.",
                "format": "string",
                "scope": "device"
              },
              "Port": {
                "name": "Port",
                "title": "A collection of all Port objects",
                "description": "Interior node for port information.",
                "format": "node",
                "scope": "device"
              },
              "Port/{ObjectName}": {
                "name": "",
                "title": "ObjectName",
                "description": "Only one port number can be configured. When mapping the w7 APPLICATION configuration service provider to the DMAcc Configuration Service Provider, the name of this element is \"1\".",
                "format": "node",
                "nodes": {
                  "PortNbr": {
                    "name": "PortNbr",
                    "title": "Port",
                    "description": "Specifies the port number of the OMA MD account address. This must be a decimal number that fits within the range of a 16-bit unsigned integer.",
                    "format": "string",
                    "scope": "device"
                  }
                },
                "scope": "device"
              }
            },
            "scope": "device"
          },
          "AppAuth": {
            "name": "AppAuth",
            "title": "A collection of all references to multiple Application Authentication objects",
            "description": "Defines authentication settings.",
            "format": "node",
            "scope": "device"
          },
          "AppAuth/{ObjectName}": {
            "name": "",
            "title": "ObjectName",
            "description": "Defines one set of authentication settings. When mapping the w7 APPLICATION configuration service provider to the DMAcc Configuration Service Provider, the name of this element is same name as the AAuthLevel value (\"CLRED\" or \"SRVCRED\").",
            "format": "node",
            "nodes": {
              "AAuthData": {
                "name": "AAuthData",
                "title": "Application Authentication Data",
                "description": "Specifies the next nonce used for authentication. \"Nonce\" refers to a number used once. It is often a random or pseudo-random number issued in an authentication protocol to ensure that old communications cannot be reused in repeat attacks.",
                "format": "bin",
                "scope": "device"
              },
              "AAuthLevel": {
                "name": "AAuthLevel",
                "title": "Application Authentication level",
                "description": "Specifies the application authentication level. A value of \"CLCRED\" indicates that the credentials client will authenticate itself to the OMA DM server at the OMA DM protocol level. A value of \"SRVCRED\" indicates that the credentials server will authenticate itself to the OMA DM Client at the OMA DM protocol level.",
                "format": "string",
                "scope": "device"
              },
              "AAuthName": {
                "name": "AAuthName",
                "title": "Application Authentication Name",
                "description": "Specifies the authentication name.",
                "format": "string",
                "scope": "device"
              },
              "AAuthSecret": {
                "name": "AAuthSecret",
                "title": "Application Authentication Secret",
                "description": "Specifies the password or secret used for authentication.",
                "format": "string",
                "scope": "device"
              },
              "AAuthType": {
                "name": "AAuthType",
                "title": "Application Authentication Type",
                "description": "Specifies the authentication type. If AAuthLevel is CLCRED, the supported types include BASIC and DIGEST. If AAuthLevel is SRVCRED, the only supported type is DIGEST.",
                "format": "string",
                "scope": "device"
              }
            },
            "scope": "device"
          },
          "AppID": {
            "name": "AppID",
            "title": "Application ID for DM Account MO",
            "description": "Specifies the application identifier for the OMA DM account.. The only supported value is w7.",
            "format": "string",
            "scope": "device"
          },
          "Ext/Microsoft/BackCompatRetryDisabled": {
            "name": "BackCompatRetryDisabled",
            "description": "This node specifies whether to disable the ability of the DM client to communicate with a down-level server.\r\n                                         Possible Values:\r\n                                         false (default) -- Compatibility with down-level servers is enabled\r\n                                         true -- Compatibility with down-level servers is disabled",
            "format": "bool",
            "scope": "device"
          },
          "Ext/Microsoft/CRLCheck": {
            "name": "CRLCheck",
            "title": "CRLCheck",
            "description": "Allows connection to the DM server to check the Certificate Revocation List (CRL). Set to true to enable SSL revocation.",
            "format": "bool",
            "scope": "device"
          },
          "Ext/Microsoft/ConnRetryFreq": {
            "name": "ConnRetryFreq",
            "description": "This node specifies how many times DM client will retry a connection to the server if the connection fails. The default value is 3 retries.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Ext/Microsoft/DefaultEncoding": {
            "name": "DefaultEncoding",
            "description": "This node specifies the encoding that the OMA-DM client will use to encode its first package.  Valid values include \"application/vnd.syncml.dm+xml\" (for XML) and                                         \"application/vnd.syncml.dm+wbxml\" (for WBXML).  If this node is left unspecified, the OMA-DM client defaults to \"application/vnd.syncml.dm+xml\".",
            "format": "string",
            "scope": "device"
          },
          "Ext/Microsoft/DisableOnRoaming": {
            "name": "DisableOnRoaming",
            "title": "DisableOnRoaming",
            "description": "Determines whether the OMA DM client should be launched when roaming.",
            "format": "bool",
            "scope": "device"
          },
          "Ext/Microsoft/InitialBackOffTime": {
            "name": "InitialBackOffTime",
            "description": "This node specifies the initial amount of time (in milliseconds) that the DM client waits before attempting a connection retry. After the initial wait, the wait                                          time grows exponentially. The default value is 16000 milliseconds.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Ext/Microsoft/InitiateSession": {
            "name": "InitiateSession",
            "description": "When this node is added, a session is started with the MDM server.",
            "format": "null",
            "scope": "device"
          },
          "Ext/Microsoft/MaxBackOffTime": {
            "name": "MaxBackOffTime",
            "description": "This node specifies the maximum number of milliseconds to wait before attempting a connection retry. The default value is 86400000.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Ext/Microsoft/ProtoVer": {
            "name": "ProtoVer",
            "title": "The OMA-DM protocol version that the client should use in communicating with the server",
            "description": "This node value corresponds to what the client would put in the VerDTD element of an OMA-DM package. No default value is assumed. The only valid value for this                                           node is 1.1 or 1.2.",
            "format": "string",
            "scope": "device"
          },
          "Ext/Microsoft/Role": {
            "name": "Role",
            "title": "The security role mask that the DM session should run with",
            "description": "If this node is unspecified, its default value is the access role of the session that created the server account. The value for this node must be a subset of the                                         roles used in creating this server account.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Ext/Microsoft/SSLCLIENTCERTSEARCHCRITERIA": {
            "name": "SSLCLIENTCERTSEARCHCRITERIA",
            "title": "SSLCLIENTCERTSEARCHCRITERIA",
            "description": "",
            "format": "string",
            "scope": "device"
          },
          "Ext/Microsoft/UseHwDevID": {
            "name": "UseHwDevID",
            "description": "A value of true indicates that, during an OMA-DM session with this server, the value of the ./DevInfo/DevId node is the hardware ID of device (e.g, IMEI for a                                            GSM device, ESN for a CDMA Device, hashed UUID for a non-radio device). The default value of false indicates that the value of ./DevInfo/DevId node is a hash of                                          the UUID of the device.",
            "format": "bool",
            "scope": "device"
          },
          "Ext/Microsoft/UseNonceResync": {
            "name": "UseNonceResync",
            "description": "This node specifies whether the DM client can use the nonce resynchronization protocol when authentication of a server notification fails. If nonce                                                       resynchronization is disabled and authentication of the server notification fails, the notification is dropped.\r\n                                            Possible Values:\r\n                                            false (default) : Nonce resynchronization is disabled.\r\n                                            true : Nonce resynchronization is enabled.",
            "format": "bool",
            "scope": "device"
          },
          "Name": {
            "name": "Name",
            "title": "Displayable name for the Management Server",
            "description": "Specifies the display name of the application.",
            "format": "string",
            "scope": "device"
          },
          "PrefConRef": {
            "name": "PrefConRef",
            "title": "Reference to preferred connectivity",
            "description": "The only supported values include the NAPID of a bootstrapped NAP management object or a connection GUID used by connection manager. If this node is missing, the device                                  will use the default connection provided by connection manager.",
            "format": "string",
            "scope": "device"
          },
          "ServerID": {
            "name": "ServerID",
            "title": "Server Identifier",
            "description": "Specifies the OMA DM server's unique identifier for the current OMA DM account. This value is case-sensitive.",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./User/Vendor/MSFT/ActiveSync": {
    "name": "ActiveSync",
    "policies": {
      "Accounts/{Account GUID}": {
        "name": "",
        "title": "Account GUID",
        "description": "Defines a specific ActiveSync account. A globally unique identifier (GUID) must be generated for each ActiveSync account on the device.",
        "format": "node",
        "nodes": {
          "AccountIcon": {
            "name": "AccountIcon",
            "description": "Specify the location of the icon associated with the account.",
            "format": "string",
            "scope": "user"
          },
          "AccountName": {
            "name": "AccountName",
            "description": "The name that refers to the account on the device.",
            "format": "string",
            "scope": "user"
          },
          "AccountType": {
            "name": "AccountType",
            "description": "Specify the account type. This value is entered during setup and cannot be modified once entered. An Exchange account is indicated by the string value \"Exchange\".",
            "format": "string",
            "scope": "user"
          },
          "Domain": {
            "name": "Domain",
            "description": "Domain name of the Exchange server",
            "format": "string",
            "scope": "user"
          },
          "EmailAddress": {
            "name": "EmailAddress",
            "description": "The email address the user entered during setup. This is the email address that is associated with the Exchange ActiveSync account and it is required.",
            "format": "string",
            "scope": "user"
          },
          "Options": {
            "name": "Options",
            "description": "Specifies whether email, contacts, and calendar need to synchronize by default, and sets preference such as sync schedule, truncation sizes, and logging.",
            "format": "node",
            "scope": "user"
          },
          "Options/CalendarAgeFilter": {
            "name": "CalendarAgeFilter",
            "description": "Specifies the time window used for syncing calendar items to the phone.",
            "format": "string",
            "scope": "user"
          },
          "Options/ContentTypes": {
            "name": "ContentTypes",
            "description": "Interior node for Content Types",
            "format": "node",
            "scope": "user"
          },
          "Options/ContentTypes/{Content Type GUID}": {
            "name": "",
            "title": "Content Type GUID",
            "description": "Enables or disables syncing email, contacts, task, and calendar.Each is represented by a GUID.Email: {c6d47067-6e92-480e-b0fc-4ba82182fac7}. Contacts: {0dd8685c-e272-4fcb-9ecf-2ead7ea2497b}.Calendar: {4a5d9fe0-f139-4a63-a5a4-4f31ceea02ad}. Tasks:{783ae4f6-4c12-4423-8270-66361260d4f1}",
            "format": "node",
            "nodes": {
              "Enabled": {
                "name": "Enabled",
                "description": "Enables or disables Sync for Email, contacts, calendar, and Tasks.",
                "format": "string",
                "scope": "user"
              },
              "Name": {
                "name": "Name",
                "description": "The name of the content type.",
                "format": "string",
                "scope": "user"
              }
            },
            "scope": "user"
          },
          "Options/Logging": {
            "name": "Logging",
            "description": "Specifies whether diagnostic logging is enabled and at what level.",
            "format": "string",
            "scope": "user"
          },
          "Options/MailAgeFilter": {
            "name": "MailAgeFilter",
            "description": "Specifies the time window used for syncing email items to the phone.",
            "format": "string",
            "scope": "user"
          },
          "Options/MailBodyType": {
            "name": "MailBodyType",
            "description": "Indicates format type of the Email.  Supported values are 0 (none), 1 (text), 2 (HTML), 3 (RTF), and 4 (MIME).",
            "format": "string",
            "scope": "user"
          },
          "Options/MailHTMLTruncation": {
            "name": "MailHTMLTruncation",
            "description": "This setting specifies the size beyond which HTML-formatted e-mail messages are truncated when they are synchronized to the mobile phone. The value is specified in KB. A value of -1 disables truncation.",
            "format": "string",
            "scope": "user"
          },
          "Options/MailPlainTextTruncation": {
            "name": "MailPlainTextTruncation",
            "description": "This setting specifies the size beyond which text-formatted e-mail messages are truncated when they are synchronized to the mobile phone. The value is specified in KB. A value of -1 disables truncation.",
            "format": "string",
            "scope": "user"
          },
          "Options/Schedule": {
            "name": "Schedule",
            "description": "Specifies the time until the next sync is performed in minutes.  If -1 is chosen, a sync will occur as items are received.  If a 0 is chosen, all  syncs must be performed manually.",
            "format": "string",
            "scope": "user"
          },
          "Options/UseSSL": {
            "name": "UseSSL",
            "description": "Specifies whether SSL is used.",
            "format": "string",
            "scope": "user"
          },
          "Password": {
            "name": "Password",
            "description": "A character string that specifies the password for the account. For the Get command, only asterisks are returned.",
            "format": "string",
            "scope": "user"
          },
          "Policies": {
            "name": "Policies",
            "description": "Specifies the mail body type and email age filter.",
            "format": "node",
            "scope": "user"
          },
          "Policies/MailBodyType": {
            "name": "MailBodyType",
            "description": "Specifies the email body type. HTML or plain",
            "format": "string",
            "scope": "user"
          },
          "Policies/MaxMailAgeFilter": {
            "name": "MaxMailAgeFilter",
            "description": "Specifies the time window used for syncing mail items to the device.",
            "format": "string",
            "scope": "user"
          },
          "ServerName": {
            "name": "ServerName",
            "description": "Specifies the server name used by the account.",
            "format": "string",
            "scope": "user"
          },
          "UserName": {
            "name": "UserName",
            "description": "Specifies the user name for the account. The user name cannot be changed after a sync has been successfully performed. The user name can be in the fully qualified format \"someone@example.com\", or just \"username\", depending on the type of account created. For most Exchange accounts, the user name format is just \"username\", whereas for Microsoft, Google, Yahoo, and most POP/IMAP accounts, the user name format is \"someone@example.com\".",
            "format": "string",
            "scope": "user"
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/ClientCertificateInstall": {
    "name": "ClientCertificateInstall",
    "policies": {
      "PFXCertInstall/{UniqueID}": {
        "name": "",
        "title": "UniqueID",
        "description": "Required for PFX certificate installation. A unique ID to differentiate different certificate install requests. \r\nFormat is node. \r\nCalling Delete on the this node, should delete the certificates and the keys that were installed by the corresponding PFX blob.\r\n",
        "format": "node",
        "nodes": {
          "ContainerName": {
            "name": "ContainerName",
            "description": "Optional. \r\nSpecifies the NGC container name (if NGC KSP is chosen for above node). If this node is not specified when NGC KSP is chosen, enrollment will fail.",
            "format": "string",
            "scope": "user"
          },
          "KeyLocation": {
            "name": "KeyLocation",
            "description": "Required for PFX certificate installation. Indicates the KeyStorage provider to target the private key installation to. ",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "1": {
                  "description": "Install to TPM if present, fail if not present."
                },
                "2": {
                  "description": "Install to TPM if present. If not present, fallback to software."
                },
                "3": {
                  "description": "Install to software."
                },
                "4": {
                  "description": "Install to Windows Hello for Business (formerly known as Microsoft Passport for Work) whose name is specified"
                }
              }
            },
            "scope": "user"
          },
          "PFXCertBlob": {
            "name": "PFXCertBlob",
            "description": "Required. \r\nCRYPT_DATA_BLOB structure that contains a PFX packet with the exported and encrypted certificates and keys. Add on this node will trigger the addition to the PFX certificate. This requires that all the other nodes under UniqueID that are parameters for PFX installation (Container Name, KeyLocation, CertPassword, fKeyExportable) are present before this is called. This will also set the Status node to the current Status of the operation.\r\nIf Add is called on this node and a blob already exists, it will fail. If Replace is called on this node, the certificates will be overwritten.\r\nIf Add is called on this node for a new PFX, the certificate will be added. If Replace is called on this node when it does not exist, this will fail.\r\nIn other words, using Replace or Add will result in the effect of either overwriting the old certificate or adding a new certificate\r\nCRYPT_DATA_BLOB on MSDN can be found at http://msdn.microsoft.com/en-us/library/windows/desktop/aa381414(v=vs.85).aspx\r\n",
            "format": "bin",
            "scope": "user"
          },
          "PFXCertPassword": {
            "name": "PFXCertPassword",
            "description": "Password that protects the PFX blob. This is required if the PFX is password protected.",
            "format": "string",
            "scope": "user"
          },
          "PFXCertPasswordEncryptionStore": {
            "name": "PFXCertPasswordEncryptionStore",
            "description": "Optional. \r\nWhen a value of \"2\" is contained iin PFXCertPasswordEncryptionType, specify the store name where the certificate for decrypting the PFXCertPassword is stored. ",
            "format": "string",
            "scope": "user"
          },
          "PFXCertPasswordEncryptionType": {
            "name": "PFXCertPasswordEncryptionType",
            "description": "Optional. Used to specify if the PFX certificate password is encrypted with a certificate.\r\nIf the value is \r\n0 - Password is not encrypted\r\n1- Password is encrypted using the MDM certificate by the MDM server\r\n2 - Password is encrypted by a Custom Certificate by the MDM server. When this value is used here, also specify the custom store name in the PFXCertPasswordEncryptionStore node.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Password is not encrypted."
                },
                "1": {
                  "description": "Password is encrypted with the MDM certificate."
                },
                "2": {
                  "description": "Password is encrypted with custom certificate."
                }
              }
            },
            "scope": "user"
          },
          "PFXKeyExportable": {
            "name": "PFXKeyExportable",
            "description": "Optional. Used to specify if the private key installed is exportable (can be exported later).",
            "format": "bool",
            "scope": "user"
          }
        },
        "scope": "user"
      },
      "SCEP/{UniqueID}": {
        "name": "",
        "title": "UniqueID",
        "description": "Required for SCEP certificate installation. A unique ID to differentiate different certificate install requests. \r\nCalling Delete on the this node, should delete the corresponding SCEP certificate",
        "format": "node",
        "nodes": {
          "Install": {
            "name": "Install",
            "description": "Required for SCEP certificate enrollment. Parent node to group SCEP cert install related request. NOTE: though the children nodes under Install support Replace commands, once the Exec command is sent to the device, the device will take the values which are set when the Exec command is accepted. The server should not expect the node value change after Exec command is accepted will impact the current undergoing enrollment. The server should check the Status node value and make sure the device is not at unknown stage before changing children node values.",
            "format": "node",
            "scope": "user"
          },
          "Install/AADKeyIdentifierList": {
            "name": "AADKeyIdentifierList",
            "description": "Optional. Specify the AAD Key Identifier List as a semicolon separated values. On Enroll, the values in this list are validated against the AAD Key present on the device. If no match is found, enrollment will fail.",
            "format": "string",
            "scope": "user"
          },
          "Install/CAThumbprint": {
            "name": "CAThumbprint",
            "description": "Required. Specify root CA thumbprint. It is a 20-byte value of the SHA1 certificate hash specified as a hexadecimal string value. When client authenticates SCEP server, it checks CA cert from SCEP server whether match with this cert. If not match, fail the authentication. ",
            "format": "string",
            "scope": "user"
          },
          "Install/Challenge": {
            "name": "Challenge",
            "description": "Required for SCEP certificate enrollment. B64 encoded SCEP enrollment challenge. Challenge will be deleted shortly after the Exec command is accepted.",
            "format": "string",
            "scope": "user"
          },
          "Install/ContainerName": {
            "name": "ContainerName",
            "description": "Optional. \r\nSpecifies the NGC container name (if NGC KSP is chosen for above node). If this node is not specified when NGC KSP is chosen, enrollment will fail.",
            "format": "string",
            "scope": "user"
          },
          "Install/CustomTextToShowInPrompt": {
            "name": "CustomTextToShowInPrompt",
            "description": "Optional. Specifies the custom text to show on the NGC PIN prompt during certificate enrollment. The admin can choose to provide more contextual information for why the user needs to enter the PIN and what the certificate will be used for through this.",
            "format": "string",
            "scope": "user"
          },
          "Install/EKUMapping": {
            "name": "EKUMapping",
            "description": "Required. Specify extended key usages. Subjected to SCEP server configuration. The list of OIDs are separated by plus “+”. Sample format: OID1+OID2+OID3.",
            "format": "string",
            "scope": "user"
          },
          "Install/HashAlgorithm": {
            "name": "HashAlgorithm",
            "description": "Required for enrollment. Hash algorithm family (SHA-1, SHA-2, SHA-3) specified by MDM server. If multiple hash algorithm families are specified, they must be separated via +. \r\n\r\nFor NGC, only SHA256 is supported as the supported algorithm",
            "format": "string",
            "scope": "user"
          },
          "Install/KeyLength": {
            "name": "KeyLength",
            "description": "Required for enrollment. Specify private key length (RSA). \r\nValid value: 1024, 2048, 4096. For NGC, only 2048 is the supported keylength.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "1024": {
                  "description": "1024"
                },
                "2048": {
                  "description": "2048"
                },
                "4096": {
                  "description": "4096"
                }
              }
            },
            "scope": "user"
          },
          "Install/KeyProtection": {
            "name": "KeyProtection",
            "description": "Optional. Specify where to keep the private key. Note that even it is protected by TPM, it is not guarded with TPM PIN. \r\nSCEP enrolled cert doesn’t support TPM PIN protection. ",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "1": {
                  "description": "Private key protected by TPM."
                },
                "2": {
                  "description": "Private key protected by phone TPM if the device supports TPM. All Windows Phone 8.1 devices support TPM and will treat value 2 as 1."
                },
                "3": {
                  "description": "(Default) Private key saved in software KSP."
                },
                "4": {
                  "description": "Private key protected by Windows Hello for Business (formerly known as Microsoft Passport for Work). If this option is specified, the ContainerName must be specified, otherwise enrollment will fail."
                }
              }
            },
            "scope": "user"
          },
          "Install/KeyUsage": {
            "name": "KeyUsage",
            "description": "Required for enrollment. Specify the key usage bits (0x80, 0x20, 0xA0, etc.) for the certificate in decimal format. The value should at least have second (0x20) or forth (0x80) or both bits set. If the value doesn’t have those bits set, configuration will fail.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "user"
          },
          "Install/RetryCount": {
            "name": "RetryCount",
            "description": "Optional. Special to SCEP. Specify device retry times when the SCEP sever sends pending status. Format is int. Default value is 3. Max value: the value cannot be larger than 30. If it is larger than 30, the device will use 30.\r\nThe min value is 0 which means no retry. ",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 3
            },
            "scope": "user"
          },
          "Install/RetryDelay": {
            "name": "RetryDelay",
            "description": "Optional. When the SCEP server sends pending status, specify device retry waiting time in minutes. \r\n\r\nDefault value is: 5\r\nThe min value is 1. ",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 429496729
            },
            "scope": "user"
          },
          "Install/ServerURL": {
            "name": "ServerURL",
            "description": "Required for SCEP certificate enrollment. Specify the cert enrollment server. The server could specify multiple server URLs separated by semicolon. ",
            "format": "string",
            "scope": "user"
          },
          "Install/SubjectAlternativeNames": {
            "name": "SubjectAlternativeNames",
            "description": "Optional. Specify subject alternative name. Multiple alternative names could be specified by this node. Each name is the combination of name format+actual name. Refer name type definition in MSDN. Each pair is separated by semicolon. E.g. multiple SAN are presented in the format of [nameformat1]+[actual name1];[name format 2]+[actual name2]. ",
            "format": "string",
            "scope": "user"
          },
          "Install/SubjectName": {
            "name": "SubjectName",
            "description": "Required. Specify the subject name. The SubjectName value is quoted if it contains leading or trailing white space or one of the following characters: (“,” “=” “+” “;” ).",
            "format": "string",
            "scope": "user"
          },
          "Install/TemplateName": {
            "name": "TemplateName",
            "description": "Optional. OID of certificate template name. Note that this name is typically ignored by the SCEP server, therefore the MDM server typically doesn’t need to provide it.",
            "format": "string",
            "scope": "user"
          },
          "Install/ValidPeriod": {
            "name": "ValidPeriod",
            "description": "Optional. Specify the units for valid period. Valid values are: Days(Default), Months, Years. \r\nMDM server expected certificate validation period (ValidPeriodUnits + ValidPerio) the SCEP server as part of certificate enrollment request. It is the server’s decision on how to use this valid period to create the certificate.",
            "format": "string",
            "scope": "user"
          },
          "Install/ValidPeriodUnits": {
            "name": "ValidPeriodUnits",
            "description": "Optional. Specify desired number of units used in validity period. Subjected to SCEP server configuration. Default is 0. The units are defined in ValidPeriod node. Note the valid period specified by MDM will overwrite the valid period specified in cert template. For example, if ValidPeriod is days and ValidPeriodUnits is 30, it means the total valid duration is 30 days. \r\nNOTE: The device only sends the MDM server expected certificate validation period (ValidPeriodUnits + ValidPerio) the SCEP server as part of certificate enrollment request. It is the server’s decision on how to use this valid period to create the certificate.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "user"
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/DMClient": {
    "name": "DMClient",
    "policies": {
      "Provider/{ProviderID}": {
        "name": "",
        "title": "ProviderID",
        "description": "This node contains the URI-encoded value of the bootstrapped device management account’s Provider ID. Scope is dynamic. This value is set and controlled by the MDM server. As a best practice, use text that doesn’t require XML/URI escaping.",
        "format": "node",
        "nodes": {
          "FirstSyncStatus": {
            "name": "FirstSyncStatus",
            "format": "node",
            "scope": "user"
          },
          "FirstSyncStatus/AllowCollectLogsButton": {
            "name": "AllowCollectLogsButton",
            "description": "This node decides whether or not the MDM progress page displays the Collect Logs button.  This node only applies to the user MDM status page (on a per user basis).",
            "format": "bool",
            "scope": "user"
          },
          "FirstSyncStatus/CustomErrorText": {
            "name": "CustomErrorText",
            "description": "This node allows the MDM to set custom error text, detailing what the user needs to do in case of error.  This node only applies to the user MDM status page (on a per user basis).",
            "format": "string",
            "scope": "user"
          },
          "FirstSyncStatus/ExpectedMSIAppPackages": {
            "name": "ExpectedMSIAppPackages",
            "description": "This node contains a list of LocURIs that refer to App Packages the ISV expects to provision via EnterpriseDesktopAppManagement CSP, delimited by the character L\"\\xF000\".  The LocURI will be followed by a semicolon and a number, representing the amount of apps included in the App Package.  We will not verify that number.  E.G. ./User/Vendor/MSFT/EnterpriseDesktopAppManagement/MSI/ProductID1/Status;4\"\\xF000\" ./User/Vendor/MSFT/EnterpriseDesktopAppManagement/MSI/ProductID2/Status;2  Which  will represent that App Package ProductID1 contains 4 apps, whereas ProductID2 contains 2 apps.  This is per user.",
            "format": "string",
            "scope": "user"
          },
          "FirstSyncStatus/ExpectedModernAppPackages": {
            "name": "ExpectedModernAppPackages",
            "description": "This node contains a list of LocURIs that refer to App Packages the ISV expects to provision via EnterpriseModernAppManagement CSP, delimited by the character L\"\\xF000\".  The LocURI will be followed by a semicolon and a number, representing the amount of apps included in the App Package.  We will not verify that number.  E.G. ./Vendor/MSFT/EnterpriseModernAppManagement/AppManagement/AppStore/PackageFamilyName/PackageFullName/Name;4\"\\xF000\" ./Vendor/MSFT/EnterpriseModernAppManagement/AppManagement/AppStore/PackageFamilyName/PackageFullName2/Name;2  Which  will represent that App Package PackageFullName contains 4 apps, whereas PackageFullName2 contains 2 apps.  This is per user.",
            "format": "string",
            "scope": "user"
          },
          "FirstSyncStatus/ExpectedNetworkProfiles": {
            "name": "ExpectedNetworkProfiles",
            "description": "This node contains a list of LocURIs that refer to Wi-Fi profiles and VPN profiles the ISV expects to provision, delimited by the character L\"\\xF000\".  This is per user.",
            "format": "string",
            "scope": "user"
          },
          "FirstSyncStatus/ExpectedPFXCerts": {
            "name": "ExpectedPFXCerts",
            "description": "This node contains a list of LocURIs that refer to certs the ISV expects to provision via ClientCertificateInstall CSP, delimited by the character L\"\\xF000\" (the CSP_LIST_DELIMITER). This is per user.",
            "format": "string",
            "scope": "user"
          },
          "FirstSyncStatus/ExpectedPolicies": {
            "name": "ExpectedPolicies",
            "description": "This node contains a list of LocURIs that refer to Policies the ISV expects to provision, delimited by the character L\"\\xF000\" (the CSP_LIST_DELIMITER).  This is per user.",
            "format": "string",
            "scope": "user"
          },
          "FirstSyncStatus/ExpectedSCEPCerts": {
            "name": "ExpectedSCEPCerts",
            "description": "This node contains a list of LocURIs that refer to SCEP certs the ISV expects to provision via ClientCertificateInstall CSP, delimited by the character L\"\\xF000\" (the CSP_LIST_DELIMITER). This is per user.",
            "format": "string",
            "scope": "user"
          },
          "FirstSyncStatus/IsSyncDone": {
            "name": "IsSyncDone",
            "description": "This node, when doing a get, tells the server if the “First Syncs\" are done and the device is fully provisioned.  When doing a Set, this triggers the UX to override whatever state it is in and tell the user that the device is provisioned.  It cannot be set from True to False (it will not change its mind on whether or not the sync is done), and it cannot be set from True to True (to prevent notifications from firing multiple times).  This node only applies to the user MDM status page (on a per user basis).",
            "format": "bool",
            "scope": "user"
          },
          "FirstSyncStatus/ServerHasFinishedProvisioning": {
            "name": "ServerHasFinishedProvisioning",
            "description": "This node is set by the server to inform the UX that the server has finished provisioning the device.  This was added so that the server can “change its mind\" about what it needs to provision on the device.  When this node is set, many other DM Client nodes will no longer be able to be changed.  If this node is not True, the UX will consider the provisioning a failure.  Once set to true, it would reject attempts to change it back to false with CFGMGR_E_COMMANDNOTALLOWED.  This node applies to the per user expected policies and resources lists.",
            "format": "bool",
            "scope": "user"
          },
          "FirstSyncStatus/WasDeviceSuccessfullyProvisioned": {
            "name": "WasDeviceSuccessfullyProvisioned",
            "description": "Integer node determining if a Device was Successfully provisioned.  0 is failure, 1 is success, 2 is in progress.  Once the value is changed to 0 or 1, the value cannot be changed again.  The client will change the value of success or failure and update the node.  The server can, however, force a failure or success message to appear on the device by setting this value and then setting the IsSyncDone node to true.  This node only applies to the user MDM status page (on a per user basis).",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "The device has failed to provision the user"
                },
                "1": {
                  "description": "The device has successfully provisioned the user."
                },
                "2": {
                  "description": "Provisoining is in progress."
                }
              }
            },
            "scope": "user"
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/EMAIL2": {
    "name": "EMAIL2",
    "policies": {
      "{Account GUID}": {
        "name": "",
        "title": "Account GUID",
        "description": "This is unique and identifies a particular account. Also, we can only have 6 additional email accounts. So, depending on how many are already there on the device, we can have from 1 to 6.",
        "format": "node",
        "nodes": {
          "ACCOUNTICON": {
            "name": "ACCOUNTICON",
            "description": "",
            "format": "string",
            "scope": "user"
          },
          "ACCOUNTTYPE": {
            "name": "ACCOUNTTYPE",
            "description": "Specifies the type of account. Valid values are: Email - normal email, VVM - visual voice mail",
            "format": "string",
            "scope": "user"
          },
          "AUTHNAME": {
            "name": "AUTHNAME",
            "description": "Character string that specifies the name used to authorize the user to a specific email account (also known as the user's logon name).",
            "format": "string",
            "scope": "user"
          },
          "AUTHREQUIRED": {
            "name": "AUTHREQUIRED",
            "description": "Character string that specifies whether the outgoing server requires authentication.\r\n                1 for TRUE\r\n                0 for FALSE(default).\r\n                Note: If this is not specified then SMTP authentication will not be done. Also, this is different from the SMTPALTENABLED. That is to specify different set of credentials for SMTP.\r\n              ",
            "format": "string",
            "scope": "user"
          },
          "AUTHSECRET": {
            "name": "AUTHSECRET",
            "description": "Character string that specifies the user's password. The same password is used for SMTP authentication.",
            "format": "string",
            "scope": "user"
          },
          "CALENDARSERVER": {
            "name": "CALENDARSERVER",
            "description": "Server for calendar sync if it is different from the email server.",
            "format": "string",
            "scope": "user"
          },
          "CALENDARSERVERREQUIRESSL": {
            "name": "CALENDARSERVERREQUIRESSL",
            "description": "Indicates if the connection to the calendar server requires SSL.",
            "format": "string",
            "scope": "user"
          },
          "CALENDARSYNCSCHEDULE": {
            "name": "CALENDARSYNCSCHEDULE",
            "description": "Sets the schedule for syncing calendar items.",
            "format": "string",
            "scope": "user"
          },
          "CELLULARONLY": {
            "name": "CELLULARONLY",
            "description": "If this flag is set, the account only uses the cellular network and not Wi-Fi.",
            "format": "string",
            "scope": "user"
          },
          "CONTACTSSERVER": {
            "name": "CONTACTSSERVER",
            "description": "Server for contact sync if it is different from the email server.",
            "format": "string",
            "scope": "user"
          },
          "CONTACTSSERVERREQUIRESSL": {
            "name": "CONTACTSSERVERREQUIRESSL",
            "description": "Indicates if the connection to the contact server requires SSL.",
            "format": "string",
            "scope": "user"
          },
          "CONTACTSSYNCSCHEDULE": {
            "name": "CONTACTSSYNCSCHEDULE",
            "description": "Sets the schedule for syncing contact items.",
            "format": "string",
            "scope": "user"
          },
          "DOMAIN": {
            "name": "DOMAIN",
            "description": "Character string that specifies the incoming server credentials domain. Limited to 255 characters.",
            "format": "string",
            "scope": "user"
          },
          "DWNDAY": {
            "name": "DWNDAY",
            "description": "Character string that specifies how many days' worth of email should be downloaded from the server.",
            "format": "string",
            "scope": "user"
          },
          "INSERVER": {
            "name": "INSERVER",
            "description": "Character string that specifies how many days' worth of email should be downloaded from the server. server name:port number",
            "format": "string",
            "scope": "user"
          },
          "KEEPMAX": {
            "name": "KEEPMAX",
            "description": "Specifies the maximum size for a message attachment. Attachments beyond this size will not be downloaded but it will remain on the server. The message itself will be downloaded. This value can be set only for IMAP4 accounts. The limit is specified in KB.",
            "format": "string",
            "scope": "user"
          },
          "LINGER": {
            "name": "LINGER",
            "description": "Character string that specifies the length of time between email send/receive updates in minutes.  0 indicates that updates must be performed manually.",
            "format": "string",
            "scope": "user"
          },
          "NAME": {
            "name": "NAME",
            "description": "Character string that specifies the name of the sender displayed on a sent email. It should be set to the user’s name. Limited to 255 characters.",
            "format": "string",
            "scope": "user"
          },
          "OUTSERVER": {
            "name": "OUTSERVER",
            "description": " Character string that specifies the name of the messaging service's outgoing email server. Limited to 62 characters. The value format is: server name:port number",
            "format": "string",
            "scope": "user"
          },
          "REPLYADDR": {
            "name": "REPLYADDR",
            "description": "Character string that specifies the reply email address of the user (usually the same as the user email address). Sending email will fail without it. Limited to 255 characters.",
            "format": "string",
            "scope": "user"
          },
          "RETRIEVE": {
            "name": "RETRIEVE",
            "description": "Specifies the maximum size in bytes for messages retrieved from the incoming email server. Messages beyond this size are retrieved, but truncated.",
            "format": "string",
            "scope": "user"
          },
          "SERVERDELETEACTION": {
            "name": "SERVERDELETEACTION",
            "description": "Character string that specifies how message is deleted on server. The default action depends on the transport.",
            "format": "string",
            "scope": "user"
          },
          "SERVICENAME": {
            "name": "SERVICENAME",
            "description": "Character string that specifies the name of the email service to create or edit (32 characters maximum).",
            "format": "string",
            "scope": "user"
          },
          "SERVICETYPE": {
            "name": "SERVICETYPE",
            "description": "Character string that specifies the type of email service to create or edit (for example, \"IMAP4\" or \"POP3\").",
            "format": "string",
            "scope": "user"
          },
          "SMTPALTAUTHNAME": {
            "name": "SMTPALTAUTHNAME",
            "description": "Character string that specifies the display name associated with the user's alternative SMTP email account.",
            "format": "string",
            "scope": "user"
          },
          "SMTPALTDOMAIN": {
            "name": "SMTPALTDOMAIN",
            "description": "Character string that specifies the domain name for the user's alternative SMTP account.",
            "format": "string",
            "scope": "user"
          },
          "SMTPALTENABLED": {
            "name": "SMTPALTENABLED",
            "description": "Character string that specifies if the user's alternate SMTP account is enabled.",
            "format": "string",
            "scope": "user"
          },
          "SMTPALTPASSWORD": {
            "name": "SMTPALTPASSWORD",
            "description": "Character string that specifies the password for the user's alternate SMTP account.",
            "format": "string",
            "scope": "user"
          },
          "SYNCINGCONTENTTYPES": {
            "name": "SYNCINGCONTENTTYPES",
            "description": "Specifies a bitmask for which content types are supported for syncing (eg: Mail, Contacts, Calendar).",
            "format": "string",
            "scope": "user"
          },
          "TAGPROPS": {
            "name": "TAGPROPS",
            "description": "Specifies that stated parameter element name attributes is nonstandard tag properties.",
            "format": "node",
            "scope": "user"
          },
          "TAGPROPS/8128000B": {
            "name": "8128000B",
            "description": "Character string that specifies if the incoming email server requires SSL.",
            "format": "string",
            "scope": "user"
          },
          "TAGPROPS/812C000B": {
            "name": "812C000B",
            "description": "Character string that specifies if the outgoing email server requires SSL.",
            "format": "string",
            "scope": "user"
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/EnterpriseDesktopAppManagement": {
    "name": "EnterpriseDesktopAppManagement",
    "policies": {
      "MSI/{ProductID}": {
        "name": "",
        "title": "ProductID",
        "description": "The MSI product code for the application.",
        "format": "node",
        "nodes": {
          "DownloadInstall": {
            "name": "DownloadInstall",
            "description": "",
            "format": "xml",
            "scope": "user"
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/EnterpriseModernAppManagement": {
    "name": "EnterpriseModernAppManagement",
    "policies": {
      "AppInstallation/{PackageFamilyName}": {
        "name": "",
        "title": "PackageFamilyName",
        "description": " Package family name (PFN) of the app. There is one for each PFN on the device when reporting inventory. These items are rooted under their signing origin.",
        "format": "node",
        "nodes": {
          "HostedInstall": {
            "name": "HostedInstall",
            "description": "Command to perform an install of an app package from a hosted location (this can be a local drive, a UNC, or https data source).",
            "format": "xml",
            "scope": "user"
          },
          "StoreInstall": {
            "name": "StoreInstall",
            "description": "Command to perform an install of an app and a license from the Microsoft Store.",
            "format": "xml",
            "scope": "user"
          }
        },
        "scope": "user"
      },
      "AppLicenses/StoreLicenses/{LicenseID}": {
        "name": "",
        "title": "LicenseID",
        "description": "License ID for a store installed app. The license ID is generally the PFN of the app.",
        "format": "node",
        "scope": "user"
      },
      "AppManagement/AppInventoryQuery": {
        "name": "AppInventoryQuery",
        "description": "Specifies the query for app inventory.",
        "format": "xml",
        "scope": "user"
      },
      "AppManagement/AppStore": {
        "name": "AppStore",
        "format": "node",
        "scope": "user"
      },
      "AppManagement/AppStore/ReleaseManagement": {
        "name": "ReleaseManagement",
        "description": "Interior node for the managing updates through the Microsoft Store. These settings allow the IT admin to specify update channels for apps that they want their users to use for receiving updates. It allows the IT admin to assign a specific release to a smaller group for testing before the large deployment to the rest of the organization.",
        "format": "node",
        "scope": "user"
      },
      "AppManagement/AppStore/ReleaseManagement/{ReleaseManagementKey}": {
        "name": "",
        "title": "ReleaseManagementKey",
        "description": " Identifier for the app or set of apps. If there is only one app, it is the PackageFamilyName. If it is for a set of apps, it is the PackageFamilyName of the main app.",
        "format": "node",
        "nodes": {
          "ChannelId": {
            "name": "ChannelId",
            "description": "Specifies the app channel ID.",
            "format": "string",
            "scope": "user"
          },
          "ReleaseManagementId": {
            "name": "ReleaseManagementId",
            "description": "The IT admin can specify a release ID to indicate a specific release that they would like the user or device to be on.",
            "format": "string",
            "scope": "user"
          }
        },
        "scope": "user"
      },
      "AppManagement/AppStore/{PackageFamilyName}": {
        "name": "",
        "title": "PackageFamilyName",
        "description": "Package family name (PFN) of the app. There is one for each PFN on the device when reporting inventory. These items are rooted under their signing origin.",
        "format": "node",
        "nodes": {
          "AppSettingPolicy": {
            "name": "AppSettingPolicy",
            "description": "Interior node for all managed app setting values.",
            "format": "node",
            "scope": "user"
          },
          "AppSettingPolicy/{SettingValue}": {
            "name": "",
            "title": "SettingValue",
            "description": "The SettingValue and data represent a key value pair to be configured for the app. The node represents the name of the key and the data represents the value. You can find this value in LocalSettings in the Managed.App.Settings container.",
            "format": "string",
            "scope": "user"
          },
          "DoNotUpdate": {
            "name": "DoNotUpdate",
            "title": "DoNotUpdate",
            "description": "Specifies whether you want to block a specific app from being updated via auto-updates.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "False"
                },
                "1": {
                  "description": "True"
                }
              }
            },
            "scope": "user"
          },
          "MaintainProcessorArchitectureOnUpdate": {
            "name": "MaintainProcessorArchitectureOnUpdate",
            "title": "MaintainProcessorArchitectureOnUpdate",
            "description": "Specify whether on a AMD64 device, across an app update, the architecture of the installed app must not change. For example if you have the x86 flavor of a Windows app installed, with this setting enabled, across an update, the x86 flavor will be installed even when x64 flavor is available.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "False"
                },
                "1": {
                  "description": "True"
                }
              }
            },
            "scope": "user"
          },
          "{PackageFullName}": {
            "name": "",
            "title": "PackageFullName",
            "description": "Full name of the package installed.",
            "format": "node",
            "scope": "user"
          }
        },
        "scope": "user"
      },
      "AppManagement/RemovePackage": {
        "name": "RemovePackage",
        "description": "Used to remove packages.",
        "format": "xml",
        "scope": "user"
      },
      "AppManagement/ResetPackage": {
        "name": "ResetPackage",
        "description": "Used to restore the Windows app to its initial configuration.",
        "format": "xml",
        "scope": "user"
      },
      "AppManagement/System": {
        "name": "System",
        "format": "node",
        "scope": "user"
      },
      "AppManagement/System/ReleaseManagement": {
        "name": "ReleaseManagement",
        "description": "Interior node for the managing updates through the Microsoft Store. These settings allow the IT admin to specify update channels for apps that they want their users to use for receiving updates. It allows the IT admin to assign a specific release to a smaller group for testing before the large deployment to the rest of the organization.",
        "format": "node",
        "scope": "user"
      },
      "AppManagement/System/ReleaseManagement/{ReleaseManagementKey}": {
        "name": "",
        "title": "ReleaseManagementKey",
        "description": " Identifier for the app or set of apps. If there is only one app, it is the PackageFamilyName. If it is for a set of apps, it is the PackageFamilyName of the main app.",
        "format": "node",
        "nodes": {
          "ChannelId": {
            "name": "ChannelId",
            "description": "Specifies the app channel ID.",
            "format": "string",
            "scope": "user"
          },
          "ReleaseManagementId": {
            "name": "ReleaseManagementId",
            "description": "The IT admin can specify a release ID to indicate a specific release that they would like the user or device to be on.",
            "format": "string",
            "scope": "user"
          }
        },
        "scope": "user"
      },
      "AppManagement/System/{PackageFamilyName}": {
        "name": "",
        "title": "PackageFamilyName",
        "description": "Package family name (PFN) of the app. There is one for each PFN on the device when reporting inventory. These items are rooted under their signing origin.",
        "format": "node",
        "nodes": {
          "AppSettingPolicy": {
            "name": "AppSettingPolicy",
            "description": "Interior node for all managed app setting values.",
            "format": "node",
            "scope": "user"
          },
          "AppSettingPolicy/{SettingValue}": {
            "name": "",
            "title": "SettingValue",
            "description": "The SettingValue and data represent a key value pair to be configured for the app. The node represents the name of the key and the data represents the value. You can find this value in LocalSettings in the Managed.App.Settings container.",
            "format": "string",
            "scope": "user"
          },
          "DoNotUpdate": {
            "name": "DoNotUpdate",
            "title": "DoNotUpdate",
            "description": "Specifies whether you want to block a specific app from being updated via auto-updates.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "False"
                },
                "1": {
                  "description": "True"
                }
              }
            },
            "scope": "user"
          },
          "MaintainProcessorArchitectureOnUpdate": {
            "name": "MaintainProcessorArchitectureOnUpdate",
            "title": "MaintainProcessorArchitectureOnUpdate",
            "description": "Specify whether on a AMD64 device, across an app update, the architecture of the installed app must not change. For example if you have the x86 flavor of a Windows app installed, with this setting enabled, across an update, the x86 flavor will be installed even when x64 flavor is available.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "False"
                },
                "1": {
                  "description": "True"
                }
              }
            },
            "scope": "user"
          },
          "{PackageFullName}": {
            "name": "",
            "title": "PackageFullName",
            "description": "Full name of the package installed.",
            "format": "node",
            "scope": "user"
          }
        },
        "scope": "user"
      },
      "AppManagement/nonStore": {
        "name": "nonStore",
        "format": "node",
        "scope": "user"
      },
      "AppManagement/nonStore/ReleaseManagement": {
        "name": "ReleaseManagement",
        "description": "Interior node for the managing updates through the Microsoft Store. These settings allow the IT admin to specify update channels for apps that they want their users to use for receiving updates. It allows the IT admin to assign a specific release to a smaller group for testing before the large deployment to the rest of the organization.",
        "format": "node",
        "scope": "user"
      },
      "AppManagement/nonStore/ReleaseManagement/{ReleaseManagementKey}": {
        "name": "",
        "title": "ReleaseManagementKey",
        "description": " Identifier for the app or set of apps. If there is only one app, it is the PackageFamilyName. If it is for a set of apps, it is the PackageFamilyName of the main app.",
        "format": "node",
        "nodes": {
          "ChannelId": {
            "name": "ChannelId",
            "description": "Specifies the app channel ID.",
            "format": "string",
            "scope": "user"
          },
          "ReleaseManagementId": {
            "name": "ReleaseManagementId",
            "description": "The IT admin can specify a release ID to indicate a specific release that they would like the user or device to be on.",
            "format": "string",
            "scope": "user"
          }
        },
        "scope": "user"
      },
      "AppManagement/nonStore/{PackageFamilyName}": {
        "name": "",
        "title": "PackageFamilyName",
        "description": "Package family name (PFN) of the app. There is one for each PFN on the device when reporting inventory. These items are rooted under their signing origin.",
        "format": "node",
        "nodes": {
          "AppSettingPolicy": {
            "name": "AppSettingPolicy",
            "description": "Interior node for all managed app setting values.",
            "format": "node",
            "scope": "user"
          },
          "AppSettingPolicy/{SettingValue}": {
            "name": "",
            "title": "SettingValue",
            "description": "The SettingValue and data represent a key value pair to be configured for the app. The node represents the name of the key and the data represents the value. You can find this value in LocalSettings in the Managed.App.Settings container.",
            "format": "string",
            "scope": "user"
          },
          "DoNotUpdate": {
            "name": "DoNotUpdate",
            "title": "DoNotUpdate",
            "description": "Specifies whether you want to block a specific app from being updated via auto-updates.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "False"
                },
                "1": {
                  "description": "True"
                }
              }
            },
            "scope": "user"
          },
          "MaintainProcessorArchitectureOnUpdate": {
            "name": "MaintainProcessorArchitectureOnUpdate",
            "title": "MaintainProcessorArchitectureOnUpdate",
            "description": "Specify whether on a AMD64 device, across an app update, the architecture of the installed app must not change. For example if you have the x86 flavor of a Windows app installed, with this setting enabled, across an update, the x86 flavor will be installed even when x64 flavor is available.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "False"
                },
                "1": {
                  "description": "True"
                }
              }
            },
            "scope": "user"
          },
          "{PackageFullName}": {
            "name": "",
            "title": "PackageFullName",
            "description": "Full name of the package installed.",
            "format": "node",
            "scope": "user"
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/NodeCache": {
    "name": "NodeCache",
    "policies": {
      "{ProviderID}": {
        "name": "",
        "title": "ProviderID",
        "description": "Group settings per DM server. Each group of settings is distinguished by the server's Provider ID. It should be the same DM server PROVIDER-ID value that was supplied through the w7 APPLICATION configuration service provider XML during the enrollment process. In Windows Phone 8, only one enterprise management server is supported. That is, there should be only one ProviderID node under NodeCache.",
        "format": "node",
        "nodes": {
          "CacheVersion": {
            "name": "CacheVersion",
            "description": "Character string representing the cache version set by the server.",
            "format": "string",
            "scope": "user"
          },
          "Nodes/{NodeID}": {
            "name": "",
            "title": "NodeID",
            "description": "Information about each cached node is stored under NodeID as specified by the server. This value must not contain a comma.",
            "format": "node",
            "nodes": {
              "AutoSetExpectedValue": {
                "name": "AutoSetExpectedValue",
                "description": "This will automatically set the value on the device to match the node's actual value. The node is specified in NodeURI.",
                "format": "null",
                "scope": "user"
              },
              "ExpectedValue": {
                "name": "ExpectedValue",
                "description": "This is the value that the server expects to be on the device. When the configuration service provider initiates a session, it checks the expected value against the node's actual value.",
                "format": "string",
                "scope": "user"
              },
              "NodeURI": {
                "name": "NodeURI",
                "description": "This node's value is a complete OMA DM node URI. It can specify either an interior or leaf node in the device management tree.",
                "format": "string",
                "scope": "user"
              }
            },
            "scope": "user"
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Office": {
    "name": "Office",
    "policies": {
      "Installation/{id}": {
        "name": "",
        "title": "id",
        "description": "A unique identifier which represents the installation instance id.",
        "format": "node",
        "nodes": {
          "Install": {
            "name": "Install",
            "description": "The install action will install office given the configuration in the data.  The string data is the xml configuration to use in order to install office.",
            "format": "string",
            "scope": "user"
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/PDE": {
    "name": "PDE",
    "policies": {
      "EnablePersonalDataEncryption": {
        "name": "EnablePersonalDataEncryption",
        "description": "Allows the Admin to enable Personal Data Encryption. Set to '1' to set this policy.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable Personal Data Encryption."
            },
            "1": {
              "description": "Enable Personal Data Encryption."
            }
          }
        },
        "scope": "user"
      },
      "ProtectFolders/ProtectDesktop": {
        "name": "ProtectDesktop",
        "description": "Allows the Admin to enable PDE on Desktop folder. Set to '1' to set this policy.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable PDE on the folder. If the folder is currently protected by PDE, this will result in unprotecting the folder."
            },
            "1": {
              "description": "Enable PDE on the folder."
            }
          }
        },
        "scope": "user"
      },
      "ProtectFolders/ProtectDocuments": {
        "name": "ProtectDocuments",
        "description": "Allows the Admin to enable PDE on Documents folder. Set to '1' to set this policy.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable PDE on the folder. If the folder is currently protected by PDE, this will result in unprotecting the folder."
            },
            "1": {
              "description": "Enable PDE on the folder."
            }
          }
        },
        "scope": "user"
      },
      "ProtectFolders/ProtectPictures": {
        "name": "ProtectPictures",
        "description": "Allows the Admin to enable PDE on Pictures folder. Set to '1' to set this policy.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable PDE on the folder. If the folder is currently protected by PDE, this will result in unprotecting the folder."
            },
            "1": {
              "description": "Enable PDE on the folder."
            }
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/PassportForWork": {
    "name": "PassportForWork",
    "policies": {
      "{TenantId}": {
        "name": "",
        "title": "TenantId",
        "description": "This policy specifies the Tenant ID in the format of a Globally Unique Identifier (GUID) without curly braces ( { , } ), which will be used as part of Windows Hello for Business provisioning and management.",
        "format": "node",
        "nodes": {
          "Policies": {
            "name": "Policies",
            "title": "Policies",
            "description": "Root node for policies.",
            "format": "node",
            "scope": "user"
          },
          "Policies/EnablePinRecovery": {
            "name": "EnablePinRecovery",
            "description": "If the user forgets their PIN, it can be changed to a new PIN using the Windows Hello for Business PIN recovery service. This cloud service encrypts a recovery secret which is stored locally on the client, but which can only be decrypted by the cloud service.\r\n\r\nIf you enable this policy setting, the PIN recovery secret will be stored on the device and the user will be able to change to a new PIN in case their PIN is forgotten.\r\n\r\nIf you disable or do not configure this policy setting, the PIN recovery secret will not be created or stored. If the user's PIN is forgotten, the only way to get a new PIN is by deleting the existing PIN and creating a new one, which will require the user to re-register with any services the old PIN provided access to.",
            "format": "bool",
            "scope": "user"
          },
          "Policies/PINComplexity": {
            "name": "PINComplexity",
            "description": "Root node for PIN policies",
            "format": "node",
            "scope": "user"
          },
          "Policies/PINComplexity/Digits": {
            "name": "Digits",
            "description": "Use this policy setting to configure the use of digits in the Windows Hello for Business PIN.\r\n\r\nA value of 1 corresponds to “Required.” If you configure this policy setting to 1, Windows Hello for Business requires users to include at least one digit in their PIN.\r\n\r\nA value of 2 corresponds to “Disallow.” If you configure this policy setting to 2, Windows Hello for Business prevents users from using digits in their PIN.\r\n\r\nIf you do not configure this policy setting, Windows Hello for Business requires users to use digits in their PIN.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allows the use of digits in PIN."
                },
                "1": {
                  "description": "Requires the use of at least one digits in PIN."
                },
                "2": {
                  "description": "Does not allow the use of digits in PIN."
                }
              }
            },
            "scope": "user"
          },
          "Policies/PINComplexity/Expiration": {
            "name": "Expiration",
            "description": "This policy specifies when the PIN expires (in days). Valid values are 0 to 730 inclusive. If this policy is set to 0, then PINs do not expire.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 73
            },
            "scope": "user"
          },
          "Policies/PINComplexity/History": {
            "name": "History",
            "description": "This policy specifies the number of past PINs that can be stored in the history that can’t be used. Valid values are 0 to 50 inclusive. If this policy is set to 0, then storage of previous PINs is not required. PIN history is not preserved through PIN reset.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 5
            },
            "scope": "user"
          },
          "Policies/PINComplexity/LowercaseLetters": {
            "name": "LowercaseLetters",
            "description": "Use this policy setting to configure the use of lowercase letters in the Windows Hello for Business PIN.\r\n\r\nA value of 1 corresponds to “Required.” If you configure this policy setting to 1, Windows Hello for Business requires users to include at least one lowercase letter in their PIN.\r\n\r\nA value of 2 corresponds to “Disallow.” If you configure this policy setting to 2, Windows Hello for Business prevents users from using lowercase letters in their PIN.\r\n\r\nIf you do not configure this policy setting, Windows Hello for Business does not allow users to use lowercase letters in their PIN.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allows the use of lowercase letters in PIN."
                },
                "1": {
                  "description": "Requires the use of at least one lowercase letters in PIN."
                },
                "2": {
                  "description": "Does not allow the use of lowercase letters in PIN."
                }
              }
            },
            "scope": "user"
          },
          "Policies/PINComplexity/MaximumPINLength": {
            "name": "MaximumPINLength",
            "description": "Maximum PIN length configures the maximum number of characters allowed for the PIN.  The largest number you can configure for this policy setting is 127. The lowest number you can configure must be larger than the number configured in the Minimum PIN length policy setting or the number 4, whichever is greater.\r\n\r\nIf you configure this policy setting, the PIN length must be less than or equal to this number.\r\n\r\nIf you do not configure this policy setting, the PIN length must be less than or equal to 127.\r\n\r\nNOTE: If the above specified conditions for the maximum PIN length are not met, default values will be used for both the maximum and minimum PIN lengths.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 4,
              "max": 12
            },
            "scope": "user"
          },
          "Policies/PINComplexity/MinimumPINLength": {
            "name": "MinimumPINLength",
            "description": "Minimum PIN length configures the minimum number of characters required for the PIN.  The lowest number you can configure for this policy setting is 4.  The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.\r\n\r\nIf you configure this policy setting, the PIN length must be greater than or equal to this number.\r\n\r\nIf you do not configure this policy setting, the PIN length must be greater than or equal to 4.\r\n\r\nNOTE: If the above specified conditions for the minimum PIN length are not met, default values will be used for both the maximum and minimum PIN lengths.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 4,
              "max": 12
            },
            "scope": "user"
          },
          "Policies/PINComplexity/SpecialCharacters": {
            "name": "SpecialCharacters",
            "description": "",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allows the use of special characters in PIN."
                },
                "1": {
                  "description": "Requires the use of at least one special characters in PIN."
                },
                "2": {
                  "description": "Does not allow the use of special characters in PIN."
                }
              }
            },
            "scope": "user"
          },
          "Policies/PINComplexity/UppercaseLetters": {
            "name": "UppercaseLetters",
            "description": "Use this policy setting to configure the use of uppercase letters in the Windows Hello for Business PIN.\r\n\r\nA value of 1 corresponds to “Required.” If you configure this policy setting to 1, Windows Hello for Business requires users to include at least one uppercase letter in their PIN.\r\n\r\nA value of 2 corresponds to “Disallow.” If you configure this policy setting to 2, Windows Hello for Business prevents users from using uppercase letters in their PIN.\r\n\r\nIf you do not configure this policy setting, Windows Hello for Business does not allow users to use uppercase letters in their PIN.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allows the use of uppercase letters in PIN."
                },
                "1": {
                  "description": "Requires the use of at least one uppercase letters in PIN."
                },
                "2": {
                  "description": "Does not allow the use of uppercase letters in PIN."
                }
              }
            },
            "scope": "user"
          },
          "Policies/RequireSecurityDevice": {
            "name": "RequireSecurityDevice",
            "description": "A Trusted Platform Module (TPM) provides additional security benefits over software because data stored within it cannot be used on other devices.\r\n\r\nIf you enable this policy setting, only devices with a usable TPM provision Windows Hello for Business.\r\n\r\nIf you disable or do not configure this policy setting, the TPM is still preferred, but all devices provision Windows Hello for Business using software if the TPM is non-functional or unavailable.",
            "format": "bool",
            "scope": "user"
          },
          "Policies/UsePassportForWork": {
            "name": "UsePassportForWork",
            "description": "Windows Hello for Business is an alternative method for signing into Windows using your Active Directory or Azure Active Directory account that can replace passwords, Smart Cards, and Virtual Smart Cards.\r\n\r\nIf you enable or do not configure this policy setting, the device provisions Windows Hello for Business for all users.\r\n\r\nIf you disable this policy setting, the device does not provision Windows Hello for Business for any user.",
            "format": "bool",
            "scope": "user"
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy": {
    "name": "Policy",
    "policies": {
      "Config": {
        "name": "Config",
        "description": "Node for grouping all policies configured by one source. The configuration source can use this path to set policy values and later query any policy value that it previously set. One policy can be configured by multiple configuration sources. If a configuration source wants to query the result of conflict resolution (for example, if Exchange and MDM both attempt to set a value,) the configuration source can use the Policy/Result path to retrieve the resulting value.",
        "format": "node",
        "scope": "user"
      },
      "Config/{AreaName}": {
        "name": "",
        "title": "AreaName",
        "description": "The area group that can be configured by a single technology for a single provider. Once added, you cannot change the value.  See the individual Area DDFs for Policy CSP for a list of Areas that can be configured.",
        "format": "node",
        "nodes": {
          "{PolicyName}": {
            "name": "",
            "title": "PolicyName",
            "description": "Specifies the name/value pair used in the policy.  See the individual Area DDFs for more information about the policies available to configure.",
            "format": "null",
            "scope": "user"
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_AddRemovePrograms": {
    "name": "ADMX_AddRemovePrograms",
    "policies": {
      "DefaultCategory": {
        "name": "DefaultCategory",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoAddFromCDorFloppy": {
        "name": "NoAddFromCDorFloppy",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoAddFromInternet": {
        "name": "NoAddFromInternet",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoAddFromNetwork": {
        "name": "NoAddFromNetwork",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoAddPage": {
        "name": "NoAddPage",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoAddRemovePrograms": {
        "name": "NoAddRemovePrograms",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoChooseProgramsPage": {
        "name": "NoChooseProgramsPage",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoRemovePage": {
        "name": "NoRemovePage",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoServices": {
        "name": "NoServices",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSupportInfo": {
        "name": "NoSupportInfo",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoWindowsSetupPage": {
        "name": "NoWindowsSetupPage",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_AppCompat": {
    "name": "ADMX_AppCompat",
    "policies": {
      "AppCompatTurnOffProgramCompatibilityAssistant_1": {
        "name": "AppCompatTurnOffProgramCompatibilityAssistant_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_AppXRuntime": {
    "name": "ADMX_AppXRuntime",
    "policies": {
      "AppxRuntimeBlockFileElevation": {
        "name": "AppxRuntimeBlockFileElevation",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AppxRuntimeBlockProtocolElevation": {
        "name": "AppxRuntimeBlockProtocolElevation",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_AttachmentManager": {
    "name": "ADMX_AttachmentManager",
    "policies": {
      "AM_EstimateFileHandlerRisk": {
        "name": "AM_EstimateFileHandlerRisk",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AM_SetFileRiskLevel": {
        "name": "AM_SetFileRiskLevel",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AM_SetHighRiskInclusion": {
        "name": "AM_SetHighRiskInclusion",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AM_SetLowRiskInclusion": {
        "name": "AM_SetLowRiskInclusion",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AM_SetModRiskInclusion": {
        "name": "AM_SetModRiskInclusion",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_COM": {
    "name": "ADMX_COM",
    "policies": {
      "AppMgmt_COM_SearchForCLSID_1": {
        "name": "AppMgmt_COM_SearchForCLSID_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_ControlPanel": {
    "name": "ADMX_ControlPanel",
    "policies": {
      "DisallowCpls": {
        "name": "DisallowCpls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ForceClassicControlPanel": {
        "name": "ForceClassicControlPanel",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoControlPanel": {
        "name": "NoControlPanel",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictCpls": {
        "name": "RestrictCpls",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_ControlPanelDisplay": {
    "name": "ADMX_ControlPanelDisplay",
    "policies": {
      "CPL_Display_Disable": {
        "name": "CPL_Display_Disable",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Display_HideSettings": {
        "name": "CPL_Display_HideSettings",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_DisableColorSchemeChoice": {
        "name": "CPL_Personalization_DisableColorSchemeChoice",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_DisableThemeChange": {
        "name": "CPL_Personalization_DisableThemeChange",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_DisableVisualStyle": {
        "name": "CPL_Personalization_DisableVisualStyle",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_EnableScreenSaver": {
        "name": "CPL_Personalization_EnableScreenSaver",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_LockFontSize": {
        "name": "CPL_Personalization_LockFontSize",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_NoColorAppearanceUI": {
        "name": "CPL_Personalization_NoColorAppearanceUI",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_NoDesktopBackgroundUI": {
        "name": "CPL_Personalization_NoDesktopBackgroundUI",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_NoDesktopIconsUI": {
        "name": "CPL_Personalization_NoDesktopIconsUI",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_NoMousePointersUI": {
        "name": "CPL_Personalization_NoMousePointersUI",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_NoScreenSaverUI": {
        "name": "CPL_Personalization_NoScreenSaverUI",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_NoSoundSchemeUI": {
        "name": "CPL_Personalization_NoSoundSchemeUI",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_ScreenSaverIsSecure": {
        "name": "CPL_Personalization_ScreenSaverIsSecure",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_ScreenSaverTimeOut": {
        "name": "CPL_Personalization_ScreenSaverTimeOut",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_SetScreenSaver": {
        "name": "CPL_Personalization_SetScreenSaver",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_SetTheme": {
        "name": "CPL_Personalization_SetTheme",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CPL_Personalization_SetVisualStyle": {
        "name": "CPL_Personalization_SetVisualStyle",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_CtrlAltDel": {
    "name": "ADMX_CtrlAltDel",
    "policies": {
      "DisableChangePassword": {
        "name": "DisableChangePassword",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableLockComputer": {
        "name": "DisableLockComputer",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableTaskMgr": {
        "name": "DisableTaskMgr",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoLogoff": {
        "name": "NoLogoff",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_DWM": {
    "name": "ADMX_DWM",
    "policies": {
      "DwmDefaultColorizationColor_1": {
        "name": "DwmDefaultColorizationColor_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DwmDisallowAnimations_1": {
        "name": "DwmDisallowAnimations_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DwmDisallowColorizationColorChanges_1": {
        "name": "DwmDisallowColorizationColorChanges_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_Desktop": {
    "name": "ADMX_Desktop",
    "policies": {
      "AD_EnableFilter": {
        "name": "AD_EnableFilter",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AD_HideDirectoryFolder": {
        "name": "AD_HideDirectoryFolder",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AD_QueryLimit": {
        "name": "AD_QueryLimit",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ForceActiveDesktopOn": {
        "name": "ForceActiveDesktopOn",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoActiveDesktop": {
        "name": "NoActiveDesktop",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoActiveDesktopChanges": {
        "name": "NoActiveDesktopChanges",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoDesktop": {
        "name": "NoDesktop",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoDesktopCleanupWizard": {
        "name": "NoDesktopCleanupWizard",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoInternetIcon": {
        "name": "NoInternetIcon",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoMyComputerIcon": {
        "name": "NoMyComputerIcon",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoMyDocumentsIcon": {
        "name": "NoMyDocumentsIcon",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoNetHood": {
        "name": "NoNetHood",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoPropertiesMyComputer": {
        "name": "NoPropertiesMyComputer",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoPropertiesMyDocuments": {
        "name": "NoPropertiesMyDocuments",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoRecentDocsNetHood": {
        "name": "NoRecentDocsNetHood",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoRecycleBinIcon": {
        "name": "NoRecycleBinIcon",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoRecycleBinProperties": {
        "name": "NoRecycleBinProperties",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSaveSettings": {
        "name": "NoSaveSettings",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoWindowMinimizingShortcuts": {
        "name": "NoWindowMinimizingShortcuts",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Wallpaper": {
        "name": "Wallpaper",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "sz_ATC_DisableAdd": {
        "name": "sz_ATC_DisableAdd",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "sz_ATC_DisableClose": {
        "name": "sz_ATC_DisableClose",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "sz_ATC_DisableDel": {
        "name": "sz_ATC_DisableDel",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "sz_ATC_DisableEdit": {
        "name": "sz_ATC_DisableEdit",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "sz_ATC_NoComponents": {
        "name": "sz_ATC_NoComponents",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "sz_AdminComponents_Title": {
        "name": "sz_AdminComponents_Title",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "sz_DB_DragDropClose": {
        "name": "sz_DB_DragDropClose",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "sz_DB_Moving": {
        "name": "sz_DB_Moving",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "sz_DWP_NoHTMLPaper": {
        "name": "sz_DWP_NoHTMLPaper",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_DigitalLocker": {
    "name": "ADMX_DigitalLocker",
    "policies": {
      "Digitalx_DiableApplication_TitleText_1": {
        "name": "Digitalx_DiableApplication_TitleText_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_EAIME": {
    "name": "ADMX_EAIME",
    "policies": {
      "L_DoNotIncludeNonPublishingStandardGlyphInTheCandidateList": {
        "name": "L_DoNotIncludeNonPublishingStandardGlyphInTheCandidateList",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "L_RestrictCharacterCodeRangeOfConversion": {
        "name": "L_RestrictCharacterCodeRangeOfConversion",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "L_TurnOffCustomDictionary": {
        "name": "L_TurnOffCustomDictionary",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "L_TurnOffHistorybasedPredictiveInput": {
        "name": "L_TurnOffHistorybasedPredictiveInput",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "L_TurnOffInternetSearchIntegration": {
        "name": "L_TurnOffInternetSearchIntegration",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "L_TurnOffOpenExtendedDictionary": {
        "name": "L_TurnOffOpenExtendedDictionary",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "L_TurnOffSavingAutoTuningDataToFile": {
        "name": "L_TurnOffSavingAutoTuningDataToFile",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "L_TurnOnCloudCandidate": {
        "name": "L_TurnOnCloudCandidate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "L_TurnOnCloudCandidateCHS": {
        "name": "L_TurnOnCloudCandidateCHS",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "L_TurnOnLexiconUpdate": {
        "name": "L_TurnOnLexiconUpdate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "L_TurnOnLiveStickers": {
        "name": "L_TurnOnLiveStickers",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "L_TurnOnMisconversionLoggingForMisconversionReport": {
        "name": "L_TurnOnMisconversionLoggingForMisconversionReport",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_ErrorReporting": {
    "name": "ADMX_ErrorReporting",
    "policies": {
      "WerArchive_1": {
        "name": "WerArchive_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WerAutoApproveOSDumps_1": {
        "name": "WerAutoApproveOSDumps_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WerBypassDataThrottling_1": {
        "name": "WerBypassDataThrottling_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WerBypassNetworkCostThrottling_1": {
        "name": "WerBypassNetworkCostThrottling_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WerBypassPowerThrottling_1": {
        "name": "WerBypassPowerThrottling_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WerConsentCustomize_1": {
        "name": "WerConsentCustomize_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WerConsentOverride_1": {
        "name": "WerConsentOverride_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WerDefaultConsent_1": {
        "name": "WerDefaultConsent_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WerDisable_1": {
        "name": "WerDisable_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WerExlusion_1": {
        "name": "WerExlusion_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WerNoLogging_1": {
        "name": "WerNoLogging_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WerNoSecondLevelData_1": {
        "name": "WerNoSecondLevelData_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WerQueue_1": {
        "name": "WerQueue_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_Explorer": {
    "name": "ADMX_Explorer",
    "policies": {
      "AlwaysShowClassicMenu": {
        "name": "AlwaysShowClassicMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PreventItemCreationInUsersFilesFolder": {
        "name": "PreventItemCreationInUsersFilesFolder",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TurnOffSPIAnimations": {
        "name": "TurnOffSPIAnimations",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_FileRevocation": {
    "name": "ADMX_FileRevocation",
    "policies": {
      "DelegatedPackageFamilyNames": {
        "name": "DelegatedPackageFamilyNames",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_FolderRedirection": {
    "name": "ADMX_FolderRedirection",
    "policies": {
      "DisableFRAdminPin": {
        "name": "DisableFRAdminPin",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableFRAdminPinByFolder": {
        "name": "DisableFRAdminPinByFolder",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "FolderRedirectionEnableCacheRename": {
        "name": "FolderRedirectionEnableCacheRename",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalizeXPRelativePaths_1": {
        "name": "LocalizeXPRelativePaths_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PrimaryComputer_FR_1": {
        "name": "PrimaryComputer_FR_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_FramePanes": {
    "name": "ADMX_FramePanes",
    "policies": {
      "NoPreviewPane": {
        "name": "NoPreviewPane",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoReadingPane": {
        "name": "NoReadingPane",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_Globalization": {
    "name": "ADMX_Globalization",
    "policies": {
      "CustomLocalesNoSelect_1": {
        "name": "CustomLocalesNoSelect_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HideAdminOptions": {
        "name": "HideAdminOptions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HideCurrentLocation": {
        "name": "HideCurrentLocation",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HideLanguageSelection": {
        "name": "HideLanguageSelection",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HideLocaleSelectAndCustomize": {
        "name": "HideLocaleSelectAndCustomize",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ImplicitDataCollectionOff_1": {
        "name": "ImplicitDataCollectionOff_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocaleUserRestrict_1": {
        "name": "LocaleUserRestrict_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockUserUILanguage": {
        "name": "LockUserUILanguage",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PreventGeoIdChange_1": {
        "name": "PreventGeoIdChange_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PreventUserOverrides_1": {
        "name": "PreventUserOverrides_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictUILangSelect": {
        "name": "RestrictUILangSelect",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TurnOffAutocorrectMisspelledWords": {
        "name": "TurnOffAutocorrectMisspelledWords",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TurnOffHighlightMisspelledWords": {
        "name": "TurnOffHighlightMisspelledWords",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TurnOffInsertSpace": {
        "name": "TurnOffInsertSpace",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TurnOffOfferTextPredictions": {
        "name": "TurnOffOfferTextPredictions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Y2K": {
        "name": "Y2K",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_GroupPolicy": {
    "name": "ADMX_GroupPolicy",
    "policies": {
      "DenyRsopToInteractiveUser_1": {
        "name": "DenyRsopToInteractiveUser_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableAutoADMUpdate": {
        "name": "DisableAutoADMUpdate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "EnforcePoliciesOnly": {
        "name": "EnforcePoliciesOnly",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "GPDCOptions": {
        "name": "GPDCOptions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "GPTransferRate_1": {
        "name": "GPTransferRate_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "GroupPolicyRefreshRateUser": {
        "name": "GroupPolicyRefreshRateUser",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NewGPODisplayName": {
        "name": "NewGPODisplayName",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NewGPOLinksDisabled": {
        "name": "NewGPOLinksDisabled",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ProcessMitigationOptions": {
        "name": "ProcessMitigationOptions",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_Help": {
    "name": "ADMX_Help",
    "policies": {
      "RestrictRunFromHelp": {
        "name": "RestrictRunFromHelp",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_HelpAndSupport": {
    "name": "ADMX_HelpAndSupport",
    "policies": {
      "HPExplicitFeedback": {
        "name": "HPExplicitFeedback",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HPImplicitFeedback": {
        "name": "HPImplicitFeedback",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HPOnlineAssistance": {
        "name": "HPOnlineAssistance",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_ICM": {
    "name": "ADMX_ICM",
    "policies": {
      "DisableHTTPPrinting_1": {
        "name": "DisableHTTPPrinting_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableWebPnPDownload_1": {
        "name": "DisableWebPnPDownload_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetManagement_RestrictCommunication_1": {
        "name": "InternetManagement_RestrictCommunication_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ShellNoUseInternetOpenWith_1": {
        "name": "ShellNoUseInternetOpenWith_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ShellNoUseStoreOpenWith_1": {
        "name": "ShellNoUseStoreOpenWith_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ShellPreventWPWDownload_1": {
        "name": "ShellPreventWPWDownload_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ShellRemoveOrderPrints_1": {
        "name": "ShellRemoveOrderPrints_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ShellRemovePublishToWeb_1": {
        "name": "ShellRemovePublishToWeb_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WinMSG_NoInstrumentation_1": {
        "name": "WinMSG_NoInstrumentation_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_Logon": {
    "name": "ADMX_Logon",
    "policies": {
      "DisableExplorerRunLegacy_1": {
        "name": "DisableExplorerRunLegacy_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableExplorerRunOnceLegacy_1": {
        "name": "DisableExplorerRunOnceLegacy_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoWelcomeTips_1": {
        "name": "NoWelcomeTips_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Run_1": {
        "name": "Run_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_MMC": {
    "name": "ADMX_MMC",
    "policies": {
      "MMC_ActiveXControl": {
        "name": "MMC_ActiveXControl",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ExtendView": {
        "name": "MMC_ExtendView",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_LinkToWeb": {
        "name": "MMC_LinkToWeb",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_Restrict_Author": {
        "name": "MMC_Restrict_Author",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_Restrict_To_Permitted_Snapins": {
        "name": "MMC_Restrict_To_Permitted_Snapins",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_MMCSnapins": {
    "name": "ADMX_MMCSnapins",
    "policies": {
      "MMC_ADMComputers_1": {
        "name": "MMC_ADMComputers_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ADMComputers_2": {
        "name": "MMC_ADMComputers_2",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ADMUsers_1": {
        "name": "MMC_ADMUsers_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ADMUsers_2": {
        "name": "MMC_ADMUsers_2",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ADSI": {
        "name": "MMC_ADSI",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ActiveDirDomTrusts": {
        "name": "MMC_ActiveDirDomTrusts",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ActiveDirSitesServices": {
        "name": "MMC_ActiveDirSitesServices",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ActiveDirUsersComp": {
        "name": "MMC_ActiveDirUsersComp",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_AppleTalkRouting": {
        "name": "MMC_AppleTalkRouting",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_AuthMan": {
        "name": "MMC_AuthMan",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_CertAuth": {
        "name": "MMC_CertAuth",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_CertAuthPolSet": {
        "name": "MMC_CertAuthPolSet",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_Certs": {
        "name": "MMC_Certs",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_CertsTemplate": {
        "name": "MMC_CertsTemplate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ComponentServices": {
        "name": "MMC_ComponentServices",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ComputerManagement": {
        "name": "MMC_ComputerManagement",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ConnectionSharingNAT": {
        "name": "MMC_ConnectionSharingNAT",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_DCOMCFG": {
        "name": "MMC_DCOMCFG",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_DFS": {
        "name": "MMC_DFS",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_DHCPRelayMgmt": {
        "name": "MMC_DHCPRelayMgmt",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_DeviceManager_1": {
        "name": "MMC_DeviceManager_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_DeviceManager_2": {
        "name": "MMC_DeviceManager_2",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_DiskDefrag": {
        "name": "MMC_DiskDefrag",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_DiskMgmt": {
        "name": "MMC_DiskMgmt",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_EnterprisePKI": {
        "name": "MMC_EnterprisePKI",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_EventViewer_1": {
        "name": "MMC_EventViewer_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_EventViewer_2": {
        "name": "MMC_EventViewer_2",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_EventViewer_3": {
        "name": "MMC_EventViewer_3",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_EventViewer_4": {
        "name": "MMC_EventViewer_4",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_FAXService": {
        "name": "MMC_FAXService",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_FailoverClusters": {
        "name": "MMC_FailoverClusters",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_FolderRedirection_1": {
        "name": "MMC_FolderRedirection_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_FolderRedirection_2": {
        "name": "MMC_FolderRedirection_2",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_FrontPageExt": {
        "name": "MMC_FrontPageExt",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_GroupPolicyManagementSnapIn": {
        "name": "MMC_GroupPolicyManagementSnapIn",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_GroupPolicySnapIn": {
        "name": "MMC_GroupPolicySnapIn",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_GroupPolicyTab": {
        "name": "MMC_GroupPolicyTab",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_HRA": {
        "name": "MMC_HRA",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_IAS": {
        "name": "MMC_IAS",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_IASLogging": {
        "name": "MMC_IASLogging",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_IEMaintenance_1": {
        "name": "MMC_IEMaintenance_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_IEMaintenance_2": {
        "name": "MMC_IEMaintenance_2",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_IGMPRouting": {
        "name": "MMC_IGMPRouting",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_IIS": {
        "name": "MMC_IIS",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_IPRouting": {
        "name": "MMC_IPRouting",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_IPSecManage_GP": {
        "name": "MMC_IPSecManage_GP",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_IPXRIPRouting": {
        "name": "MMC_IPXRIPRouting",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_IPXRouting": {
        "name": "MMC_IPXRouting",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_IPXSAPRouting": {
        "name": "MMC_IPXSAPRouting",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_IndexingService": {
        "name": "MMC_IndexingService",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_IpSecManage": {
        "name": "MMC_IpSecManage",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_IpSecMonitor": {
        "name": "MMC_IpSecMonitor",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_LocalUsersGroups": {
        "name": "MMC_LocalUsersGroups",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_LogicalMappedDrives": {
        "name": "MMC_LogicalMappedDrives",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_NPSUI": {
        "name": "MMC_NPSUI",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_NapSnap": {
        "name": "MMC_NapSnap",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_NapSnap_GP": {
        "name": "MMC_NapSnap_GP",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_Net_Framework": {
        "name": "MMC_Net_Framework",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_OCSP": {
        "name": "MMC_OCSP",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_OSPFRouting": {
        "name": "MMC_OSPFRouting",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_PerfLogsAlerts": {
        "name": "MMC_PerfLogsAlerts",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_PublicKey": {
        "name": "MMC_PublicKey",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_QoSAdmission": {
        "name": "MMC_QoSAdmission",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_RAS_DialinUser": {
        "name": "MMC_RAS_DialinUser",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_RIPRouting": {
        "name": "MMC_RIPRouting",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_RIS": {
        "name": "MMC_RIS",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_RRA": {
        "name": "MMC_RRA",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_RSM": {
        "name": "MMC_RSM",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_RemStore": {
        "name": "MMC_RemStore",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_RemoteAccess": {
        "name": "MMC_RemoteAccess",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_RemoteDesktop": {
        "name": "MMC_RemoteDesktop",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ResultantSetOfPolicySnapIn": {
        "name": "MMC_ResultantSetOfPolicySnapIn",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_Routing": {
        "name": "MMC_Routing",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SCA": {
        "name": "MMC_SCA",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SMTPProtocol": {
        "name": "MMC_SMTPProtocol",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SNMP": {
        "name": "MMC_SNMP",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ScriptsMachine_1": {
        "name": "MMC_ScriptsMachine_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ScriptsMachine_2": {
        "name": "MMC_ScriptsMachine_2",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ScriptsUser_1": {
        "name": "MMC_ScriptsUser_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ScriptsUser_2": {
        "name": "MMC_ScriptsUser_2",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SecuritySettings_1": {
        "name": "MMC_SecuritySettings_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SecuritySettings_2": {
        "name": "MMC_SecuritySettings_2",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SecurityTemplates": {
        "name": "MMC_SecurityTemplates",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SendConsoleMessage": {
        "name": "MMC_SendConsoleMessage",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ServerManager": {
        "name": "MMC_ServerManager",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_ServiceDependencies": {
        "name": "MMC_ServiceDependencies",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_Services": {
        "name": "MMC_Services",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SharedFolders": {
        "name": "MMC_SharedFolders",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SharedFolders_Ext": {
        "name": "MMC_SharedFolders_Ext",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SoftwareInstalationComputers_1": {
        "name": "MMC_SoftwareInstalationComputers_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SoftwareInstalationComputers_2": {
        "name": "MMC_SoftwareInstalationComputers_2",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SoftwareInstallationUsers_1": {
        "name": "MMC_SoftwareInstallationUsers_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SoftwareInstallationUsers_2": {
        "name": "MMC_SoftwareInstallationUsers_2",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SysInfo": {
        "name": "MMC_SysInfo",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_SysProp": {
        "name": "MMC_SysProp",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_TPMManagement": {
        "name": "MMC_TPMManagement",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_Telephony": {
        "name": "MMC_Telephony",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_TerminalServices": {
        "name": "MMC_TerminalServices",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_WMI": {
        "name": "MMC_WMI",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_WindowsFirewall": {
        "name": "MMC_WindowsFirewall",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_WindowsFirewall_GP": {
        "name": "MMC_WindowsFirewall_GP",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_WiredNetworkPolicy": {
        "name": "MMC_WiredNetworkPolicy",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_WirelessMon": {
        "name": "MMC_WirelessMon",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MMC_WirelessNetworkPolicy": {
        "name": "MMC_WirelessNetworkPolicy",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_MSI": {
    "name": "ADMX_MSI",
    "policies": {
      "DisableMedia": {
        "name": "DisableMedia",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableRollback_1": {
        "name": "DisableRollback_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "SearchOrder": {
        "name": "SearchOrder",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_MobilePCMobilityCenter": {
    "name": "ADMX_MobilePCMobilityCenter",
    "policies": {
      "MobilityCenterEnable_1": {
        "name": "MobilityCenterEnable_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_MobilePCPresentationSettings": {
    "name": "ADMX_MobilePCPresentationSettings",
    "policies": {
      "PresentationSettingsEnable_1": {
        "name": "PresentationSettingsEnable_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_NetworkConnections": {
    "name": "ADMX_NetworkConnections",
    "policies": {
      "NC_AddRemoveComponents": {
        "name": "NC_AddRemoveComponents",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_AdvancedSettings": {
        "name": "NC_AdvancedSettings",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_AllowAdvancedTCPIPConfig": {
        "name": "NC_AllowAdvancedTCPIPConfig",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_ChangeBindState": {
        "name": "NC_ChangeBindState",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_DeleteAllUserConnection": {
        "name": "NC_DeleteAllUserConnection",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_DeleteConnection": {
        "name": "NC_DeleteConnection",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_DialupPrefs": {
        "name": "NC_DialupPrefs",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_EnableAdminProhibits": {
        "name": "NC_EnableAdminProhibits",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_IpStateChecking": {
        "name": "NC_IpStateChecking",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_LanChangeProperties": {
        "name": "NC_LanChangeProperties",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_LanConnect": {
        "name": "NC_LanConnect",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_LanProperties": {
        "name": "NC_LanProperties",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_NewConnectionWizard": {
        "name": "NC_NewConnectionWizard",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_RasAllUserProperties": {
        "name": "NC_RasAllUserProperties",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_RasChangeProperties": {
        "name": "NC_RasChangeProperties",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_RasConnect": {
        "name": "NC_RasConnect",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_RasMyProperties": {
        "name": "NC_RasMyProperties",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_RenameAllUserRasConnection": {
        "name": "NC_RenameAllUserRasConnection",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_RenameConnection": {
        "name": "NC_RenameConnection",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_RenameLanConnection": {
        "name": "NC_RenameLanConnection",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_RenameMyRasConnection": {
        "name": "NC_RenameMyRasConnection",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NC_Statistics": {
        "name": "NC_Statistics",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_OfflineFiles": {
    "name": "ADMX_OfflineFiles",
    "policies": {
      "Pol_AssignedOfflineFiles_1": {
        "name": "Pol_AssignedOfflineFiles_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_CustomGoOfflineActions_1": {
        "name": "Pol_CustomGoOfflineActions_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_EventLoggingLevel_1": {
        "name": "Pol_EventLoggingLevel_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_GoOfflineAction_1": {
        "name": "Pol_GoOfflineAction_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_NoCacheViewer_1": {
        "name": "Pol_NoCacheViewer_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_NoConfigCache_1": {
        "name": "Pol_NoConfigCache_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_NoMakeAvailableOffline_1": {
        "name": "Pol_NoMakeAvailableOffline_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_NoPinFiles_1": {
        "name": "Pol_NoPinFiles_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_NoReminders_1": {
        "name": "Pol_NoReminders_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_ReminderFreq_1": {
        "name": "Pol_ReminderFreq_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_ReminderInitTimeout_1": {
        "name": "Pol_ReminderInitTimeout_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_ReminderTimeout_1": {
        "name": "Pol_ReminderTimeout_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_SyncAtLogoff_1": {
        "name": "Pol_SyncAtLogoff_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_SyncAtLogon_1": {
        "name": "Pol_SyncAtLogon_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_SyncAtSuspend_1": {
        "name": "Pol_SyncAtSuspend_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_WorkOfflineDisabled_1": {
        "name": "Pol_WorkOfflineDisabled_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_PenTraining": {
    "name": "ADMX_PenTraining",
    "policies": {
      "PenTrainingOff_1": {
        "name": "PenTrainingOff_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_Power": {
    "name": "ADMX_Power",
    "policies": {
      "PW_PromptPasswordOnResume": {
        "name": "PW_PromptPasswordOnResume",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_PowerShellExecutionPolicy": {
    "name": "ADMX_PowerShellExecutionPolicy",
    "policies": {
      "EnableModuleLogging": {
        "name": "EnableModuleLogging",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "EnableScripts": {
        "name": "EnableScripts",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "EnableTranscripting": {
        "name": "EnableTranscripting",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "EnableUpdateHelpDefaultSourcePath": {
        "name": "EnableUpdateHelpDefaultSourcePath",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_PreviousVersions": {
    "name": "ADMX_PreviousVersions",
    "policies": {
      "DisableBackupRestore_1": {
        "name": "DisableBackupRestore_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableLocalPage_1": {
        "name": "DisableLocalPage_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableLocalRestore_1": {
        "name": "DisableLocalRestore_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableRemotePage_1": {
        "name": "DisableRemotePage_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableRemoteRestore_1": {
        "name": "DisableRemoteRestore_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HideBackupEntries_1": {
        "name": "HideBackupEntries_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_Printing": {
    "name": "ADMX_Printing",
    "policies": {
      "DownlevelBrowse": {
        "name": "DownlevelBrowse",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetPrintersUrl": {
        "name": "IntranetPrintersUrl",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LegacyDefaultPrinterMode": {
        "name": "LegacyDefaultPrinterMode",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoDeletePrinter": {
        "name": "NoDeletePrinter",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PackagePointAndPrintOnly": {
        "name": "PackagePointAndPrintOnly",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PackagePointAndPrintServerList": {
        "name": "PackagePointAndPrintServerList",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PrinterDirectorySearchScope": {
        "name": "PrinterDirectorySearchScope",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_Programs": {
    "name": "ADMX_Programs",
    "policies": {
      "NoDefaultPrograms": {
        "name": "NoDefaultPrograms",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoGetPrograms": {
        "name": "NoGetPrograms",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoInstalledUpdates": {
        "name": "NoInstalledUpdates",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoProgramsAndFeatures": {
        "name": "NoProgramsAndFeatures",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoProgramsCPL": {
        "name": "NoProgramsCPL",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoWindowsFeatures": {
        "name": "NoWindowsFeatures",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoWindowsMarketplace": {
        "name": "NoWindowsMarketplace",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_RemovableStorage": {
    "name": "ADMX_RemovableStorage",
    "policies": {
      "AccessRights_RebootTime_1": {
        "name": "AccessRights_RebootTime_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CDandDVD_DenyRead_Access_1": {
        "name": "CDandDVD_DenyRead_Access_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CDandDVD_DenyWrite_Access_1": {
        "name": "CDandDVD_DenyWrite_Access_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CustomClasses_DenyRead_Access_1": {
        "name": "CustomClasses_DenyRead_Access_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CustomClasses_DenyWrite_Access_1": {
        "name": "CustomClasses_DenyWrite_Access_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "FloppyDrives_DenyRead_Access_1": {
        "name": "FloppyDrives_DenyRead_Access_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "FloppyDrives_DenyWrite_Access_1": {
        "name": "FloppyDrives_DenyWrite_Access_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RemovableDisks_DenyRead_Access_1": {
        "name": "RemovableDisks_DenyRead_Access_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RemovableDisks_DenyWrite_Access_1": {
        "name": "RemovableDisks_DenyWrite_Access_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RemovableStorageClasses_DenyAll_Access_1": {
        "name": "RemovableStorageClasses_DenyAll_Access_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TapeDrives_DenyRead_Access_1": {
        "name": "TapeDrives_DenyRead_Access_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TapeDrives_DenyWrite_Access_1": {
        "name": "TapeDrives_DenyWrite_Access_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WPDDevices_DenyRead_Access_1": {
        "name": "WPDDevices_DenyRead_Access_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WPDDevices_DenyWrite_Access_1": {
        "name": "WPDDevices_DenyWrite_Access_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_Scripts": {
    "name": "ADMX_Scripts",
    "policies": {
      "Run_Legacy_Logon_Script_Hidden": {
        "name": "Run_Legacy_Logon_Script_Hidden",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Run_Logoff_Script_Visible": {
        "name": "Run_Logoff_Script_Visible",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Run_Logon_Script_Sync_1": {
        "name": "Run_Logon_Script_Sync_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Run_Logon_Script_Visible": {
        "name": "Run_Logon_Script_Visible",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Run_User_PS_Scripts_First": {
        "name": "Run_User_PS_Scripts_First",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_Sensors": {
    "name": "ADMX_Sensors",
    "policies": {
      "DisableLocationScripting_1": {
        "name": "DisableLocationScripting_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableLocation_1": {
        "name": "DisableLocation_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableSensors_1": {
        "name": "DisableSensors_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_SharedFolders": {
    "name": "ADMX_SharedFolders",
    "policies": {
      "PublishDfsRoots": {
        "name": "PublishDfsRoots",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PublishSharedFolders": {
        "name": "PublishSharedFolders",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_Sharing": {
    "name": "ADMX_Sharing",
    "policies": {
      "NoInplaceSharing": {
        "name": "NoInplaceSharing",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_ShellCommandPromptRegEditTools": {
    "name": "ADMX_ShellCommandPromptRegEditTools",
    "policies": {
      "DisableCMD": {
        "name": "DisableCMD",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableRegedit": {
        "name": "DisableRegedit",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisallowApps": {
        "name": "DisallowApps",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictApps": {
        "name": "RestrictApps",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_SoundRec": {
    "name": "ADMX_SoundRec",
    "policies": {
      "Soundrec_DiableApplication_TitleText_1": {
        "name": "Soundrec_DiableApplication_TitleText_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_StartMenu": {
    "name": "ADMX_StartMenu",
    "policies": {
      "AddSearchInternetLinkInStartMenu": {
        "name": "AddSearchInternetLinkInStartMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ClearRecentDocsOnExit": {
        "name": "ClearRecentDocsOnExit",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ClearRecentProgForNewUserInStartMenu": {
        "name": "ClearRecentProgForNewUserInStartMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ClearTilesOnExit": {
        "name": "ClearTilesOnExit",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DesktopAppsFirstInAppsView": {
        "name": "DesktopAppsFirstInAppsView",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableGlobalSearchOnAppsView": {
        "name": "DisableGlobalSearchOnAppsView",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ForceStartMenuLogOff": {
        "name": "ForceStartMenuLogOff",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "GoToDesktopOnSignIn": {
        "name": "GoToDesktopOnSignIn",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "GreyMSIAds": {
        "name": "GreyMSIAds",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Intellimenus": {
        "name": "Intellimenus",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockTaskbar": {
        "name": "LockTaskbar",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MemCheckBoxInRunDlg": {
        "name": "MemCheckBoxInRunDlg",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoAutoTrayNotify": {
        "name": "NoAutoTrayNotify",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoBalloonTip": {
        "name": "NoBalloonTip",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoChangeStartMenu": {
        "name": "NoChangeStartMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoClose": {
        "name": "NoClose",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoCommonGroups": {
        "name": "NoCommonGroups",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoFavoritesMenu": {
        "name": "NoFavoritesMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoFind": {
        "name": "NoFind",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoGamesFolderOnStartMenu": {
        "name": "NoGamesFolderOnStartMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoHelp": {
        "name": "NoHelp",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoInstrumentation": {
        "name": "NoInstrumentation",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoMoreProgramsList": {
        "name": "NoMoreProgramsList",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoNetAndDialupConnect": {
        "name": "NoNetAndDialupConnect",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoPinnedPrograms": {
        "name": "NoPinnedPrograms",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoRecentDocsMenu": {
        "name": "NoRecentDocsMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoResolveSearch": {
        "name": "NoResolveSearch",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoResolveTrack": {
        "name": "NoResolveTrack",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoRun": {
        "name": "NoRun",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSMConfigurePrograms": {
        "name": "NoSMConfigurePrograms",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSMMyDocuments": {
        "name": "NoSMMyDocuments",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSMMyMusic": {
        "name": "NoSMMyMusic",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSMMyNetworkPlaces": {
        "name": "NoSMMyNetworkPlaces",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSMMyPictures": {
        "name": "NoSMMyPictures",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSearchCommInStartMenu": {
        "name": "NoSearchCommInStartMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSearchComputerLinkInStartMenu": {
        "name": "NoSearchComputerLinkInStartMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSearchEverywhereLinkInStartMenu": {
        "name": "NoSearchEverywhereLinkInStartMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSearchFilesInStartMenu": {
        "name": "NoSearchFilesInStartMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSearchInternetInStartMenu": {
        "name": "NoSearchInternetInStartMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSearchProgramsInStartMenu": {
        "name": "NoSearchProgramsInStartMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSetFolders": {
        "name": "NoSetFolders",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSetTaskbar": {
        "name": "NoSetTaskbar",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoStartMenuDownload": {
        "name": "NoStartMenuDownload",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoStartMenuHomegroup": {
        "name": "NoStartMenuHomegroup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoStartMenuRecordedTV": {
        "name": "NoStartMenuRecordedTV",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoStartMenuSubFolders": {
        "name": "NoStartMenuSubFolders",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoStartMenuVideos": {
        "name": "NoStartMenuVideos",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoStartPage": {
        "name": "NoStartPage",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoTaskBarClock": {
        "name": "NoTaskBarClock",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoTaskGrouping": {
        "name": "NoTaskGrouping",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoToolbarsOnTaskbar": {
        "name": "NoToolbarsOnTaskbar",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoTrayContextMenu": {
        "name": "NoTrayContextMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoTrayItemsDisplay": {
        "name": "NoTrayItemsDisplay",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoUninstallFromStart": {
        "name": "NoUninstallFromStart",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoUserFolderOnStartMenu": {
        "name": "NoUserFolderOnStartMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoUserNameOnStartMenu": {
        "name": "NoUserNameOnStartMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoWindowsUpdate": {
        "name": "NoWindowsUpdate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PowerButtonAction": {
        "name": "PowerButtonAction",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "QuickLaunchEnabled": {
        "name": "QuickLaunchEnabled",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RemoveUnDockPCButton": {
        "name": "RemoveUnDockPCButton",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ShowAppsViewOnStart": {
        "name": "ShowAppsViewOnStart",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ShowRunAsDifferentUserInStart": {
        "name": "ShowRunAsDifferentUserInStart",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ShowRunInStartMenu": {
        "name": "ShowRunInStartMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ShowStartOnDisplayWithForegroundOnWinKey": {
        "name": "ShowStartOnDisplayWithForegroundOnWinKey",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "StartMenuLogOff": {
        "name": "StartMenuLogOff",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "StartPinAppsWhenInstalled": {
        "name": "StartPinAppsWhenInstalled",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_TabletPCInputPanel": {
    "name": "ADMX_TabletPCInputPanel",
    "policies": {
      "AutoComplete_1": {
        "name": "AutoComplete_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "EdgeTarget_1": {
        "name": "EdgeTarget_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IPTIPTarget_1": {
        "name": "IPTIPTarget_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IPTIPTouchTarget_1": {
        "name": "IPTIPTouchTarget_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PasswordSecurity_1": {
        "name": "PasswordSecurity_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Prediction_1": {
        "name": "Prediction_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RareChar_1": {
        "name": "RareChar_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ScratchOut_1": {
        "name": "ScratchOut_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_TabletShell": {
    "name": "ADMX_TabletShell",
    "policies": {
      "DisableInkball_1": {
        "name": "DisableInkball_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableJournal_1": {
        "name": "DisableJournal_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableNoteWriterPrinting_1": {
        "name": "DisableNoteWriterPrinting_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableSnippingTool_1": {
        "name": "DisableSnippingTool_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PreventBackEscMapping_1": {
        "name": "PreventBackEscMapping_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PreventFlicksLearningMode_1": {
        "name": "PreventFlicksLearningMode_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PreventFlicks_1": {
        "name": "PreventFlicks_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PreventLaunchApp_1": {
        "name": "PreventLaunchApp_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PreventPressAndHold_1": {
        "name": "PreventPressAndHold_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TurnOffButtons_1": {
        "name": "TurnOffButtons_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TurnOffFeedback_1": {
        "name": "TurnOffFeedback_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_Taskbar": {
    "name": "ADMX_Taskbar",
    "policies": {
      "DisableNotificationCenter": {
        "name": "DisableNotificationCenter",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "EnableLegacyBalloonNotifications": {
        "name": "EnableLegacyBalloonNotifications",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HideSCAHealth": {
        "name": "HideSCAHealth",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HideSCANetwork": {
        "name": "HideSCANetwork",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HideSCAPower": {
        "name": "HideSCAPower",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HideSCAVolume": {
        "name": "HideSCAVolume",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoBalloonFeatureAdvertisements": {
        "name": "NoBalloonFeatureAdvertisements",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoPinningStoreToTaskbar": {
        "name": "NoPinningStoreToTaskbar",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoPinningToDestinations": {
        "name": "NoPinningToDestinations",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoPinningToTaskbar": {
        "name": "NoPinningToTaskbar",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoRemoteDestinations": {
        "name": "NoRemoteDestinations",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSystraySystemPromotion": {
        "name": "NoSystraySystemPromotion",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ShowWindowsStoreAppsOnTaskbar": {
        "name": "ShowWindowsStoreAppsOnTaskbar",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TaskbarLockAll": {
        "name": "TaskbarLockAll",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TaskbarNoAddRemoveToolbar": {
        "name": "TaskbarNoAddRemoveToolbar",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TaskbarNoDragToolbar": {
        "name": "TaskbarNoDragToolbar",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TaskbarNoMultimon": {
        "name": "TaskbarNoMultimon",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TaskbarNoNotification": {
        "name": "TaskbarNoNotification",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TaskbarNoPinnedList": {
        "name": "TaskbarNoPinnedList",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TaskbarNoRedock": {
        "name": "TaskbarNoRedock",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TaskbarNoResize": {
        "name": "TaskbarNoResize",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TaskbarNoThumbnail": {
        "name": "TaskbarNoThumbnail",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_TerminalServer": {
    "name": "ADMX_TerminalServer",
    "policies": {
      "TS_CLIENT_ALLOW_SIGNED_FILES_1": {
        "name": "TS_CLIENT_ALLOW_SIGNED_FILES_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TS_CLIENT_ALLOW_UNSIGNED_FILES_1": {
        "name": "TS_CLIENT_ALLOW_UNSIGNED_FILES_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TS_CLIENT_DISABLE_PASSWORD_SAVING_1": {
        "name": "TS_CLIENT_DISABLE_PASSWORD_SAVING_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TS_CLIENT_TRUSTED_CERTIFICATE_THUMBPRINTS_2": {
        "name": "TS_CLIENT_TRUSTED_CERTIFICATE_THUMBPRINTS_2",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TS_EASY_PRINT_User": {
        "name": "TS_EASY_PRINT_User",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TS_GATEWAY_POLICY_AUTH_METHOD": {
        "name": "TS_GATEWAY_POLICY_AUTH_METHOD",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TS_GATEWAY_POLICY_ENABLE": {
        "name": "TS_GATEWAY_POLICY_ENABLE",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TS_GATEWAY_POLICY_SERVER": {
        "name": "TS_GATEWAY_POLICY_SERVER",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TS_RADC_DefaultConnection": {
        "name": "TS_RADC_DefaultConnection",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TS_RemoteControl_1": {
        "name": "TS_RemoteControl_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TS_SESSIONS_Disconnected_Timeout_1": {
        "name": "TS_SESSIONS_Disconnected_Timeout_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TS_SESSIONS_Idle_Limit_1": {
        "name": "TS_SESSIONS_Idle_Limit_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TS_SESSIONS_Limits_1": {
        "name": "TS_SESSIONS_Limits_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TS_START_PROGRAM_1": {
        "name": "TS_START_PROGRAM_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TS_Session_End_On_Limit_1": {
        "name": "TS_Session_End_On_Limit_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_Thumbnails": {
    "name": "ADMX_Thumbnails",
    "policies": {
      "DisableThumbnails": {
        "name": "DisableThumbnails",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableThumbnailsOnNetworkFolders": {
        "name": "DisableThumbnailsOnNetworkFolders",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableThumbsDBOnNetworkFolders": {
        "name": "DisableThumbsDBOnNetworkFolders",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_TouchInput": {
    "name": "ADMX_TouchInput",
    "policies": {
      "PanningEverywhereOff_1": {
        "name": "PanningEverywhereOff_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TouchInputOff_1": {
        "name": "TouchInputOff_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_UserExperienceVirtualization": {
    "name": "ADMX_UserExperienceVirtualization",
    "policies": {
      "Calculator": {
        "name": "Calculator",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ConfigureSyncMethod": {
        "name": "ConfigureSyncMethod",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ConfigureVdi": {
        "name": "ConfigureVdi",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableWin8Sync": {
        "name": "DisableWin8Sync",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableWindowsOSSettings": {
        "name": "DisableWindowsOSSettings",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Finance": {
        "name": "Finance",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Games": {
        "name": "Games",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetExplorer10": {
        "name": "InternetExplorer10",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetExplorer11": {
        "name": "InternetExplorer11",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetExplorer8": {
        "name": "InternetExplorer8",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetExplorer9": {
        "name": "InternetExplorer9",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetExplorerCommon": {
        "name": "InternetExplorerCommon",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Maps": {
        "name": "Maps",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MaxPackageSizeInBytes": {
        "name": "MaxPackageSizeInBytes",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2010Access": {
        "name": "MicrosoftOffice2010Access",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2010Common": {
        "name": "MicrosoftOffice2010Common",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2010Excel": {
        "name": "MicrosoftOffice2010Excel",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2010InfoPath": {
        "name": "MicrosoftOffice2010InfoPath",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2010Lync": {
        "name": "MicrosoftOffice2010Lync",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2010OneNote": {
        "name": "MicrosoftOffice2010OneNote",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2010Outlook": {
        "name": "MicrosoftOffice2010Outlook",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2010PowerPoint": {
        "name": "MicrosoftOffice2010PowerPoint",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2010Project": {
        "name": "MicrosoftOffice2010Project",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2010Publisher": {
        "name": "MicrosoftOffice2010Publisher",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2010SharePointDesigner": {
        "name": "MicrosoftOffice2010SharePointDesigner",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2010SharePointWorkspace": {
        "name": "MicrosoftOffice2010SharePointWorkspace",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2010Visio": {
        "name": "MicrosoftOffice2010Visio",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2010Word": {
        "name": "MicrosoftOffice2010Word",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013Access": {
        "name": "MicrosoftOffice2013Access",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013AccessBackup": {
        "name": "MicrosoftOffice2013AccessBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013Common": {
        "name": "MicrosoftOffice2013Common",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013CommonBackup": {
        "name": "MicrosoftOffice2013CommonBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013Excel": {
        "name": "MicrosoftOffice2013Excel",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013ExcelBackup": {
        "name": "MicrosoftOffice2013ExcelBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013InfoPath": {
        "name": "MicrosoftOffice2013InfoPath",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013InfoPathBackup": {
        "name": "MicrosoftOffice2013InfoPathBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013Lync": {
        "name": "MicrosoftOffice2013Lync",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013LyncBackup": {
        "name": "MicrosoftOffice2013LyncBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013OneDriveForBusiness": {
        "name": "MicrosoftOffice2013OneDriveForBusiness",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013OneNote": {
        "name": "MicrosoftOffice2013OneNote",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013OneNoteBackup": {
        "name": "MicrosoftOffice2013OneNoteBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013Outlook": {
        "name": "MicrosoftOffice2013Outlook",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013OutlookBackup": {
        "name": "MicrosoftOffice2013OutlookBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013PowerPoint": {
        "name": "MicrosoftOffice2013PowerPoint",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013PowerPointBackup": {
        "name": "MicrosoftOffice2013PowerPointBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013Project": {
        "name": "MicrosoftOffice2013Project",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013ProjectBackup": {
        "name": "MicrosoftOffice2013ProjectBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013Publisher": {
        "name": "MicrosoftOffice2013Publisher",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013PublisherBackup": {
        "name": "MicrosoftOffice2013PublisherBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013SharePointDesigner": {
        "name": "MicrosoftOffice2013SharePointDesigner",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013SharePointDesignerBackup": {
        "name": "MicrosoftOffice2013SharePointDesignerBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013UploadCenter": {
        "name": "MicrosoftOffice2013UploadCenter",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013Visio": {
        "name": "MicrosoftOffice2013Visio",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013VisioBackup": {
        "name": "MicrosoftOffice2013VisioBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013Word": {
        "name": "MicrosoftOffice2013Word",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2013WordBackup": {
        "name": "MicrosoftOffice2013WordBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016Access": {
        "name": "MicrosoftOffice2016Access",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016AccessBackup": {
        "name": "MicrosoftOffice2016AccessBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016Common": {
        "name": "MicrosoftOffice2016Common",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016CommonBackup": {
        "name": "MicrosoftOffice2016CommonBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016Excel": {
        "name": "MicrosoftOffice2016Excel",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016ExcelBackup": {
        "name": "MicrosoftOffice2016ExcelBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016Lync": {
        "name": "MicrosoftOffice2016Lync",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016LyncBackup": {
        "name": "MicrosoftOffice2016LyncBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016OneDriveForBusiness": {
        "name": "MicrosoftOffice2016OneDriveForBusiness",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016OneNote": {
        "name": "MicrosoftOffice2016OneNote",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016OneNoteBackup": {
        "name": "MicrosoftOffice2016OneNoteBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016Outlook": {
        "name": "MicrosoftOffice2016Outlook",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016OutlookBackup": {
        "name": "MicrosoftOffice2016OutlookBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016PowerPoint": {
        "name": "MicrosoftOffice2016PowerPoint",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016PowerPointBackup": {
        "name": "MicrosoftOffice2016PowerPointBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016Project": {
        "name": "MicrosoftOffice2016Project",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016ProjectBackup": {
        "name": "MicrosoftOffice2016ProjectBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016Publisher": {
        "name": "MicrosoftOffice2016Publisher",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016PublisherBackup": {
        "name": "MicrosoftOffice2016PublisherBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016UploadCenter": {
        "name": "MicrosoftOffice2016UploadCenter",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016Visio": {
        "name": "MicrosoftOffice2016Visio",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016VisioBackup": {
        "name": "MicrosoftOffice2016VisioBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016Word": {
        "name": "MicrosoftOffice2016Word",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice2016WordBackup": {
        "name": "MicrosoftOffice2016WordBackup",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Access2013": {
        "name": "MicrosoftOffice365Access2013",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Access2016": {
        "name": "MicrosoftOffice365Access2016",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Common2013": {
        "name": "MicrosoftOffice365Common2013",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Common2016": {
        "name": "MicrosoftOffice365Common2016",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Excel2013": {
        "name": "MicrosoftOffice365Excel2013",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Excel2016": {
        "name": "MicrosoftOffice365Excel2016",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365InfoPath2013": {
        "name": "MicrosoftOffice365InfoPath2013",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Lync2013": {
        "name": "MicrosoftOffice365Lync2013",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Lync2016": {
        "name": "MicrosoftOffice365Lync2016",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365OneNote2013": {
        "name": "MicrosoftOffice365OneNote2013",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365OneNote2016": {
        "name": "MicrosoftOffice365OneNote2016",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Outlook2013": {
        "name": "MicrosoftOffice365Outlook2013",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Outlook2016": {
        "name": "MicrosoftOffice365Outlook2016",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365PowerPoint2013": {
        "name": "MicrosoftOffice365PowerPoint2013",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365PowerPoint2016": {
        "name": "MicrosoftOffice365PowerPoint2016",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Project2013": {
        "name": "MicrosoftOffice365Project2013",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Project2016": {
        "name": "MicrosoftOffice365Project2016",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Publisher2013": {
        "name": "MicrosoftOffice365Publisher2013",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Publisher2016": {
        "name": "MicrosoftOffice365Publisher2016",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365SharePointDesigner2013": {
        "name": "MicrosoftOffice365SharePointDesigner2013",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Visio2013": {
        "name": "MicrosoftOffice365Visio2013",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Visio2016": {
        "name": "MicrosoftOffice365Visio2016",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Word2013": {
        "name": "MicrosoftOffice365Word2013",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MicrosoftOffice365Word2016": {
        "name": "MicrosoftOffice365Word2016",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Music": {
        "name": "Music",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "News": {
        "name": "News",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Notepad": {
        "name": "Notepad",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Reader": {
        "name": "Reader",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RepositoryTimeout": {
        "name": "RepositoryTimeout",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "SettingsStoragePath": {
        "name": "SettingsStoragePath",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Sports": {
        "name": "Sports",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "SyncEnabled": {
        "name": "SyncEnabled",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "SyncOverMeteredNetwork": {
        "name": "SyncOverMeteredNetwork",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "SyncOverMeteredNetworkWhenRoaming": {
        "name": "SyncOverMeteredNetworkWhenRoaming",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "SyncProviderPingEnabled": {
        "name": "SyncProviderPingEnabled",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Travel": {
        "name": "Travel",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Video": {
        "name": "Video",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Weather": {
        "name": "Weather",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Wordpad": {
        "name": "Wordpad",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_UserProfiles": {
    "name": "ADMX_UserProfiles",
    "policies": {
      "LimitSize": {
        "name": "LimitSize",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_WPN": {
    "name": "ADMX_WPN",
    "policies": {
      "NoCallsDuringQuietHours": {
        "name": "NoCallsDuringQuietHours",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoLockScreenToastNotification": {
        "name": "NoLockScreenToastNotification",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoQuietHours": {
        "name": "NoQuietHours",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoToastNotification": {
        "name": "NoToastNotification",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "QuietHoursDailyBeginMinute": {
        "name": "QuietHoursDailyBeginMinute",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "QuietHoursDailyEndMinute": {
        "name": "QuietHoursDailyEndMinute",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_WinCal": {
    "name": "ADMX_WinCal",
    "policies": {
      "TurnOffWinCal_1": {
        "name": "TurnOffWinCal_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_WinLogon": {
    "name": "ADMX_WinLogon",
    "policies": {
      "CustomShell": {
        "name": "CustomShell",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LogonHoursNotificationPolicyDescription": {
        "name": "LogonHoursNotificationPolicyDescription",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LogonHoursPolicyDescription": {
        "name": "LogonHoursPolicyDescription",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ReportCachedLogonPolicyDescription": {
        "name": "ReportCachedLogonPolicyDescription",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_WindowsColorSystem": {
    "name": "ADMX_WindowsColorSystem",
    "policies": {
      "ProhibitChangingInstalledProfileList_1": {
        "name": "ProhibitChangingInstalledProfileList_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_WindowsConnectNow": {
    "name": "ADMX_WindowsConnectNow",
    "policies": {
      "WCN_DisableWcnUi_1": {
        "name": "WCN_DisableWcnUi_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_WindowsExplorer": {
    "name": "ADMX_WindowsExplorer",
    "policies": {
      "ClassicShell": {
        "name": "ClassicShell",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ConfirmFileDelete": {
        "name": "ConfirmFileDelete",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DefaultLibrariesLocation": {
        "name": "DefaultLibrariesLocation",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableBindDirectlyToPropertySetStorage": {
        "name": "DisableBindDirectlyToPropertySetStorage",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableIndexedLibraryExperience": {
        "name": "DisableIndexedLibraryExperience",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableKnownFolders": {
        "name": "DisableKnownFolders",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableSearchBoxSuggestions": {
        "name": "DisableSearchBoxSuggestions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "EnforceShellExtensionSecurity": {
        "name": "EnforceShellExtensionSecurity",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ExplorerRibbonStartsMinimized": {
        "name": "ExplorerRibbonStartsMinimized",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HideContentViewModeSnippets": {
        "name": "HideContentViewModeSnippets",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchPreview_Internet": {
        "name": "IZ_Policy_OpenSearchPreview_Internet",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchPreview_InternetLockdown": {
        "name": "IZ_Policy_OpenSearchPreview_InternetLockdown",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchPreview_Intranet": {
        "name": "IZ_Policy_OpenSearchPreview_Intranet",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchPreview_IntranetLockdown": {
        "name": "IZ_Policy_OpenSearchPreview_IntranetLockdown",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchPreview_LocalMachine": {
        "name": "IZ_Policy_OpenSearchPreview_LocalMachine",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchPreview_LocalMachineLockdown": {
        "name": "IZ_Policy_OpenSearchPreview_LocalMachineLockdown",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchPreview_Restricted": {
        "name": "IZ_Policy_OpenSearchPreview_Restricted",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchPreview_RestrictedLockdown": {
        "name": "IZ_Policy_OpenSearchPreview_RestrictedLockdown",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchPreview_Trusted": {
        "name": "IZ_Policy_OpenSearchPreview_Trusted",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchPreview_TrustedLockdown": {
        "name": "IZ_Policy_OpenSearchPreview_TrustedLockdown",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchQuery_Internet": {
        "name": "IZ_Policy_OpenSearchQuery_Internet",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchQuery_InternetLockdown": {
        "name": "IZ_Policy_OpenSearchQuery_InternetLockdown",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchQuery_Intranet": {
        "name": "IZ_Policy_OpenSearchQuery_Intranet",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchQuery_IntranetLockdown": {
        "name": "IZ_Policy_OpenSearchQuery_IntranetLockdown",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchQuery_LocalMachine": {
        "name": "IZ_Policy_OpenSearchQuery_LocalMachine",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchQuery_LocalMachineLockdown": {
        "name": "IZ_Policy_OpenSearchQuery_LocalMachineLockdown",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchQuery_Restricted": {
        "name": "IZ_Policy_OpenSearchQuery_Restricted",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchQuery_RestrictedLockdown": {
        "name": "IZ_Policy_OpenSearchQuery_RestrictedLockdown",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchQuery_Trusted": {
        "name": "IZ_Policy_OpenSearchQuery_Trusted",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IZ_Policy_OpenSearchQuery_TrustedLockdown": {
        "name": "IZ_Policy_OpenSearchQuery_TrustedLockdown",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LinkResolveIgnoreLinkInfo": {
        "name": "LinkResolveIgnoreLinkInfo",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MaxRecentDocs": {
        "name": "MaxRecentDocs",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoBackButton": {
        "name": "NoBackButton",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoCDBurning": {
        "name": "NoCDBurning",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoCacheThumbNailPictures": {
        "name": "NoCacheThumbNailPictures",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoChangeAnimation": {
        "name": "NoChangeAnimation",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoChangeKeyboardNavigationIndicators": {
        "name": "NoChangeKeyboardNavigationIndicators",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoDFSTab": {
        "name": "NoDFSTab",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoDrives": {
        "name": "NoDrives",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoEntireNetwork": {
        "name": "NoEntireNetwork",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoFileMRU": {
        "name": "NoFileMRU",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoFileMenu": {
        "name": "NoFileMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoFolderOptions": {
        "name": "NoFolderOptions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoHardwareTab": {
        "name": "NoHardwareTab",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoManageMyComputerVerb": {
        "name": "NoManageMyComputerVerb",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoMyComputerSharedDocuments": {
        "name": "NoMyComputerSharedDocuments",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoNetConnectDisconnect": {
        "name": "NoNetConnectDisconnect",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoPlacesBar": {
        "name": "NoPlacesBar",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoRecycleFiles": {
        "name": "NoRecycleFiles",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoRunAsInstallPrompt": {
        "name": "NoRunAsInstallPrompt",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSearchInternetTryHarderButton": {
        "name": "NoSearchInternetTryHarderButton",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoSecurityTab": {
        "name": "NoSecurityTab",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoShellSearchButton": {
        "name": "NoShellSearchButton",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoStrCmpLogical": {
        "name": "NoStrCmpLogical",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoViewContextMenu": {
        "name": "NoViewContextMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoViewOnDrive": {
        "name": "NoViewOnDrive",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoWindowsHotKeys": {
        "name": "NoWindowsHotKeys",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NoWorkgroupContents": {
        "name": "NoWorkgroupContents",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PlacesBar": {
        "name": "PlacesBar",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PromptRunasInstallNetPath": {
        "name": "PromptRunasInstallNetPath",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RecycleBinSize": {
        "name": "RecycleBinSize",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ShellProtocolProtectedModeTitle_1": {
        "name": "ShellProtocolProtectedModeTitle_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TryHarderPinnedLibrary": {
        "name": "TryHarderPinnedLibrary",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TryHarderPinnedOpenSearch": {
        "name": "TryHarderPinnedOpenSearch",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_WindowsMediaPlayer": {
    "name": "ADMX_WindowsMediaPlayer",
    "policies": {
      "ConfigureHTTPProxySettings": {
        "name": "ConfigureHTTPProxySettings",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ConfigureMMSProxySettings": {
        "name": "ConfigureMMSProxySettings",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ConfigureRTSPProxySettings": {
        "name": "ConfigureRTSPProxySettings",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableNetworkSettings": {
        "name": "DisableNetworkSettings",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DoNotShowAnchor": {
        "name": "DoNotShowAnchor",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "EnableScreenSaver": {
        "name": "EnableScreenSaver",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HidePrivacyTab": {
        "name": "HidePrivacyTab",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HideSecurityTab": {
        "name": "HideSecurityTab",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NetworkBuffering": {
        "name": "NetworkBuffering",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PolicyCodecUpdate": {
        "name": "PolicyCodecUpdate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PreventCDDVDMetadataRetrieval": {
        "name": "PreventCDDVDMetadataRetrieval",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PreventMusicFileMetadataRetrieval": {
        "name": "PreventMusicFileMetadataRetrieval",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PreventRadioPresetsRetrieval": {
        "name": "PreventRadioPresetsRetrieval",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "SkinLockDown": {
        "name": "SkinLockDown",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WindowsStreamingMediaProtocols": {
        "name": "WindowsStreamingMediaProtocols",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_WindowsStore": {
    "name": "ADMX_WindowsStore",
    "policies": {
      "DisableOSUpgrade_1": {
        "name": "DisableOSUpgrade_1",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RemoveWindowsStore_1": {
        "name": "RemoveWindowsStore_1",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_WordWheel": {
    "name": "ADMX_WordWheel",
    "policies": {
      "CustomSearch": {
        "name": "CustomSearch",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ADMX_WorkFoldersClient": {
    "name": "ADMX_WorkFoldersClient",
    "policies": {
      "Pol_UserEnableTokenBroker": {
        "name": "Pol_UserEnableTokenBroker",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "Pol_UserEnableWorkFolders": {
        "name": "Pol_UserEnableWorkFolders",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/ApplicationManagement": {
    "name": "ApplicationManagement",
    "policies": {
      "MSIAlwaysInstallWithElevatedPrivileges": {
        "name": "MSIAlwaysInstallWithElevatedPrivileges",
        "description": "This policy setting directs Windows Installer to use elevated permissions when it installs any program on the system. If you enable this policy setting, privileges are extended to all programs. These privileges are usually reserved for programs that have been assigned to the user (offered on the desktop), assigned to the computer (installed automatically), or made available in Add or Remove Programs in Control Panel. This profile setting lets users install programs that require access to directories that the user might not have permission to view or change, including directories on highly restricted computers. If you disable or do not configure this policy setting, the system applies the current user's permissions when it installs programs that a system administrator does not distribute or offer. Note: This policy setting appears both in the Computer Configuration and User Configuration folders. To make this policy setting effective, you must enable it in both folders. Caution: Skilled users can take advantage of the permissions this policy setting grants to change their privileges and gain permanent access to restricted files and folders. Note that the User Configuration version of this policy setting is not guaranteed to be secure.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "user"
      },
      "RequirePrivateStoreOnly": {
        "name": "RequirePrivateStoreOnly",
        "description": "Allows disabling of the retail catalog and only enables the Private store. Most restricted value is 1.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow both public and Private store."
            },
            "1": {
              "description": "Only Private store is enabled."
            }
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/AttachmentManager": {
    "name": "AttachmentManager",
    "policies": {
      "DoNotPreserveZoneInformation": {
        "name": "DoNotPreserveZoneInformation",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "HideZoneInfoMechanism": {
        "name": "HideZoneInfoMechanism",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NotifyAntivirusPrograms": {
        "name": "NotifyAntivirusPrograms",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Authentication": {
    "name": "Authentication",
    "policies": {
      "AllowEAPCertSSO": {
        "name": "AllowEAPCertSSO",
        "description": "Allows an EAP cert-based authentication for a single sign on (SSO) to access internal resources.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Autoplay": {
    "name": "Autoplay",
    "policies": {
      "DisallowAutoplayForNonVolumeDevices": {
        "name": "DisallowAutoplayForNonVolumeDevices",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "SetDefaultAutoRunBehavior": {
        "name": "SetDefaultAutoRunBehavior",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TurnOffAutoPlay": {
        "name": "TurnOffAutoPlay",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Browser": {
    "name": "Browser",
    "policies": {
      "AllowAddressBarDropdown": {
        "name": "AllowAddressBarDropdown",
        "description": "This policy setting lets you decide whether the Address bar drop-down functionality is available in Microsoft Edge. We recommend disabling this setting if you want to minimize network connections from Microsoft Edge to Microsoft services.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/not allowed. Hide the Address bar drop-down functionality and disable the Show search and site suggestions as I type toggle in Settings."
            },
            "1": {
              "description": "Allowed. Show the Address bar drop-down list and make it available."
            }
          }
        },
        "scope": "user"
      },
      "AllowAutofill": {
        "name": "AllowAutofill",
        "description": "This setting lets you decide whether employees can use Autofill to automatically fill in form fields while using Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowBrowser": {
        "name": "AllowBrowser",
        "description": "This policy is deprecated",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowConfigurationUpdateForBooksLibrary": {
        "name": "AllowConfigurationUpdateForBooksLibrary",
        "description": "This policy setting lets you decide whether Microsoft Edge can automatically update the configuration data for the Books Library.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed. Microsoft Edge updates the configuration data for the Books Library automatically."
            }
          }
        },
        "scope": "user"
      },
      "AllowCookies": {
        "name": "AllowCookies",
        "description": "This setting lets you configure how your company deals with cookies.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Block all cookies from all sites"
            },
            "1": {
              "description": "Block only cookies from third party websites"
            },
            "2": {
              "description": "Allow all cookies from all sites"
            }
          }
        },
        "scope": "user"
      },
      "AllowDeveloperTools": {
        "name": "AllowDeveloperTools",
        "description": "This setting lets you decide whether employees can use F12 Developer Tools on Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowDoNotTrack": {
        "name": "AllowDoNotTrack",
        "description": "This setting lets you decide whether employees can send Do Not Track headers to websites that request tracking info.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Never send tracking information."
            },
            "1": {
              "description": "Send tracking information."
            }
          }
        },
        "scope": "user"
      },
      "AllowExtensions": {
        "name": "AllowExtensions",
        "description": "This setting lets you decide whether employees can load extensions in Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowFlash": {
        "name": "AllowFlash",
        "description": "This setting lets you decide whether employees can run Adobe Flash in Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowFlashClickToRun": {
        "name": "AllowFlashClickToRun",
        "description": "Configure the Adobe Flash Click-to-Run setting.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Load and run Adobe Flash content automatically."
            },
            "1": {
              "description": "Does not load or run Adobe Flash content automatically. Requires action from the user."
            }
          }
        },
        "scope": "user"
      },
      "AllowFullScreenMode": {
        "name": "AllowFullScreenMode",
        "description": "With this policy, you can specify whether to allow full-screen mode, which shows only the web content and hides the Microsoft Edge UI.  If enabled or not configured, full-screen mode is available for use in Microsoft Edge. Your users and extensions must have the proper permissions.  If disabled, full-screen mode is unavailable for use in Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowInPrivate": {
        "name": "AllowInPrivate",
        "description": "This setting lets you decide whether employees can browse using InPrivate website browsing.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowMicrosoftCompatibilityList": {
        "name": "AllowMicrosoftCompatibilityList",
        "description": "This policy setting lets you decide whether the Microsoft Compatibility List is enabled or disabled in Microsoft Edge. This feature uses a Microsoft-provided list to ensure that any sites with known compatibility issues are displayed correctly when a user navigates to them. By default, the Microsoft Compatibility List is enabled and can be viewed by navigating to about:compat.  If you enable or don’t configure this setting, Microsoft Edge will periodically download the latest version of the list from Microsoft and will apply the configurations specified there during browser navigation. If a user visits a site on the Microsoft Compatibility List, he or she will be prompted to open the site in Internet Explorer 11. Once in Internet Explorer, the site will automatically be rendered as if the user is viewing it in the previous version of Internet Explorer it requires to display correctly.  If you disable this setting, the Microsoft Compatibility List will not be used during browser navigation.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowPasswordManager": {
        "name": "AllowPasswordManager",
        "description": "This setting lets you decide whether employees can save their passwords locally, using Password Manager.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowPopups": {
        "name": "AllowPopups",
        "description": "This setting lets you decide whether to turn on Pop-up Blocker and whether to allow pop-ups to appear in secondary windows.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Turn off Pop-up Blocker letting pop-up windows open."
            },
            "1": {
              "description": "Turn on Pop-up Blocker stopping pop-up windows from opening."
            }
          }
        },
        "scope": "user"
      },
      "AllowPrelaunch": {
        "name": "AllowPrelaunch",
        "description": "Allow Microsoft Edge to pre-launch at Windows startup, when the system is idle, and each time Microsoft Edge is closed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowPrinting": {
        "name": "AllowPrinting",
        "description": "With this policy, you can restrict whether printing web content in Microsoft Edge is allowed.  If enabled, printing is allowed.  If disabled, printing is not allowed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowSavingHistory": {
        "name": "AllowSavingHistory",
        "description": "Microsoft Edge saves your user's browsing history, which is made up of info about the websites they visit, on their devices.  If enabled or not configured, the browsing history is saved and visible in the History pane.  If disabled, the browsing history stops saving and is not visible in the History pane. If browsing history exists before this policy was disabled, the previous browsing history remains visible in the History pane. This policy, when disabled, does not stop roaming of existing history or history coming from other roamed devices.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowSearchEngineCustomization": {
        "name": "AllowSearchEngineCustomization",
        "description": "Allow search engine customization for MDM enrolled devices. Users can change their default search engine.  If this setting is turned on or not configured, users can add new search engines and change the default used in the address bar from within Microsoft Edge Settings. If this setting is disabled, users will be unable to add search engines or change the default used in the address bar.  This policy will only apply on domain joined machines or when the device is MDM enrolled. For more information, see Microsoft browser extension policy (aka.ms/browserpolicy).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowSearchSuggestionsinAddressBar": {
        "name": "AllowSearchSuggestionsinAddressBar",
        "description": "This setting lets you decide whether search suggestions should appear in the Address bar of Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed. Hide the search suggestions."
            },
            "1": {
              "description": "Allowed. Show the search suggestions."
            }
          }
        },
        "scope": "user"
      },
      "AllowSideloadingOfExtensions": {
        "name": "AllowSideloadingOfExtensions",
        "description": "This setting lets you decide whether employees can sideload extensions in Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed. Disabling does not prevent sideloading of extensions using Add-AppxPackage via Powershell. To prevent this, set the ApplicationManagement/AllowDeveloperUnlock policy to 1 (enabled)."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowSmartScreen": {
        "name": "AllowSmartScreen",
        "description": "This setting lets you decide whether to turn on Windows Defender SmartScreen.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Turned off. Do not protect users from potential threats and prevent users from turning it on."
            },
            "1": {
              "description": "Turned on. Protect users from potential threats and prevent users from turning it off."
            }
          }
        },
        "scope": "user"
      },
      "AllowTabPreloading": {
        "name": "AllowTabPreloading",
        "description": "Prevent Microsoft Edge from starting and loading the Start and New Tab page at Windows startup and each time Microsoft Edge is closed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/Not allowed."
            },
            "1": {
              "description": "Allowed. Preload Start and New tab pages."
            }
          }
        },
        "scope": "user"
      },
      "AllowWebContentOnNewTabPage": {
        "name": "AllowWebContentOnNewTabPage",
        "description": "This policy setting lets you configure what appears when Microsoft Edge opens a new tab. By default, Microsoft Edge opens the New Tab page.  If you enable this setting, Microsoft Edge opens a new tab with the New Tab page.  If you disable this setting, Microsoft Edge opens a new tab with a blank page. If you use this setting, employees can't change it.  If you don't configure this setting, employees can choose how new tabs appears.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Load a blank page instead of the default New tab page and prevent users from changing it."
            },
            "1": {
              "description": "Load the default New tab page."
            }
          }
        },
        "scope": "user"
      },
      "AlwaysEnableBooksLibrary": {
        "name": "AlwaysEnableBooksLibrary",
        "description": "Specifies whether the Books Library in Microsoft Edge will always be visible regardless of the country or region setting for the device.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Show the Books Library only in countries or regions where supported."
            },
            "1": {
              "description": "Show the Books Library, regardless of the device's country or region."
            }
          }
        },
        "scope": "user"
      },
      "ClearBrowsingDataOnExit": {
        "name": "ClearBrowsingDataOnExit",
        "description": "Specifies whether to always clear browsing history on exiting Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/not allowed. Users can configure the 'Clear browsing data' option in Settings."
            },
            "1": {
              "description": "Allowed. Clear the browsing data upon exit automatically."
            }
          }
        },
        "scope": "user"
      },
      "ConfigureAdditionalSearchEngines": {
        "name": "ConfigureAdditionalSearchEngines",
        "description": "Allows you to add up to 5 additional search engines for MDM-enrolled devices.  If this setting is turned on, you can add up to 5 additional search engines for your employee. For each additional search engine you wish to add, you must specify a link to the OpenSearch XML file that contains, at minimum, the short name and the URL to the search engine. This policy does not affect the default search engine. Employees will not be able to remove these search engines, but they can set any one of these as the default.  If this setting is not configured, the search engines are the ones specified in the App settings. If this setting is disabled, the search engines you had added will be deleted from your employee's machine.  Due to Protected Settings (aka.ms/browserpolicy), this policy will only apply on domain-joined machines or when the device is MDM-enrolled.",
        "format": "string",
        "scope": "user"
      },
      "ConfigureFavoritesBar": {
        "name": "ConfigureFavoritesBar",
        "description": "The favorites bar shows your user's links to sites they have added to it. With this policy, you can specify whether to set the favorites bar to always be visible or hidden on any page.  If enabled, favorites bar is always visible on any page, and the favorites bar toggle in Settings sets to On, but disabled preventing your users from making changes. An error message also shows at the top of the Settings pane indicating that your organization manages some settings. The show bar/hide bar option is hidden from the context menu.  If disabled, the favorites bar is hidden, and the favorites bar toggle resets to Off, but disabled preventing your users from making changes. An error message also shows at the top of the Settings pane indicating that your organization manages some settings.  If not configured, the favorites bar is hidden but is visible on the Start and New Tab pages, and the favorites bar toggle in Settings sets to Off but is enabled allowing the user to make changes.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Hide the favorites bar on all pages. Also, the favorites bar toggle, in Settings, is set to Off and disabled preventing users from making changes. Microsoft Edge also hides the “show bar/hide bar” option in the context menu."
            },
            "1": {
              "description": "Show the favorites bar on all pages. Also, the favorites bar toggle, in Settings, is set to On and disabled preventing users from making changes. Microsoft Edge also hides the “show bar/hide bar” option in the context menu."
            }
          }
        },
        "scope": "user"
      },
      "ConfigureHomeButton": {
        "name": "ConfigureHomeButton",
        "description": "The Home button loads either the default Start page, the New tab page, or a URL defined in the Set Home Button URL policy.  By default, this policy is disabled or not configured and clicking the home button loads the default Start page.  When enabled, the home button is locked down preventing your users from making changes in Microsoft Edge's UI settings. To let your users change the Microsoft Edge UI settings, enable the Unlock Home Button policy.  If Enabled AND: - Show home button & set to Start page is selected, clicking the home button loads the Start page. - Show home button & set to New tab page is selected, clicking the home button loads a New tab page. - Show home button & set a specific page is selected, clicking the home button loads the URL specified in the Set Home Button URL policy. - Hide home button is selected, the home button is hidden in Microsoft Edge.  Default setting: Disabled or not configured Related policies: - Set Home Button URL - Unlock Home Button",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Show home button and load the Start page"
            },
            "1": {
              "description": "Show home button and load the New tab page"
            },
            "2": {
              "description": "Show home button and load the custom URL defined in the Set Home Button URL policy"
            },
            "3": {
              "description": "Hide home button"
            }
          }
        },
        "scope": "user"
      },
      "ConfigureKioskMode": {
        "name": "ConfigureKioskMode",
        "description": "Configure how Microsoft Edge behaves when it’s running in kiosk mode with assigned access, either as a single app or as one of multiple apps running on the kiosk device. You can control whether Microsoft Edge runs InPrivate full screen, InPrivate multi-tab with limited functionality, or normal Microsoft Edge.  You need to configure Microsoft Edge in assigned access for this policy to take effect; otherwise, these settings are ignored. To learn more about assigned access and kiosk configuration, see “Configure kiosk and shared devices running Windows desktop editions” (https://aka.ms/E489vw).  If enabled and set to 0 (Default or not configured): - If it’s a single app, it runs InPrivate full screen for digital signage or interactive displays. - If it’s one of many apps, Microsoft Edge runs as normal. If enabled and set to 1: - If it’s a single app, it runs a limited multi-tab version of InPrivate and is the only app available for public browsing. Users can’t minimize, close, or open windows or customize Microsoft Edge, but can clear browsing data and downloads and restart by clicking “End session.” You can configure Microsoft Edge to restart after a period of inactivity by using the “Configure kiosk reset after idle timeout” policy. - If it’s one of many apps, it runs in a limited multi-tab version of InPrivate for public browsing with other apps. Users can minimize, close, and open multiple InPrivate windows, but they can’t customize Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "user"
      },
      "ConfigureKioskResetAfterIdleTimeout": {
        "name": "ConfigureKioskResetAfterIdleTimeout",
        "description": "You can configure Microsoft Edge to reset to the configured start experience after a specified amount of idle time. The reset timer begins after the last user interaction. Resetting to the configured start experience deletes the current user’s browsing data.  If enabled, you can set the idle time in minutes (0-1440). You must set the Configure kiosk mode policy to 1 and configure Microsoft Edge in assigned access as a single app for this policy to work. Once the idle time meets the time specified, a confirmation message prompts the user to continue, and if no user action, Microsoft Edge resets after 30 seconds.  If you set this policy to 0, Microsoft Edge does not use an idle timer.  If disabled or not configured, the default value is 5 minutes.  If you do not configure Microsoft Edge in assigned access, then this policy does not take effect.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 144
        },
        "scope": "user"
      },
      "ConfigureOpenMicrosoftEdgeWith": {
        "name": "ConfigureOpenMicrosoftEdgeWith",
        "description": "You can configure Microsoft Edge to lock down the Start page, preventing users from changing or customizing it.  If enabled, you can choose one of the following options: - Start page: the Start page loads ignoring the Configure Start Pages policy. - New tab page: the New tab page loads ignoring the Configure Start Pages policy. - Previous pages: all tabs the user had open when Microsoft Edge last closed loads ignoring the Configure Start Pages policy. - A specific page or pages: the URL(s) specified with Configure Start Pages policy load(s). If selected, you must specify at least one URL in Configure Start Pages; otherwise, this policy is ignored.  When enabled, and you want to make changes, you must first set the Disable Lockdown of Start Pages to not configured, make the changes to the Configure Open Edge With policy, and then enable the Disable Lockdown of Start Pages policy.  If disabled or not configured, and you enable the Disable Lockdown of Start Pages policy, your users can change or customize the Start page.  Default setting: A specific page or pages (default) Related policies: -Disable Lockdown of Start Pages -Configure Start Pages",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Load the Start page"
            },
            "1": {
              "description": "Load the New tab page"
            },
            "2": {
              "description": "Load the previous pages"
            },
            "3": {
              "description": "Load a specific page or pages"
            }
          }
        },
        "scope": "user"
      },
      "ConfigureTelemetryForMicrosoft365Analytics": {
        "name": "ConfigureTelemetryForMicrosoft365Analytics",
        "description": "Configures what browsing data will be sent to Microsoft 365 Analytics for devices belonging to an organization.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "No data collected or sent"
            },
            "1": {
              "description": "Send intranet history only"
            },
            "2": {
              "description": "Send Internet history only"
            },
            "3": {
              "description": "Send both intranet and Internet history"
            }
          }
        },
        "scope": "user"
      },
      "DisableLockdownOfStartPages": {
        "name": "DisableLockdownOfStartPages",
        "description": "You can configure Microsoft Edge to disable the lockdown of Start pages allowing users to change or customize their start pages.  To do this, you must also enable the Configure Start Pages or Configure Open Microsoft With policy. When enabled, all configured start pages are editable. Any Start page configured using the Configure Start pages policy is not locked down allowing users to edit their Start pages.  If disabled or not configured, the Start pages configured in the Configure Start Pages policy cannot be changed and remain locked down.  Supported devices: Domain-joined or MDM-enrolled Related policy: - Configure Start Pages - Configure Open Microsoft Edge With",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Lock down Start pages configured in either the ConfigureOpenEdgeWith policy and HomePages policy."
            },
            "1": {
              "description": "Unlocked. Users can make changes to all configured start pages."
            }
          }
        },
        "scope": "user"
      },
      "EnableExtendedBooksTelemetry": {
        "name": "EnableExtendedBooksTelemetry",
        "description": "This setting allows organizations to send extended telemetry on book usage from the Books Library.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Gather and send only basic diagnostic data, depending on the device configuration."
            },
            "1": {
              "description": "Gather all diagnostic data."
            }
          }
        },
        "scope": "user"
      },
      "EnterpriseModeSiteList": {
        "name": "EnterpriseModeSiteList",
        "description": "This setting lets you configure whether your company uses Enterprise Mode and the Enterprise Mode Site List to address common compatibility problems with legacy websites.",
        "format": "string",
        "scope": "user"
      },
      "EnterpriseSiteListServiceUrl": {
        "name": "EnterpriseSiteListServiceUrl",
        "description": "Important. Discontinued in Windows 10, version 1511. Use the Browser/EnterpriseModeSiteList policy instead.",
        "format": "string",
        "scope": "user"
      },
      "FirstRunURL": {
        "name": "FirstRunURL",
        "description": "Configure first run URL.",
        "format": "string",
        "scope": "user"
      },
      "HomePages": {
        "name": "HomePages",
        "description": "When you enable the Configure Open Microsoft Edge With policy, you can configure one or more Start pages. When you enable this policy, users are not allowed to make changes to their Start pages.  If enabled, you must include URLs to the pages, separating multiple pages using angle brackets in the following format:        <support.contoso.com><support.microsoft.com>  If disabled or not configured, the webpages specified in App settings loads as the default Start pages.  Version 1703 or later: If you do not want to send traffic to Microsoft, enable this policy and use the <about:blank> value, which honors domain- and non-domain-joined devices, when it is the only configured URL.  Version 1809: If enabled, and you select either Start page, New Tab page, or previous page in the Configure Open Microsoft Edge With policy, Microsoft Edge ignores the Configure Start Pages policy. If not configured or you set the Configure Open Microsoft Edge With policy to a specific page or pages, Microsoft Edge uses the Configure Start Pages policy.  Supported devices: Domain-joined or MDM-enrolled Related policy: - Configure Open Microsoft Edge With - Disable Lockdown of Start Pages",
        "format": "string",
        "scope": "user"
      },
      "LockdownFavorites": {
        "name": "LockdownFavorites",
        "description": "This policy setting lets you decide whether employees can add, import, sort, or edit the Favorites list on Microsoft Edge.  If you enable this setting, employees won't be able to add, import, or change anything in the Favorites list. Also as part of this, Save a Favorite, Import settings, and the context menu items (such as, Create a new folder) are all turned off.  Important Don't enable both this setting and the Keep favorites in sync between Internet Explorer and Microsoft Edge setting. Enabling both settings stops employees from syncing their favorites between Internet Explorer and Microsoft Edge.  If you disable or don't configure this setting (default), employees can add, import and make changes to the Favorites list.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed/not locked down. Users can add, import, and make changes to the favorites."
            },
            "1": {
              "description": "Prevented/locked down."
            }
          }
        },
        "scope": "user"
      },
      "PreventAccessToAboutFlagsInMicrosoftEdge": {
        "name": "PreventAccessToAboutFlagsInMicrosoftEdge",
        "description": "Prevent access to the about:flags page in Microsoft Edge.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed."
            },
            "1": {
              "description": "Prevents users from accessing the about:flags page."
            }
          }
        },
        "scope": "user"
      },
      "PreventCertErrorOverrides": {
        "name": "PreventCertErrorOverrides",
        "description": "Web security certificates are used to ensure a site your users go to is legitimate, and in some circumstances encrypts the data. With this policy, you can specify whether to prevent users from bypassing the security warning to sites that have SSL errors.  If enabled, overriding certificate errors are not allowed.  If disabled or not configured, overriding certificate errors are allowed.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed/turned on. Override the security warning to sites that have SSL errors."
            },
            "1": {
              "description": "Prevented/turned on."
            }
          }
        },
        "scope": "user"
      },
      "PreventFirstRunPage": {
        "name": "PreventFirstRunPage",
        "description": "Specifies whether the First Run webpage is prevented from automatically opening on the first launch of Microsoft Edge. This policy is only available for Windows 10 version 1703 or later for desktop.  Due to Protected Settings (aka.ms/browserpolicy), this policy will only apply on domain-joined machines or when the device is MDM-enrolled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed. Load the First Run webpage."
            },
            "1": {
              "description": "Prevented/Not allowed."
            }
          }
        },
        "scope": "user"
      },
      "PreventLiveTileDataCollection": {
        "name": "PreventLiveTileDataCollection",
        "description": "This policy lets you decide whether Microsoft Edge can gather Live Tile metadata from the ieonline.microsoft.com service to provide a better experience while pinning a Live Tile to the Start menu.  Due to Protected Settings (aka.ms/browserpolicy), this policy will only apply on domain-joined machines or when the device is MDM-enrolled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Collect and send Live Tile metadata."
            },
            "1": {
              "description": "No data collected."
            }
          }
        },
        "scope": "user"
      },
      "PreventSmartScreenPromptOverride": {
        "name": "PreventSmartScreenPromptOverride",
        "description": "Don't allow Windows Defender SmartScreen warning overrides",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed/turned off. Users can ignore the warning and continue to the site."
            },
            "1": {
              "description": "Prevented/turned on."
            }
          }
        },
        "scope": "user"
      },
      "PreventSmartScreenPromptOverrideForFiles": {
        "name": "PreventSmartScreenPromptOverrideForFiles",
        "description": "Don't allow Windows Defender SmartScreen warning overrides for unverified files.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed/turned off. Users can ignore the warning and continue to download the unverified file(s)."
            },
            "1": {
              "description": "Prevented/turned on."
            }
          }
        },
        "scope": "user"
      },
      "PreventTurningOffRequiredExtensions": {
        "name": "PreventTurningOffRequiredExtensions",
        "description": "You can define a list of extensions in Microsoft Edge that users cannot turn off. You must deploy extensions through any available enterprise deployment channel, such as Microsoft Intune. When you enable this policy, users cannot uninstall extensions from their computer, but they can configure options for extensions defined in this policy, such as allow for InPrivate browsing. Any additional permissions requested by future updates of the extension gets granted automatically.  When you enable this policy, you must provide a semi-colon delimited list of extension package family names (PFNs).  For example, adding Microsoft.OneNoteWebClipper_8wekyb3d8bbwe;Microsoft.OfficeOnline_8wekyb3d8bbwe  prevents a user from turning off the OneNote Web Clipper and Office Online extension.  When enabled, removing extensions from the list does not uninstall the extension from the user’s computer automatically. To uninstall the extension, use any available enterprise deployment channel.  If you enable the Allow Developer Tools policy, then this policy does not prevent users from debugging and altering the logic on an extension.  If disabled or not configured, extensions defined as part of this policy get ignored.  Default setting:  Disabled or not configured Related policies: Allow Developer Tools Related Documents: - Find a package family name (PFN) for per-app VPN (https://docs.microsoft.com/en-us/sccm/protect/deploy-use/find-a-pfn-for-per-app-vpn) - How to manage apps you purchased from the Microsoft Store for Business with Microsoft Intune (https://docs.microsoft.com/en-us/intune/windows-store-for-business) - How to assign apps to groups with Microsoft Intune (https://docs.microsoft.com/en-us/intune/apps-deploy) - Manage apps from the Microsoft Store for Business with System Center Configuration Manager  (https://docs.microsoft.com/en-us/sccm/apps/deploy-use/manage-apps-from-the-windows-store-for-business) - How to add Windows line-of-business (LOB) apps to Microsoft Intune (https://docs.microsoft.com/en-us/intune/lob-apps-windows)",
        "format": "string",
        "scope": "user"
      },
      "PreventUsingLocalHostIPAddressForWebRTC": {
        "name": "PreventUsingLocalHostIPAddressForWebRTC",
        "description": "Prevent using localhost IP address for WebRTC",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allowed. Show localhost IP addresses."
            },
            "1": {
              "description": "Prevented/Not allowed."
            }
          }
        },
        "scope": "user"
      },
      "ProvisionFavorites": {
        "name": "ProvisionFavorites",
        "description": "This policy setting allows you to configure a default set of favorites, which will appear for employees. Employees cannot modify, sort, move, export or delete these provisioned favorites.  If you enable this setting, you can set favorite URL's and favorite folders to appear on top of users' favorites list (either in the Hub or Favorites Bar). The user favorites will appear after these provisioned favorites.  Important Don't enable both this setting and the Keep favorites in sync between Internet Explorer and Microsoft Edge setting. Enabling both settings stops employees from syncing their favorites between Internet Explorer and Microsoft Edge.  If you disable or don't configure this setting, employees will see the favorites they set in the Hub and Favorites Bar.",
        "format": "string",
        "scope": "user"
      },
      "SendIntranetTraffictoInternetExplorer": {
        "name": "SendIntranetTraffictoInternetExplorer",
        "description": "Sends all intranet traffic over to Internet Explorer.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "All sites, including intranet sites, open in Microsoft Edge automatically."
            },
            "1": {
              "description": "Only intranet sites open in Internet Explorer 11 automatically."
            }
          }
        },
        "scope": "user"
      },
      "SetDefaultSearchEngine": {
        "name": "SetDefaultSearchEngine",
        "description": "Sets the default search engine for MDM-enrolled devices. Users can still change their default search engine.  If this setting is turned on, you are setting the default search engine that you would like your employees to use. Employees can still change the default search engine, unless you apply the AllowSearchEngineCustomization policy which will disable the ability to change it. You must specify a link to the OpenSearch XML file that contains, at minimum, the short name and the URL to the search engine. If you would like for your employees to use the Edge factory settings for the default search engine for their market, set the string EDGEDEFAULT; if you would like for your employees to use Bing as the default search engine, set the string EDGEBING.  If this setting is not configured, the default search engine is set to the one specified in App settings and can be changed by your employees.  If this setting is disabled, the policy-set search engine will be removed, and, if it is the current default, the default will be set back to the factory Microsoft Edge search engine for the market.  Due to Protected Settings (aka.ms/browserpolicy), this policy will only apply on domain-joined machines or when the device is MDM-enrolled.",
        "format": "string",
        "scope": "user"
      },
      "SetHomeButtonURL": {
        "name": "SetHomeButtonURL",
        "description": "The home button can be configured to load a custom URL when your user clicks the home button.  If enabled, or configured, and the Configure Home Button policy is enabled, and the Show home button & set a specific page is selected, a custom URL loads when your user clicks the home button.  Default setting: Blank or not configured Related policy: Configure Home Button",
        "format": "string",
        "scope": "user"
      },
      "SetNewTabPageURL": {
        "name": "SetNewTabPageURL",
        "description": "You can set the default New Tab page URL in Microsoft Edge.  Enabling this policy prevents your users from changing the New tab page setting. When enabled and the Allow web content on New Tab page policy is disabled, Microsoft Edge ignores the URL specified in this policy and opens about:blank.  If enabled, you can set the default New Tab page URL.  If disabled or not configured, the default Microsoft Edge new tab page is used.  Default setting:  Disabled or not configured Related policy: Allow web content on New Tab page",
        "format": "string",
        "scope": "user"
      },
      "ShowMessageWhenOpeningSitesInInternetExplorer": {
        "name": "ShowMessageWhenOpeningSitesInInternetExplorer",
        "description": "You can configure Microsoft Edge to open a site automatically in Internet Explorer 11 and choose to display a notification before the site opens. If you want to display a notification, you must enable Configure the Enterprise Mode Site List or Send all intranets sites to Internet Explorer 11 or both.  If enabled, the notification appears on a new page. If you want users to continue in Microsoft Edge, select the Show Keep going in Microsoft Edge option from the drop-down list under Options.  If disabled or not configured, the default app behavior occurs and no additional page displays.  Default setting: Disabled or not configured Related policies: -Configure the Enterprise Mode Site List -Send all intranet sites to Internet Explorer 11",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "No additional message displays."
            },
            "1": {
              "description": "Show an additional message stating that a site has opened in IE11."
            },
            "2": {
              "description": "Show an additional message with a \"Keep going in Microsoft Edge\" link."
            }
          }
        },
        "scope": "user"
      },
      "SyncFavoritesBetweenIEAndMicrosoftEdge": {
        "name": "SyncFavoritesBetweenIEAndMicrosoftEdge",
        "description": "Specifies whether favorites are kept in sync between Internet Explorer and Microsoft Edge. Changes to favorites in one browser are reflected in the other, including: additions, deletions, modifications, and ordering.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Turned off/not syncing."
            },
            "1": {
              "description": "Turned on/syncing."
            }
          }
        },
        "scope": "user"
      },
      "UnlockHomeButton": {
        "name": "UnlockHomeButton",
        "description": "By default, when enabling Configure Home Button or Set Home Button URL, the home button is locked down to prevent your users from changing what page loads when clicking the home button. Use this policy to let users change the home button even when Configure Home Button or Set Home Button URL are enabled.  If enabled, the UI settings for the home button are enabled allowing your users to make changes, including hiding and showing the home button as well as configuring a custom URL.  If disabled or not configured, the UI settings for the home button are disabled preventing your users from making changes.  Default setting: Disabled or not configured Related policy: -Configure Home Button -Set Home Button URL",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Lock down and prevent users from making changes to the settings."
            },
            "1": {
              "description": "Let users make changes."
            }
          }
        },
        "scope": "user"
      },
      "UseSharedFolderForBooks": {
        "name": "UseSharedFolderForBooks",
        "description": "This setting specifies whether organizations should use a folder shared across users to store books from the Books Library.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Prevented/not allowed, but Microsoft Edge downloads book files to a per-user folder for each user."
            },
            "1": {
              "description": "Allowed. Microsoft Edge downloads book files to a shared folder. For this policy to work correctly, you must also enable the Allow a Windows app to share application data between users group policy. Also, the users must be signed in with a school or work account."
            }
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/CredentialsUI": {
    "name": "CredentialsUI",
    "policies": {
      "DisablePasswordReveal": {
        "name": "DisablePasswordReveal",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Desktop": {
    "name": "Desktop",
    "policies": {
      "PreventUserRedirectionOfProfileFolders": {
        "name": "PreventUserRedirectionOfProfileFolders",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Display": {
    "name": "Display",
    "policies": {
      "EnablePerProcessDpi": {
        "name": "EnablePerProcessDpi",
        "description": "Enable or disable Per-Process System DPI for all applications.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable."
            },
            "1": {
              "description": "Enable."
            }
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Education": {
    "name": "Education",
    "policies": {
      "AllowGraphingCalculator": {
        "name": "AllowGraphingCalculator",
        "description": "This policy setting allows you to control whether graphing functionality is available in the Windows Calculator app. If you disable this policy setting, graphing functionality will not be accessible in the Windows Calculator app. If you enable or don't configure this policy setting, users will be able to access graphing functionality.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "user"
      },
      "DefaultPrinterName": {
        "name": "DefaultPrinterName",
        "description": "This policy sets user's default printer",
        "format": "string",
        "scope": "user"
      },
      "PreventAddingNewPrinters": {
        "name": "PreventAddingNewPrinters",
        "description": "Boolean that specifies whether or not to prevent user to install new printers",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow user installation."
            },
            "1": {
              "description": "Prevent user installation."
            }
          }
        },
        "scope": "user"
      },
      "PrinterNames": {
        "name": "PrinterNames",
        "description": "This policy provisions per-user network printers",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/EnterpriseCloudPrint": {
    "name": "EnterpriseCloudPrint",
    "policies": {
      "CloudPrintOAuthAuthority": {
        "name": "CloudPrintOAuthAuthority",
        "description": "Authentication endpoint for acquiring OAuth tokens",
        "format": "string",
        "scope": "user"
      },
      "CloudPrintOAuthClientId": {
        "name": "CloudPrintOAuthClientId",
        "description": "A GUID identifying the client application authorized to retrieve OAuth tokens from the OAuthAuthority",
        "format": "string",
        "scope": "user"
      },
      "CloudPrintResourceId": {
        "name": "CloudPrintResourceId",
        "description": "Resource URI for which access is being requested by the Enterprise Cloud Print client during OAuth authentication",
        "format": "string",
        "scope": "user"
      },
      "CloudPrinterDiscoveryEndPoint": {
        "name": "CloudPrinterDiscoveryEndPoint",
        "description": "This policy provisions per-user discovery end point to discover cloud printers",
        "format": "string",
        "scope": "user"
      },
      "DiscoveryMaxPrinterLimit": {
        "name": "DiscoveryMaxPrinterLimit",
        "description": "Defines the maximum number of printers that should be queried from discovery end point",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 6553
        },
        "scope": "user"
      },
      "MopriaDiscoveryResourceId": {
        "name": "MopriaDiscoveryResourceId",
        "description": "Resource URI for which access is being requested by the Mopria discovery client during OAuth authentication",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Experience": {
    "name": "Experience",
    "policies": {
      "AllowScreenRecorder": {
        "name": "AllowScreenRecorder",
        "description": "This policy setting allows you to control whether screen recording functionality is available in the Windows Snipping Tool app. If you disable this policy setting, screen recording functionality will not be accessible in the Windows Snipping Tool app. If you enable or don't configure this policy setting, users will be able to access screen recording functionality.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "user"
      },
      "AllowSpotlightCollection": {
        "name": "AllowSpotlightCollection",
        "description": "Specifies whether Spotlight collection is allowed as a Personalization->Background Setting. If you enable this policy setting, Spotlight collection will show as an option in the user's Personalization Settings, and the user will be able to get daily images from Microsoft displayed on their desktop. If you disable this policy setting, Spotlight collection will not show as an option in Personliazation Settings, and the user will not have the choice of getting Microsoft daily images shown on their desktop.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "user"
      },
      "AllowTailoredExperiencesWithDiagnosticData": {
        "name": "AllowTailoredExperiencesWithDiagnosticData",
        "description": "This policy allows you to prevent Windows from using diagnostic data to provide customized experiences to the user. If you enable this policy setting, Windows will not use diagnostic data from this device to customize content shown on the lock screen, Windows tips, Microsoft consumer features, or other related features. If these features are enabled, users will still see recommendations, tips and offers, but they may be less relevant. If you disable or do not configure this policy setting, Microsoft will use diagnostic data to provide personalized recommendations, tips, and offers to tailor Windows for the user's needs and make it work better for them. Diagnostic data can include browser, app and feature usage, depending on the Diagnostic and usage data setting value. Note This setting does not control Cortana cutomized experiences because there are separate policies to configure it. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowThirdPartySuggestionsInWindowsSpotlight": {
        "name": "AllowThirdPartySuggestionsInWindowsSpotlight",
        "description": "Specifies whether to allow app and content suggestions from third-party software publishers in Windows spotlight features like lock screen spotlight, suggested apps in the Start menu, and Windows tips. Users may still see suggestions for Microsoft features, apps, and services.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Third-party suggestions not allowed."
            },
            "1": {
              "description": "Third-party suggestions allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowWindowsSpotlight": {
        "name": "AllowWindowsSpotlight",
        "description": "Specifies whether to turn off all Windows spotlight features at once. If you enable this policy setting, Windows spotlight on lock screen, Windows Tips, Microsoft consumer features and other related features will be turned off. You should enable this policy setting if your goal is to minimize network traffic from target devices. If you disable or do not configure this policy setting, Windows spotlight features are allowed and may be controlled individually using their corresponding policy settings. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowWindowsSpotlightOnActionCenter": {
        "name": "AllowWindowsSpotlightOnActionCenter",
        "description": "This policy allows administrators to prevent Windows spotlight notifications from being displayed in the Action Center. If you enable this policy, Windows spotlight notifications will no longer be displayed in the Action Center. If you disable or do not configure this policy, Microsoft may display notifications in the Action Center that will suggest apps or features to help users be more productive on Windows. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowWindowsSpotlightOnSettings": {
        "name": "AllowWindowsSpotlightOnSettings",
        "description": "This policy allows IT admins to turn off Suggestions in Settings app. These suggestions from Microsoft may show after each OS clean install, upgrade or an on-going basis to help users discover apps/features on Windows or across devices, to make their experience productive. User setting is under Settings -> Privacy -> General -> Show me suggested content in Settings app. User Setting is changeable on a per user basis. If the Group policy is set to off, no suggestions will be shown to the user in Settings app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowWindowsSpotlightWindowsWelcomeExperience": {
        "name": "AllowWindowsSpotlightWindowsWelcomeExperience",
        "description": "This policy setting lets you turn off the Windows spotlight Windows welcome experience feature. The Windows welcome experience feature introduces onboard users to Windows; for example, launching Microsoft Edge with a webpage that highlights new features. If you enable this policy, the Windows welcome experience will no longer be displayed when there are updates and changes to Windows and its apps. If you disable or do not configure this policy, the Windows welcome experience will be launched to inform onboard users about what's new, changed, and suggested. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "ConfigureWindowsSpotlightOnLockScreen": {
        "name": "ConfigureWindowsSpotlightOnLockScreen",
        "description": "Allows IT admins to specify whether spotlight should be used on the user's lock screen. If your organization does not have an Enterprise spotlight content service, then this policy will behave the same as a setting of 1.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Windows spotlight disabled."
            },
            "1": {
              "description": "Windows spotlight enabled."
            },
            "2": {
              "description": "Windows spotlight is always enabled, the user cannot disable it"
            },
            "3": {
              "description": "Windows spotlight is always enabled, the user cannot disable it. For special configurations only"
            }
          }
        },
        "scope": "user"
      },
      "EnableOrganizationalMessages": {
        "name": "EnableOrganizationalMessages",
        "description": "Organizational messages allow Administrators to deliver messages to their end users on selected Windows 11 experiences. Organizational messages are available to Administrators via services like Microsoft Endpoint Manager. By default, this policy is disabled. If you enable this policy, these experiences will show content booked by Administrators. Enabling this policy will have no impact on existing MDM policy settings governing delivery of content from Microsoft on Windows experiences.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/FileExplorer": {
    "name": "FileExplorer",
    "policies": {
      "AllowOptionToShowNetwork": {
        "name": "AllowOptionToShowNetwork",
        "description": "When the Network folder is restricted, give the user the option to enumerate and navigate into it.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not Allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "AllowOptionToShowThisPC": {
        "name": "AllowOptionToShowThisPC",
        "description": "When This PC location is restricted, give the user the option to enumerate and navigate into it.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not Allowed."
            },
            "1": {
              "description": "Allowed."
            }
          }
        },
        "scope": "user"
      },
      "SetAllowedFolderLocations": {
        "name": "SetAllowedFolderLocations",
        "description": "A value that can represent one or more folder locations in File Explorer. If not specified, the default is access to all folder locations.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Access to all folder locations."
            },
            "13": {
              "description": "Documents, Pictures, Downloads"
            },
            "15": {
              "description": "Desktop, Documents, Pictures, Downloads"
            },
            "31": {
              "description": "Desktop, Documents, Pictures, Downloads, Network"
            },
            "47": {
              "description": "This PC, Desktop, Documents, Pictures, Downloads"
            },
            "63": {
              "description": "This PC, Desktop, Documents, Pictures, Downloads, Network"
            }
          }
        },
        "scope": "user"
      },
      "SetAllowedStorageLocations": {
        "name": "SetAllowedStorageLocations",
        "description": "A value that can represent one or more storage locations in File Explorer. If not specified, the default is access to all storage locations.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Access to all storage locations."
            },
            "1": {
              "description": "Removable Drives"
            },
            "2": {
              "description": "Sync roots"
            },
            "3": {
              "description": "Removable Drives, Sync roots"
            },
            "4": {
              "description": "Local Drives"
            },
            "5": {
              "description": "Removable Drives, Local Drives"
            },
            "6": {
              "description": "Sync Roots, Local Drives"
            },
            "7": {
              "description": "Removable Drives, Sync Roots, Local Drives"
            }
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/InternetExplorer": {
    "name": "InternetExplorer",
    "policies": {
      "AddSearchProvider": {
        "name": "AddSearchProvider",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowActiveXFiltering": {
        "name": "AllowActiveXFiltering",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowAddOnList": {
        "name": "AllowAddOnList",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowAutoComplete": {
        "name": "AllowAutoComplete",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowCertificateAddressMismatchWarning": {
        "name": "AllowCertificateAddressMismatchWarning",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowDeletingBrowsingHistoryOnExit": {
        "name": "AllowDeletingBrowsingHistoryOnExit",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowEnhancedProtectedMode": {
        "name": "AllowEnhancedProtectedMode",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowEnhancedSuggestionsInAddressBar": {
        "name": "AllowEnhancedSuggestionsInAddressBar",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowEnterpriseModeFromToolsMenu": {
        "name": "AllowEnterpriseModeFromToolsMenu",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowEnterpriseModeSiteList": {
        "name": "AllowEnterpriseModeSiteList",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowInternetExplorer7PolicyList": {
        "name": "AllowInternetExplorer7PolicyList",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowInternetExplorerStandardsMode": {
        "name": "AllowInternetExplorerStandardsMode",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowInternetZoneTemplate": {
        "name": "AllowInternetZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowIntranetZoneTemplate": {
        "name": "AllowIntranetZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowLocalMachineZoneTemplate": {
        "name": "AllowLocalMachineZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowLockedDownInternetZoneTemplate": {
        "name": "AllowLockedDownInternetZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowLockedDownIntranetZoneTemplate": {
        "name": "AllowLockedDownIntranetZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowLockedDownLocalMachineZoneTemplate": {
        "name": "AllowLockedDownLocalMachineZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowLockedDownRestrictedSitesZoneTemplate": {
        "name": "AllowLockedDownRestrictedSitesZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowOneWordEntry": {
        "name": "AllowOneWordEntry",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowSaveTargetAsInIEMode": {
        "name": "AllowSaveTargetAsInIEMode",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowSiteToZoneAssignmentList": {
        "name": "AllowSiteToZoneAssignmentList",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowSoftwareWhenSignatureIsInvalid": {
        "name": "AllowSoftwareWhenSignatureIsInvalid",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowSuggestedSites": {
        "name": "AllowSuggestedSites",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowTrustedSitesZoneTemplate": {
        "name": "AllowTrustedSitesZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowsLockedDownTrustedSitesZoneTemplate": {
        "name": "AllowsLockedDownTrustedSitesZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "AllowsRestrictedSitesZoneTemplate": {
        "name": "AllowsRestrictedSitesZoneTemplate",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CheckServerCertificateRevocation": {
        "name": "CheckServerCertificateRevocation",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "CheckSignaturesOnDownloadedPrograms": {
        "name": "CheckSignaturesOnDownloadedPrograms",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ConfigureEdgeRedirectChannel": {
        "name": "ConfigureEdgeRedirectChannel",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ConsistentMimeHandlingInternetExplorerProcesses": {
        "name": "ConsistentMimeHandlingInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableActiveXVersionListAutoDownload": {
        "name": "DisableActiveXVersionListAutoDownload",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableBypassOfSmartScreenWarnings": {
        "name": "DisableBypassOfSmartScreenWarnings",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableBypassOfSmartScreenWarningsAboutUncommonFiles": {
        "name": "DisableBypassOfSmartScreenWarningsAboutUncommonFiles",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableCompatView": {
        "name": "DisableCompatView",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableConfiguringHistory": {
        "name": "DisableConfiguringHistory",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableCrashDetection": {
        "name": "DisableCrashDetection",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableCustomerExperienceImprovementProgramParticipation": {
        "name": "DisableCustomerExperienceImprovementProgramParticipation",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableDeletingUserVisitedWebsites": {
        "name": "DisableDeletingUserVisitedWebsites",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableEnclosureDownloading": {
        "name": "DisableEnclosureDownloading",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableEncryptionSupport": {
        "name": "DisableEncryptionSupport",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableFeedsBackgroundSync": {
        "name": "DisableFeedsBackgroundSync",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableFirstRunWizard": {
        "name": "DisableFirstRunWizard",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableFlipAheadFeature": {
        "name": "DisableFlipAheadFeature",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableGeolocation": {
        "name": "DisableGeolocation",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableHTMLApplication": {
        "name": "DisableHTMLApplication",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableHomePageChange": {
        "name": "DisableHomePageChange",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableIgnoringCertificateErrors": {
        "name": "DisableIgnoringCertificateErrors",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableInPrivateBrowsing": {
        "name": "DisableInPrivateBrowsing",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableInternetExplorerApp": {
        "name": "DisableInternetExplorerApp",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableProcessesInEnhancedProtectedMode": {
        "name": "DisableProcessesInEnhancedProtectedMode",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableProxyChange": {
        "name": "DisableProxyChange",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableSearchProviderChange": {
        "name": "DisableSearchProviderChange",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableSecondaryHomePageChange": {
        "name": "DisableSecondaryHomePageChange",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableSecuritySettingsCheck": {
        "name": "DisableSecuritySettingsCheck",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DisableWebAddressAutoComplete": {
        "name": "DisableWebAddressAutoComplete",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DoNotAllowActiveXControlsInProtectedMode": {
        "name": "DoNotAllowActiveXControlsInProtectedMode",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DoNotBlockOutdatedActiveXControls": {
        "name": "DoNotBlockOutdatedActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "DoNotBlockOutdatedActiveXControlsOnSpecificDomains": {
        "name": "DoNotBlockOutdatedActiveXControlsOnSpecificDomains",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "EnableExtendedIEModeHotkeys": {
        "name": "EnableExtendedIEModeHotkeys",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "EnableGlobalWindowListInIEMode": {
        "name": "EnableGlobalWindowListInIEMode",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IncludeAllLocalSites": {
        "name": "IncludeAllLocalSites",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IncludeAllNetworkPaths": {
        "name": "IncludeAllNetworkPaths",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowAccessToDataSources": {
        "name": "InternetZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "InternetZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "InternetZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowCopyPasteViaScript": {
        "name": "InternetZoneAllowCopyPasteViaScript",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowDragAndDropCopyAndPasteFiles": {
        "name": "InternetZoneAllowDragAndDropCopyAndPasteFiles",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowFontDownloads": {
        "name": "InternetZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowLessPrivilegedSites": {
        "name": "InternetZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowLoadingOfXAMLFiles": {
        "name": "InternetZoneAllowLoadingOfXAMLFiles",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowNETFrameworkReliantComponents": {
        "name": "InternetZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowOnlyApprovedDomainsToUseActiveXControls": {
        "name": "InternetZoneAllowOnlyApprovedDomainsToUseActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl": {
        "name": "InternetZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowScriptInitiatedWindows": {
        "name": "InternetZoneAllowScriptInitiatedWindows",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowScriptingOfInternetExplorerWebBrowserControls": {
        "name": "InternetZoneAllowScriptingOfInternetExplorerWebBrowserControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowScriptlets": {
        "name": "InternetZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowSmartScreenIE": {
        "name": "InternetZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowUpdatesToStatusBarViaScript": {
        "name": "InternetZoneAllowUpdatesToStatusBarViaScript",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowUserDataPersistence": {
        "name": "InternetZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneAllowVBScriptToRunInInternetExplorer": {
        "name": "InternetZoneAllowVBScriptToRunInInternetExplorer",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneDoNotRunAntimalwareAgainstActiveXControls": {
        "name": "InternetZoneDoNotRunAntimalwareAgainstActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneDownloadSignedActiveXControls": {
        "name": "InternetZoneDownloadSignedActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneDownloadUnsignedActiveXControls": {
        "name": "InternetZoneDownloadUnsignedActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneEnableCrossSiteScriptingFilter": {
        "name": "InternetZoneEnableCrossSiteScriptingFilter",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows": {
        "name": "InternetZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows": {
        "name": "InternetZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneEnableMIMESniffing": {
        "name": "InternetZoneEnableMIMESniffing",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneEnableProtectedMode": {
        "name": "InternetZoneEnableProtectedMode",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneIncludeLocalPathWhenUploadingFilesToServer": {
        "name": "InternetZoneIncludeLocalPathWhenUploadingFilesToServer",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneInitializeAndScriptActiveXControls": {
        "name": "InternetZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneJavaPermissions": {
        "name": "InternetZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneLaunchingApplicationsAndFilesInIFRAME": {
        "name": "InternetZoneLaunchingApplicationsAndFilesInIFRAME",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneLogonOptions": {
        "name": "InternetZoneLogonOptions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneNavigateWindowsAndFrames": {
        "name": "InternetZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode": {
        "name": "InternetZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneShowSecurityWarningForPotentiallyUnsafeFiles": {
        "name": "InternetZoneShowSecurityWarningForPotentiallyUnsafeFiles",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "InternetZoneUsePopupBlocker": {
        "name": "InternetZoneUsePopupBlocker",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetZoneAllowAccessToDataSources": {
        "name": "IntranetZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "IntranetZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "IntranetZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetZoneAllowFontDownloads": {
        "name": "IntranetZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetZoneAllowLessPrivilegedSites": {
        "name": "IntranetZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetZoneAllowNETFrameworkReliantComponents": {
        "name": "IntranetZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetZoneAllowScriptlets": {
        "name": "IntranetZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetZoneAllowSmartScreenIE": {
        "name": "IntranetZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetZoneAllowUserDataPersistence": {
        "name": "IntranetZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetZoneDoNotRunAntimalwareAgainstActiveXControls": {
        "name": "IntranetZoneDoNotRunAntimalwareAgainstActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetZoneInitializeAndScriptActiveXControls": {
        "name": "IntranetZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetZoneJavaPermissions": {
        "name": "IntranetZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetZoneLogonOptions": {
        "name": "IntranetZoneLogonOptions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "IntranetZoneNavigateWindowsAndFrames": {
        "name": "IntranetZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "JScriptReplacement": {
        "name": "JScriptReplacement",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "KeepIntranetSitesInInternetExplorer": {
        "name": "KeepIntranetSitesInInternetExplorer",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalMachineZoneAllowAccessToDataSources": {
        "name": "LocalMachineZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalMachineZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "LocalMachineZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalMachineZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "LocalMachineZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalMachineZoneAllowFontDownloads": {
        "name": "LocalMachineZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalMachineZoneAllowLessPrivilegedSites": {
        "name": "LocalMachineZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalMachineZoneAllowNETFrameworkReliantComponents": {
        "name": "LocalMachineZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalMachineZoneAllowScriptlets": {
        "name": "LocalMachineZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalMachineZoneAllowSmartScreenIE": {
        "name": "LocalMachineZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalMachineZoneAllowUserDataPersistence": {
        "name": "LocalMachineZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalMachineZoneDoNotRunAntimalwareAgainstActiveXControls": {
        "name": "LocalMachineZoneDoNotRunAntimalwareAgainstActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalMachineZoneInitializeAndScriptActiveXControls": {
        "name": "LocalMachineZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalMachineZoneJavaPermissions": {
        "name": "LocalMachineZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalMachineZoneLogonOptions": {
        "name": "LocalMachineZoneLogonOptions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LocalMachineZoneNavigateWindowsAndFrames": {
        "name": "LocalMachineZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownInternetZoneAllowAccessToDataSources": {
        "name": "LockedDownInternetZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownInternetZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "LockedDownInternetZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownInternetZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "LockedDownInternetZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownInternetZoneAllowFontDownloads": {
        "name": "LockedDownInternetZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownInternetZoneAllowLessPrivilegedSites": {
        "name": "LockedDownInternetZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownInternetZoneAllowNETFrameworkReliantComponents": {
        "name": "LockedDownInternetZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownInternetZoneAllowScriptlets": {
        "name": "LockedDownInternetZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownInternetZoneAllowSmartScreenIE": {
        "name": "LockedDownInternetZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownInternetZoneAllowUserDataPersistence": {
        "name": "LockedDownInternetZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownInternetZoneInitializeAndScriptActiveXControls": {
        "name": "LockedDownInternetZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownInternetZoneJavaPermissions": {
        "name": "LockedDownInternetZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownInternetZoneNavigateWindowsAndFrames": {
        "name": "LockedDownInternetZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownIntranetJavaPermissions": {
        "name": "LockedDownIntranetJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownIntranetZoneAllowAccessToDataSources": {
        "name": "LockedDownIntranetZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownIntranetZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "LockedDownIntranetZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownIntranetZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "LockedDownIntranetZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownIntranetZoneAllowFontDownloads": {
        "name": "LockedDownIntranetZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownIntranetZoneAllowLessPrivilegedSites": {
        "name": "LockedDownIntranetZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownIntranetZoneAllowNETFrameworkReliantComponents": {
        "name": "LockedDownIntranetZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownIntranetZoneAllowScriptlets": {
        "name": "LockedDownIntranetZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownIntranetZoneAllowSmartScreenIE": {
        "name": "LockedDownIntranetZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownIntranetZoneAllowUserDataPersistence": {
        "name": "LockedDownIntranetZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownIntranetZoneInitializeAndScriptActiveXControls": {
        "name": "LockedDownIntranetZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownIntranetZoneNavigateWindowsAndFrames": {
        "name": "LockedDownIntranetZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownLocalMachineZoneAllowAccessToDataSources": {
        "name": "LockedDownLocalMachineZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownLocalMachineZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "LockedDownLocalMachineZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownLocalMachineZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "LockedDownLocalMachineZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownLocalMachineZoneAllowFontDownloads": {
        "name": "LockedDownLocalMachineZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownLocalMachineZoneAllowLessPrivilegedSites": {
        "name": "LockedDownLocalMachineZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownLocalMachineZoneAllowNETFrameworkReliantComponents": {
        "name": "LockedDownLocalMachineZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownLocalMachineZoneAllowScriptlets": {
        "name": "LockedDownLocalMachineZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownLocalMachineZoneAllowSmartScreenIE": {
        "name": "LockedDownLocalMachineZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownLocalMachineZoneAllowUserDataPersistence": {
        "name": "LockedDownLocalMachineZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownLocalMachineZoneInitializeAndScriptActiveXControls": {
        "name": "LockedDownLocalMachineZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownLocalMachineZoneJavaPermissions": {
        "name": "LockedDownLocalMachineZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownLocalMachineZoneNavigateWindowsAndFrames": {
        "name": "LockedDownLocalMachineZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownRestrictedSitesZoneAllowAccessToDataSources": {
        "name": "LockedDownRestrictedSitesZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownRestrictedSitesZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "LockedDownRestrictedSitesZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownRestrictedSitesZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "LockedDownRestrictedSitesZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownRestrictedSitesZoneAllowFontDownloads": {
        "name": "LockedDownRestrictedSitesZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownRestrictedSitesZoneAllowLessPrivilegedSites": {
        "name": "LockedDownRestrictedSitesZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownRestrictedSitesZoneAllowNETFrameworkReliantComponents": {
        "name": "LockedDownRestrictedSitesZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownRestrictedSitesZoneAllowScriptlets": {
        "name": "LockedDownRestrictedSitesZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownRestrictedSitesZoneAllowSmartScreenIE": {
        "name": "LockedDownRestrictedSitesZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownRestrictedSitesZoneAllowUserDataPersistence": {
        "name": "LockedDownRestrictedSitesZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownRestrictedSitesZoneInitializeAndScriptActiveXControls": {
        "name": "LockedDownRestrictedSitesZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownRestrictedSitesZoneJavaPermissions": {
        "name": "LockedDownRestrictedSitesZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownRestrictedSitesZoneNavigateWindowsAndFrames": {
        "name": "LockedDownRestrictedSitesZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownTrustedSitesZoneAllowAccessToDataSources": {
        "name": "LockedDownTrustedSitesZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownTrustedSitesZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "LockedDownTrustedSitesZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownTrustedSitesZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "LockedDownTrustedSitesZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownTrustedSitesZoneAllowFontDownloads": {
        "name": "LockedDownTrustedSitesZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownTrustedSitesZoneAllowLessPrivilegedSites": {
        "name": "LockedDownTrustedSitesZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownTrustedSitesZoneAllowNETFrameworkReliantComponents": {
        "name": "LockedDownTrustedSitesZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownTrustedSitesZoneAllowScriptlets": {
        "name": "LockedDownTrustedSitesZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownTrustedSitesZoneAllowSmartScreenIE": {
        "name": "LockedDownTrustedSitesZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownTrustedSitesZoneAllowUserDataPersistence": {
        "name": "LockedDownTrustedSitesZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownTrustedSitesZoneInitializeAndScriptActiveXControls": {
        "name": "LockedDownTrustedSitesZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownTrustedSitesZoneJavaPermissions": {
        "name": "LockedDownTrustedSitesZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "LockedDownTrustedSitesZoneNavigateWindowsAndFrames": {
        "name": "LockedDownTrustedSitesZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MKProtocolSecurityRestrictionInternetExplorerProcesses": {
        "name": "MKProtocolSecurityRestrictionInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "MimeSniffingSafetyFeatureInternetExplorerProcesses": {
        "name": "MimeSniffingSafetyFeatureInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NewTabDefaultPage": {
        "name": "NewTabDefaultPage",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "NotificationBarInternetExplorerProcesses": {
        "name": "NotificationBarInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PreventManagingSmartScreenFilter": {
        "name": "PreventManagingSmartScreenFilter",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PreventPerUserInstallationOfActiveXControls": {
        "name": "PreventPerUserInstallationOfActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ProtectionFromZoneElevationInternetExplorerProcesses": {
        "name": "ProtectionFromZoneElevationInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RemoveRunThisTimeButtonForOutdatedActiveXControls": {
        "name": "RemoveRunThisTimeButtonForOutdatedActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ResetZoomForDialogInIEMode": {
        "name": "ResetZoomForDialogInIEMode",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictActiveXInstallInternetExplorerProcesses": {
        "name": "RestrictActiveXInstallInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictFileDownloadInternetExplorerProcesses": {
        "name": "RestrictFileDownloadInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowAccessToDataSources": {
        "name": "RestrictedSitesZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowActiveScripting": {
        "name": "RestrictedSitesZoneAllowActiveScripting",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "RestrictedSitesZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "RestrictedSitesZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowBinaryAndScriptBehaviors": {
        "name": "RestrictedSitesZoneAllowBinaryAndScriptBehaviors",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowCopyPasteViaScript": {
        "name": "RestrictedSitesZoneAllowCopyPasteViaScript",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowDragAndDropCopyAndPasteFiles": {
        "name": "RestrictedSitesZoneAllowDragAndDropCopyAndPasteFiles",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowFileDownloads": {
        "name": "RestrictedSitesZoneAllowFileDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowFontDownloads": {
        "name": "RestrictedSitesZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowLessPrivilegedSites": {
        "name": "RestrictedSitesZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowLoadingOfXAMLFiles": {
        "name": "RestrictedSitesZoneAllowLoadingOfXAMLFiles",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowMETAREFRESH": {
        "name": "RestrictedSitesZoneAllowMETAREFRESH",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowNETFrameworkReliantComponents": {
        "name": "RestrictedSitesZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowOnlyApprovedDomainsToUseActiveXControls": {
        "name": "RestrictedSitesZoneAllowOnlyApprovedDomainsToUseActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl": {
        "name": "RestrictedSitesZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowScriptInitiatedWindows": {
        "name": "RestrictedSitesZoneAllowScriptInitiatedWindows",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowScriptingOfInternetExplorerWebBrowserControls": {
        "name": "RestrictedSitesZoneAllowScriptingOfInternetExplorerWebBrowserControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowScriptlets": {
        "name": "RestrictedSitesZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowSmartScreenIE": {
        "name": "RestrictedSitesZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowUpdatesToStatusBarViaScript": {
        "name": "RestrictedSitesZoneAllowUpdatesToStatusBarViaScript",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowUserDataPersistence": {
        "name": "RestrictedSitesZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneAllowVBScriptToRunInInternetExplorer": {
        "name": "RestrictedSitesZoneAllowVBScriptToRunInInternetExplorer",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneDoNotRunAntimalwareAgainstActiveXControls": {
        "name": "RestrictedSitesZoneDoNotRunAntimalwareAgainstActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneDownloadSignedActiveXControls": {
        "name": "RestrictedSitesZoneDownloadSignedActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneDownloadUnsignedActiveXControls": {
        "name": "RestrictedSitesZoneDownloadUnsignedActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneEnableCrossSiteScriptingFilter": {
        "name": "RestrictedSitesZoneEnableCrossSiteScriptingFilter",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows": {
        "name": "RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows": {
        "name": "RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneEnableMIMESniffing": {
        "name": "RestrictedSitesZoneEnableMIMESniffing",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneIncludeLocalPathWhenUploadingFilesToServer": {
        "name": "RestrictedSitesZoneIncludeLocalPathWhenUploadingFilesToServer",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneInitializeAndScriptActiveXControls": {
        "name": "RestrictedSitesZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneJavaPermissions": {
        "name": "RestrictedSitesZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneLaunchingApplicationsAndFilesInIFRAME": {
        "name": "RestrictedSitesZoneLaunchingApplicationsAndFilesInIFRAME",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneLogonOptions": {
        "name": "RestrictedSitesZoneLogonOptions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneNavigateWindowsAndFrames": {
        "name": "RestrictedSitesZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneRunActiveXControlsAndPlugins": {
        "name": "RestrictedSitesZoneRunActiveXControlsAndPlugins",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode": {
        "name": "RestrictedSitesZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneScriptActiveXControlsMarkedSafeForScripting": {
        "name": "RestrictedSitesZoneScriptActiveXControlsMarkedSafeForScripting",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneScriptingOfJavaApplets": {
        "name": "RestrictedSitesZoneScriptingOfJavaApplets",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneShowSecurityWarningForPotentiallyUnsafeFiles": {
        "name": "RestrictedSitesZoneShowSecurityWarningForPotentiallyUnsafeFiles",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneTurnOnProtectedMode": {
        "name": "RestrictedSitesZoneTurnOnProtectedMode",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "RestrictedSitesZoneUsePopupBlocker": {
        "name": "RestrictedSitesZoneUsePopupBlocker",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ScriptedWindowSecurityRestrictionsInternetExplorerProcesses": {
        "name": "ScriptedWindowSecurityRestrictionsInternetExplorerProcesses",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "SearchProviderList": {
        "name": "SearchProviderList",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "SendSitesNotInEnterpriseSiteListToEdge": {
        "name": "SendSitesNotInEnterpriseSiteListToEdge",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "SpecifyUseOfActiveXInstallerService": {
        "name": "SpecifyUseOfActiveXInstallerService",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TrustedSitesZoneAllowAccessToDataSources": {
        "name": "TrustedSitesZoneAllowAccessToDataSources",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TrustedSitesZoneAllowAutomaticPromptingForActiveXControls": {
        "name": "TrustedSitesZoneAllowAutomaticPromptingForActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TrustedSitesZoneAllowAutomaticPromptingForFileDownloads": {
        "name": "TrustedSitesZoneAllowAutomaticPromptingForFileDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TrustedSitesZoneAllowFontDownloads": {
        "name": "TrustedSitesZoneAllowFontDownloads",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TrustedSitesZoneAllowLessPrivilegedSites": {
        "name": "TrustedSitesZoneAllowLessPrivilegedSites",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TrustedSitesZoneAllowNETFrameworkReliantComponents": {
        "name": "TrustedSitesZoneAllowNETFrameworkReliantComponents",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TrustedSitesZoneAllowScriptlets": {
        "name": "TrustedSitesZoneAllowScriptlets",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TrustedSitesZoneAllowSmartScreenIE": {
        "name": "TrustedSitesZoneAllowSmartScreenIE",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TrustedSitesZoneAllowUserDataPersistence": {
        "name": "TrustedSitesZoneAllowUserDataPersistence",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TrustedSitesZoneDoNotRunAntimalwareAgainstActiveXControls": {
        "name": "TrustedSitesZoneDoNotRunAntimalwareAgainstActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TrustedSitesZoneInitializeAndScriptActiveXControls": {
        "name": "TrustedSitesZoneInitializeAndScriptActiveXControls",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TrustedSitesZoneJavaPermissions": {
        "name": "TrustedSitesZoneJavaPermissions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TrustedSitesZoneLogonOptions": {
        "name": "TrustedSitesZoneLogonOptions",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "TrustedSitesZoneNavigateWindowsAndFrames": {
        "name": "TrustedSitesZoneNavigateWindowsAndFrames",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/KioskBrowser": {
    "name": "KioskBrowser",
    "policies": {
      "BlockedUrlExceptions": {
        "name": "BlockedUrlExceptions",
        "description": "List of exceptions to the blocked website URLs (with wildcard support). This is used to configure URLs kiosk browsers are allowed to navigate to, which are a subset of the blocked URLs.",
        "format": "string",
        "scope": "user"
      },
      "BlockedUrls": {
        "name": "BlockedUrls",
        "description": "List of blocked website URLs (with wildcard support). This is used to configure blocked URLs kiosk browsers can not navigate to.",
        "format": "string",
        "scope": "user"
      },
      "DefaultURL": {
        "name": "DefaultURL",
        "description": "Configures the default URL kiosk browsers to navigate on launch and restart.",
        "format": "string",
        "scope": "user"
      },
      "EnableEndSessionButton": {
        "name": "EnableEndSessionButton",
        "description": "Enable/disable kiosk browser's end session button.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "user"
      },
      "EnableHomeButton": {
        "name": "EnableHomeButton",
        "description": "Enable/disable kiosk browser's home button.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "user"
      },
      "EnableNavigationButtons": {
        "name": "EnableNavigationButtons",
        "description": "Enable/disable kiosk browser's navigation buttons (forward/back).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable"
            },
            "1": {
              "description": "Enable"
            }
          }
        },
        "scope": "user"
      },
      "RestartOnIdleTime": {
        "name": "RestartOnIdleTime",
        "description": "Amount of time in minutes the session is idle until the kiosk browser restarts in a fresh state.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 1,
          "max": 144
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Multitasking": {
    "name": "Multitasking",
    "policies": {
      "BrowserAltTabBlowout": {
        "name": "BrowserAltTabBlowout",
        "description": "Configures the inclusion of Microsoft Edge tabs into Alt-Tab.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "1": {
              "description": "Open windows and all tabs in Microsoft Edge"
            },
            "2": {
              "description": "Open windows and 5 most recent tabs in Microsoft Edge"
            },
            "3": {
              "description": "Open windows and 3 most recent tabs in Microsoft Edge"
            },
            "4": {
              "description": "Open windows only"
            }
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Notifications": {
    "name": "Notifications",
    "policies": {
      "DisableAccountNotifications": {
        "name": "DisableAccountNotifications",
        "description": "This policy allows you to prevent Windows from displaying notifications to Microsoft account (MSA) and local users in Start (user tile). Notifications include getting users to: reauthenticate; backup their device; manage cloud storage quotas as well as manage their Microsoft 365 or XBOX subscription. If you enable this policy setting, Windows will not send account related notifications for local and MSA users to the user tile in Start.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "user"
      },
      "DisallowNotificationMirroring": {
        "name": "DisallowNotificationMirroring",
        "description": "Boolean value that turns off notification mirroring. For each user logged into the device, if you enable this policy (set value to 1) the app and system notifications received by this user on this device will not get mirrored to other devices of the same logged in user. If you disable or do not configure this policy (set value to 0) the notifications received by this user on this device will be mirrored to other devices of the same logged in user. This feature can be turned off by apps that do not want to participate in Notification Mirroring. This feature can also be turned off by the user in the Cortana setting page. No reboot or service restart is required for this policy to take effect.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enable notification mirroring."
            },
            "1": {
              "description": "Disable notification mirroring."
            }
          }
        },
        "scope": "user"
      },
      "DisallowTileNotification": {
        "name": "DisallowTileNotification",
        "description": "This policy setting turns off tile notifications. If you enable this policy setting, applications and system features will not be able to update their tiles and tile badges in the Start screen. If you disable or do not configure this policy setting, tile and badge notifications are enabled and can be turned off by the administrator or user. No reboots or service restarts are required for this policy setting to take effect.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled."
            },
            "1": {
              "description": "Enabled."
            }
          }
        },
        "scope": "user"
      },
      "EnableExpandedToastNotifications": {
        "name": "EnableExpandedToastNotifications",
        "description": "This policy setting turns on multiple expanded toast notifications in action center. If you enable this policy setting, the first three notifications of each application will be expanded by default in action center. If you disable or do not configure this policy setting, only the first notification of each application will be expanded by default in action center. Windows 10 only. This will be immediately deprecated for Windows 11. No reboots or service restarts are required for this policy setting to take effect.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disable multiple expanded toasts in action center."
            },
            "1": {
              "description": "Enable multiple expanded toasts in action center."
            }
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Printers": {
    "name": "Printers",
    "policies": {
      "ApprovedUsbPrintDevicesUser": {
        "name": "ApprovedUsbPrintDevicesUser",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "EnableDeviceControlUser": {
        "name": "EnableDeviceControlUser",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "PointAndPrintRestrictions_User": {
        "name": "PointAndPrintRestrictions_User",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Privacy": {
    "name": "Privacy",
    "policies": {
      "DisablePrivacyExperience": {
        "name": "DisablePrivacyExperience",
        "description": "Enabling this policy prevents the privacy experience from launching during user logon for new and upgraded users.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow the 'choose privacy settings for your device' screen for a new user during their first logon or when an existing user logs in for the first time after an upgrade."
            },
            "1": {
              "description": "Do not allow the 'choose privacy settings for your device' screen when a new user logs in or an existing user logs in for the first time after an upgrade."
            }
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/RemoteDesktop": {
    "name": "RemoteDesktop",
    "policies": {
      "AutoSubscription": {
        "name": "AutoSubscription",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Security": {
    "name": "Security",
    "policies": {
      "RecoveryEnvironmentAuthentication": {
        "name": "RecoveryEnvironmentAuthentication",
        "description": "This policy controls the requirement of Admin Authentication in RecoveryEnvironment.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "current) behavior"
            },
            "1": {
              "description": "RequireAuthentication: Admin Authentication is always required for components in RecoveryEnvironment"
            },
            "2": {
              "description": "NoRequireAuthentication: Admin Authentication is not required for components in RecoveryEnvironment"
            }
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Settings": {
    "name": "Settings",
    "policies": {
      "ConfigureTaskbarCalendar": {
        "name": "ConfigureTaskbarCalendar",
        "description": "Allows IT Admins to configure the default setting for showing additional calendars (besides the default calendar for the locale) in the taskbar clock and calendar flyout. In this version of Windows 10, supported additional calendars are: Simplified or Traditional Chinese lunar calendar. Turning on one of these calendars will display Chinese lunar dates below the default calendar for the locale. Select Don't show additional calendars to prevent showing other calendars besides the default calendar for the locale.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User will be allowed to configure the setting."
            },
            "1": {
              "description": "Don't show additional calendars."
            },
            "2": {
              "description": "Simplified Chinese (Lunar)."
            },
            "3": {
              "description": "Traditional Chinese (Lunar)."
            }
          }
        },
        "scope": "user"
      },
      "PageVisibilityList": {
        "name": "PageVisibilityList",
        "description": "Allows IT Admins to either prevent specific pages in the System Settings app from being visible or accessible, or to do so for all pages except those specified. The mode will be specified by the policy string beginning with either the string showonly: or hide:.  Pages are identified by a shortened version of their already published URIs, which is the URI minus the ms-settings: prefix. For example, if the URI for a settings page is ms-settings:bluetooth, the page identifier used in the policy will be just bluetooth. Multiple page identifiers are separated by semicolons. The following example illustrates a policy that would allow access only to the about and bluetooth pages, which have URI ms-settings:about and ms-settings:bluetooth respectively:showonly:about;bluetooth. If the policy is not specified, the behavior will be that no pages are affected. If the policy string is formatted incorrectly, it will be ignored entirely (i. e. treated as not set) to prevent the machine from becoming unserviceable if data corruption occurs. Note that if a page is already hidden for another reason, then it will remain hidden even if it is in a showonly: list. The format of the PageVisibilityList value is as follows: The value is a unicode string up to 10,000 characters long, which will be used without case sensitivity. There are two variants: one that shows only the given pages and one which hides the given pages. The first variant starts with the string showonly: and the second with the string hide:. Following the variant identifier is a semicolon-delimited list of page identifiers, which must not have any extra whitespace. Each page identifier is the ms-settings:xyz URI for the page, minus the ms-settings: prefix, so the identifier for the page with URI ms-settings:network-wifi would be just network-wifi. The default value for this setting is an empty string, which is interpreted as show everything. Example 1, specifies that only the wifi and bluetooth pages should be shown (they have URIs ms-settings:network-wifi and ms-settings:bluetooth). All other pages (and the categories they're in) will be hidden:showonly:network-wifi;bluetooth. Example 2, specifies that the wifi page should not be shown:hide:network-wifi",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Start": {
    "name": "Start",
    "policies": {
      "ConfigureStartPins": {
        "name": "ConfigureStartPins",
        "description": "Allows admin to override the default items pinned to Start.",
        "format": "string",
        "scope": "user"
      },
      "DisableContextMenus": {
        "name": "DisableContextMenus",
        "description": "Enabling this policy prevents context menus from being invoked in the Start Menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not disable."
            },
            "1": {
              "description": "Disable."
            }
          }
        },
        "scope": "user"
      },
      "DisableControlCenter": {
        "name": "DisableControlCenter",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "ForceStartSize": {
        "name": "ForceStartSize",
        "description": "Forces the start screen size. If there is policy configuration conflict, the latest configuration request is applied to the device.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not force size of Start."
            },
            "1": {
              "description": "Force non-fullscreen size of Start."
            },
            "2": {
              "description": "Force a fullscreen size of Start."
            }
          }
        },
        "scope": "user"
      },
      "HideAppList": {
        "name": "HideAppList",
        "description": "Setting the value of this policy to 1 or 2 collapses the app list. Setting the value of this policy to 3 removes the app list entirely. Setting the value of this policy to 2 or 3 disables the corresponding toggle in the Settings app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "None."
            },
            "1": {
              "description": "Hide all apps list."
            },
            "2": {
              "description": "Hide all apps list, and Disable \"Show app list in Start menu\" in Settings app."
            },
            "3": {
              "description": "Hide all apps list, remove all apps button, and Disable \"Show app list in Start menu\" in Settings app."
            }
          }
        },
        "scope": "user"
      },
      "HideFrequentlyUsedApps": {
        "name": "HideFrequentlyUsedApps",
        "description": "Enabling this policy hides the most used apps from appearing on the start menu and disables the corresponding toggle in the Settings app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "user"
      },
      "HidePeopleBar": {
        "name": "HidePeopleBar",
        "description": "Enabling this policy removes the people icon from the taskbar as well as the corresponding settings toggle. It also prevents users from pinning people to the taskbar.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "user"
      },
      "HideRecentJumplists": {
        "name": "HideRecentJumplists",
        "description": "Enabling this policy hides recent jumplists from appearing on the start menu/taskbar and disables the corresponding toggle in the Settings app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "user"
      },
      "HideRecentlyAddedApps": {
        "name": "HideRecentlyAddedApps",
        "description": "Enabling this policy hides recently added apps from appearing on the start menu and disables the corresponding toggle in the Settings app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not hide."
            },
            "1": {
              "description": "Hide."
            }
          }
        },
        "scope": "user"
      },
      "HideRecommendedPersonalizedSites": {
        "name": "HideRecommendedPersonalizedSites",
        "description": "This policy setting allows you to hide the personalized websites in the recommended section of the Start Menu. If you enable this policy setting, the Start Menu will no longer show personalized website recommendations in the recommended section of the start menu.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Personalized Website Recommendations shown."
            },
            "1": {
              "description": "Personalized Website Recommendations hidden."
            }
          }
        },
        "scope": "user"
      },
      "HideRecommendedSection": {
        "name": "HideRecommendedSection",
        "description": "This policy setting allows you to hide the recommended section of the Start Menu. If you enable this policy setting, the Start Menu will no longer show the section containing a list of recommended files and apps.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Recommended section shown."
            },
            "1": {
              "description": "Recommended section hidden."
            }
          }
        },
        "scope": "user"
      },
      "HideTaskViewButton": {
        "name": "HideTaskViewButton",
        "description": "This policy setting allows you to hide the TaskView button on the Taskbar. If you enable this policy setting, the TaskView button will be hidden and the Settings toggle will be disabled.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "TaskView button shown."
            },
            "1": {
              "description": "TaskView button hidden."
            }
          }
        },
        "scope": "user"
      },
      "ShowOrHideMostUsedApps": {
        "name": "ShowOrHideMostUsedApps",
        "description": "This policy controls the visibility of the list of user's most used apps on the Start menu. The possible values are 0 - means that there is no enforced configuration and the setting can be changed by the user (default behavior equivalent to not configuring the policy), 1 - means that the list should be shown and grays out (disables) the corresponding toggle in the Settings app, 2 - means that the list should be hidden and grays out the corresponding toggle in the Settings app. Configuring this policy to 1 or 2 will override any setting of older policy \"HideFrequentlyUsedApps\" (which manages the same part of Start menu but with fewer options).",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Do not enforce visibility of list of most used apps in Start; user can control via Settings app (default behavior equivalent to not configuring this policy)."
            },
            "1": {
              "description": "Force showing of list of most used apps in Start; corresponding toggle in Setting app is disabled."
            },
            "2": {
              "description": "Force hiding of list of most used apps in Start; corresponding toggle in Setting app is disabled."
            }
          }
        },
        "scope": "user"
      },
      "StartLayout": {
        "name": "StartLayout",
        "description": "Important For more information, see Policy scope. Allows you to override the default Start layout and prevents the user from changing it. If both user and device policies are set, the user policy will be used. Apps pinned to the taskbar can also be changed with this policyFor further details on how to customize the Start layout, please see Customize and export Start layout and Configure Windows 10 taskbar.",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/Storage": {
    "name": "Storage",
    "policies": {
      "WPDDevicesDenyReadAccessPerUser": {
        "name": "WPDDevicesDenyReadAccessPerUser",
        "description": "",
        "format": "string",
        "scope": "user"
      },
      "WPDDevicesDenyWriteAccessPerUser": {
        "name": "WPDDevicesDenyWriteAccessPerUser",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/System": {
    "name": "System",
    "policies": {
      "AllowTelemetry": {
        "name": "AllowTelemetry",
        "description": "Allow the device to send diagnostic and usage telemetry data, such as Watson. For more information about diagnostic data, including what is and what is not collected by Windows, see Configure Windows diagnostic data in your organization. The following tables describe the supported values:Windows 8. 1 Values:0 - Not allowed. 1 – Allowed, except for Secondary Data Requests. 2 (default) – Allowed. Windows 10 Values:0 – Security. Information that is required to help keep Windows more secure, including data about the Connected User Experience and Telemetry component settings, the Malicious Software Removal Tool, and Windows Defender. Note: This value is only applicable to Windows 10 Enterprise, Windows 10 Education, Windows 10 Mobile Enterprise, Windows 10 IoT Core (IoT Core), and Windows Server 2016. Using this setting on other devices is equivalent to setting the value of 1. 1 – Basic. Basic device info, including: quality-related data, app compatibility, app usage data, and data from the Security level. 2 – Enhanced. Additional insights, including: how Windows, Windows Server, System Center, and apps are used, how they perform, advanced reliability data, and data from both the Basic and the Security levels. 3 – Full. All data necessary to identify and help to fix problems, plus data from the Security, Basic, and Enhanced levels. ImportantIf you are using Windows 8. 1 MDM server and set a value of 0 using the legacy AllowTelemetry policy on a Windows 10 Mobile device, then the value is not respected and the telemetry level is silently set to level 1. Most restricted value is 0.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Security. Information that is required to help keep Windows more secure, including data about the Connected User Experience and Telemetry component settings, the Malicious Software Removal Tool, and Windows Defender.\r\nNote: This value is only applicable to Windows 10 Enterprise, Windows 10 Education, Windows 10 Mobile Enterprise, Windows 10 IoT Core (IoT Core), and Windows Server 2016. Using this setting on other devices is equivalent to setting the value of 1."
            },
            "1": {
              "description": "Basic. Basic device info, including: quality-related data, app compatibility, app usage data, and data from the Security level."
            },
            "3": {
              "description": "Full. All data necessary to identify and help to fix problems, plus data from the Security, Basic, and Enhanced levels."
            }
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/TimeLanguageSettings": {
    "name": "TimeLanguageSettings",
    "policies": {
      "RestrictLanguagePacksAndFeaturesInstall": {
        "name": "RestrictLanguagePacksAndFeaturesInstall",
        "description": "This policy setting restricts the install of language packs and language features, such as spell checkers, on a device.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Not restricted."
            },
            "1": {
              "description": "Restricted."
            }
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/WindowsAI": {
    "name": "WindowsAI",
    "policies": {
      "TurnOffWindowsCopilot": {
        "name": "TurnOffWindowsCopilot",
        "description": "This policy setting allows you to turn off Windows Copilot. If you enable this policy setting, users will not be able to use Copilot. The Copilot icon will not appear on the taskbar either. If you disable or do not configure this policy setting, users will be able to use Copilot when it's available to them.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enable Copilot."
            },
            "1": {
              "description": "Disable Copilot."
            }
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/Policy/Config/WindowsPowerShell": {
    "name": "WindowsPowerShell",
    "policies": {
      "TurnOnPowerShellScriptBlockLogging": {
        "name": "TurnOnPowerShellScriptBlockLogging",
        "description": "",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/PrinterProvisioning": {
    "name": "PrinterProvisioning",
    "policies": {
      "UPPrinterInstalls/{PrinterSharedID}": {
        "name": "",
        "title": "PrinterSharedID",
        "description": "Identifies the Universal Print printer, by its Share ID, you wish to install on the targeted user account. The printer's Share ID can be found in the printer's properties via the Universal Print portal. Note: the targeted user account must have access rights to both the printer and to the Universal Print service.",
        "format": "node",
        "nodes": {
          "CloudDeviceID": {
            "name": "CloudDeviceID",
            "description": "Identifies the Universal Print printer, by its Printer ID, you wish to install on the targeted user account. The printer's Printer ID can be found in the printer's properties via the Universal Print portal. Note: the targeted user account must have access rights to both the printer and to the Universal Print service.",
            "format": "string",
            "scope": "user"
          },
          "Install": {
            "name": "Install",
            "description": "Support async execute. Install Universal Print printer.",
            "format": "null",
            "scope": "user"
          },
          "PrinterSharedName": {
            "name": "PrinterSharedName",
            "description": "Identifies the Universal Print printer, by its Share Name, you wish to install on the targeted user account. The printer's Share Name can be found in the printer's properties via the Universal Print portal. Note: the targeted user account must have access rights to both the printer and to the Universal Print service.",
            "format": "string",
            "scope": "user"
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/RootCATrustedCertificates": {
    "name": "RootCATrustedCertificates",
    "policies": {
      "CA/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "Defines the SHA1 hash for the certificate. The 20-byte value of the SHA1 certificate hash is specified as a hexadecimal string value",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "Specifies the X.509 certificate as a Base64-encoded string. The Base-64 string value cannot include extra formatting characters such as embedded linefeeds, etc.",
            "format": "base64",
            "scope": "user"
          }
        },
        "scope": "user"
      },
      "OemEsim/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "Defines the SHA1 hash for the certificate. The 20-byte value of the SHA1 certificate hash is specified as a hexadecimal string value",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "Specifies the X.509 certificate as a Base64-encoded string. The Base-64 string value cannot include extra formatting characters such as embedded linefeeds, etc.",
            "format": "base64",
            "scope": "user"
          }
        },
        "scope": "user"
      },
      "TrustedPeople/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "Defines the SHA1 hash for the certificate. The 20-byte value of the SHA1 certificate hash is specified as a hexadecimal string value",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "Specifies the X.509 certificate as a Base64-encoded string. The Base-64 string value cannot include extra formatting characters such as embedded linefeeds, etc.",
            "format": "base64",
            "scope": "user"
          }
        },
        "scope": "user"
      },
      "TrustedPublisher/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "Defines the SHA1 hash for the certificate. The 20-byte value of the SHA1 certificate hash is specified as a hexadecimal string value",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "Specifies the X.509 certificate as a Base64-encoded string. The Base-64 string value cannot include extra formatting characters such as embedded linefeeds, etc.",
            "format": "base64",
            "scope": "user"
          }
        },
        "scope": "user"
      },
      "UntrustedCertificates/{CertHash}": {
        "name": "",
        "title": "CertHash",
        "description": "Defines the SHA1 hash for the certificate. The 20-byte value of the SHA1 certificate hash is specified as a hexadecimal string value",
        "format": "node",
        "nodes": {
          "EncodedCertificate": {
            "name": "EncodedCertificate",
            "description": "Specifies the X.509 certificate as a Base64-encoded string. The Base-64 string value cannot include extra formatting characters such as embedded linefeeds, etc.",
            "format": "base64",
            "scope": "user"
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/VPNv2": {
    "name": "VPNv2",
    "policies": {
      "{ProfileName}": {
        "name": "",
        "title": "ProfileName",
        "description": "Unique alpha numeric identifier for the profile. The profile name must not include a forward slash (/). If the profile name has a space or other non-alphanumeric character, it must be properly escaped according to the URL encoding standard.",
        "format": "node",
        "nodes": {
          "APNBinding/AccessPointName": {
            "name": "AccessPointName",
            "description": "Reserved for future use.",
            "format": "string",
            "scope": "user"
          },
          "APNBinding/AuthenticationType": {
            "name": "AuthenticationType",
            "description": "Reserved for future use.",
            "format": "string",
            "scope": "user"
          },
          "APNBinding/IsCompressionEnabled": {
            "name": "IsCompressionEnabled",
            "description": "Reserved for future use.",
            "format": "bool",
            "scope": "user"
          },
          "APNBinding/Password": {
            "name": "Password",
            "description": "Reserved for future use.",
            "format": "string",
            "scope": "user"
          },
          "APNBinding/ProviderId": {
            "name": "ProviderId",
            "description": "Reserved for future use.",
            "format": "string",
            "scope": "user"
          },
          "APNBinding/UserName": {
            "name": "UserName",
            "description": "Reserved for future use.",
            "format": "string",
            "scope": "user"
          },
          "AlwaysOn": {
            "name": "AlwaysOn",
            "description": "An optional flag to enable Always On mode. This will automatically connect the VPN at sign-in and will stay connected until the user manually disconnects.",
            "format": "bool",
            "scope": "user"
          },
          "AlwaysOnActive": {
            "name": "AlwaysOnActive",
            "description": "An optional flag to activate Always On mode. This is true by default if AlwaysOn is true. Setting controls whether \"Connect Automatically\" is toggled on profile creation.",
            "format": "bool",
            "scope": "user"
          },
          "AppTriggerList/{appTriggerRowId}": {
            "name": "",
            "title": "appTriggerRowId",
            "description": "A sequential integer identifier which allows the ability to specify multiple apps for App Trigger. Sequencing must start at 0 and you should not skip numbers.",
            "format": "node",
            "nodes": {
              "App/Id": {
                "name": "Id",
                "description": "App Identity. Specified, based on the Type Field.",
                "format": "string",
                "scope": "user"
              }
            },
            "scope": "user"
          },
          "ByPassForLocal": {
            "name": "ByPassForLocal",
            "description": "\r\n                        False : Do not Bypass for Local traffic\r\n                        True : ByPass VPN Interface for Local Traffic\r\n\r\n                        Optional. When this setting is True, requests to local resources that are available on the same Wi-Fi network as the VPN client can bypass the VPN. For example, if enterprise policy for VPN requires force tunnel for VPN, but enterprise intends to allow the remote user to connect locally to media center in their home, then this option should be set to True. The user can bypass VPN for local subnet traffic. When this is set to False, the setting is disabled and no subnet exceptions are allowed.\r\n                    ",
            "format": "bool",
            "scope": "user"
          },
          "DataEncryption": {
            "name": "DataEncryption",
            "description": "Determines the level of data encryption required for the connection.",
            "format": "string",
            "scope": "user"
          },
          "DeviceCompliance": {
            "name": "DeviceCompliance",
            "description": "Nodes under DeviceCompliance can be used to enable AAD based Conditional Access for VPN.",
            "format": "node",
            "scope": "user"
          },
          "DeviceCompliance/Enabled": {
            "name": "Enabled",
            "description": "Enables the Device Compliance flow from the client. If marked as True, the VPN Client will attempt to communicate with AAD to get a certificate to use for authentication. The VPN should be set up to use Certificate Auth and the VPN Server must trust the Server returned by Azure Active Directory.",
            "format": "bool",
            "scope": "user"
          },
          "DeviceCompliance/Sso": {
            "name": "Sso",
            "description": "Nodes under SSO can be used to choose a certificate different from the VPN Authentication cert for the Kerberos Authentication in the case of Device Compliance.",
            "format": "node",
            "scope": "user"
          },
          "DeviceCompliance/Sso/Eku": {
            "name": "Eku",
            "description": "Comma Separated list of EKU's for the VPN Client to look for the correct certificate for Kerberos Authentication.",
            "format": "string",
            "scope": "user"
          },
          "DeviceCompliance/Sso/Enabled": {
            "name": "Enabled",
            "description": "If this field is set to True the VPN Client will look for a separate certificate for Kerberos Authentication.",
            "format": "bool",
            "scope": "user"
          },
          "DeviceCompliance/Sso/IssuerHash": {
            "name": "IssuerHash",
            "description": "Comma Separated list of Issuer Hashes for the VPN Client to look for the correct certificate for Kerberos Authentication.",
            "format": "string",
            "scope": "user"
          },
          "DisableAdvancedOptionsEditButton": {
            "name": "DisableAdvancedOptionsEditButton",
            "description": "Optional. When this setting is True, the Advanced Options page will have its edit functions disabled, only allowing viewing and Clear Sign-In Info.\r\n                    ",
            "format": "bool",
            "scope": "user"
          },
          "DisableDisconnectButton": {
            "name": "DisableDisconnectButton",
            "description": "Optional. When this setting is True, the Disconnect button will not be visible for connected profiles.\r\n                    ",
            "format": "bool",
            "scope": "user"
          },
          "DisableIKEv2Fragmentation": {
            "name": "DisableIKEv2Fragmentation",
            "description": "Set to disable IKEv2 Fragmentation.",
            "format": "bool",
            "scope": "user"
          },
          "DnsSuffix": {
            "name": "DnsSuffix",
            "description": "Specifies one or more comma separated DNS suffixes. The first in the list is also used as the primary connection specific DNS suffix for the VPN Interface. The entire list will also be added into the SuffixSearchList.",
            "format": "string",
            "scope": "user"
          },
          "DomainNameInformationList/{dniRowId}": {
            "name": "",
            "title": "dniRowId",
            "description": "A sequential integer identifier for the Domain Name information. Sequencing must start at 0.",
            "format": "node",
            "nodes": {
              "AutoTrigger": {
                "name": "AutoTrigger",
                "description": "Boolean to determine whether this domain name rule will trigger the VPN.",
                "format": "bool",
                "scope": "user"
              },
              "DnsServers": {
                "name": "DnsServers",
                "description": "Comma Seperated list of IP addresses for the DNS Servers to use for the domain name.",
                "format": "string",
                "scope": "user"
              },
              "DomainName": {
                "name": "DomainName",
                "description": "Used to indicate the namespace to which the policy applies. When a Name query is issued, the DNS client compares the name in the query to all of the namespaces under DomainNameInformationList to find a match. This parameter can be one of the following types: FQDN - Fully qualified domain name. Suffix - A domain suffix that will be appended to the shortname query for DNS resolution. To specify a suffix, prepend a . to the DNS suffix.",
                "format": "string",
                "scope": "user"
              },
              "Persistent": {
                "name": "Persistent",
                "description": "A boolean value that specifies if the rule being added should persist even when the VPN is not connected.",
                "format": "bool",
                "scope": "user"
              },
              "WebProxyServers": {
                "name": "WebProxyServers",
                "description": "Web Proxy Server IP address if you are redirecting traffic through your intranet.",
                "format": "string",
                "scope": "user"
              }
            },
            "scope": "user"
          },
          "EdpModeId": {
            "name": "EdpModeId",
            "description": "Enterprise ID, which is required for connecting this VPN profile with an WIP policy. When this is set, the networking stack looks for this Enterprise ID in the app token to determine if the traffic is allowed to go over the VPN. If the profile is active, it also automatically triggers the VPN to connect. We recommend having only one such profile per device.",
            "format": "string",
            "scope": "user"
          },
          "IPv4InterfaceMetric": {
            "name": "IPv4InterfaceMetric",
            "description": "The metric for the IPv4 interface.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 1,
              "max": 999
            },
            "scope": "user"
          },
          "IPv6InterfaceMetric": {
            "name": "IPv6InterfaceMetric",
            "description": "The metric for the IPv6 interface.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 1,
              "max": 999
            },
            "scope": "user"
          },
          "NativeProfile": {
            "name": "NativeProfile",
            "description": "InboxNodes under NativeProfile are required when using a Windows Inbox VPN Protocol (IKEv2, PPTP, L2TP, SSTP).",
            "format": "node",
            "scope": "user"
          },
          "NativeProfile/Authentication/Certificate/Eku": {
            "name": "Eku",
            "description": "Reserved for future use.",
            "format": "string",
            "scope": "user"
          },
          "NativeProfile/Authentication/Certificate/Issuer": {
            "name": "Issuer",
            "description": "Reserved for future use.",
            "format": "string",
            "scope": "user"
          },
          "NativeProfile/Authentication/Eap/Configuration": {
            "name": "Configuration",
            "description": "HTML encoded XML of the EAP configuration. For more information about EAP configuration XML, see https://docs.microsoft.com/en-us/windows/client-management/mdm/eap-configuration.",
            "format": "string",
            "scope": "user"
          },
          "NativeProfile/Authentication/Eap/Type": {
            "name": "Type",
            "description": "\r\n                    Required node for EAP profiles. This specifies the EAP Type ID\r\n                      13 = EAP-TLS\r\n                      26 = Ms-Chapv2\r\n                      27 = Peap\r\n                    ",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "user"
          },
          "NativeProfile/Authentication/MachineMethod": {
            "name": "MachineMethod",
            "description": "This is only supported in IKEv2.",
            "format": "string",
            "scope": "user"
          },
          "NativeProfile/Authentication/UserMethod": {
            "name": "UserMethod",
            "description": "This value can be one of the following: EAP or MSChapv2 (This is not supported for IKEv2).",
            "format": "string",
            "scope": "user"
          },
          "NativeProfile/CryptographySuite/AuthenticationTransformConstants": {
            "name": "AuthenticationTransformConstants",
            "description": "Type of authentication transform constant.",
            "format": "string",
            "scope": "user"
          },
          "NativeProfile/CryptographySuite/CipherTransformConstants": {
            "name": "CipherTransformConstants",
            "description": "Type of Cipher transform constant.",
            "format": "string",
            "scope": "user"
          },
          "NativeProfile/CryptographySuite/DHGroup": {
            "name": "DHGroup",
            "description": "Group used for DH (Diffie-Hellman).",
            "format": "string",
            "scope": "user"
          },
          "NativeProfile/CryptographySuite/EncryptionMethod": {
            "name": "EncryptionMethod",
            "description": "Type of encryption method.",
            "format": "string",
            "scope": "user"
          },
          "NativeProfile/CryptographySuite/IntegrityCheckMethod": {
            "name": "IntegrityCheckMethod",
            "description": "Type of integrity check.",
            "format": "string",
            "scope": "user"
          },
          "NativeProfile/CryptographySuite/PfsGroup": {
            "name": "PfsGroup",
            "description": "Group used for PFS (Perfect Forward Secrecy).",
            "format": "string",
            "scope": "user"
          },
          "NativeProfile/DisableClassBasedDefaultRoute": {
            "name": "DisableClassBasedDefaultRoute",
            "description": "Specifies the class based default routes. For example, if the interface IP begins with 10, it assumes a class a IP and pushes the route to 10.0.0.0/8",
            "format": "bool",
            "scope": "user"
          },
          "NativeProfile/L2tpPsk": {
            "name": "L2tpPsk",
            "description": "The preshared key used for an L2TP connection.",
            "format": "string",
            "scope": "user"
          },
          "NativeProfile/NativeProtocolType": {
            "name": "NativeProtocolType",
            "description": "Required for native profiles. Type of tunneling protocol used.",
            "format": "string",
            "scope": "user"
          },
          "NativeProfile/PlumbIKEv2TSAsRoutes": {
            "name": "PlumbIKEv2TSAsRoutes",
            "description": " True: Plumb traffic selectors as routes onto VPN interface, False: Do not plumb traffic selectors as routes.",
            "format": "bool",
            "scope": "user"
          },
          "NativeProfile/ProtocolList/NativeProtocolList/{NativeProtocolRowId}": {
            "name": "",
            "title": "NativeProtocolRowId",
            "format": "node",
            "nodes": {
              "Type": {
                "name": "Type",
                "description": "Inbox VPN protocols type.",
                "format": "string",
                "scope": "user"
              }
            },
            "scope": "user"
          },
          "NativeProfile/ProtocolList/RetryTimeInHours": {
            "name": "RetryTimeInHours",
            "description": " Default 168, max 500000.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "user"
          },
          "NativeProfile/RoutingPolicyType": {
            "name": "RoutingPolicyType",
            "description": "Type of routing policy.",
            "format": "string",
            "scope": "user"
          },
          "NativeProfile/Servers": {
            "name": "Servers",
            "description": "Required for native profiles. Public or routable IP address or DNS name for the VPN gateway. It can point to the external IP of a gateway or a virtual IP for a server farm. Examples, 208.147.66.130 or vpn.contoso.com. The name can be a server name plus a friendly name separated with a semi-colon. For example, server2.example.com;server2FriendlyName. When you get the value, the return will include both the server name and the friendly name; if no friendly name had been supplied it will default to the server name. You can make a list of server by making a list of server names (with optional friendly names) seperated by commas. For example, server1.example.com,server2.example.com.",
            "format": "string",
            "scope": "user"
          },
          "NetworkOutageTime": {
            "name": "NetworkOutageTime",
            "description": "The amount of time in seconds the network is allowed to idle. 0 means no limit.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 429496729
            },
            "scope": "user"
          },
          "PluginProfile": {
            "name": "PluginProfile",
            "description": "Nodes under the PluginProfile are required when using a Microsoft Store based VPN plugin.",
            "format": "node",
            "scope": "user"
          },
          "PluginProfile/CustomConfiguration": {
            "name": "CustomConfiguration",
            "description": "Optional. This is an HTML encoded XML blob for SSL-VPN plug-in specific configuration including authentication information that is deployed to the device to make it available for SSL-VPN plug-ins. Contact the plugin provider for format and other details. Most plugins can also configure values based on the server negotiations as well as defaults.",
            "format": "string",
            "scope": "user"
          },
          "PluginProfile/PluginPackageFamilyName": {
            "name": "PluginPackageFamilyName",
            "description": "Required for Plugin Profiles. This node specifies the Package Family Name of the SSL-VPN plugin app.",
            "format": "string",
            "scope": "user"
          },
          "PluginProfile/ServerUrlList": {
            "name": "ServerUrlList",
            "description": "Required for plug-in profiles. Semicolon-separated list of servers in URL, hostname, or IP format.",
            "format": "string",
            "scope": "user"
          },
          "PrivateNetwork": {
            "name": "PrivateNetwork",
            "description": "Determines whether the VPN connection is public or private.",
            "format": "bool",
            "scope": "user"
          },
          "ProfileXML": {
            "name": "ProfileXML",
            "description": "The XML schema for provisioning all the fields of a VPN.",
            "format": "string",
            "scope": "user"
          },
          "Proxy/AutoConfigUrl": {
            "name": "AutoConfigUrl",
            "description": "Optional. Set a URL to automatically retrieve the proxy settings. ",
            "format": "string",
            "scope": "user"
          },
          "Proxy/Manual/Server": {
            "name": "Server",
            "description": "Optional. The value is the proxy server address as a fully qualified hostname or an IP address, with port appended after a colon for example, proxy.constoso.com:80.",
            "format": "string",
            "scope": "user"
          },
          "RegisterDNS": {
            "name": "RegisterDNS",
            "description": "Allows registration of the connection's address in DNS.",
            "format": "bool",
            "scope": "user"
          },
          "RememberCredentials": {
            "name": "RememberCredentials",
            "description": "Boolean value (true or false) for caching credentials.",
            "format": "bool",
            "scope": "user"
          },
          "RequireVpnClientAppUI": {
            "name": "RequireVpnClientAppUI",
            "description": "\r\n                        Applicable only to AppContainer profiles.\r\n\r\n                        False : Do not show profile in Settings UI.\r\n                        True : Show profile in Settings UI.\r\n\r\n                        Optional. This node is only relevant for AppContainer profiles (i.e. using the VpnManagementAgent::AddProfileFromXmlAsync method).\r\n                    ",
            "format": "bool",
            "scope": "user"
          },
          "RouteList/{routeRowId}": {
            "name": "",
            "title": "routeRowId",
            "description": "A sequential integer identifier for the RouteList. This is required if you are adding routes. Sequencing must start at 0.",
            "format": "node",
            "nodes": {
              "Address": {
                "name": "Address",
                "description": "Subnet address in IPv4/v6 address format which, along with the prefix will be used to determine the destination prefix to send via the VPN Interface. This is the IP address part of the destination prefix.",
                "format": "string",
                "scope": "user"
              },
              "ExclusionRoute": {
                "name": "ExclusionRoute",
                "description": "A boolean value that specifies if the route being added should point to the VPN Interface or the Physical Interface as the Gateway.",
                "format": "bool",
                "scope": "user"
              },
              "Metric": {
                "name": "Metric",
                "description": "The route's metric.",
                "format": "int",
                "defaultValue": 0,
                "allowedValues": null,
                "scope": "user"
              },
              "PrefixSize": {
                "name": "PrefixSize",
                "description": "The subnet prefix size part of the destination prefix for the route entry. This, along with the address will be used to determine the destination prefix to route through the VPN Interface.",
                "format": "int",
                "defaultValue": 0,
                "allowedValues": {
                  "valueType": "range",
                  "min": 0,
                  "max": 429496729
                },
                "scope": "user"
              }
            },
            "scope": "user"
          },
          "TrafficFilterList/{trafficFilterId}": {
            "name": "",
            "title": "trafficFilterId",
            "description": "A sequential integer identifier for the Traffic Filter rules. Sequencing must start at 0.",
            "format": "node",
            "nodes": {
              "App/Id": {
                "name": "Id",
                "description": "App identity for the app-based traffic filter. The value for this node can be one of the following: PackageFamilyName - This App/Id value represents the PackageFamilyName of the app. The PackageFamilyName is the unique name of a Microsoft Store application. FilePath - This App/Id value represents the full file path of the app. For example, C:\\Windows\\System\\Notepad.exe. SYSTEM - This value enables Kernel Drivers to send traffic through VPN (for example, PING or SMB).",
                "format": "string",
                "scope": "user"
              },
              "Claims": {
                "name": "Claims",
                "description": "Specifies a rule in Security Descriptor Definition Language (SDDL) format to check against local user token.",
                "format": "string",
                "scope": "user"
              },
              "Direction": {
                "name": "Direction",
                "description": "\r\n                                Outbound - The traffic filter allows traffic to reach destinations matching this rule. This is the default.\r\n                                Inbound - The traffic filter allows traffic coming from external locations matching this rule.\r\n                            ",
                "format": "string",
                "scope": "user"
              },
              "LocalAddressRanges": {
                "name": "LocalAddressRanges",
                "description": "A list of comma separated values specifying local IP address ranges to allow.",
                "format": "string",
                "scope": "user"
              },
              "LocalPortRanges": {
                "name": "LocalPortRanges",
                "title": "LocalPortRanges",
                "description": "Comma Separated list of ranges for eg. 100-120,200,300-320.",
                "format": "string",
                "scope": "user"
              },
              "Protocol": {
                "name": "Protocol",
                "description": "0-255 number representing the ip protocol (TCP = 6, UDP = 17).",
                "format": "int",
                "defaultValue": 0,
                "allowedValues": {
                  "valueType": "range",
                  "min": 0,
                  "max": 25
                },
                "scope": "user"
              },
              "RemoteAddressRanges": {
                "name": "RemoteAddressRanges",
                "description": "A list of comma separated values specifying remote IP address ranges to allow.",
                "format": "string",
                "scope": "user"
              },
              "RemotePortRanges": {
                "name": "RemotePortRanges",
                "description": "A list of comma separated values specifying remote port ranges to allow. For example, 100-120, 200, 300-320.",
                "format": "string",
                "scope": "user"
              },
              "RoutingPolicyType": {
                "name": "RoutingPolicyType",
                "description": "Specifies the routing policy if an App or Claims type is used in the traffic filter. The scope of this property is for this traffic filter rule alone.",
                "format": "string",
                "scope": "user"
              }
            },
            "scope": "user"
          },
          "TrustedNetworkDetection": {
            "name": "TrustedNetworkDetection",
            "description": "Comma separated string to identify the trusted network. VPN will not connect automatically when the user is on their corporate wireless network where protected resources are directly accessible to the device.",
            "format": "string",
            "scope": "user"
          },
          "UseRasCredentials": {
            "name": "UseRasCredentials",
            "description": "Determines whether the credential manager will save ras credentials after a connection.",
            "format": "bool",
            "scope": "user"
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/WiFi": {
    "name": "WiFi",
    "policies": {
      "Profile/{SSID}": {
        "name": "",
        "title": "SSID",
        "description": "The Profile name of the Wi-Fi network. This is added when WlanXml node is added and deleted when WlanXml is deleted.",
        "format": "node",
        "nodes": {
          "ProfileSource": {
            "name": "ProfileSource",
            "description": "Allows for defining which administrative entity is setting this Wi-Fi profile. This can currently be set to either 0=Enterprise or 1=Mobile Operator.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Enterprise"
                },
                "1": {
                  "description": "Mobile Operator"
                }
              }
            },
            "scope": "user"
          },
          "Proxy": {
            "name": "Proxy",
            "description": "Optional node. The format is url:port. Configuration of the network proxy (if any).",
            "format": "string",
            "scope": "user"
          },
          "ProxyPacUrl": {
            "name": "ProxyPacUrl",
            "description": "Optional node. URL to the PAC file location.",
            "format": "string",
            "scope": "user"
          },
          "ProxyWPAD": {
            "name": "ProxyWPAD",
            "description": "Optional node. The presence of the field enables WPAD for proxy lookup.",
            "format": "bool",
            "scope": "user"
          },
          "WiFiCost": {
            "name": "WiFiCost",
            "description": "Optional node. If the policy is active selecting one of the values from the following list will set the cost of WLAN connection for the Wi-Fi profile. (1:Unrestricted - unlimited connection, 2: Fixed - capacity constraints  up to a certain data limit, 3: Variable - costed on per byte basic) Default behaviour: Unrestricted",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "1": {
                  "description": "Unrestricted - unlimited connection."
                },
                "2": {
                  "description": "Fixed - capacity constraints up to a certain data limit."
                },
                "3": {
                  "description": "Variable - paid on per byte basic."
                }
              }
            },
            "scope": "user"
          },
          "WlanXml": {
            "name": "WlanXml",
            "description": "\r\n              XML describing the network configuration and follows Windows WLAN_profile schema.\r\n              Link to schema: http://msdn.microsoft.com/en-us/library/windows/desktop/ms707341(v=vs.85).aspx\r\n            ",
            "format": "string",
            "scope": "user"
          }
        },
        "scope": "user"
      }
    }
  },
  "./User/Vendor/MSFT/WiredNetwork": {
    "name": "WiredNetwork",
    "policies": {
      "EnableBlockPeriod": {
        "name": "EnableBlockPeriod",
        "description": " Enable block period (minutes), used to specify the duration for which automatic authentication attempts will be blocked from occurring after a failed authentication attempt.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "user"
      },
      "LanXML": {
        "name": "LanXML",
        "description": "XML describing the wired network configuration and follows the LAN_profile schemas https://msdn.microsoft.com/en-us/library/windows/desktop/aa816366(v=vs.85).aspx",
        "format": "string",
        "scope": "user"
      }
    }
  },
  "./Vendor/MSFT/AppLocker": {
    "name": "AppLocker",
    "policies": {
      "ApplicationLaunchRestrictions/{Grouping}": {
        "name": "",
        "title": "Grouping",
        "description": "Grouping nodes are dynamic nodes, and there may be any number of them for a given enrollment (or a given context). The actual identifiers are selected by the management endpoint, whose job it is to determine what their purpose is, and to not conflict with other identifiers that they define. Different enrollments and contexts may use the same Authority identifier, even if many such identifiers are active at the same time.",
        "format": "node",
        "nodes": {
          "CodeIntegrity": {
            "name": "CodeIntegrity",
            "description": "Insert Description Here",
            "format": "node",
            "scope": "device"
          },
          "CodeIntegrity/Policy": {
            "name": "Policy",
            "description": "Policy nodes define the policy for launching executables, Windows Installer files, scripts, store apps, and DLL files. The contents of a given Policy node is precisely the XML format for a RuleCollection node in the corresponding AppLocker XML policy.  This will need to be Base64 encoded.",
            "format": "base64",
            "scope": "device"
          },
          "DLL": {
            "name": "DLL",
            "description": "Defines restrictions for processing DLL files.",
            "format": "node",
            "scope": "device"
          },
          "DLL/EnforcementMode": {
            "name": "EnforcementMode",
            "description": "The EnforcementMode node for Windows Information Protection (formerly known as Enterprise Data Protection) does not affect the behavior of EnterpriseDataProtection. The EDPEnforcementLevel from Policy CSP should be used to enable and disable Windows Information Protection (formerly known as Enterprise Data Protection).",
            "format": "string",
            "scope": "device"
          },
          "DLL/NonInteractiveProcessEnforcement": {
            "name": "NonInteractiveProcessEnforcement",
            "description": "Insert Description Here",
            "format": "string",
            "scope": "device"
          },
          "DLL/Policy": {
            "name": "Policy",
            "description": "Policy nodes define the policy for launching executables, Windows Installer files, scripts, store apps, and DLL files. The contents of a given Policy node is precisely the XML format for a RuleCollection node in the corresponding AppLocker XML policy.",
            "format": "string",
            "scope": "device"
          },
          "EXE": {
            "name": "EXE",
            "description": "Defines restrictions for launching executable applications.",
            "format": "node",
            "scope": "device"
          },
          "EXE/EnforcementMode": {
            "name": "EnforcementMode",
            "description": "The EnforcementMode node for Windows Information Protection (formerly known as Enterprise Data Protection) does not affect the behavior of EnterpriseDataProtection. The EDPEnforcementLevel from Policy CSP should be used to enable and disable Windows Information Protection (formerly known as Enterprise Data Protection).",
            "format": "string",
            "scope": "device"
          },
          "EXE/NonInteractiveProcessEnforcement": {
            "name": "NonInteractiveProcessEnforcement",
            "description": "Insert Description Here",
            "format": "string",
            "scope": "device"
          },
          "EXE/Policy": {
            "name": "Policy",
            "description": "Policy nodes define the policy for launching executables, Windows Installer files, scripts, store apps, and DLL files. The contents of a given Policy node is precisely the XML format for a RuleCollection node in the corresponding AppLocker XML policy.",
            "format": "string",
            "scope": "device"
          },
          "MSI": {
            "name": "MSI",
            "description": "Defines restrictions for executing Windows Installer files.",
            "format": "node",
            "scope": "device"
          },
          "MSI/EnforcementMode": {
            "name": "EnforcementMode",
            "description": "The EnforcementMode node for Windows Information Protection (formerly known as Enterprise Data Protection) does not affect the behavior of EnterpriseDataProtection. The EDPEnforcementLevel from Policy CSP should be used to enable and disable Windows Information Protection (formerly known as Enterprise Data Protection).",
            "format": "string",
            "scope": "device"
          },
          "MSI/Policy": {
            "name": "Policy",
            "description": "Policy nodes define the policy for launching executables, Windows Installer files, scripts, store apps, and DLL files. The contents of a given Policy node is precisely the XML format for a RuleCollection node in the corresponding AppLocker XML policy.",
            "format": "string",
            "scope": "device"
          },
          "Script": {
            "name": "Script",
            "description": "Defines restrictions for running scripts.",
            "format": "node",
            "scope": "device"
          },
          "Script/EnforcementMode": {
            "name": "EnforcementMode",
            "description": "The EnforcementMode node for Windows Information Protection (formerly known as Enterprise Data Protection) does not affect the behavior of EnterpriseDataProtection. The EDPEnforcementLevel from Policy CSP should be used to enable and disable Windows Information Protection (formerly known as Enterprise Data Protection).",
            "format": "string",
            "scope": "device"
          },
          "Script/Policy": {
            "name": "Policy",
            "description": "Policy nodes define the policy for launching executables, Windows Installer files, scripts, store apps, and DLL files. The contents of a given Policy node is precisely the XML format for a RuleCollection node in the corresponding AppLocker XML policy.",
            "format": "string",
            "scope": "device"
          },
          "StoreApps": {
            "name": "StoreApps",
            "description": "Defines restrictions for running apps from the Microsoft Store.",
            "format": "node",
            "scope": "device"
          },
          "StoreApps/EnforcementMode": {
            "name": "EnforcementMode",
            "description": "The EnforcementMode node for Windows Information Protection (formerly known as Enterprise Data Protection) does not affect the behavior of EnterpriseDataProtection. The EDPEnforcementLevel from Policy CSP should be used to enable and disable Windows Information Protection (formerly known as Enterprise Data Protection).",
            "format": "string",
            "scope": "device"
          },
          "StoreApps/Policy": {
            "name": "Policy",
            "description": "Policy nodes define the policy for launching executables, Windows Installer files, scripts, store apps, and DLL files. The contents of a given Policy node is precisely the XML format for a RuleCollection node in the corresponding AppLocker XML policy.",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "EnterpriseDataProtection/{Grouping}": {
        "name": "",
        "title": "Grouping",
        "description": "Grouping nodes are dynamic nodes, and there may be any number of them for a given enrollment (or a given context). The actual identifiers are selected by the management endpoint, whose job it is to determine what their purpose is, and to not conflict with other identifiers that they define. Different enrollments and contexts may use the same Authority identifier, even if many such identifiers are active at the same time.",
        "format": "node",
        "nodes": {
          "EXE": {
            "name": "EXE",
            "description": "Defines restrictions for launching executable applications.",
            "format": "node",
            "scope": "device"
          },
          "EXE/Policy": {
            "name": "Policy",
            "description": "Policy nodes define the policy for launching executables, Windows Installer files, scripts, store apps, and DLL files. The contents of a given Policy node is precisely the XML format for a RuleCollection node in the corresponding AppLocker XML policy.",
            "format": "string",
            "scope": "device"
          },
          "StoreApps": {
            "name": "StoreApps",
            "description": "Defines restrictions for running apps from the Microsoft Store.",
            "format": "node",
            "scope": "device"
          },
          "StoreApps/Policy": {
            "name": "Policy",
            "description": "Policy nodes define the policy for launching executables, Windows Installer files, scripts, store apps, and DLL files. The contents of a given Policy node is precisely the XML format for a RuleCollection node in the corresponding AppLocker XML policy.",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "FamilySafety/{Grouping}": {
        "name": "",
        "title": "Grouping",
        "description": "Insert Description Here",
        "format": "node",
        "nodes": {
          "EXE": {
            "name": "EXE",
            "description": "Insert Description Here",
            "format": "node",
            "scope": "device"
          },
          "EXE/EnforcementMode": {
            "name": "EnforcementMode",
            "description": "The EnforcementMode node for Windows Information Protection (formerly known as Enterprise Data Protection) does not affect the behavior of EnterpriseDataProtection. The EDPEnforcementLevel from Policy CSP should be used to enable and disable Windows Information Protection (formerly known as Enterprise Data Protection).",
            "format": "string",
            "scope": "device"
          },
          "EXE/Policy": {
            "name": "Policy",
            "description": "Policy nodes define the policy for launching executables, Windows Installer files, scripts, store apps, and DLL files. The contents of a given Policy node is precisely the XML format for a RuleCollection node in the corresponding AppLocker XML policy.",
            "format": "string",
            "scope": "device"
          },
          "StoreApps": {
            "name": "StoreApps",
            "description": "Insert Description Here",
            "format": "node",
            "scope": "device"
          },
          "StoreApps/EnforcementMode": {
            "name": "EnforcementMode",
            "description": "The EnforcementMode node for Windows Information Protection (formerly known as Enterprise Data Protection) does not affect the behavior of EnterpriseDataProtection. The EDPEnforcementLevel from Policy CSP should be used to enable and disable Windows Information Protection (formerly known as Enterprise Data Protection).",
            "format": "string",
            "scope": "device"
          },
          "StoreApps/Policy": {
            "name": "Policy",
            "description": "Policy nodes define the policy for launching executables, Windows Installer files, scripts, store apps, and DLL files. The contents of a given Policy node is precisely the XML format for a RuleCollection node in the corresponding AppLocker XML policy.",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "LaunchControl/{Grouping}": {
        "name": "",
        "title": "Grouping",
        "description": "Insert Description Here",
        "format": "node",
        "nodes": {
          "EXE": {
            "name": "EXE",
            "description": "Insert Description Here",
            "format": "node",
            "scope": "device"
          },
          "EXE/EnforcementMode": {
            "name": "EnforcementMode",
            "description": "The EnforcementMode node for Windows Information Protection (formerly known as Enterprise Data Protection) does not affect the behavior of EnterpriseDataProtection. The EDPEnforcementLevel from Policy CSP should be used to enable and disable Windows Information Protection (formerly known as Enterprise Data Protection).",
            "format": "string",
            "scope": "device"
          },
          "EXE/Policy": {
            "name": "Policy",
            "description": "Policy nodes define the policy for launching executables, Windows Installer files, scripts, store apps, and DLL files. The contents of a given Policy node is precisely the XML format for a RuleCollection node in the corresponding AppLocker XML policy.",
            "format": "string",
            "scope": "device"
          },
          "StoreApps": {
            "name": "StoreApps",
            "description": "Insert Description Here",
            "format": "node",
            "scope": "device"
          },
          "StoreApps/EnforcementMode": {
            "name": "EnforcementMode",
            "description": "The EnforcementMode node for Windows Information Protection (formerly known as Enterprise Data Protection) does not affect the behavior of EnterpriseDataProtection. The EDPEnforcementLevel from Policy CSP should be used to enable and disable Windows Information Protection (formerly known as Enterprise Data Protection).",
            "format": "string",
            "scope": "device"
          },
          "StoreApps/Policy": {
            "name": "Policy",
            "description": "Policy nodes define the policy for launching executables, Windows Installer files, scripts, store apps, and DLL files. The contents of a given Policy node is precisely the XML format for a RuleCollection node in the corresponding AppLocker XML policy.",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Vendor/MSFT/AssignedAccess": {
    "name": "AssignedAccess",
    "policies": {
      "Configuration": {
        "name": "Configuration",
        "description": "This node accepts an AssignedAccessConfiguration xml as input. Please check out samples and required xsd on MSDN.",
        "format": "string",
        "scope": "device"
      },
      "KioskModeApp": {
        "name": "KioskModeApp",
        "description": "This node can accept and return json string which comprises of account name, and AUMID for Kiosk mode app.\r\n\r\nExample: {\"User\":\"domain\\\\user\", \"AUMID\":\"Microsoft.WindowsCalculator_8wekyb3d8bbwe!App\"}. \r\n\r\nWhen configuring kiosk mode app, account name will be used to find the target user. Account name includes domain name and user name. Domain name can be optional if user name is unique across the system. For a local account, domain name should be machine name. When \"Get\" is executed on this node, domain name is always returned in the output.\r\n\r\nThis node supports Add, Delete, Replace and Get methods. When there's no configuration, \"Get\" and \"Delete\" methods fail. When there's already a configuration for kiosk mode app, \"Add\" method fails. The data pattern for \"Add\" and \"Replace\" is the same.",
        "format": "string",
        "scope": "device"
      },
      "ShellLauncher": {
        "name": "ShellLauncher",
        "description": "This node accepts a ShellLauncherConfiguration xml as input. Please check out samples and required xsd on MSDN.",
        "format": "string",
        "scope": "device"
      },
      "StatusConfiguration": {
        "name": "StatusConfiguration",
        "description": "This node accepts a StatusConfiguration xml as input. Please check out samples and required xsd on MSDN.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Vendor/MSFT/DiagnosticLog": {
    "name": "DiagnosticLog",
    "policies": {
      "DeviceStateData/MdmConfiguration": {
        "name": "MdmConfiguration",
        "description": "This node is to trigger snapping of the Device Management state data with \"SNAP\".",
        "format": "string",
        "scope": "device"
      },
      "DiagnosticArchive/ArchiveDefinition": {
        "name": "ArchiveDefinition",
        "format": "string",
        "scope": "device"
      },
      "EtwLog/Channels/{ChannelName}": {
        "name": "",
        "title": "ChannelName",
        "description": "Each dynamic node represents a registered 'Channel' node. The node name must be a valid Windows event log channel name, e.g. \"Microsoft-Client-Licensing-Platform%2FAdmin\". When specifying the name in the LocURI, it must be url encoded or it'll be translated into a different URI unexpectedly.",
        "format": "node",
        "nodes": {
          "Export": {
            "name": "Export",
            "description": "This node is to trigger exporting events into a log file from this node's associated Windows event channel. The log file's extension is .evtx, which is the standard extension of windows event channel log. The \"Get\" command returns the name of this node.",
            "format": "null",
            "scope": "device"
          },
          "Filter": {
            "name": "Filter",
            "description": "This node is used for setting or getting the xpath query string to filter the events when exporting the log file from the channel. Default value is empty string.",
            "format": "string",
            "scope": "device"
          },
          "State": {
            "name": "State",
            "description": "This node is used for setting or getting the 'Enabled' state of this node's associated windows event channel in the system. Setting it to \"TRUE\" enables the channel; setting it to \"FALSE\" disables the channel. ",
            "format": "bool",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "EtwLog/Collectors/{CollectorName}": {
        "name": "",
        "title": "CollectorName",
        "description": "Each dynamic node represents a registered 'Collector' node. CSP will maintain an ETW trace session for this collector with its name used as a unique identifier. In a collector, a valid ETW provider can be registered and unregistered. The collector's associated trace session will enable the registered providers in it if the provider's state is 'Enabled'. Each provider's state, trace level and keywords can be controlled separately. The name of this node must not be a valid Windows event channel name. It can be a etw provider guid as long as it is not equal to an already registered 'Provider' node name.",
        "format": "node",
        "nodes": {
          "LogFileSizeLimitMB": {
            "name": "LogFileSizeLimitMB",
            "description": "This node is used for setting or getting the trace log file size limit(in Megabytes) of this collector node's associated trace session. The value range is 1~2048. Default value is 4.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 1,
              "max": 204
            },
            "scope": "device"
          },
          "Providers/{ProviderGuid}": {
            "name": "",
            "title": "ProviderGuid",
            "description": "Each dynamic node represents an ETW provider registered in this collector node. The node name must be a valid provider GUID.",
            "format": "node",
            "nodes": {
              "Keywords": {
                "name": "Keywords",
                "description": "This node is used for setting or getting the keywords of the event provider in this collector node's associated trace session. The string is in the form of hexadecimal digits and 16 chars wide. It'll be internally converted into ULONGLONG data type in the CSP. Default value is \"0\", which means all events from this provider are included. If the associated trace session is in progress, new keywords setting is applied immediately; if not, it'll be applied next time that session is started.",
                "format": "string",
                "scope": "device"
              },
              "State": {
                "name": "State",
                "description": "This node is used for setting or getting the state of the event provider in this collector node's associated trace session. If the trace session isn't started, changing the value controls whether to enable the provider or not when session is started; if trace session is already started, changing its value causes enabling or disabling the provider in the live trace session. Default value is true.",
                "format": "bool",
                "scope": "device"
              },
              "TraceLevel": {
                "name": "TraceLevel",
                "description": "This node is used for setting or getting the trace level of this event provider in this collector node's associated trace session. Default value is 5, which is TRACE_LEVEL_VERBOSE. If the associated trace session is in progress, new trace level setting is applied immediately;if not, it'll be applied next time that session is started.",
                "format": "int",
                "defaultValue": 0,
                "allowedValues": {
                  "valueType": "enum",
                  "enum": {
                    "1": {
                      "description": "TRACE_LEVEL_CRITICAL - Abnormal exit or termination events"
                    },
                    "2": {
                      "description": "TRACE_LEVEL_ERROR - Severe error events"
                    },
                    "3": {
                      "description": "TRACE_LEVEL_WARNING - Warning events such as allocation failures"
                    },
                    "4": {
                      "description": "TRACE_LEVEL_INFORMATION - Non-error events, such as entry or exit events"
                    },
                    "5": {
                      "description": "TRACE_LEVEL_VERBOSE - Detailed information"
                    }
                  }
                },
                "scope": "device"
              }
            },
            "scope": "device"
          },
          "TraceControl": {
            "name": "TraceControl",
            "description": "This node is to trigger \"start\" and \"stop\" of this collector node's associated trace session. \"Get\" returns the name of this node.",
            "format": "string",
            "scope": "device"
          },
          "TraceLogFileMode": {
            "name": "TraceLogFileMode",
            "description": "This node is used for setting or getting the trace log file mode of this collector node's associated trace session. The only two allowed values are 1 and 2, which are EVENT_TRACE_FILE_MODE_SEQUENTIAL and EVENT_TRACE_FILE_MODE_CIRCULAR. Default value is 1.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "1": {
                  "description": "EVENT_TRACE_FILE_MODE_SEQUENTIAL-Writes events to a log file sequentially. It stops when the file reaches its maximum size."
                },
                "2": {
                  "description": "EVENT_TRACE_FILE_MODE_CIRCULAR-Writes events to a log file. After the file reaches the maximum size, the oldest events are replaced with incoming events."
                }
              }
            },
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "Policy/Channels/{ChannelName}": {
        "name": "",
        "title": "ChannelName",
        "description": "Each dynamic node represents a registered 'Channel' node. The node name must be a valid Windows event log channel name, e.g. \"Microsoft-Client-Licensing-Platform%2FAdmin\". When specifying the name in the LocURI, it must be url encoded or it'll be translated into a different URI unexpectedly.",
        "format": "node",
        "nodes": {
          "ActionWhenFull": {
            "name": "ActionWhenFull",
            "description": "Action to take when the log file reaches maximum size. \"Truncate\", \"Overwrite\", \"Archive\".",
            "format": "string",
            "scope": "device"
          },
          "Enabled": {
            "name": "Enabled",
            "description": "This policy setting specifies whether the channel should be enabled or disabled. Set value to TRUE to enable and FALSE to disable.",
            "format": "bool",
            "scope": "device"
          },
          "MaximumFileSize": {
            "name": "MaximumFileSize",
            "description": "Maximum size of the channel log file in MB.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 1,
              "max": 200000
            },
            "scope": "device"
          },
          "SDDL": {
            "name": "SDDL",
            "description": "SDDL String controlling access to the channel. Default: https://docs.microsoft.com/en-us/windows/desktop/WES/eventmanifestschema-channeltype-complextype",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      }
    }
  },
  "./Vendor/MSFT/Firewall": {
    "name": "Firewall",
    "policies": {
      "MdmStore/DomainProfile/AllowLocalIpsecPolicyMerge": {
        "name": "AllowLocalIpsecPolicyMerge",
        "description": "This value is an on/off switch. If this value is false, connection security rules from the local store are ignored and not enforced, regardless of the schema version and connection security rule version.   The merge law for this option is to always use the value of the GroupPolicyRSoPStore.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/DomainProfile/AllowLocalPolicyMerge": {
        "name": "AllowLocalPolicyMerge",
        "description": "This value is used as an on/off switch. If this value is false, firewall rules from the local store are ignored and not enforced.  The merge law for this option is to always use the value of the GroupPolicyRSoPStore. This value is valid for all schema versions.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/DomainProfile/AuthAppsAllowUserPrefMerge": {
        "name": "AuthAppsAllowUserPrefMerge",
        "description": "This value is used as an on/off switch. If this value is false, authorized application firewall rules in the local store are ignored and not enforced.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/DomainProfile/DefaultInboundAction": {
        "name": "DefaultInboundAction",
        "description": "This value is the action that the firewall does by default (and evaluates at the very end) on inbound connections. The allow action is represented by 0x00000000; 0x00000001 represents a block action. Default value is 1 [Block]. The merge law for this option is to let the value of the GroupPolicyRSoPStore.win if it is configured; otherwise, the local store value is used.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow Inbound By Default"
            },
            "1": {
              "description": "Block Inbound By Default"
            }
          }
        },
        "scope": "device"
      },
      "MdmStore/DomainProfile/DefaultOutboundAction": {
        "name": "DefaultOutboundAction",
        "description": "This value is the action that the firewall does by default (and evaluates at the very end) on outbound connections. The allow action is represented by 0x00000000; 0x00000001 represents a block action. Default value is 0 [Allow]. The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow Outbound By Default"
            },
            "1": {
              "description": "Block Outbound By Default"
            }
          }
        },
        "scope": "device"
      },
      "MdmStore/DomainProfile/DisableInboundNotifications": {
        "name": "DisableInboundNotifications",
        "description": "This value is an on/off switch. If this value is false, the firewall MAY display a notification to the user when an application is blocked from listening on a port. If this value is on, the firewall MUST NOT display such a notification.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/DomainProfile/DisableStealthMode": {
        "name": "DisableStealthMode",
        "description": "This value is an on/off switch. When this option is false, the server operates in stealth mode. The firewall rules used to enforce stealth mode are implementation-specific. The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/DomainProfile/DisableStealthModeIpsecSecuredPacketExemption": {
        "name": "DisableStealthModeIpsecSecuredPacketExemption",
        "description": "This value is an on/off switch. This option is ignored if DisableStealthMode is on. Otherwise, when this option is true, the firewall's stealth mode rules MUST NOT prevent the host computer from responding to unsolicited network traffic if that traffic is secured by IPsec.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used. For schema versions 0x0200, 0x0201, and 0x020A, this value is invalid and MUST NOT be used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/DomainProfile/DisableUnicastResponsesToMulticastBroadcast": {
        "name": "DisableUnicastResponsesToMulticastBroadcast",
        "description": "This value is used as an on/off switch. If it is true, unicast responses to multicast broadcast traffic is blocked.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/DomainProfile/EnableFirewall": {
        "name": "EnableFirewall",
        "description": "This value is an on/off switch for the firewall and advanced security enforcement. If this value is false, the server MUST NOT block any network traffic, regardless of other policy settings.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/DomainProfile/EnableLogDroppedPackets": {
        "name": "EnableLogDroppedPackets",
        "description": "This value is used as an on/off switch. If this value is on, the firewall logs all the dropped packets. The merge law for this option is to let \"on\" values win.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/DomainProfile/EnableLogIgnoredRules": {
        "name": "EnableLogIgnoredRules",
        "description": "This value is used as an on/off switch. The server MAY use this value in an implementation-specific way to control logging of events if a rule is not enforced for any reason. The merge law for this option is to let \"on\" values win.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/DomainProfile/EnableLogSuccessConnections": {
        "name": "EnableLogSuccessConnections",
        "description": "This value is used as an on/off switch. If this value is on, the firewall logs all successful inbound connections. The merge law for this option is to let \"on\" values win.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/DomainProfile/GlobalPortsAllowUserPrefMerge": {
        "name": "GlobalPortsAllowUserPrefMerge",
        "description": "This value is used as an on/off switch. If this value is false, global port firewall rules in the local store are ignored and not enforced. The setting only has meaning if it is set or enumerated in the Group Policy store or if it is enumerated from the GroupPolicyRSoPStore.  The merge law for this option is to let the value GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/DomainProfile/LogFilePath": {
        "name": "LogFilePath",
        "description": "This value is a string that represents a file path to the log where the firewall logs dropped packets and successful connections. The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured, otherwise the MdmStore value wins if it is configured, otherwise the local store value is used.",
        "format": "string",
        "scope": "device"
      },
      "MdmStore/DomainProfile/LogMaxFileSize": {
        "name": "LogMaxFileSize",
        "description": "This value specifies the size, in kilobytes, of the log file where dropped packets and successful connections are logged. The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured, otherwise the MdmStore value wins if it is configured, otherwise the local store value is used.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "MdmStore/DomainProfile/Shielded": {
        "name": "Shielded",
        "description": "This value is used as an on/off switch. If this value is on and EnableFirewall is on, the server MUST block all incoming traffic regardless of other policy settings.  The merge law for this option is to let \"on\" values win.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/DynamicKeywords/Addresses/{Id}": {
        "name": "",
        "title": "Id",
        "description": "A unique GUID string identifier for this dynamic keyword address.",
        "format": "node",
        "nodes": {
          "Addresses": {
            "name": "Addresses",
            "description": "Consists of one or more comma-delimited tokens specifying the addresses covered by this keyword. This value should not be set if AutoResolve is true.\r\n                    Valid tokens include:\r\n                    A subnet can be specified using either the subnet mask or network prefix notation. If neither a subnet mask not a network prefix is specified, the subnet mask defaults to 255.255.255.255.\r\n                    A valid IPv6 address.\r\n                    An IPv4 address range in the format of \"start address - end address\" with no spaces included.\r\n                    An IPv6 address range in the format of \"start address - end address\" with no spaces included.",
            "format": "string",
            "scope": "device"
          },
          "AutoResolve": {
            "name": "AutoResolve",
            "description": "If this flag is set to TRUE, then the 'keyword' field of this object is expected to be a fully qualified domain name, and the addresses will be automatically resolved. This flag should only be set if the Microsoft Defender Advanced Threat Protection Service is present.",
            "format": "bool",
            "scope": "device"
          },
          "Keyword": {
            "name": "Keyword",
            "description": "A String reprsenting keyword. If the AutoResolve value is true, this should be a Fully Qualified Domain name (wildcards accepted, for example \"contoso.com\" or \"*.contoso.com\"). If the AutoResolve value is false, then this can be any identifier string.",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "MdmStore/FirewallRules/{FirewallRuleName}": {
        "name": "",
        "title": "FirewallRuleName",
        "description": "Unique alpha numeric identifier for the rule.  The rule name must not include a forward slash (/).",
        "format": "node",
        "nodes": {
          "Action/Type": {
            "name": "Type",
            "description": "Specifies the action the rule enforces:\r\n0 - Block\r\n1 - Allow",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Block"
                },
                "1": {
                  "description": "Allow"
                }
              }
            },
            "scope": "device"
          },
          "App/FilePath": {
            "name": "FilePath",
            "description": "FilePath - This App/Id value represents the full file path of the app. For example, C:\\Windows\\System\\Notepad.exe.",
            "format": "string",
            "scope": "device"
          },
          "App/Fqbn": {
            "name": "Fqbn",
            "description": "Fully Qualified Binary Name",
            "format": "string",
            "scope": "device"
          },
          "App/PackageFamilyName": {
            "name": "PackageFamilyName",
            "description": "PackageFamilyName - This App/Id value represents the PackageFamilyName of the app. The PackageFamilyName is the unique name of a Microsoft Store application.",
            "format": "string",
            "scope": "device"
          },
          "App/ServiceName": {
            "name": "ServiceName",
            "description": "This is a service name, and is used in cases when a service, not an application, must be sending or receiving traffic.",
            "format": "string",
            "scope": "device"
          },
          "Description": {
            "name": "Description",
            "description": "Specifies the description of the rule.",
            "format": "string",
            "scope": "device"
          },
          "Direction": {
            "name": "Direction",
            "description": "The rule is enabled based on the traffic direction as following.\r\n\r\nIN - the rule applies to inbound traffic.\r\nOUT - the rule applies to outbound traffic.\r\n\r\nIf not specified the detault is OUT.",
            "format": "string",
            "scope": "device"
          },
          "EdgeTraversal": {
            "name": "EdgeTraversal",
            "description": "Indicates whether edge traversal is enabled or disabled for this rule.\r\n\r\nThe EdgeTraversal property indicates that specific inbound traffic is allowed to tunnel through NATs and other edge devices using the Teredo tunneling technology. In order for this setting to work correctly, the application or service with the inbound firewall rule needs to support IPv6. The primary application of this setting allows listeners on the host to be globally addressable through a Teredo IPv6 address.\r\n\r\nNew rules have the EdgeTraversal property disabled by default.\r\n",
            "format": "bool",
            "scope": "device"
          },
          "Enabled": {
            "name": "Enabled",
            "description": "Indicates whether the rule is enabled or disabled. If the rule must be enabled, this value must be set to true.\r\nIf not specified - a new rule is disabled by default.",
            "format": "bool",
            "scope": "device"
          },
          "IcmpTypesAndCodes": {
            "name": "IcmpTypesAndCodes",
            "description": "\r\n                    String value. Multiple ICMP type+code pairs can be included in the string by separating each value with a \",\". If more than one ICMP type+code pair is specified, the strings must be separated by a comma.\r\n                    To specify all ICMP types and codes, use the \"*\" character. For specific ICMP types and codes, use the \":\" to separate the type and code.\r\n                    The following are valid examples: 3:4 or 1:*. The \"*\" character can be used to represent any code. The \"*\" character can't be used to specify any type, examples such as \"*:4\" or \"*:*\" are invalid.\r\n\r\n                    When setting this field in a firewall rule, the protocol field must also be set, to either 1 (ICMP) or 58 (IPv6-ICMP).\r\n                  ",
            "format": "string",
            "scope": "device"
          },
          "InterfaceTypes": {
            "name": "InterfaceTypes",
            "description": "\r\n                    String value. Multiple interface types can be included in the string by separating each value with a \",\". Acceptable values are \"RemoteAccess\", \"Wireless\", \"Lan\", \"MBB\", and \"All\".\r\n                    If more than one interface type is specified, the strings must be separated by a comma.\r\n                  ",
            "format": "string",
            "scope": "device"
          },
          "LocalAddressRanges": {
            "name": "LocalAddressRanges",
            "description": "Consists of one or more comma-delimited tokens specifying the local addresses covered by the rule. \"*\" is the default value.\r\nValid tokens include:\r\n\"*\" indicates any local address. If present, this must be the only token included.\r\n\r\nA subnet can be specified using either the subnet mask or network prefix notation. If neither a subnet mask not a network prefix is specified, the subnet mask defaults to 255.255.255.255.\r\nA valid IPv6 address.\r\nAn IPv4 address range in the format of \"start address - end address\" with no spaces included.\r\nAn IPv6 address range in the format of \"start address - end address\" with no spaces included.  If not specified the default is All.",
            "format": "string",
            "scope": "device"
          },
          "LocalPortRanges": {
            "name": "LocalPortRanges",
            "description": "\r\n                    Comma Separated list of ranges for eg. 100-120,200,300-320.  If not specified the default is All.\r\n                    When setting this field in a firewall rule, the protocol field must also be set, to either 6 (TCP) or 17 (UDP).\r\n                  ",
            "format": "string",
            "scope": "device"
          },
          "LocalUserAuthorizedList": {
            "name": "LocalUserAuthorizedList",
            "description": "Specifies the list of authorized local users for the app container.\r\nThis is a string in Security Descriptor Definition Language (SDDL) format..",
            "format": "string",
            "scope": "device"
          },
          "Name": {
            "name": "Name",
            "description": "Specifies the friendly name of the firewall rule.",
            "format": "string",
            "scope": "device"
          },
          "PolicyAppId": {
            "name": "PolicyAppId",
            "description": " Specifies one WDAC tag. This is a string that can contain any alphanumeric character and any of the characters \":\", \"/\", \".\", and \"_\". A PolicyAppId and ServiceName cannot be specified in the same rule. ",
            "format": "string",
            "scope": "device"
          },
          "Profiles": {
            "name": "Profiles",
            "description": "Specifies the profiles to which the rule belongs: Domain, Private, Public.  See FW_PROFILE_TYPE for the bitmasks that are used to identify profile types.  If not specified, the default is All.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Protocol": {
            "name": "Protocol",
            "description": "0-255 number representing the ip protocol (TCP = 6, UDP = 17).  If not specified the default is All.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 25
            },
            "scope": "device"
          },
          "RemoteAddressDynamicKeywords": {
            "name": "RemoteAddressDynamicKeywords",
            "description": "Comma separated list of Dynamic Keyword Address Ids (GUID strings) specifying the remote addresses covered by the rule.",
            "format": "string",
            "scope": "device"
          },
          "RemoteAddressRanges": {
            "name": "RemoteAddressRanges",
            "description": "Consists of one or more comma-delimited tokens specifying the remote addresses covered by the rule. The default value is \"*\". Valid tokens include:\r\n\"*\" indicates any remote address. If present, this must be the only token included.\r\n\"Defaultgateway\"\r\n\"DHCP\"\r\n\"DNS\"\r\n\"WINS\"\r\n\"Intranet\"\r\n\"RemoteCorpNetwork\"\r\n\"Internet\"\r\n\"PlayToRenderers\"\r\n\"LocalSubnet\" indicates any local address on the local subnet. This token is not case-sensitive.\r\nA subnet can be specified using either the subnet mask or network prefix notation. If neither a subnet mask not a network prefix is specified, the subnet mask defaults to 255.255.255.255.\r\nA valid IPv6 address.\r\nAn IPv4 address range in the format of \"start address - end address\" with no spaces included.\r\nAn IPv6 address range in the format of \"start address - end address\" with no spaces included.  If not specified the default is All.",
            "format": "string",
            "scope": "device"
          },
          "RemotePortRanges": {
            "name": "RemotePortRanges",
            "description": "\r\n                    Comma Separated list of ranges for eg. 100-120,200,300-320.  If not specified the default is All.\r\n                    When setting this field in a firewall rule, the protocol field must also be set, to either 6 (TCP) or 17 (UDP).\r\n                  ",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "MdmStore/Global/CRLcheck": {
        "name": "CRLcheck",
        "description": "This value specifies how certificate revocation list (CRL) verification is enforced. The value MUST be 0, 1, or 2. A value of 0 disables CRL checking. A value of 1 specifies that CRL checking is attempted and that certificate validation fails only if the certificate is revoked. Other failures that are encountered during CRL checking (such as the revocation URL being unreachable) do not cause certificate validation to fail. A value of 2 means that checking is required and that certificate validation fails if any error is encountered during CRL processing.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, use the local store value.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disables CRL checking"
            },
            "1": {
              "description": "Specifies that CRL checking is attempted and that certificate validation fails only if the certificate is revoked. Other failures that are encountered during CRL checking (such as the revocation URL being unreachable) do not cause certificate validation to fail."
            },
            "2": {
              "description": "Means that checking is required and that certificate validation fails if any error is encountered during CRL processing"
            }
          }
        },
        "scope": "device"
      },
      "MdmStore/Global/DisableStatefulFtp": {
        "name": "DisableStatefulFtp",
        "description": "This value is an on/off switch. If off, the firewall performs stateful File Transfer Protocol (FTP) filtering to allow secondary connections. FALSE means off; TRUE means on, so the stateful FTP is disabled. The merge law for this option is to let \"on\" values win.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/Global/EnablePacketQueue": {
        "name": "EnablePacketQueue",
        "description": "This value specifies how scaling for the software on the receive side is enabled for both the encrypted receive and clear text forward path for the IPsec tunnel gateway scenario. Use of this option also ensures that the packet order is preserved. The data type for this option value is a integer and is a combination of flags. A value of 0x00 indicates that all queuing is to be disabled. A value of 0x01 specifies that inbound encrypted packets are to be queued. A value of 0x02 specifies that packets are to be queued after decryption is performed for forwarding.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "MdmStore/Global/IPsecExempt": {
        "name": "IPsecExempt",
        "description": "This value configures IPsec exceptions and MUST be a combination of the valid flags that are defined in IPSEC_EXEMPT_VALUES; therefore, the maximum value MUST always be IPSEC_EXEMPT_MAX-1 for servers supporting a schema version of 0x0201 and IPSEC_EXEMPT_MAX_V2_0-1 for servers supporting a schema version of 0x0200. If the maximum value is exceeded when the method RRPC_FWSetGlobalConfig (Opnum 4) is called, the method returns ERROR_INVALID_PARAMETER. This error code is returned if no other preceding error is discovered.   The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, use the local store value.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "MdmStore/Global/OpportunisticallyMatchAuthSetPerKM": {
        "name": "OpportunisticallyMatchAuthSetPerKM",
        "description": "This value is used as an on/off switch. When this option is false, keying modules MUST ignore the entire authentication set if they do not support all of the authentication suites specified in the set. When this option is true, keying modules MUST ignore only the authentication suites that they don’t support. For schema versions 0x0200, 0x0201, and 0x020A, this value is invalid and MUST NOT be used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/Global/PresharedKeyEncoding": {
        "name": "PresharedKeyEncoding",
        "description": "Specifies the preshared key encoding that is used. MUST be a valid value from the PRESHARED_KEY_ENCODING_VALUES enumeration. Default is 1 [UTF-8].  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, use the local store value.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "FW_GLOBAL_CONFIG_PRESHARED_KEY_ENCODING_NONE:  Preshared key is not encoded. Instead, it is kept in its wide-character format. This symbolic constant has a value of 0."
            },
            "1": {
              "description": "FW_GLOBAL_CONFIG_PRESHARED_KEY_ENCODING_UTF_8:  Encode the preshared key using UTF-8. This symbolic constant has a value of 1."
            }
          }
        },
        "scope": "device"
      },
      "MdmStore/Global/SaIdleTime": {
        "name": "SaIdleTime",
        "description": "This value configures the security association idle time, in seconds. Security associations are deleted after network traffic is not seen for this specified period of time. The value MUST be in the range of 300 to 3,600 inclusive. The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, use the local store value.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 300,
          "max": 360
        },
        "scope": "device"
      },
      "MdmStore/HyperVFirewallRules/{FirewallRuleName}": {
        "name": "",
        "title": "FirewallRuleName",
        "description": "Unique alpha numeric identifier for the rule.  The rule name must not include a forward slash (/).",
        "format": "node",
        "nodes": {
          "Action": {
            "name": "Action",
            "description": "Specifies the action the rule enforces:\r\n0 - Block\r\n1 - Allow",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Block"
                },
                "1": {
                  "description": "Allow"
                }
              }
            },
            "scope": "device"
          },
          "Direction": {
            "name": "Direction",
            "description": "The rule is enabled based on the traffic direction as following.\r\n\r\nIN - the rule applies to inbound traffic.\r\nOUT - the rule applies to outbound traffic.\r\n\r\nIf not specified the detault is OUT.",
            "format": "string",
            "scope": "device"
          },
          "Enabled": {
            "name": "Enabled",
            "description": "Indicates whether the rule is enabled or disabled. If the rule must be enabled, this value must be set to true.\r\nIf not specified - a new rule is disabled by default.",
            "format": "bool",
            "scope": "device"
          },
          "LocalAddressRanges": {
            "name": "LocalAddressRanges",
            "description": "Consists of one or more comma-delimited tokens specifying the local addresses covered by the rule. \"*\" is the default value.\r\nValid tokens include:\r\n\"*\" indicates any local address. If present, this must be the only token included.\r\n\r\nA subnet can be specified using either the subnet mask or network prefix notation. If neither a subnet mask not a network prefix is specified, the subnet mask defaults to 255.255.255.255.\r\nA valid IPv6 address.\r\nAn IPv4 address range in the format of \"start address - end address\" with no spaces included.\r\nAn IPv6 address range in the format of \"start address - end address\" with no spaces included.  If not specified the default is All.",
            "format": "string",
            "scope": "device"
          },
          "LocalPortRanges": {
            "name": "LocalPortRanges",
            "description": "Comma Separated list of ranges for eg. 100-120,200,300-320.  If not specified the default is All.",
            "format": "string",
            "scope": "device"
          },
          "Name": {
            "name": "Name",
            "description": "Specifies the friendly name of the Hyper-V Firewall rule.",
            "format": "string",
            "scope": "device"
          },
          "Priority": {
            "name": "Priority",
            "description": "This value represents the order of rule enforcement. A lower priority rule is evaluated first. If not specified, block rules are evaluated before allow rules. If priority is configured, it is highly recommended to configure the value for ALL rules to ensure expected evaluation of rules.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 6553
            },
            "scope": "device"
          },
          "Profiles": {
            "name": "Profiles",
            "description": "Specifies the profiles to which the rule belongs: Domain, Private, Public.  See FW_PROFILE_TYPE for the bitmasks that are used to identify profile types.  If not specified, the default is All.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": null,
            "scope": "device"
          },
          "Protocol": {
            "name": "Protocol",
            "description": "0-255 number representing the ip protocol (TCP = 6, UDP = 17).  If not specified the default is All.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "range",
              "min": 0,
              "max": 25
            },
            "scope": "device"
          },
          "RemoteAddressRanges": {
            "name": "RemoteAddressRanges",
            "description": "Consists of one or more comma-delimited tokens specifying the remote addresses covered by the rule. The default value is \"*\". Valid tokens include:\r\n\"*\" indicates any remote address. If present, this must be the only token included.\r\nA subnet can be specified using either the subnet mask or network prefix notation. If neither a subnet mask not a network prefix is specified, the subnet mask defaults to 255.255.255.255.\r\nA valid IPv6 address.\r\nAn IPv4 address range in the format of \"start address - end address\" with no spaces included.\r\nAn IPv6 address range in the format of \"start address - end address\" with no spaces included.  If not specified the default is All.",
            "format": "string",
            "scope": "device"
          },
          "RemotePortRanges": {
            "name": "RemotePortRanges",
            "description": " Comma Separated list of ranges for eg. 100-120,200,300-320.  If not specified the default is All.",
            "format": "string",
            "scope": "device"
          },
          "VMCreatorId": {
            "name": "VMCreatorId",
            "description": "This field specifies the VM Creator ID that this rule is applicable to. A NULL GUID will result in this rule applying to all VM creators.\r\n                  ",
            "format": "string",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "MdmStore/HyperVVMSettings/{VMCreatorId}": {
        "name": "",
        "title": "VMCreatorId",
        "description": "VM Creator ID that these settings apply to. Valid format is a GUID",
        "format": "node",
        "nodes": {
          "AllowHostPolicyMerge": {
            "name": "AllowHostPolicyMerge",
            "description": "This value is used as an on/off switch. If this value is true, applicable host firewall rules and settings will be applied to Hyper-V Firewall.",
            "format": "bool",
            "scope": "device"
          },
          "DefaultInboundAction": {
            "name": "DefaultInboundAction",
            "description": "This value is the action that the Hyper-V Firewall does by default (and evaluates at the very end) on inbound connections. The allow action is represented by 0x00000000; 0x00000001 represents a block action. Default value is 1 [Block]. This value controls the settings for all profiles. It is recommended to instead use the profile setting value under the profile subtree.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allow Inbound By Default"
                },
                "1": {
                  "description": "Block Inbound By Default"
                }
              }
            },
            "scope": "device"
          },
          "DefaultOutboundAction": {
            "name": "DefaultOutboundAction",
            "description": "This value is the action that the Hyper-V Firewall does by default (and evaluates at the very end) on outbound connections. The allow action is represented by 0x00000000; 0x00000001 represents a block action. Default value is 0 [Allow]. This value controls the settings for all profiles. It is recommended to instead use the profile setting value under the profile subtree.",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allow Outbound By Default"
                },
                "1": {
                  "description": "Block Outbound By Default"
                }
              }
            },
            "scope": "device"
          },
          "DomainProfile/AllowLocalPolicyMerge": {
            "name": "AllowLocalPolicyMerge",
            "description": "This value is used as an on/off switch. If this value is false, Hyper-V Firewall rules from the local store are ignored and not enforced.",
            "format": "bool",
            "scope": "device"
          },
          "DomainProfile/DefaultInboundAction": {
            "name": "DefaultInboundAction",
            "description": "This value is the action that the Hyper-V Firewall does by default (and evaluates at the very end) on inbound connections. The allow action is represented by 0x00000000; 0x00000001 represents a block action. Default value is 1 [Block].",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allow Inbound By Default"
                },
                "1": {
                  "description": "Block Inbound By Default"
                }
              }
            },
            "scope": "device"
          },
          "DomainProfile/DefaultOutboundAction": {
            "name": "DefaultOutboundAction",
            "description": "This value is the action that the Hyper-V Firewall does by default (and evaluates at the very end) on outbound connections. The allow action is represented by 0x00000000; 0x00000001 represents a block action. Default value is 0 [Allow].",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allow Outbound By Default"
                },
                "1": {
                  "description": "Block Outbound By Default"
                }
              }
            },
            "scope": "device"
          },
          "DomainProfile/EnableFirewall": {
            "name": "EnableFirewall",
            "description": "This value is an on/off switch for the Hyper-V Firewall enforcement.",
            "format": "bool",
            "scope": "device"
          },
          "EnableFirewall": {
            "name": "EnableFirewall",
            "description": "This value is an on/off switch for the Hyper-V Firewall. This value controls the settings for all profiles. It is recommended to instead use the profile setting value under the profile subtree.",
            "format": "bool",
            "scope": "device"
          },
          "EnableLoopback": {
            "name": "EnableLoopback",
            "description": "This value is an on/off switch for loopback traffic. This determines if this VM is able to send/receive loopback traffic to other VMs or the host.",
            "format": "bool",
            "scope": "device"
          },
          "PrivateProfile/AllowLocalPolicyMerge": {
            "name": "AllowLocalPolicyMerge",
            "description": "This value is used as an on/off switch. If this value is false, Hyper-V Firewall rules from the local store are ignored and not enforced.",
            "format": "bool",
            "scope": "device"
          },
          "PrivateProfile/DefaultInboundAction": {
            "name": "DefaultInboundAction",
            "description": "This value is the action that the Hyper-V Firewall does by default (and evaluates at the very end) on inbound connections. The allow action is represented by 0x00000000; 0x00000001 represents a block action. Default value is 1 [Block].",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allow Inbound By Default"
                },
                "1": {
                  "description": "Block Inbound By Default"
                }
              }
            },
            "scope": "device"
          },
          "PrivateProfile/DefaultOutboundAction": {
            "name": "DefaultOutboundAction",
            "description": "This value is the action that the Hyper-V Firewall does by default (and evaluates at the very end) on outbound connections. The allow action is represented by 0x00000000; 0x00000001 represents a block action. Default value is 0 [Allow].",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allow Outbound By Default"
                },
                "1": {
                  "description": "Block Outbound By Default"
                }
              }
            },
            "scope": "device"
          },
          "PrivateProfile/EnableFirewall": {
            "name": "EnableFirewall",
            "description": "This value is an on/off switch for the Hyper-V Firewall enforcement.",
            "format": "bool",
            "scope": "device"
          },
          "PublicProfile/AllowLocalPolicyMerge": {
            "name": "AllowLocalPolicyMerge",
            "description": "This value is used as an on/off switch. If this value is false, Hyper-V Firewall rules from the local store are ignored and not enforced.",
            "format": "bool",
            "scope": "device"
          },
          "PublicProfile/DefaultInboundAction": {
            "name": "DefaultInboundAction",
            "description": "This value is the action that the Hyper-V Firewall does by default (and evaluates at the very end) on inbound connections. The allow action is represented by 0x00000000; 0x00000001 represents a block action. Default value is 1 [Block].",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allow Inbound By Default"
                },
                "1": {
                  "description": "Block Inbound By Default"
                }
              }
            },
            "scope": "device"
          },
          "PublicProfile/DefaultOutboundAction": {
            "name": "DefaultOutboundAction",
            "description": "This value is the action that the Hyper-V Firewall does by default (and evaluates at the very end) on outbound connections. The allow action is represented by 0x00000000; 0x00000001 represents a block action. Default value is 0 [Allow].",
            "format": "int",
            "defaultValue": 0,
            "allowedValues": {
              "valueType": "enum",
              "enum": {
                "0": {
                  "description": "Allow Outbound By Default"
                },
                "1": {
                  "description": "Block Outbound By Default"
                }
              }
            },
            "scope": "device"
          },
          "PublicProfile/EnableFirewall": {
            "name": "EnableFirewall",
            "description": "This value is an on/off switch for the Hyper-V Firewall enforcement.",
            "format": "bool",
            "scope": "device"
          }
        },
        "scope": "device"
      },
      "MdmStore/PrivateProfile/AllowLocalIpsecPolicyMerge": {
        "name": "AllowLocalIpsecPolicyMerge",
        "description": "This value is an on/off switch. If this value is false, connection security rules from the local store are ignored and not enforced, regardless of the schema version and connection security rule version.   The merge law for this option is to always use the value of the GroupPolicyRSoPStore.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PrivateProfile/AllowLocalPolicyMerge": {
        "name": "AllowLocalPolicyMerge",
        "description": "This value is used as an on/off switch. If this value is false, firewall rules from the local store are ignored and not enforced.  The merge law for this option is to always use the value of the GroupPolicyRSoPStore. This value is valid for all schema versions.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PrivateProfile/AuthAppsAllowUserPrefMerge": {
        "name": "AuthAppsAllowUserPrefMerge",
        "description": "This value is used as an on/off switch. If this value is false, authorized application firewall rules in the local store are ignored and not enforced.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PrivateProfile/DefaultInboundAction": {
        "name": "DefaultInboundAction",
        "description": "This value is the action that the firewall does by default (and evaluates at the very end) on inbound connections. The allow action is represented by 0x00000000; 0x00000001 represents a block action. Default value is 1 [Block]. The merge law for this option is to let the value of the GroupPolicyRSoPStore.win if it is configured; otherwise, the local store value is used.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow Inbound By Default"
            },
            "1": {
              "description": "Block Inbound By Default"
            }
          }
        },
        "scope": "device"
      },
      "MdmStore/PrivateProfile/DefaultOutboundAction": {
        "name": "DefaultOutboundAction",
        "description": "This value is the action that the firewall does by default (and evaluates at the very end) on outbound connections. The allow action is represented by 0x00000000; 0x00000001 represents a block action. Default value is 0 [Allow]. The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow Outbound By Default"
            },
            "1": {
              "description": "Block Outbound By Default"
            }
          }
        },
        "scope": "device"
      },
      "MdmStore/PrivateProfile/DisableInboundNotifications": {
        "name": "DisableInboundNotifications",
        "description": "This value is an on/off switch. If this value is false, the firewall MAY display a notification to the user when an application is blocked from listening on a port. If this value is on, the firewall MUST NOT display such a notification.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PrivateProfile/DisableStealthMode": {
        "name": "DisableStealthMode",
        "description": "This value is an on/off switch. When this option is false, the server operates in stealth mode. The firewall rules used to enforce stealth mode are implementation-specific. The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PrivateProfile/DisableStealthModeIpsecSecuredPacketExemption": {
        "name": "DisableStealthModeIpsecSecuredPacketExemption",
        "description": "This value is an on/off switch. This option is ignored if DisableStealthMode is on. Otherwise, when this option is true, the firewall's stealth mode rules MUST NOT prevent the host computer from responding to unsolicited network traffic if that traffic is secured by IPsec.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used. For schema versions 0x0200, 0x0201, and 0x020A, this value is invalid and MUST NOT be used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PrivateProfile/DisableUnicastResponsesToMulticastBroadcast": {
        "name": "DisableUnicastResponsesToMulticastBroadcast",
        "description": "This value is used as an on/off switch. If it is true, unicast responses to multicast broadcast traffic is blocked.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PrivateProfile/EnableFirewall": {
        "name": "EnableFirewall",
        "description": "This value is an on/off switch for the firewall and advanced security enforcement. If this value is false, the server MUST NOT block any network traffic, regardless of other policy settings.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PrivateProfile/EnableLogDroppedPackets": {
        "name": "EnableLogDroppedPackets",
        "description": "This value is used as an on/off switch. If this value is on, the firewall logs all the dropped packets. The merge law for this option is to let \"on\" values win.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PrivateProfile/EnableLogIgnoredRules": {
        "name": "EnableLogIgnoredRules",
        "description": "This value is used as an on/off switch. The server MAY use this value in an implementation-specific way to control logging of events if a rule is not enforced for any reason. The merge law for this option is to let \"on\" values win.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PrivateProfile/EnableLogSuccessConnections": {
        "name": "EnableLogSuccessConnections",
        "description": "This value is used as an on/off switch. If this value is on, the firewall logs all successful inbound connections. The merge law for this option is to let \"on\" values win.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PrivateProfile/GlobalPortsAllowUserPrefMerge": {
        "name": "GlobalPortsAllowUserPrefMerge",
        "description": "This value is used as an on/off switch. If this value is false, global port firewall rules in the local store are ignored and not enforced. The setting only has meaning if it is set or enumerated in the Group Policy store or if it is enumerated from the GroupPolicyRSoPStore.  The merge law for this option is to let the value GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PrivateProfile/LogFilePath": {
        "name": "LogFilePath",
        "description": "This value is a string that represents a file path to the log where the firewall logs dropped packets and successful connections. The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured, otherwise the MdmStore value wins if it is configured, otherwise the local store value is used.",
        "format": "string",
        "scope": "device"
      },
      "MdmStore/PrivateProfile/LogMaxFileSize": {
        "name": "LogMaxFileSize",
        "description": "This value specifies the size, in kilobytes, of the log file where dropped packets and successful connections are logged. The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured, otherwise the MdmStore value wins if it is configured, otherwise the local store value is used.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "MdmStore/PrivateProfile/Shielded": {
        "name": "Shielded",
        "description": "This value is used as an on/off switch. If this value is on and EnableFirewall is on, the server MUST block all incoming traffic regardless of other policy settings.  The merge law for this option is to let \"on\" values win.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PublicProfile/AllowLocalIpsecPolicyMerge": {
        "name": "AllowLocalIpsecPolicyMerge",
        "description": "This value is an on/off switch. If this value is false, connection security rules from the local store are ignored and not enforced, regardless of the schema version and connection security rule version.   The merge law for this option is to always use the value of the GroupPolicyRSoPStore.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PublicProfile/AllowLocalPolicyMerge": {
        "name": "AllowLocalPolicyMerge",
        "description": "This value is used as an on/off switch. If this value is false, firewall rules from the local store are ignored and not enforced.  The merge law for this option is to always use the value of the GroupPolicyRSoPStore. This value is valid for all schema versions.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PublicProfile/AuthAppsAllowUserPrefMerge": {
        "name": "AuthAppsAllowUserPrefMerge",
        "description": "This value is used as an on/off switch. If this value is false, authorized application firewall rules in the local store are ignored and not enforced.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PublicProfile/DefaultInboundAction": {
        "name": "DefaultInboundAction",
        "description": "This value is the action that the firewall does by default (and evaluates at the very end) on inbound connections. The allow action is represented by 0x00000000; 0x00000001 represents a block action. Default value is 1 [Block]. The merge law for this option is to let the value of the GroupPolicyRSoPStore.win if it is configured; otherwise, the local store value is used.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow Inbound By Default"
            },
            "1": {
              "description": "Block Inbound By Default"
            }
          }
        },
        "scope": "device"
      },
      "MdmStore/PublicProfile/DefaultOutboundAction": {
        "name": "DefaultOutboundAction",
        "description": "This value is the action that the firewall does by default (and evaluates at the very end) on outbound connections. The allow action is represented by 0x00000000; 0x00000001 represents a block action. Default value is 0 [Allow]. The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Allow Outbound By Default"
            },
            "1": {
              "description": "Block Outbound By Default"
            }
          }
        },
        "scope": "device"
      },
      "MdmStore/PublicProfile/DisableInboundNotifications": {
        "name": "DisableInboundNotifications",
        "description": "This value is an on/off switch. If this value is false, the firewall MAY display a notification to the user when an application is blocked from listening on a port. If this value is on, the firewall MUST NOT display such a notification.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PublicProfile/DisableStealthMode": {
        "name": "DisableStealthMode",
        "description": "This value is an on/off switch. When this option is false, the server operates in stealth mode. The firewall rules used to enforce stealth mode are implementation-specific. The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PublicProfile/DisableStealthModeIpsecSecuredPacketExemption": {
        "name": "DisableStealthModeIpsecSecuredPacketExemption",
        "description": "This value is an on/off switch. This option is ignored if DisableStealthMode is on. Otherwise, when this option is true, the firewall's stealth mode rules MUST NOT prevent the host computer from responding to unsolicited network traffic if that traffic is secured by IPsec.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used. For schema versions 0x0200, 0x0201, and 0x020A, this value is invalid and MUST NOT be used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PublicProfile/DisableUnicastResponsesToMulticastBroadcast": {
        "name": "DisableUnicastResponsesToMulticastBroadcast",
        "description": "This value is used as an on/off switch. If it is true, unicast responses to multicast broadcast traffic is blocked.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PublicProfile/EnableFirewall": {
        "name": "EnableFirewall",
        "description": "This value is an on/off switch for the firewall and advanced security enforcement. If this value is false, the server MUST NOT block any network traffic, regardless of other policy settings.  The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PublicProfile/EnableLogDroppedPackets": {
        "name": "EnableLogDroppedPackets",
        "description": "This value is used as an on/off switch. If this value is on, the firewall logs all the dropped packets. The merge law for this option is to let \"on\" values win.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PublicProfile/EnableLogIgnoredRules": {
        "name": "EnableLogIgnoredRules",
        "description": "This value is used as an on/off switch. The server MAY use this value in an implementation-specific way to control logging of events if a rule is not enforced for any reason. The merge law for this option is to let \"on\" values win.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PublicProfile/EnableLogSuccessConnections": {
        "name": "EnableLogSuccessConnections",
        "description": "This value is used as an on/off switch. If this value is on, the firewall logs all successful inbound connections. The merge law for this option is to let \"on\" values win.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PublicProfile/GlobalPortsAllowUserPrefMerge": {
        "name": "GlobalPortsAllowUserPrefMerge",
        "description": "This value is used as an on/off switch. If this value is false, global port firewall rules in the local store are ignored and not enforced. The setting only has meaning if it is set or enumerated in the Group Policy store or if it is enumerated from the GroupPolicyRSoPStore.  The merge law for this option is to let the value GroupPolicyRSoPStore win if it is configured; otherwise, the local store value is used.",
        "format": "bool",
        "scope": "device"
      },
      "MdmStore/PublicProfile/LogFilePath": {
        "name": "LogFilePath",
        "description": "This value is a string that represents a file path to the log where the firewall logs dropped packets and successful connections. The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured, otherwise the MdmStore value wins if it is configured, otherwise the local store value is used.",
        "format": "string",
        "scope": "device"
      },
      "MdmStore/PublicProfile/LogMaxFileSize": {
        "name": "LogMaxFileSize",
        "description": "This value specifies the size, in kilobytes, of the log file where dropped packets and successful connections are logged. The merge law for this option is to let the value of the GroupPolicyRSoPStore win if it is configured, otherwise the MdmStore value wins if it is configured, otherwise the local store value is used.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "MdmStore/PublicProfile/Shielded": {
        "name": "Shielded",
        "description": "This value is used as an on/off switch. If this value is on and EnableFirewall is on, the server MUST block all incoming traffic regardless of other policy settings.  The merge law for this option is to let \"on\" values win.",
        "format": "bool",
        "scope": "device"
      }
    }
  },
  "./Vendor/MSFT/HealthAttestation": {
    "name": "HealthAttestation",
    "policies": {
      "ForceRetrieve": {
        "name": "ForceRetrieve",
        "description": "Instructs the client to initiate a new request to DHA-Service, and get a new DHA-EncBlob (a summary of the boot state that is issued by DHA-Service). This option should only be used if the MDM server enforces a certificate freshness policy, which needs to force a device to get a fresh encrypted blob from DHA-Service.",
        "format": "bool",
        "scope": "device"
      },
      "HASEndpoint": {
        "name": "HASEndpoint",
        "description": "Identifies the fully qualified domain name (FQDN) of the DHA-Service that is assigned to perform attestation. If an FQDN is not assigned, DHA-Cloud (Microsoft owned and operated cloud service) will be used as the default attestation service.",
        "format": "string",
        "scope": "device"
      },
      "Nonce": {
        "name": "Nonce",
        "description": "Enables MDMs to protect the device health attestation communications from man-in-the-middle type (MITM) attacks with a crypt-protected random value that is generated by the MDM Server. The nonce is in hex format, with a minimum size of 8 bytes, and a maximum size of 32 bytes.",
        "format": "string",
        "scope": "device"
      },
      "PreferredMaxProtocolVersion": {
        "name": "PreferredMaxProtocolVersion",
        "description": "Provides the maximum preferred protocol version that the client is configured to communicate over. If this is higher than the protocol versions supported by the client it will use the highest protocol version available to it.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      }
    }
  },
  "./Vendor/MSFT/NetworkProxy": {
    "name": "NetworkProxy",
    "policies": {
      "AutoDetect": {
        "name": "AutoDetect",
        "description": "Automatically detect settings. If enabled, the system tries to find the path to a PAC script.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Disabled"
            },
            "1": {
              "description": "Enabled"
            }
          }
        },
        "scope": "device"
      },
      "ProxyServer/Exceptions": {
        "name": "Exceptions",
        "description": "Addresses that should not use the proxy server. The system will not use the proxy server for addresses beginning with what is specified in this node. Use semicolons (;) to separate entries. ",
        "format": "string",
        "scope": "device"
      },
      "ProxyServer/ProxyAddress": {
        "name": "ProxyAddress",
        "description": "",
        "format": "string",
        "scope": "device"
      },
      "ProxyServer/UseProxyForLocalAddresses": {
        "name": "UseProxyForLocalAddresses",
        "description": "Specifies whether the proxy server should be used for local (intranet) addresses.  Valid values:",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Use proxy server for local addresses"
            },
            "1": {
              "description": "Do not use proxy server for local addresses"
            }
          }
        },
        "scope": "device"
      },
      "ProxySettingsPerUser": {
        "name": "ProxySettingsPerUser",
        "description": "When set to 0, it enables proxy configuration as global, machine wide.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Proxy configuration is global, machine wide."
            },
            "1": {
              "description": "Proxy configuration is per user."
            }
          }
        },
        "scope": "device"
      },
      "SetupScriptUrl": {
        "name": "SetupScriptUrl",
        "description": "Address to the PAC script you want to use.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Vendor/MSFT/Personalization": {
    "name": "Personalization",
    "policies": {
      "DesktopImageUrl": {
        "name": "DesktopImageUrl",
        "description": "A http or https Url to a jpg, jpeg or png image that needs to be downloaded and used as the Desktop Image or a file Url to a local image on the file system that needs to be used as the Desktop Image.",
        "format": "string",
        "scope": "device"
      },
      "LockScreenImageUrl": {
        "name": "LockScreenImageUrl",
        "description": "A http or https Url to a jpg, jpeg or png image that neeeds to be downloaded and used as the Lock Screen Image or a file Url to a local image on the file system that needs to be used as the Lock Screen Image.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Vendor/MSFT/SUPL": {
    "name": "SUPL",
    "policies": {
      "SUPL1/Addr": {
        "name": "Addr",
        "description": "Optional. Specifies the address of the Home SUPL Location Platform (H-SLP) server for non-proxy mode. The value is a server address specified as a fully qualified domain name, and the port specified as an integer, with the format server: port.",
        "format": "string",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/FullVersion": {
        "name": "FullVersion",
        "description": "Optional. Determines the full version (X.Y.Z where X, Y and Z are major version, minor version, service indicator, respectively) of the SUPL protocol to use. The default is 1.0.0. If FullVersion is defined, Version field is ignored",
        "format": "string",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/HighAccPositioningMethod": {
        "name": "HighAccPositioningMethod",
        "description": "Optional. Specifies the positioning method that the SUPL client will use for mobile originated position requests. The default is 0. The default method in Windows provides high-quality assisted GNSS positioning for mobile originated position requests without loading the mobile operator's network or location services. For OMA DM, if the format for this node is incorrect the entry will be ignored and an error will be returned, but the configuration service provider will continue processing the rest of the parameters.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "None: The device uses the default positioning method. In this default mode, the GNSS obtains assistance (time injection, coarse position injection and ephemeris data) from the Microsoft Positioning Service."
            },
            "1": {
              "description": "Mobile Station Assisted: The device contacts the H-SLP server to obtain a position. The H-SLP does the calculation of the position and returns it to the device."
            },
            "2": {
              "description": "Mobile Station Based: The device obtains location-aiding data (almanac, ephemeris data, time and coarse initial position of the device) from the H-SLP server, and the device uses this information to help GPS obtain a fix. All position calculations are done in the device."
            },
            "3": {
              "description": "Mobile Station Standalone: The device obtains assistance as required from the Microsoft location services."
            },
            "4": {
              "description": "OTDOA"
            },
            "5": {
              "description": "AFLT"
            }
          }
        },
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/LocMasterSwitchDependencyNII": {
        "name": "LocMasterSwitchDependencyNII",
        "description": "This setting is deprecated in Windows 10. Optional. Boolean. Specifies whether the location toggle on the location screen in Settings is also used to manage SUPL network-initiated (NI) requests for location. If the value is set to 0, the NI behavior is independent from the current location toggle setting. If the value is set to 1, the NI behavior follows the current location toggle setting. The default value is 1. Note that most clients do not support this behavior. This value manages the settings for both SUPL and v2 UPL. If a phone is configured for both SUPL and V2 UPL and these values differ, the SUPL setting will always be used.",
        "format": "bool",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/MCCMNCPairs": {
        "name": "MCCMNCPairs",
        "description": "Required. List all of the MCC and MNC pairs owned by the mobile operator. This list is used to verify that the UICC matches the network and SUPL can be used. When the UICC and network do not match, the phone uses the default location service and does not use SUPL.",
        "format": "string",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/NIDefaultTimeout ": {
        "name": "NIDefaultTimeout ",
        "description": "Optional. Time in seconds that the network-initiated location request is displayed to the user, while awaiting a response and before doing the default action. The default is 30 seconds. A value between 20 and 60 seconds is recommended.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/RootCertificate/Data": {
        "name": "Data",
        "description": "The base 64 encoded blob of the H-SLP root certificate.",
        "format": "base64",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/RootCertificate/Name": {
        "name": "Name",
        "description": "Specifies the name of the H-SLP root certificate as a string, in the format name.cer.",
        "format": "string",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/RootCertificate2/Data": {
        "name": "Data",
        "description": "The base 64 encoded blob of the H-SLP root certificate.",
        "format": "base64",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/RootCertificate2/Name": {
        "name": "Name",
        "description": "Specifies the name of the H-SLP root certificate as a string, in the format name.cer.",
        "format": "string",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/RootCertificate3/Data": {
        "name": "Data",
        "description": "The base 64 encoded blob of the H-SLP root certificate.",
        "format": "base64",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/RootCertificate3/Name": {
        "name": "Name",
        "description": "Specifies the name of the H-SLP root certificate as a string, in the format name.cer.",
        "format": "string",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/RootCertificate4/Data": {
        "name": "Data",
        "description": "The base 64 encoded blob of the H-SLP root certificate.",
        "format": "base64",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/RootCertificate4/Name": {
        "name": "Name",
        "description": "Specifies the name of the H-SLP root certificate as a string, in the format name.cer.",
        "format": "string",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/RootCertificate5/Data": {
        "name": "Data",
        "description": "The base 64 encoded blob of the H-SLP root certificate.",
        "format": "base64",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/RootCertificate5/Name": {
        "name": "Name",
        "description": "Specifies the name of the H-SLP root certificate as a string, in the format name.cer.",
        "format": "string",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/RootCertificate6/Data": {
        "name": "Data",
        "description": "The base 64 encoded blob of the H-SLP root certificate.",
        "format": "base64",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/RootCertificate6/Name": {
        "name": "Name",
        "description": "Specifies the name of the H-SLP root certificate as a string, in the format name.cer.",
        "format": "string",
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/ServerAccessInterval": {
        "name": "ServerAccessInterval",
        "description": "Optional. Integer. Defines the minimum interval of time in seconds between mobile originated requests sent to the server to prevent overloading the mobile operator's network. The default value is 60.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "SUPL1/Ext/Microsoft/Version": {
        "name": "Version",
        "description": "Optional. Determines the major version of the SUPL protocol to use. For SUPL 1.0.0, set this value to 1. For SUPL 2.0.0, set this value to 2. The default is 1. Refer to FullVersion to define minor verison and service indicator",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "V2UPL1 /LocMasterSwitchDependencyNII": {
        "name": "LocMasterSwitchDependencyNII",
        "description": "Optional. Boolean. Specifies whether the location toggle on the location screen in Settings is also used to manage network-initiated requests for location. If the value is set to 0, the NI behavior is independent from the current location toggle setting. If the value is set to 1, the NI behavior follows the current location toggle setting. For CDMA phones, this value must be set to 1. The default value is 1.",
        "format": "bool",
        "scope": "device"
      },
      "V2UPL1 /MPC": {
        "name": "MPC",
        "description": "Optional. The address of the mobile positioning center (MPC), in the format ipAddress: portNumber. For non-trusted mode of operation, this parameter is mandatory and the PDE parameter must be empty.",
        "format": "string",
        "scope": "device"
      },
      "V2UPL1 /NIDefaultTimeout ": {
        "name": "NIDefaultTimeout ",
        "description": "Optional. Time in seconds that the network-initiated location request is displayed to the user, while awaiting a response and before doing the default action. The default is 30 seconds. A value between 20 and 60 seconds is recommended.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      },
      "V2UPL1 /PDE": {
        "name": "PDE",
        "description": "Optional. The address of the Position Determination Entity (PDE), in the format ipAddress: portNumber. For non-trusted mode of operation, this parameter must be empty.",
        "format": "string",
        "scope": "device"
      },
      "V2UPL1 /PositioningMethod_MR": {
        "name": "PositioningMethod_MR",
        "description": "Optional. Specifies the positioning method that the SUPL client will use for mobile originated position requests. The default is 0. The default method in Windows provides high-quality assisted GNSS positioning for mobile originated position requests without loading the mobile operator's network or location services. The Mobile Station Assisted and AFLT positioning methods must only be configured for test purposes. For OMA DM, if the format for this node is incorrect the entry will be ignored and an error will be returned, but the configuration service provider will continue processing the rest of the parameters.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "None: The device uses the default positioning method. In this default mode, the GNSS obtains assistance (time injection, coarse position injection, and ephemeris data) from the Microsoft Positioning Service."
            },
            "1": {
              "description": "Mobile Station Assisted: The device contacts the H-SLP server to obtain a position. The H-SLP does the calculation of the position and returns it to the device."
            },
            "2": {
              "description": "Mobile Station Based: The device obtains location-aiding data (almanac, ephemeris data, time and coarse initial position of the device) from the H-SLP server, and the device uses this information to help GPS obtain a fix. All position calculations are done in the device."
            },
            "3": {
              "description": "Mobile Station Standalone: The device obtains assistance as required from the Microsoft location services."
            },
            "4": {
              "description": "AFLT"
            }
          }
        },
        "scope": "device"
      },
      "V2UPL1 /ServerAccessInterval": {
        "name": "ServerAccessInterval",
        "description": "Optional. Integer. Defines the minimum interval of time in seconds between mobile originated requests sent to the server to prevent overloading the mobile operator's network. The default value is 60.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": null,
        "scope": "device"
      }
    }
  },
  "./Vendor/MSFT/SecureAssessment": {
    "name": "SecureAssessment",
    "policies": {
      "AllowScreenMonitoring": {
        "name": "AllowScreenMonitoring",
        "description": "Indicates if screen monitoring is allowed by the app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Screen monitoring is not allowed"
            },
            "1": {
              "description": "Screen monitoring is allowed"
            }
          }
        },
        "scope": "device"
      },
      "AllowTextSuggestions": {
        "name": "AllowTextSuggestions",
        "description": "Indicates if keyboard text suggestions are allowed by the app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Keyboard text suggestions are not allowed"
            },
            "1": {
              "description": "Keyboard text suggestions are allowed"
            }
          }
        },
        "scope": "device"
      },
      "Assessments": {
        "name": "Assessments",
        "description": "Enables support for multiple assessments and for assessment grouping. The structure is specified by an XML.",
        "format": "string",
        "scope": "device"
      },
      "LaunchURI": {
        "name": "LaunchURI",
        "description": "Link to an assessment that's automatically loaded when the Secure Assessment Browser is launched.",
        "format": "string",
        "scope": "device"
      },
      "RequirePrinting": {
        "name": "RequirePrinting",
        "description": "Indicates if printing is required by the app.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Printing is not allowed"
            },
            "1": {
              "description": "Printing is allowed"
            }
          }
        },
        "scope": "device"
      },
      "TesterAccount": {
        "name": "TesterAccount",
        "description": "The user name of the test taking account.  To specify a domain account, use domain\\user. To specify an AAD account, use username@tenant.com. To specify a local account, use the username.",
        "format": "string",
        "scope": "device"
      }
    }
  },
  "./Vendor/MSFT/SharedPC": {
    "name": "SharedPC",
    "policies": {
      "AccountModel": {
        "name": "AccountModel",
        "title": "Account model",
        "description": "Configures which type of accounts are allowed to use the PC. Allowed values: 0 (only guest), 1 (domain-joined only), 2 (domain-joined and guest). If used, this value must be set before the action on the EnableSharedPCMode node is taken.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Only guest accounts are allowed."
            },
            "1": {
              "description": "Only domain-joined accounts are allowed."
            },
            "2": {
              "description": "Domain-joined and guest accounts are allowed."
            }
          }
        },
        "scope": "device"
      },
      "DeletionPolicy": {
        "name": "DeletionPolicy",
        "title": "Account deletion policy",
        "description": "Configures when accounts will be deleted. Allowed values: 0 (delete immediately), 1 (delete at disk space threshold), 2 (Delete at disk space threshold and inactive threshold). If used, this value must be set before the action on the EnableSharedPCMode node is taken.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Delete immediately."
            },
            "1": {
              "description": "Delete at disk space threshold"
            },
            "2": {
              "description": "Delete at disk space threshold and inactive threshold"
            }
          }
        },
        "scope": "device"
      },
      "DiskLevelCaching": {
        "name": "DiskLevelCaching",
        "title": "Disk space threshold for account caching",
        "description": "Stop deleting accounts when available disk space reaches this threshold, given as percent of total disk capacity. If used, this value must be set before the action on the EnableSharedPCMode node is taken.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 10
        },
        "scope": "device"
      },
      "DiskLevelDeletion": {
        "name": "DiskLevelDeletion",
        "title": "Disk space threshold for account deletion",
        "description": "Accounts will start being deleted when available disk space falls below this threshold, given as percent of total disk capacity. Accounts that have been inactive the longest will be deleted first. If used, this value must be set before the action on the EnableSharedPCMode node is taken.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 10
        },
        "scope": "device"
      },
      "EnableAccountManager": {
        "name": "EnableAccountManager",
        "title": "Enable account manager",
        "description": "Enable the account manager for shared PC mode. If used, this value must be set before the action on the EnableSharedPCMode node is taken.",
        "format": "bool",
        "scope": "device"
      },
      "EnableSharedPCMode": {
        "name": "EnableSharedPCMode",
        "title": "Enable shared PC mode",
        "description": "Setting this node to \"true\" triggers the action to configure a device to Shared PC mode.",
        "format": "bool",
        "scope": "device"
      },
      "EnableSharedPCModeWithOneDriveSync": {
        "name": "EnableSharedPCModeWithOneDriveSync",
        "title": "Enable Shared PC mode with OneDrive sync",
        "description": "Setting this node to “1” triggers the action to configure a device to Shared PC mode with OneDrive sync turned on",
        "format": "bool",
        "scope": "device"
      },
      "EnableWindowsInsiderPreviewFlighting": {
        "name": "EnableWindowsInsiderPreviewFlighting",
        "title": "Enable WIP Flighting",
        "description": "Setting this node to “1” enables Windows Insider Preview flighting and the ability to receive insider preview builds.",
        "format": "bool",
        "scope": "device"
      },
      "InactiveThreshold": {
        "name": "InactiveThreshold",
        "title": "Account inactive threshold",
        "description": "Accounts will start being deleted when they have not been logged on during the specified period, given as number of days.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      },
      "KioskModeAUMID": {
        "name": "KioskModeAUMID",
        "title": "Kiosk mode AUMID",
        "description": "Specifies the AUMID of the app to use with assigned access. If used, this value must be set before the action on the EnableSharedPCMode node is taken.",
        "format": "string",
        "scope": "device"
      },
      "KioskModeUserTileDisplayText": {
        "name": "KioskModeUserTileDisplayText",
        "title": "Kiosk mode user tile display text",
        "description": "Specifies the display text for the account shown on the sign-in screen which launches the app specified by KioskModeAUMID. If used, this value must be set before the action on the EnableSharedPCMode node is taken.",
        "format": "string",
        "scope": "device"
      },
      "MaintenanceStartTime": {
        "name": "MaintenanceStartTime",
        "title": "Maintenance start time",
        "description": "Daily start time of maintenance hour. Given in minutes from midnight. Default is 0 (12am).  If used, this value must be set before the action on the EnableSharedPCMode node is taken.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 144
        },
        "scope": "device"
      },
      "MaxPageFileSizeMB": {
        "name": "MaxPageFileSizeMB",
        "title": "Maximum PageFile size",
        "description": "Maximum size of the paging file in MB. Applies only to systems with less than 32 GB storage and at least 3 GB of RAM. If used, this value must be set before the action on the EnableSharedPCMode node is taken.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 3276
        },
        "scope": "device"
      },
      "RestrictLocalStorage": {
        "name": "RestrictLocalStorage",
        "title": "Restrict local storage",
        "description": "Restricts the user from using local storage. This node is optional. If used, this value must be set before the action on the EnableSharedPCMode node is taken.",
        "format": "bool",
        "scope": "device"
      },
      "SetEduPolicies": {
        "name": "SetEduPolicies",
        "title": "Set EDU policies",
        "description": "Set a list of EDU policies.",
        "format": "bool",
        "scope": "device"
      },
      "SetPowerPolicies": {
        "name": "SetPowerPolicies",
        "title": "Set power policies",
        "description": "Set a list of power policies. If used, this value must be set before the action on the EnableSharedPCMode node is taken.",
        "format": "bool",
        "scope": "device"
      },
      "SignInOnResume": {
        "name": "SignInOnResume",
        "title": "Sign-in on resume",
        "description": "Require signing in on waking up from sleep. If used, this value must be set before the action on the EnableSharedPCMode node is taken.",
        "format": "bool",
        "scope": "device"
      },
      "SleepTimeout": {
        "name": "SleepTimeout",
        "title": "Sleep timeout",
        "description": "The amount of time before the PC sleeps, giving in seconds. 0 means the PC never sleeps. Default is 5 minutes. If used, this value must be set before the action on the EnableSharedPCMode node is taken.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "range",
          "min": 0,
          "max": 429496729
        },
        "scope": "device"
      }
    }
  },
  "./Vendor/MSFT/WindowsLicensing": {
    "name": "WindowsLicensing",
    "policies": {
      "DeviceLicensingService/LicenseType": {
        "name": "LicenseType",
        "description": "License Type: User Based Subscription or Device Based Subscription",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User Based Subscription"
            },
            "1": {
              "description": "Device Based Subscription"
            }
          }
        },
        "scope": "device"
      },
      "SMode/SwitchingPolicy": {
        "name": "SwitchingPolicy",
        "description": "Policy that determines whether a consumer can switch the device out of S mode",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "No Restriction: The user is allowed to switch the device out of S mode."
            },
            "1": {
              "description": "User Blocked: The admin has blocked the user from switching their device out of S mode. Only the admin can switch the device out of S mode through the SMode/SwitchFromSMode node."
            }
          }
        },
        "scope": "device"
      },
      "Subscriptions/DisableSubscription": {
        "name": "DisableSubscription",
        "description": "Disable or Enable subscription activation on a device",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "Enable Subscription"
            },
            "1": {
              "description": "Disable Subscription. It also removes any existing subscription on the device."
            }
          }
        },
        "scope": "device"
      },
      "Subscriptions/SubscriptionType": {
        "name": "SubscriptionType",
        "description": "Set device to Device Based Subscription or User Based Subscription. For Device Based Subscription this action will automatically acquire the subscription on the device. For User Based Subscription the existing process of user logon will be required.",
        "format": "int",
        "defaultValue": 0,
        "allowedValues": {
          "valueType": "enum",
          "enum": {
            "0": {
              "description": "User Based Subscription"
            },
            "1": {
              "description": "Device Based Subscription"
            }
          }
        },
        "scope": "device"
      }
    }
  }
}