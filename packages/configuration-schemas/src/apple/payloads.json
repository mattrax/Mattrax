{
  ".GlobalPreferences": {
    "title": "Global Preferences",
    "description": "Global Preferences settings",
    "properties": {
      "AppleShowAllExtensions": {
        "title": "Show all filename extensions",
        "description": "Enable to forcibly show all file extensions in Finder.",
        "type": "boolean"
      },
      "AppleShowScrollBars": {
        "title": "Show Scroll Bars",
        "description": "When should the scroll bars be shown?",
        "type": {
          "string": {
            "rangeList": [
              [
                "Automatic",
                "Automatically based on mouse or trackpad"
              ],
              [
                "WhenScrolling",
                "When scrolling"
              ],
              [
                "Always",
                "Always"
              ]
            ]
          }
        }
      },
      "CSUIDisable32BitWarning": {
        "title": "Hide 32-bit App Compatibility Alert",
        "description": "Hides the one-time alert shown when opening a 32-bit application.",
        "type": "boolean"
      },
      "MultipleSessionEnabled": {
        "title": "Enable Fast User Switching",
        "description": "If set to false, fast user switching is disabled.",
        "type": "boolean"
      },
      "NSDocumentSaveNewDocumentsToCloud": {
        "title": "Save New Documents to iCloud",
        "description": "If set to false, applications won't default to save to iCloud.",
        "type": "boolean"
      },
      "com.apple.autologout.AutoLogOutDelay": {
        "title": "Auto LogOut Delay",
        "description": "The autologout delay, in seconds. A value of 0 means autologout is off. In some cases, this delay may be restricted to values between 5 minutes and 24 hours.",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "ManagedInstalls": {
    "title": "Munki",
    "description": "Munki settings",
    "properties": {
      "AccessKey": {
        "title": "Access Key",
        "description": "Munki has a feature which enables Mac administrators to use middleware to change munki's HTTP request. S3-Auth uses this feature to create the HTTP headers necessary to authenticate to S3.\n\nAccessKey for S3 bucket.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AdditionalHttpHeaders": {
        "title": "Additional HTTP Headers",
        "description": "This key provides the ability to specify custom HTTP headers to be sent with all curl() HTTP requests.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AggressiveUpdateNotificationDays": {
        "title": "Aggressive Update Notification Days",
        "description": "This preference controls how many days after one or more pending updates are ignored that aggressive user notification begins. Setting this to 0 never triggers this aggressive behavior.",
        "type": "integer"
      },
      "AppleSoftwareUpdatesOnly": {
        "title": "Install Apple Software Updates Only",
        "description": "Only install updates from an Apple Software Update server. No Munki repository is needed or used.",
        "type": "boolean"
      },
      "CatalogURL": {
        "title": "Base Catalog URL",
        "description": "Base URL for Munki catalogs. Useful if your catalogs are served from a different server than your packages or manifests.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ClientCertificatePath": {
        "title": "Client Certificate Path",
        "description": "Absolute path to a client certificate. There are 3 defaults for this key. Concatenated cert/key PEM file accepted.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ClientIdentifier": {
        "title": "Client Identifier",
        "description": "Identifier for Munki client. Usually is the same as a manifest name on the Munki server. If this is empty or undefined, Munki will attempt the following identifiers, in order: fully-qualified hostname, \"short\" hostname, serial number and finally, \"site_default\".",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ClientKeyPath": {
        "title": "Client Key Path",
        "description": "Absolute path to a client private key.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ClientResourceURL": {
        "title": "Base Client Resource URL",
        "description": "Base URL for custom client resources for Managed Software Center. Useful if your resources are served from a different server or different directory than the default.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ClientResourcesFilename": {
        "title": "Client Resources Filename",
        "description": "Specific filename to use when requesting custom client resources.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DaysBetweenNotifications": {
        "title": "Days Between Notifications",
        "description": "Number of days between user notifications from Managed Software Center. Set to 0 to have Managed Software Center notify every time a background check runs if there are available updates.",
        "type": "integer"
      },
      "EmulateProfileSupport": {
        "title": "Emulate Profile Support (Big Sur)",
        "description": "A bit of hack and not supported by Apple, it is disabled by default. To emulate profile installs, configuration profiles are read, and if they contain managed preferences, they are converted to MCX data that is added to a ComputerGroup in the local Open Directory store. Configuration profile payloads that are not managed preferences are ignored/skipped.",
        "type": "boolean"
      },
      "FollowHTTPRedirects": {
        "title": "Follow HTTP Redirects",
        "description": "Defines whether Munki will follow all, some or no redirects from the web server. (none = The default behaviour. No redirects are followed. https = Only redirects to URLs using HTTPS are followed. all = Redirects to both HTTP and HTTPS URLs are followed.)",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HelpURL": {
        "title": "Help URL",
        "description": "URL to open/display when the user selects \"Managed Software Center Help\" from Managed Software Center's Help menu.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IconURL": {
        "title": "Base Icon URL",
        "description": "Base URL for product icons. Useful if your icons are served from a different server or different directory than the default.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IgnoreSystemProxies": {
        "title": "Ignore System Proxies",
        "description": "HTTP and/or HTTPS proxies set system-wide will be ignored, connections will be made directly.",
        "type": "boolean"
      },
      "InstallAppleSoftwareUpdates": {
        "title": "Install Apple Software Updates",
        "description": "Install updates from an Apple Software Update server, in addition to \"regular\" Munki updates.",
        "type": "boolean"
      },
      "InstallRequiresLogout": {
        "title": "Require Logout for Installs & Uninstalls",
        "description": "Managed Software Center will require a logout for all installs or removals.",
        "type": "boolean"
      },
      "LicenseInfoURL": {
        "title": "License Info URL",
        "description": "URL for Munki to query a webserver to determine if there are available seats for licensed software (or any software you wish to make available via optional_installs, yet control the number of deployed copies).",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LocalOnlyManifest": {
        "title": "Local Only Manifest",
        "description": "Defines the name of your LocalOnlyManifest. Setting this activates the feature. Unsetting it means Munki will remove the file on the next run.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LogFile": {
        "title": "Log File",
        "description": "Primary log is written to this file. Other logs are written into the same directory as this file.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LogToSyslog": {
        "title": "Log to Syslog",
        "description": "Log to syslog in addition to ManagedSoftwareUpdate.log.",
        "type": "boolean"
      },
      "LoggingLevel": {
        "title": "Logging Level",
        "description": "Higher values cause more detail to be written to the primary log.",
        "type": "integer"
      },
      "MSUDebugLogEnabled": {
        "title": "Debug Log Enabled",
        "description": "Debug logging for Managed Software Center.",
        "type": "boolean"
      },
      "MSULogEnabled": {
        "title": "Log Enabled",
        "description": "Log user actions in the GUI.",
        "type": "boolean"
      },
      "ManagedInstallDir": {
        "title": "Managed Install Directory",
        "description": "Folder where Munki keeps its data on the client.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ManifestURL": {
        "title": "Base Manifest URL",
        "description": "Base URL for Munki manifests. Useful if your manifests are served from a different server than your catalogs or manifests.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_Plugins": {
        "title": "PFC_SegmentedControl_Plugins",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PackageURL": {
        "title": "Base Package URL",
        "description": "Base URL for Munki pkgs. Useful if your packages are served from a different server than your catalogs or manifests.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PackageVerificationMode": {
        "title": "Package Verification Mode",
        "description": "Controls how Munki verifies the integrity of downloaded packages. (none = No integrity check is performed, hash = Integrity check is performed if package info contains checksum information, hash_strict = Integrity check is performed, and fails if package info does not contain checksum information.)",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PerformAuthRestarts": {
        "title": "Perform FileVault Authorized Restarts",
        "description": "Munki will attempt to perform a filevault auth restart.",
        "type": "boolean"
      },
      "RecoveryKeyFile": {
        "title": "FileVault Credentials Path",
        "description": "Absolute path to a plist file containing filevault credentials in key/value format. Used to perform auth restarts.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Region": {
        "title": "Region",
        "description": "Munki has a feature which enables Mac administrators to use middleware to change munki's HTTP request. S3-Auth uses this feature to create the HTTP headers necessary to authenticate to S3.\n\nRegion for S3 bucket.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "S3Endpoint": {
        "title": "S3 Endpoint",
        "description": "Munki has a feature which enables Mac administrators to use middleware to change munki's HTTP request. S3-Auth uses this feature to create the HTTP headers necessary to authenticate to S3.\n\nS3 Endpoint for bucket.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecretKey": {
        "title": "Secret Key",
        "description": "Munki has a feature which enables Mac administrators to use middleware to change munki's HTTP request. S3-Auth uses this feature to create the HTTP headers necessary to authenticate to S3.\n\nSecretKey for S3 bucket.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ShowOptionalInstallsForHigherOSVersions": {
        "title": "Show Optional Installs For Higher OS Versions",
        "description": "Managed Software Center.app will show optional installs and updates that apply to macOS versions higher than the currently installed version.",
        "type": "boolean"
      },
      "ShowRemovalDetail": {
        "title": "Show Removal Detail",
        "description": "Managed Software Center will display detail for scheduled removals.",
        "type": "boolean"
      },
      "SoftwareRepoCACertificate": {
        "title": "Software Repo CA Certificate",
        "description": "Absolute path to your CA Certificate.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SoftwareRepoCAPath": {
        "title": "Software Repo CA Path",
        "description": "Path to the directory that stores your CA certificate(s).",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SoftwareRepoURL": {
        "title": "SoftwareRepoURL",
        "description": "Base URL for Munki repository.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SoftwareUpdateServerURL": {
        "title": "Software Update Server URL",
        "description": "Catalog URL for Apple Software Updates. If undefined or empty, Munki will use the same catalog that the OS uses when you run Apple's Software Update application or call /usr/sbin/softwareupdate.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SuppressAutoInstall": {
        "title": "Suppress Auto Install",
        "description": "Munki will not automatically install or remove items.",
        "type": "boolean"
      },
      "SuppressLoginwindowInstall": {
        "title": "Suppress Loginwindow Install",
        "description": "Munki will not install items while idle at the loginwindow except for those marked for unattended_install or unattended_uninstall.",
        "type": "boolean"
      },
      "SuppressStopButtonOnInstall": {
        "title": "Suppress Stop Button On Install",
        "description": "Managed Software Center will hide the stop button while installing or removing software, preventing users from interrupting the install.",
        "type": "boolean"
      },
      "SuppressUserNotification": {
        "title": "Suppress Update Notifications",
        "description": "Managed Software Center will never notify the user of available updates.",
        "type": "boolean"
      },
      "UnattendedAppleUpdates": {
        "title": "Unattended Apple Updates",
        "description": "Updates that declare no \"must-close\" applications, or have one or more \"must-close\" applications, none of which is running, and do not require a logout or restart will be installed as part of a normal periodic background run without notifying the user.",
        "type": "boolean"
      },
      "UseClientCertificate": {
        "title": "Use Client Certificate",
        "description": "Use an SSL client certificate when communicating with the Munki server. Requires an https:// URL for the Munki repo.",
        "type": "boolean"
      },
      "UseClientCertificateCNAsClientIdentifier": {
        "title": "Use Client Certificate CN As Client Identifier",
        "description": "Use the CN of the client certificate as the Client Identifier. Used in combination with the UseClientCertificate key.",
        "type": "boolean"
      },
      "UseNotificationCenterDays": {
        "title": "Use Notification Center Days",
        "description": "Number of days Notification Center notifications should be used before switching to launching Managed Software Center.",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "MunkiReport": {
    "title": "MunkiReport",
    "description": "MunkiReport settings",
    "properties": {
      "BaseUrl": {
        "title": "BaseUrl",
        "description": "BaseUrl tells MunkiReport where to find the MunkiReport server. It contains the full url to the server - and subdirectory - ending in a slash - /. Note: BaseUrl is set automatically when installing MunkiReport via the command line or a package.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Passphrase": {
        "title": "Passphrase",
        "description": "If you have the MunkiReport server configured to use passphrases, you need to set these on the client to allow it to report in.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ReportItems": {
        "title": "ReportItems",
        "description": "ReportItems contains a dictionary that tells MunkiReport where to look for the report files. The key is the name of the module, the value contains a path to the appropriate file. Note: ReportItems are set automatically when installing MunkiReport via the command line or a package.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "MunkiReport Module",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "File Path",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "UseMunkiAdditionalHttpHeaders": {
        "title": "UseMunkiAdditionalHttpHeaders",
        "description": "If the munki repository and MunkiReport are served from the same server, it may be necessary to use the headers set in munki.",
        "type": "boolean"
      },
      "scriptTimeOut": {
        "title": "scriptTimeOut",
        "description": "By default, MunkiReport kills a script if it takes longer than 10 seconds to run. You can override this behavior by adding the scriptTimeOut preference key. The entry should consist of an integer containing the number of seconds that a script can run.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.1password.1password": {
    "title": "1Password 8",
    "description": "Use this section to define settings for 1Password password manager version 8",
    "properties": {
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "privacy.checkHibp": {
        "title": "Check for vulnerable passwords",
        "description": "Check for vulnerable passwords",
        "type": "boolean"
      },
      "privacy.downloadRichIcons": {
        "title": "Show app and website icons",
        "description": "Show app and website icons",
        "type": "boolean"
      },
      "security.authenticatedUnlock.appleTouchId": {
        "title": "Allow Biometric Unlock (Face ID & Touch ID)",
        "description": "If present enforces whether biometric unlock is allowed (Preferences > Security > Unlock).",
        "type": "boolean"
      },
      "security.authenticatedUnlock.appleWatchUnlock": {
        "title": "Allow Apple Watch Unlock",
        "description": "If present enforces whether Apple Watch unlock is allowed (Preferences > Security > Unlock).",
        "type": "boolean"
      },
      "security.autolock.minutes": {
        "title": "Set auto-lock timeout",
        "description": "Enforces the lock on idle time preference (Preferences > Security > Lock).",
        "type": "integer"
      },
      "security.autolock.onDeviceLock": {
        "title": "Lock on sleep, screensaver, or switching users",
        "description": "Enforces the configured locked on sleep,screensaver, or switching users (Preferences > Security > Auto-lock).",
        "type": "boolean"
      },
      "security.autolock.onWindowClose": {
        "title": "Lock when main window is closed",
        "description": "Enforces the configured lock on app exit preference",
        "type": "boolean"
      },
      "security.clipboard.clearAfter": {
        "title": "Clear clipboard after timeout",
        "description": "The amount of time after copying a 1Password item that it is cleared from the clipboard (Preferences > Security > Clipboard).",
        "type": "boolean"
      },
      "security.deviceClipboardSharing": {
        "title": "Allow Universal Clipboard",
        "description": "Enforces whether the clear clipboard preference is enabled or disabled (Preferences > Security > Clear clipboard contents).",
        "type": "boolean"
      },
      "security.revealPasswords": {
        "title": "Allow revealing passwords",
        "description": "Enforces showing passwords and full credit card numbers (Preferences > Security > Conceal Fields).",
        "type": "boolean"
      },
      "updates.autoUpdate": {
        "title": "Automatically check for updates",
        "description": "Automatically check for updates",
        "type": "boolean"
      },
      "updates.updateChannel": {
        "title": "Set release channel",
        "description": "Set release channel",
        "type": {
          "string": {
            "rangeList": [
              [
                "PRODUCTION",
                "Production"
              ],
              [
                "BETA",
                "Beta"
              ],
              [
                "NIGHTLY",
                "Nightly"
              ]
            ]
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.ThomsonResearchSoft.EndNote": {
    "title": "EndNote",
    "description": "EndNote settings",
    "properties": {
      "AcceptedENX7.2EULA": {
        "title": "Accept EndNote X7.2 / X8 EULA",
        "description": "Set to 1 to accept EndNote X7.2 and X8 EULA and hide the dialog from users.",
        "type": {
          "string": {
            "rangeList": [
              [
                "1",
                "1: Accept and Suppress Dialog"
              ],
              [
                "0",
                "0: Show Dialog to Users"
              ]
            ]
          }
        }
      },
      "AcceptedENX9EULA": {
        "title": "Accept EndNote X9 EULA",
        "description": "Set to 1 to accept EndNote X9 EULA and hide the dialog from users.",
        "type": {
          "string": {
            "rangeList": [
              [
                "1",
                "1: Accept and Suppress Dialog"
              ],
              [
                "0",
                "0: Show Dialog to Users"
              ]
            ]
          }
        }
      },
      "IgnoredVersions": {
        "title": "Suppress \"Important Update\" Messages",
        "description": "Suppress \"Important Update\" messaging at first run. Correct value is the whole version number, e.g. 2019.7.24.0. Mulitple versions can be specified.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ShowGettingStartedX9": {
        "title": "Show Getting Started",
        "description": "Set to 0 to disable EndNote Getting Started prompts.",
        "type": {
          "string": {
            "rangeList": [
              [
                "0",
                "0: Hide Getting Started"
              ],
              [
                "1",
                "1: Show Getting Started"
              ]
            ]
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.agilebits.onepassword7": {
    "title": "1Password 7",
    "description": "Use this section to define settings for 1Password password manager version 7",
    "properties": {
      "AutoInstallSoftwareUpdatesEnabled": {
        "title": "Automatically Install Software Updates",
        "description": "Should 1Password attempt to automatically install updates?",
        "type": "boolean"
      },
      "CheckForSoftwareUpdatesEnabled": {
        "title": "Check for Software Updates",
        "description": "Enforces whether to automatically check for available updates.",
        "type": "boolean"
      },
      "ConcealPasswords": {
        "title": "Conceal Passwords",
        "description": "Enforces the configured conceal passwords setting (Preferences > Security > Conceal Passwords).",
        "type": "boolean"
      },
      "LockOnIdle": {
        "title": "Lock on Idle",
        "description": "Enforces whether the lock on idle preference is enabled or disabled (Preferences > Security > Lock after computer is idle).",
        "type": "boolean"
      },
      "LockOnMainAppExit": {
        "title": "Lock on App Exit",
        "description": "Enforces the configured lock on app exit preference (Preferences > Security > Lock when main window is closed).",
        "type": "boolean"
      },
      "LockOnScreenSaver": {
        "title": "Lock on Screen Saver",
        "description": "Enforces the configured lock on screen saver setting (Preferences > Security > Lock when screen saver is activated).",
        "type": "boolean"
      },
      "LockOnSleep": {
        "title": "Lock on Sleep",
        "description": "Enforces the configured lock on sleep setting (Preferences > Security > Lock on sleep).",
        "type": "boolean"
      },
      "LockOnUserSwitch": {
        "title": "Lock on User Switch",
        "description": "Enforces the configured lock on user switch preference (Preferences > Security > Lock when fast user switching).",
        "type": "boolean"
      },
      "LockTimeout": {
        "title": "Lock on Idle Time",
        "description": "Enforces the lock on idle time preference (Preferences > Security > Lock after computer is idle).",
        "type": "integer"
      },
      "OPPrefAppleWatchAllowed": {
        "title": "Allow Apple Watch Unlock",
        "description": "If present enforces whether Apple Watch unlock is allowed (Preferences > Security > Unlock using ...).",
        "type": "boolean"
      },
      "OPPrefBiometryAllowed": {
        "title": "Allow Biometric Unlock (Face ID & Touch ID)",
        "description": "If present enforces whether biometric unlock is allowed (Preferences > Security > Unlock using ...).",
        "type": "boolean"
      },
      "OPPrefMasterPasswordTimeoutInMinutesKey": {
        "title": "Master Password Timeout",
        "description": "Enforces a configured master password timeout (Preferences > Security > Require Master Password every ...) if:\n\n1) Biometric or Apple Watch unlock is possible based on the related preferences and the hardware configuration\n2) The user has configured one of these unlock mechanisms\n",
        "type": "integer"
      },
      "OPPrefPINAllowed": {
        "title": "Allow PIN unlock",
        "description": "If present enforces whether PIN unlock is allowed.",
        "type": "boolean"
      },
      "OPPreferencesNotifyCompromisedWebsites": {
        "title": "Check for Compromised Websites (Watchtower) Notification",
        "description": "If enabled, creates a user notification when Watchtower detects a compromised website.",
        "type": "boolean"
      },
      "OPPreferencesNotifyOfTOTPCopy": {
        "title": "One-Time Password Copied to Clipboard Notification",
        "description": "If enabled, creates a user notification when a vault item's OTP code is copied to the clipboard.",
        "type": "boolean"
      },
      "OPPreferencesNotifyVaultAddedRemoved": {
        "title": "Vault Access Added/Removed Notification",
        "description": "If enabled, creates a user notification when vault access is added or removed.",
        "type": "boolean"
      },
      "OPPreferencesWhatsNewDialogDisabled": {
        "title": "What's New Prompt",
        "description": "If enabled, on app launch following an update a What's New dialog box is presented to the user.",
        "type": "boolean"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasteboardClearTimeout": {
        "title": "Clear Clipboard Time",
        "description": "Enforces the clear clipboard contents after X seconds preference (Preferences > Security > Clipboard)",
        "type": "integer"
      },
      "settingClearPasteboardAfterTimeout": {
        "title": "Clear Clipboard",
        "description": "Enforces whether the clear clipboard preference is enabled or disabled (Preferences > Security > Clear clipboard contents).",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.alectrona.patch": {
    "title": "Alectrona Patch Command Line Tool",
    "description": "Alectrona Patch Command Line Tool settings",
    "properties": {
      "License": {
        "title": "License Key",
        "description": "Your license key provided upon subscription to Alectrona Patch.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.alectrona.patch-agent": {
    "title": "Alectrona Patch Agent",
    "description": "Settings for Patch Agent",
    "properties": {
      "ActiveIntervals": {
        "title": "Active Intervals",
        "description": "The Patch Agent will attempt to silently update any recently deferred app that exists in the InstallOrUpdate or UpdateOnly keys immediately after that app has been terminated by the user (even during an interval period). You can disable this behavior by setting to false.",
        "type": "boolean"
      },
      "DeferIfRunning": {
        "title": "Defer If Running",
        "description": "If an app is running when an update occurs, setting this key to true will suppress the update dialog and automatically perform a deferral.",
        "type": "boolean"
      },
      "InstallOrUpdate": {
        "title": "Install Or Update",
        "description": "The software titles to automatically install or update (even if they are not currently installed) using the Patch Agent.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "OtherManagedSoftware": {
        "title": "Other Managed Software",
        "description": "The software titles to enable the Active Intervals feature for even when not included in the InstallOrUpdate or UpdateOnly preference keys. These software titles might be updated using the patch command line tool in scripted workflows external to the Patch Agent.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ReconAfterInstall": {
        "title": "Recon After Installs",
        "description": "Set to true to perform a Jamf Pro inventory update after a software title is installed or updated using the Patch Agent.",
        "type": "boolean"
      },
      "RemovePatchSymlink": {
        "title": "Remove Patch Symlink",
        "description": "Set to true to remove the symlink located at /usr/local/bin/patch. This will remove patch from the user's $PATH and allows for accessing the built-in BSD patch command (opens new window)without using it's full path. Note: When setting this key to true you will need to access the Patch CLT at it's full path (opens new window)in Terminal or custom scripts.",
        "type": "boolean"
      },
      "RunInterval": {
        "title": "Run Interval",
        "description": "The Patch Agent runs every 4 hours by default. You can adjust this interval time for your environment. Note: This key is configured in seconds. The minimum setting is 600 seconds (10 minutes) and there is currently no maximum.",
        "type": "integer"
      },
      "SkipFirstPatchAgentRun": {
        "title": "Skip First Patch Agent Run",
        "description": "When Alectrona Patch runs for the first time, it performs what is called a \"Patch Agent Run\" where it runs all configured installs/updates. You can skip the first Patch Agent Run by setting this key to true.",
        "type": "boolean"
      },
      "UpdateMAS": {
        "title": "Update Mac App Store apps",
        "description": "Set to true to attempt to update and convert Mac App Store (MAS) apps to their non-MAS counterpart.",
        "type": "boolean"
      },
      "UpdateOnly": {
        "title": "Update Only",
        "description": "The software titles to automatically update if installed and out-of-date using the Patch Agent.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.alectrona.patch-notifier": {
    "title": "Alectrona Patch Notifier",
    "description": "Settings for Patch Notifier",
    "properties": {
      "ContentImagePath": {
        "title": "Content Image Path",
        "description": "Path to a locally stored image to use as the content image of the update dialog (PNG/JPG/GIF/TIFF).",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DeferButtonLabel": {
        "title": "Defer Button Label",
        "description": "The label or displayed text in the defer button.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DeferralLimit": {
        "title": "Deferral Limit",
        "description": "Sets a global Deferral Limit for all software.",
        "type": "integer"
      },
      "DeferralLimitExceptions": {
        "title": "Deferral Limit Exceptions",
        "description": "Sets exceptions to the global Deferral Limit, or irrespective of it.",
        "type": {
          "array": [
            {
              "dictionary": {
                "Integer": {
                  "title": "Integer",
                  "description": "Deferral limit for the specified Software ID.",
                  "type": "integer"
                },
                "Key": {
                  "title": "Key",
                  "description": "Software ID of the software title to include in the deferral limit exceptions.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "DialogDeferralText": {
        "title": "Dialog Deferral Text",
        "description": "The text that appears below the main description in the update dialog.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DialogDescription": {
        "title": "Dialog Description",
        "description": "The main description that appears in the update dialog.\t",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DialogHelpText": {
        "title": "Dialog Help Text",
        "description": "Enable the help button and populate the text displayed on screen when clicked.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DialogHelpToolTip": {
        "title": "Dialog Help Tool Tip",
        "description": "Customizes the tooltip of the help button (when enabled).",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DialogTimeout": {
        "title": "Dialog Timeout",
        "description": "The duration, in seconds, that the update dialog will appear on screen before performing a timeout.",
        "type": "integer"
      },
      "DialogTitle": {
        "title": "Dialog Title",
        "description": "The title of the update dialog window.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FinalDialogDescription": {
        "title": "Final Dialog Description",
        "description": "The main description that appears in the final update dialog.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FinalDialogTimeout": {
        "title": "Final Dialog Timeout",
        "description": "The duration, in seconds, that the final update dialog will appear on screen before performing an update.",
        "type": "integer"
      },
      "IgnoreDeferralText": {
        "title": "Ignore Deferral Text",
        "description": "Does not include the deferral text in the update dialog’s description.",
        "type": "boolean"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RecordTimeoutAsDeferral": {
        "title": "Record Timeout as Deferral",
        "description": "When an update dialog timeout occurs, record a deferral rather than taking no action.",
        "type": "boolean"
      },
      "UpdateButtonLabel": {
        "title": "Update Button Label",
        "description": "The label or displayed text in the update button.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UpdateButtonPrimary": {
        "title": "Update Button Primary",
        "description": "By default, the Update button is the primary button of the Update Dialog; meaning it responds to the Return key. Set this key to false if you wish to disable this behavior.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.ADCertificate.managed": {
    "title": "AD Certificate",
    "description": "Active Directory Certificate settings",
    "properties": {
      "AllowAllAppsAccess": {
        "title": "Allow access to all apps",
        "description": "Allow all apps to access the certificate in the keychain",
        "type": "boolean"
      },
      "CertServer": {
        "title": "Certificate Server",
        "description": "Fully qualified host name of the Active Directory issuing CA.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CertTemplate": {
        "title": "Certificate Template",
        "description": "The name of the certificate template as it appears in the General tab of the template's object in the Certificate Templates' Microsoft Management Console snap-in component. Usually Machine or User",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CertificateAcquisitionMechanism": {
        "title": "Acquisition Mechanism",
        "description": "Most commonly RPC. If using Web enrollment, HTTP.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CertificateAuthority": {
        "title": "Certificate Authority",
        "description": "Name of the CA. This value is determined from the Common Name (CN) of the Active Directory entry: CN=(your CA name), CN='Certification Authorities', CN='Public Key Services', CN='Services', or CN='Configuration', (your base Domain Name).",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CertificateRenewalTimeInterval": {
        "title": "Certificate Expiration Notification Threshold",
        "description": "The number of days before the certificate expires at which to start showing the expiration notification",
        "type": "integer"
      },
      "Description": {
        "title": "Description",
        "description": "The description of the certificate request as shown in the certificate selector of other payloads such as VPN and Network",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EnableAutoRenewal": {
        "title": "Enable auto-renewal",
        "description": "Allows the certificate to attempt an auto-renewal from the server.",
        "type": "boolean"
      },
      "KeyIsExtractable": {
        "title": "Allow export from keychain",
        "description": "Allow admin to export private key from the keychain",
        "type": "boolean"
      },
      "Keysize": {
        "title": "RSA Key Size",
        "description": "The RSA key size for the Certificate Signing Request (CSR).",
        "type": "integer"
      },
      "Password": {
        "title": "Password",
        "description": "The password with which to authenticate to the certificate server",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PromptForCredentials": {
        "title": "Prompt for credentials",
        "description": "Prompt the user for credentials.  This setting is not supported for pushed profiles",
        "type": "boolean"
      },
      "UserName": {
        "title": "User name",
        "description": "The user name with which to authenticate to the certificate server",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.AIM.account": {
    "title": "Messages: AIM",
    "description": "Messages: AIM settings",
    "properties": {
      "AIMAccountDescription": {
        "title": "Account description",
        "description": "The display name for the account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AIMAuthentication": {
        "title": "Authentication Type",
        "description": "The authentication method for the server.",
        "type": {
          "string": {
            "rangeList": [
              [
                "AIMAuthPassword",
                "Password"
              ]
            ]
          }
        }
      },
      "AIMHostName": {
        "title": "Hostname",
        "description": "The IP address or fully qualified domain name (FQDN) of the server.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AIMPassword": {
        "title": "Password",
        "description": "The password for the account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AIMPort": {
        "title": "Port",
        "description": "The port on which to connect to the server.",
        "type": "integer"
      },
      "AIMUseSSL": {
        "title": "Use SSL",
        "description": "Enable Secure Socket Layer for this connection.",
        "type": "boolean"
      },
      "AIMUserName": {
        "title": "Account name",
        "description": "The chat name of the user.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.AdLib": {
    "title": "Ad Tracking",
    "description": "Ad Tracking settings",
    "properties": {
      "allowApplePersonalizedAdvertising": {
        "title": "Allow Personalized Advertising",
        "description": "Disabling ad tracking ensures that applications and advertisers are unable to track users’ interests and deliver targeted advertisements.",
        "type": "boolean"
      },
      "forceLimitAdTracking": {
        "title": "Force Limiting Ad Tracking",
        "description": "Enabling this opts out of receiving ads targeted to interests in Apple Apps and macOS devices. May still receive the same number of ads, but the ads may be less relevant.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.AssetCache.managed": {
    "title": "Content Caching",
    "description": "Content Caching settings",
    "properties": {
      "AgeForLowSpaceAlert": {
        "title": "Low Space Alert",
        "type": "integer"
      },
      "AllowCacheDelete": {
        "title": "Allow Cache Delete",
        "description": "Automatically remove content from the cache when the system needs disk space for other apps.",
        "type": "boolean"
      },
      "AllowImports": {
        "title": "Allow Imports",
        "type": "boolean"
      },
      "AllowPersonalCaching": {
        "title": "Allow Personal iCloud Data Caching",
        "description": "Clients may take some time (hours, days) to react to changes to this setting; it does not have an immediate effect. At least one of the AllowPersonalCaching or AllowSharedCaching keys must be true. Data includes documents and photos, among others.",
        "type": "boolean"
      },
      "AllowSharedCaching": {
        "title": "Allow non-iCloud Data Caching",
        "description": "Clients may take some time (hours, days) to react to changes to this setting; it does not have an immediate effect. At least one of the AllowPersonalCaching or AllowSharedCaching keys must be true. Data includes apps and software updates.",
        "type": "boolean"
      },
      "AllowWirelessPortable": {
        "title": "Allow Laptop Wireless Caching",
        "type": "boolean"
      },
      "AutoActivation": {
        "title": "Automatically activate content caching",
        "description": "Users can't turn off the content caching service.",
        "type": "boolean"
      },
      "AutoEnableTetheredCaching": {
        "title": "Automatically activate Internet connection sharing",
        "description": "Requires you to allow sharing the computer's Internet connection and cached content with iOS devices connected using USB.",
        "type": "boolean"
      },
      "CacheLimit": {
        "title": "Maximum Cache Size",
        "description": "The maximum number of bytes of disk space that will be used for the content cache. The value of zero allows unlimited space.",
        "type": "integer"
      },
      "DataPath": {
        "title": "Data Path",
        "description": "The path to the directory used to store cached content. Changing this setting manually doesn't automatically move cached content from the old to the new location. To move content automatically, use Content Caching preferences. You can also set this value in Content Caching preferences.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DatabaseUpdateInterval": {
        "title": "Cache Database Update Interval",
        "type": "integer"
      },
      "DenyTetheredCaching": {
        "title": "Disable Caching Over Shared Internet Connection",
        "description": "Share this computer's Internet connection and cached content with iOS devices connected using USB.",
        "type": "boolean"
      },
      "DisplayAlerts": {
        "title": "Display Content Caching Alerts",
        "description": "Display Content Caching alerts as notifications.",
        "type": "boolean"
      },
      "DownloadMinRate": {
        "title": "Minimum Download Rate",
        "type": "integer"
      },
      "DownloadTimeout": {
        "title": "Download Timeout",
        "type": "integer"
      },
      "ImportMaxRate": {
        "title": "Max Import Rate",
        "type": "integer"
      },
      "ImportMinRate": {
        "title": "Min Import Rate",
        "type": "integer"
      },
      "ImportRateAttenuation": {
        "title": "Import Rate Attenuation",
        "type": "real"
      },
      "ImportTimeout": {
        "title": "Import Timeout",
        "type": "integer"
      },
      "Interface": {
        "title": "Interface",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "KeepAwake": {
        "title": "Keep Awake for Content Caching",
        "description": "Prevent the computer from sleeping while caching is on.",
        "type": "boolean"
      },
      "ListenRanges": {
        "title": "Client Listen Ranges",
        "description": "A range of IPv4 and IPv6 addresses to restrict clients to.",
        "type": {
          "array": [
            {
              "dictionary": {
                "first": {
                  "title": "Start IP Address",
                  "description": "First IP address in range",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "last": {
                  "title": "End IP Address",
                  "description": "Last IP address in range",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "type": {
                  "title": "IP Address Type",
                  "description": "IP version",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "ListenRangesOnly": {
        "title": "Restrict To Client Listen Ranges",
        "description": "Provide content only to the clients specified by the listen ranges.",
        "type": "boolean"
      },
      "ListenWithPeersAndParents": {
        "title": "Listen with Peers and Parents",
        "type": "boolean"
      },
      "LocalSubnetsOnly": {
        "title": "Restrict Clients To Local Network",
        "description": "Content Cache offers content to clients only on the same immediate local network.",
        "type": "boolean"
      },
      "LogClientIdentity": {
        "title": "Log Client Details",
        "description": "Log the IP address and port number of clients that request content.",
        "type": "boolean"
      },
      "MaxConcurrentClients": {
        "title": "Max Concurrent Clients",
        "type": "integer"
      },
      "MaxParentDepth": {
        "title": "Max Parent Depth",
        "type": "integer"
      },
      "MaxPeersToQuery": {
        "title": "Max Peers to Query",
        "type": "integer"
      },
      "MetricsInterval": {
        "title": "Metrics Interval",
        "type": "integer"
      },
      "MetricsMaxAge": {
        "title": "Max Metrics Age",
        "type": "integer"
      },
      "OriginDownloadTimeout": {
        "title": "Origin Download Timeout",
        "type": "integer"
      },
      "OriginUploadTimeout": {
        "title": "Origin Upload Timeout",
        "type": "integer"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ParentDownloadTimeout": {
        "title": "Parent Download Timeout",
        "type": "integer"
      },
      "ParentRetryInterval": {
        "title": "Parent Retry Interval",
        "type": "integer"
      },
      "ParentSelectionPolicy": {
        "title": "Parent Selection Policy",
        "description": "The policy to use when choosing among more than one configured parent content cache.",
        "type": {
          "string": {
            "rangeList": [
              [
                "first-available",
                "First available"
              ],
              [
                "random",
                "Random"
              ],
              [
                "round-robin",
                "Round robin"
              ],
              [
                "sticky-available",
                "Sticky available"
              ],
              [
                "url-path-hash",
                "Hash"
              ]
            ]
          }
        }
      },
      "ParentUploadTimeout": {
        "title": "Parent Upload Timeout",
        "type": "integer"
      },
      "Parents": {
        "title": "Parents IP Addresses",
        "description": "A list of the local IP addresses of other content caches from which this cache should download or upload content instead of downloading from or uploading to Apple directly.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PeerDownloadTimeout": {
        "title": "Peer Download Timeout",
        "type": "integer"
      },
      "PeerFilterRanges": {
        "title": "Peer Filter Ranges",
        "description": "A range of peer IP addresses that the Content Cache will use to filter its list of peers to query for content.",
        "type": {
          "array": [
            {
              "dictionary": {
                "first": {
                  "title": "Start IP Address",
                  "description": "",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "last": {
                  "title": "End IP Address",
                  "description": "",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "type": {
                  "title": "IP Address Type",
                  "description": "",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "PeerListenRanges": {
        "title": "Peer Listen Ranges",
        "description": "A range of peer IP addresses the Content Cache will respond to peer cache queries from.",
        "type": {
          "array": [
            {
              "dictionary": {
                "first": {
                  "title": "Start IP Address",
                  "description": "",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "last": {
                  "title": "End IP Address",
                  "description": "",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "type": {
                  "title": "IP Address Type",
                  "description": "",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "PeerLocalSubnetsOnly": {
        "title": "Restrict Peers To Local Network",
        "description": "Content Cache will only peer with other Content Caches on the same immediate local network, rather than with Content Caches that use the same public IP address as the device.",
        "type": "boolean"
      },
      "PeerNotifyTimeout": {
        "title": "Peer Notify Timeout",
        "type": "integer"
      },
      "PeerQueryTimeout": {
        "title": "Peer Query Timeout",
        "type": "integer"
      },
      "PeerRetryInterval": {
        "title": "Peer Retry Interval",
        "type": "integer"
      },
      "PersonalCacheLimit": {
        "title": "Max Personal Cache Size",
        "type": "integer"
      },
      "Port": {
        "title": "Port",
        "description": "TCP port on which the content caching service accepts requests for uploads or downloads. Set to 0 to pick a random port.",
        "type": "integer"
      },
      "PruneAffinitiesAge": {
        "title": "Prune Affinities Cache Age",
        "type": "integer"
      },
      "PruneAffinitiesInterval": {
        "title": "Prune Affinities Cache Interval",
        "type": "integer"
      },
      "PruneAssetsAge": {
        "title": "Prune Assets Age",
        "type": "integer"
      },
      "PruneAssetsInterval": {
        "title": "Prune Assets Interval",
        "type": "integer"
      },
      "PublicRanges": {
        "title": "Public Ranges",
        "description": "A range of public IP addresses that the cloud servers should use for matching clients to Content Caches.",
        "type": {
          "array": [
            {
              "dictionary": {
                "first": {
                  "title": "Start IP Address",
                  "description": "",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "last": {
                  "title": "End IP Address",
                  "description": "",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "type": {
                  "title": "IP Address Type",
                  "description": "",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "ReservedVolumeSpace": {
        "title": "Reserved Volume Size",
        "type": "integer"
      },
      "TerminationTimeout": {
        "title": "Termination Timeout",
        "type": "integer"
      },
      "Verbose": {
        "title": "Verbose",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.Compressor": {
    "title": "Compressor",
    "description": "Compressor settings",
    "properties": {
      "FFCheckedUpgrade": {
        "title": "Upgrade Checked",
        "description": "Suppresses the popup to upgrade Compressor on first run.",
        "type": "boolean"
      },
      "LKWhatsNewDisplayedForAppVersion": {
        "title": "Whats New displayed",
        "description": "Suppress the Whats New screen on the selected versions of Compressor.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Compressor Version",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Suppressed",
              "description": "",
              "type": "boolean"
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.Dictionary": {
    "title": "Parental Controls: Dictionary",
    "description": "Parental Controls: Dictionary settings",
    "properties": {
      "parentalControl": {
        "title": "Hide profanity in dictionary",
        "description": "Enable parental controls dictionary restrictions.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.DirectoryService.managed": {
    "title": "Active Directory",
    "description": "Active Directory settings",
    "properties": {
      "ADAllowMultiDomainAuth": {
        "title": "Allow authentication from any domain in the forest",
        "description": "Allow authentication from any domain in the forest.",
        "type": "boolean"
      },
      "ADAllowMultiDomainAuthFlag": {
        "title": "Enable ADAllowMultiDomainAuth Key",
        "description": "Enable ADAllowMultiDomainAuth Key.",
        "type": "boolean"
      },
      "ADCreateMobileAccountAtLogin": {
        "title": "Create mobile account at login",
        "description": "Create mobile account at login.",
        "type": "boolean"
      },
      "ADCreateMobileAccountAtLoginFlag": {
        "title": "Enable ADCreateMobileAccountAtLogin Flag",
        "description": "Enable ADCreateMobileAccountAtLogin Flag.",
        "type": "boolean"
      },
      "ADDefaultUserShell": {
        "title": "Default user shell",
        "description": "Default user shell.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ADDefaultUserShellFlag": {
        "title": "Enable ADDefaultUserShell Key",
        "description": "Enable ADDefaultUserShell Key.",
        "type": "boolean"
      },
      "ADDomainAdminGroupList": {
        "title": "Allow administration by specified Active Directory groups.",
        "description": "Allow administration by specified Active Directory groups.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ADDomainAdminGroupListFlag": {
        "title": "Enable ADDomainAdminGroupList Key",
        "description": "Enable ADDomainAdminGroupList Key.",
        "type": "boolean"
      },
      "ADForceHomeLocal": {
        "title": "Force local home directory on startup disk",
        "description": "Force local home directory on startup disk.",
        "type": "boolean"
      },
      "ADForceHomeLocalFlag": {
        "title": "Enable ADForceHomeLocal Flag",
        "description": "Enable ADForceHomeLocal Flag.",
        "type": "boolean"
      },
      "ADMapGGIDAttribute": {
        "title": "Map group GID to attribute",
        "description": "Map group GID to attribute.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ADMapGGIDAttributeFlag": {
        "title": "Enable ADMapGGIDAttribute Key",
        "description": "Enable ADMapGGIDAttribute Key.",
        "type": "boolean"
      },
      "ADMapGIDAttribute": {
        "title": "Map user GID to attribute",
        "description": "Map user GID to attribute.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ADMapGIDAttributeFlag": {
        "title": "Enable ADMapGIDAttribute Key",
        "description": "Enable ADMapGIDAttribute Key.",
        "type": "boolean"
      },
      "ADMapUIDAttribute": {
        "title": "Map UID to attribute",
        "description": "Map UID to attribute.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ADMapUIDAttributeFlag": {
        "title": "Enable ADMapUIDAttribute Key",
        "description": "Enable ADMapUIDAttribute Key.",
        "type": "boolean"
      },
      "ADMountStyle": {
        "title": "Mount Style",
        "description": "Network protocol to be used to mount home directory.",
        "type": {
          "string": {
            "rangeList": [
              [
                "afp",
                "AFP"
              ],
              [
                "smb",
                "SMB"
              ]
            ]
          }
        }
      },
      "ADNamespace": {
        "title": "Set primary user account naming convention: \"forest\" or \"domain\"",
        "description": "Set primary user account naming convention: \"forest\" or \"domain\".",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ADNamespaceFlag": {
        "title": "Enable ADNamespace Key",
        "description": "Enable ADNamespace Key.",
        "type": "boolean"
      },
      "ADOrganizationalUnit": {
        "title": "Organizational Unit",
        "description": "The organizational unit (OU) where the joining computer object is added.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ADPacketEncrypt": {
        "title": "Packet encryption",
        "description": "Packet encryption.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ADPacketEncryptFlag": {
        "title": "Enable ADPacketEncrypt Key",
        "description": "Enable ADPacketEncrypt Key",
        "type": "boolean"
      },
      "ADPacketSign": {
        "title": "Packet signing",
        "description": "Packet signing.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ADPacketSignFlag": {
        "title": "Enable ADPacketSign Key",
        "description": "Enable ADPacketSign Key.",
        "type": "boolean"
      },
      "ADPreferredDCServer": {
        "title": "Preferred domain server",
        "description": "Preferred domain server.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ADPreferredDCServerFlag": {
        "title": "Enable ADPreferredDCServer Key",
        "description": "Enable ADPreferredDCServer Key.",
        "type": "boolean"
      },
      "ADRestrictDDNS": {
        "title": "Restrict DDNS on interfaces",
        "description": "Restrict Dynamic DNS updates to the specified interfaces (e.g. en0, en1, etc).",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ADRestrictDDNSFlag": {
        "title": "Enable ADRestrictDDNS Key",
        "description": "Enable ADRestrictDDNS Key.",
        "type": "boolean"
      },
      "ADTrustChangePassIntervalDays": {
        "title": "Password trust interval",
        "description": "How often to change computer trust account password in days.",
        "type": "integer"
      },
      "ADTrustChangePassIntervalDaysFlag": {
        "title": "Enable ADTrustChangePassIntervalDays Key",
        "description": "Enable ADTrustChangePassIntervalDays Key.",
        "type": "boolean"
      },
      "ADUseWindowsUNCPath": {
        "title": "Use UNC path for network home location",
        "description": "Use UNC path from Active Directory to derive network home location",
        "type": "boolean"
      },
      "ADUseWindowsUNCPathFlag": {
        "title": "Enable ADUseWindowsUNCPath Flag",
        "description": "Enable ADUseWindowsUNCPath Flag.",
        "type": "boolean"
      },
      "ADWarnUserBeforeCreatingMA": {
        "title": "Require confirmation before creating mobile account",
        "description": "Require confirmation before creating mobile account.",
        "type": "boolean"
      },
      "ADWarnUserBeforeCreatingMAFlag": {
        "title": "Enable ADWarnUserBeforeCreatingMA Flag",
        "description": "Enable ADWarnUserBeforeCreatingMA Flag.",
        "type": "boolean"
      },
      "ClientID": {
        "title": "Client ID",
        "description": "The directory server client ID.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HostName": {
        "title": "Server Hostname",
        "description": "The hostname of the directory server.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Password": {
        "title": "Password",
        "description": "Password of the account used to join the domain.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UserName": {
        "title": "User name",
        "description": "User name of the account used to join the domain.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.DiscRecording": {
    "title": "Disc Recording",
    "description": "Disc Burning settings",
    "properties": {
      "BurnSupport": {
        "title": "Enable Disc Burning",
        "description": "• Set to off to disable disc burning.\\n• Set to on for normal default operation.\\n• Set to authenticate to require authentication.\\nSetting this key to on will not enable disc burn support if it has already been disabled by other mechanisms or preferences.",
        "type": {
          "string": {
            "rangeList": [
              [
                "on",
                "On"
              ],
              [
                "off",
                "Off"
              ],
              [
                "authenticate",
                "Authenticate"
              ]
            ]
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.Enterprise-Connect": {
    "title": "Enterprise Connect",
    "description": "Enterprise Connect settings",
    "properties": {
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "adRealm": {
        "title": "Active Directory Realm",
        "description": "The host name of your organization's Active Directory domain.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "checkForNetworkServer": {
        "title": "Network Server",
        "description": "The host Enterprise Connect should check for when connecting.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "checkForNetworkType": {
        "title": "Check For Network Server",
        "description": "Check for a host in your organization's network.",
        "type": "boolean"
      },
      "checkShowLegacyCertificates": {
        "title": "Show Legacy Certificates",
        "description": "Automatically check the \"Show Legacy Certificates\" option in the certificate chooser window.",
        "type": "boolean"
      },
      "connectDelay": {
        "title": "Connect Delay",
        "description": "Delay starting the connection process when your organization's network is detected. This may be useful for customers who use Cisco NAC and need to delay connection while host checks are performed.",
        "type": "integer"
      },
      "connectReminderNagInterval": {
        "title": "Connection Reminder Interval",
        "description": "The interval, in seconds, between connection reminders.",
        "type": "integer"
      },
      "connectionCompletedScriptPath": {
        "title": "Connection Completed Script Path",
        "description": "Path to the connection completed script.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "dailyReconnectTime": {
        "title": "Daily Reconnect Time",
        "description": "The interval, in seconds, that Enterprise Connect should attempt its daily reconnect. Set this to 0 to disable the daily reconnect.",
        "type": "integer"
      },
      "debugMode": {
        "title": "Debug Mode",
        "description": "Enables debugging mode.",
        "type": "boolean"
      },
      "destroyKerbTicketUponCardRemoval": {
        "title": "Destroy Kerberos Ticket on Smart Card Removal",
        "description": "",
        "type": "boolean"
      },
      "disablePasswordExpirationChecking": {
        "title": "Disable Password Expiration Checking",
        "description": "Disable Enterprise Connect's password expiration checking, but still leave intact the ability for the user to change their password with Enterprise Connect.",
        "type": "boolean"
      },
      "disablePasswordFunctions": {
        "title": "Disable Password Functions",
        "description": "Disable Enterprise Connect's password management abilities, including expiration notices and the \"Change Password\" menu item. This is useful for customers who don't change their passwords in AD.",
        "type": "boolean"
      },
      "disableQuitMenu": {
        "title": "Disable Quit Menu",
        "description": "Disables the Quit menu item from Enterprise Connect.",
        "type": "boolean"
      },
      "getRenewableTGT": {
        "title": "Get Renewable TGT",
        "description": "Acquire a renewable Kerberos TGT.",
        "type": "boolean"
      },
      "launchAtLogin": {
        "title": "Launch At Login",
        "description": "Determines if Enterprise Connect should set itself as a login item.",
        "type": "boolean"
      },
      "managedshares": {
        "title": "Managed Shares",
        "description": "List of shares that Enterprise Connect should attempt to mount. Users will still be able to add their own shares.",
        "type": {
          "array": [
            {
              "dictionary": {
                "path": {
                  "title": "Path",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "mountNetworkHomeDirectory": {
        "title": "Mount Network Home Directory",
        "description": "Determines if Enterprise Connect mounts the user's network home directory.",
        "type": "boolean"
      },
      "orgLogoPath": {
        "title": "Organization Logo Path",
        "description": "The path to a file containing your organization's logo, in PNG, JPG or GIF format.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "orgUsernameLabel": {
        "title": "Organization Username Label",
        "description": "The name your organization gives usernames.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "passwordChangeScriptPath": {
        "title": "Password Change Script Path",
        "description": "Path to the password change script.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "passwordChangeURL": {
        "title": "Password Change URL",
        "description": "URL to open in the user's default web browser when they use Enterprise Connect to change their password. Standard password change functionality will no longer work.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "passwordExpireOverride": {
        "title": "Password Expire Override",
        "description": "Override domain password policy when calculating password expiration.",
        "type": "integer"
      },
      "passwordNotificationDays": {
        "title": "Password Expire Notification",
        "description": "Determines the amount of days before password expiration that the user receives expiration notifications.",
        "type": "integer"
      },
      "pfc_preventUserShares": {
        "title": "Prevent User Shares",
        "description": "Prevents the user from adding custom shares to Enterprise Connect.",
        "type": "boolean"
      },
      "preferredDC": {
        "title": "Preferred Domain Controller",
        "description": "Preferred domain controller when doing LDAP queries and getting a Kerberos TGT. If this domain controller is unavailable, Enterprise Connect will fall back to domain controllers it discovers from DNS.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "prepopulatedUsername": {
        "title": "Pre Populated Username",
        "description": "Upon launch or sign out, Enterprise Connect will pre-populate the Username field with this username.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "pwReqComplexity": {
        "title": "Password Required Complexity",
        "description": "Tells Enterprise Connect that passwords should meet Active Directory's definition of complexity. Used to enable and configure live password testing.",
        "type": "boolean"
      },
      "pwReqComplexityDisableUnicode": {
        "title": "Password Required Complexity Disable Unicode",
        "description": "Disables the \"Has a Unicode character\" password test from live password testing.",
        "type": "boolean"
      },
      "pwReqHistoryCount": {
        "title": "Password History Count",
        "description": "How many previous passwords cannot be re-used.",
        "type": "integer"
      },
      "pwReqLength": {
        "title": "Password Required Length",
        "description": "Require passwords to be at least as long as the specified value.",
        "type": "integer"
      },
      "pwReqMinimumPasswordAge": {
        "title": "Password Minimum Age",
        "description": "The minimum age of passwords before they can be changed.",
        "type": "integer"
      },
      "pwReqText": {
        "title": "Password Change Message Path",
        "description": "Path to a RTF file to display for the user during password changes.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "runAuditScript": {
        "title": "Run Audit Script",
        "description": "Tells Enterprise Connect to execute an audit script.",
        "type": "boolean"
      },
      "runAuditScriptPath": {
        "title": "Audit Script Path",
        "description": "Path to the audit script.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "runPasswordChangeScriptOnLocalPasswordSync": {
        "title": "Run Password Change Script On Local Password Sync",
        "description": "Determines if Enterprise Connect should run the password change script upon a local password sync.",
        "type": "boolean"
      },
      "runPeriodicStateCheck": {
        "title": "Run Periodic State Check",
        "description": "Enable or Disable periodic state checking. Customers who expose their DNS to the public Internet will need to disable periodic state checking.",
        "type": "boolean"
      },
      "setupReminderNagInterval": {
        "title": "Reminder Nag Interval",
        "description": "The interval, in seconds, between setup notifications.",
        "type": "integer"
      },
      "shareMountWaitSeconds": {
        "title": "Share Mount Delay",
        "description": "Delay the mounting of network shares when your organization's network is detected. This may be useful for customers who use Cisco NAC and need to delay connection while host checks are performed.",
        "type": "integer"
      },
      "shares": {
        "title": "Shares",
        "description": "List of shares that Enterprise Connect should attempt to mount.",
        "type": {
          "array": [
            {
              "dictionary": {
                "path": {
                  "title": "Path",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "showKeychainIdentities": {
        "title": "Show Keychain Identities",
        "description": "Automatically check the \"Show Legacy Certificates\" option in the certificate chooser window.",
        "type": "boolean"
      },
      "showMenuExtra": {
        "title": "Show Menu Extra",
        "description": "Determines whether the Enterprise Connect menu extra is loaded.",
        "type": "boolean"
      },
      "showUsernameWithSmartcard": {
        "title": "Show Username in Smart Card Mode",
        "description": "Determines if Enterprise Connect should display the username field if smart card mode is enabled.",
        "type": "boolean"
      },
      "smartCardMode": {
        "title": "Enable Smart Card Mode",
        "description": "Determines whether smart card mode should be enabled.",
        "type": "boolean"
      },
      "syncLocalPassword": {
        "title": "Sync Local Password",
        "description": "Enables Active Directory to local account password sync. This only works if the user is logged into their Mac with a local account.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.FinalCut": {
    "title": "Final Cut Pro",
    "description": "Final Cut Pro settings",
    "properties": {
      "LKWelcomeDisplayedForAppVersion": {
        "title": "Welcome displayed",
        "description": "Suppress the Welcome screen on the selected versions of Final Cut Pro.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Final Cut Pro Version",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Suppressed",
              "description": "",
              "type": "boolean"
            }
          }
        }
      },
      "LKWhatsNewDisplayedForAppVersion": {
        "title": "Whats New displayed",
        "description": "Suppress the Whats New screen on the selected versions of Final Cut Pro.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Final Cut Pro Version",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Suppressed",
              "description": "",
              "type": "boolean"
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.MCX": {
    "title": "Wi-Fi Managed Settings",
    "description": "Use this section to define managed Wi-Fi settings",
    "properties": {
      "RequireAdminForAirPortNetworkChange": {
        "title": "Require Admin Credentials for Wi-Fi Network Change",
        "description": "If true, requires administrator authorization for network changes.",
        "type": "boolean"
      },
      "RequireAdminForIBSS": {
        "title": "Require Admin Credentials for IBSS",
        "description": "If true, requires administrator authorization to enable IBSS.",
        "type": "boolean"
      },
      "RequireAdminToTurnAirPortOnOff": {
        "title": "Require Admin Credentials for Wi-Fi Power",
        "description": "If true, requires administrator authorization to turn Wi-Fi on or off.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.MCX.FileVault2": {
    "title": "FileVault 2",
    "description": "Use this section to define settings for FileVault 2",
    "properties": {
      "Certificate": {
        "title": "Certificate",
        "description": "DER-encoded certificate data if an institutional recovery key will be added.",
        "type": "data"
      },
      "Defer": {
        "title": "Defer enabling until logout",
        "description": "Defer enabling FileVault until the designated user logs out. For details, see fdesetup(8). The person enabling FileVault must be either a local user or a mobile account user.",
        "type": "boolean"
      },
      "DeferDontAskAtUserLogout": {
        "title": "Dont ask at logout",
        "description": "When using the Defer option, set this key to true to not request enabling FileVault at user logout time.",
        "type": "boolean"
      },
      "DeferForceAtUserLoginMaxBypassAttempts": {
        "title": "Maximum number of times FileVault can be skipped",
        "description": "When using the Defer option you can optionally set this key to the maximum number of times the user can bypass enabling FileVault before it will require that it be enabled before the user can log in. If set to 0, it will always prompt to enable FileVault until it is enabled, though it will allow you to bypass enabling it. Setting this key to –1 will disable this feature.",
        "type": "integer"
      },
      "Enable": {
        "title": "Enable FileVault 2",
        "description": "Set to 'On' to enable FileVault. Set to 'Off' to disable FileVault.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ForceEnableInSetupAssistant": {
        "title": "ForceEnableInSetupAssistant",
        "description": "If 'true', and this payload is installed after enrolling with MDM in Setup Assistant, it requests Setup Assistant to enable FileVault at setup time. In this case, the system also ignores all other keys in this payload, except for 'ShowRecoveryKey'.\nTo use this, enable the Await Device Configured DEP configuration option, send this profile with this key set, before sending the DeviceConfiguredCommand.",
        "type": "boolean"
      },
      "OutputPath": {
        "title": "Recovery key path",
        "description": "Path to the location where the recovery key and computer information plist will be stored.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Password": {
        "title": "Password",
        "description": "User password of the Open Directory user that will be added to FileVault. Use the UserEntersMissingInfo key if you want to prompt for this information.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PayloadCertificateUUID": {
        "title": "Recovery Key Certificate Payload",
        "description": "UUID of the payload containing the asymmetric recovery key certificate payload.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ShowRecoveryKey": {
        "title": "Show the personal recovery key",
        "description": "Set to false to not display the personal recovery key to the user after FileVault is enabled.",
        "type": "boolean"
      },
      "UseKeychain": {
        "title": "Add institutional recovery key to keychain",
        "description": "If set to true and no certificate information is provided in this payload, the keychain already created at /Library/Keychains/FileVaultMaster.keychain will be used when the institutional recovery key is added.",
        "type": "boolean"
      },
      "UseRecoveryKey": {
        "title": "Create a personal recovery key",
        "description": "Set to true to create a personal recovery key.",
        "type": "boolean"
      },
      "UserEntersMissingInfo": {
        "title": "User enters username and password",
        "description": "Set to true for manual profile installs to prompt for missing user name or password fields.",
        "type": "boolean"
      },
      "Username": {
        "title": "Username",
        "description": "User name of the Open Directory user that will be added to FileVault.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.MCX.TimeMachine": {
    "title": "Time Machine",
    "description": "Time Machine settings",
    "properties": {
      "AutoBackup": {
        "title": "Enable automatic backups",
        "description": "Automatically backup at regulard intervals.",
        "type": "boolean"
      },
      "BackupAllVolumes": {
        "title": "Backup all volumes",
        "description": "Only startup volume is backed up by default.",
        "type": "boolean"
      },
      "BackupDestURL": {
        "title": "Backup Destination",
        "description": "URL of the backup destination. (e.g., smb://server.example.com/backups/)",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BackupSizeMB": {
        "title": "Backup size limit",
        "description": "Enter a limit in MB for the size of the backup. Set to 0 for unlimited.",
        "type": "integer"
      },
      "BackupSkipSys": {
        "title": "Back up system files and folders",
        "description": "System files and folders are skipped by default.",
        "type": "boolean"
      },
      "MobileBackups": {
        "title": "Enable local snapshots",
        "description": "Creates local backup snapshots if the backup destination is offline.",
        "type": "boolean"
      },
      "SkipPaths": {
        "title": "Paths to skip",
        "description": "Enter additional volumes and locations to exclude from the backup.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.NSExtension": {
    "title": "Extensions",
    "description": "Use the Extensions payload to control which extensions can be used with macOS.",
    "properties": {
      "AllowedExtensions": {
        "title": "Allowed extensions",
        "description": "Add the bundle identifier for each extension allowed to run on the Mac. Any extensions not listed are unable to run.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DeniedExtensionPoints": {
        "title": "Disallow some extensions points",
        "description": "Disallow specific extension points.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "AllPublicExtensionPoints",
                    "All Extension Points"
                  ],
                  [
                    "com.apple.ui-services",
                    "Action"
                  ],
                  [
                    "com.apple.AudioUnit-UI",
                    "Audio Unit"
                  ],
                  [
                    "com.apple.Safari.content-blocker",
                    "Content Blocker"
                  ],
                  [
                    "com.apple.FinderSync",
                    "Finder Sync"
                  ],
                  [
                    "com.apple.photo-editing",
                    "Photo Editing"
                  ],
                  [
                    "com.apple.Safari.extension",
                    "Safari"
                  ],
                  [
                    "com.apple.share-services",
                    "Share"
                  ],
                  [
                    "com.apple.Safari.sharedlinks-service",
                    "Shared Links"
                  ],
                  [
                    "com.apple.ctk-tokens",
                    "Smart Card Token"
                  ],
                  [
                    "com.apple.widget-extension",
                    "Today"
                  ],
                  [
                    "com.apple.dt.Xcode.extension.source-editor",
                    "Xcode Source Editor"
                  ]
                ]
              }
            }
          ]
        }
      },
      "DeniedExtensions": {
        "title": "Disallowed extensions",
        "description": "Disallow specific extensions by their bundle identifier.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.NetworkBrowser": {
    "title": "AirDrop (macOS)",
    "description": "macOS AirDrop Settings",
    "properties": {
      "DisableAirDrop": {
        "title": "Disable AirDrop",
        "description": "",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.Safari": {
    "title": "Safari",
    "description": "Safari settings",
    "properties": {
      "AskBeforeSubmittingInsecureForms": {
        "title": "Ask Before Submitting Insecure Forms",
        "description": "Display a confirmation alert when an insecure form is submitted from a secure site",
        "type": "boolean"
      },
      "AutoFillCreditCardData": {
        "title": "AutoFill Credit Cards",
        "description": "Autofill credit cards in web forms.",
        "type": "boolean"
      },
      "AutoFillFromAddressBook": {
        "title": "AutoFill web forms from contacts",
        "description": "Autofill web forms using info from Contacts.",
        "type": "boolean"
      },
      "AutoFillMiscellaneousForms": {
        "title": "AutoFill Miscellaneous Forms",
        "description": "Autofill web forms using previously-typed text.",
        "type": "boolean"
      },
      "AutoFillPasswords": {
        "title": "AutoFill Passwords",
        "description": "Autofill user names and passwords in web forms.",
        "type": "boolean"
      },
      "AutoOpenSafeDownloads": {
        "title": "Open Safe Downloads Automatically",
        "description": "Automatically open downloaded files that are of certain well-known safe types.",
        "type": "boolean"
      },
      "BlockStoragePolicy": {
        "title": "Block cookies and other website data",
        "description": "Policy for blocking cookies and other website data.",
        "type": "integer"
      },
      "BookmarksCollectionsIncludeAddressBook": {
        "title": "Bookmarks Collections Include Contacts",
        "description": "Include the Contacts bookmarks in the Collections column of the bookmarks view.",
        "type": "boolean"
      },
      "BookmarksCollectionsIncludeRendezvous": {
        "title": "Bookmarks Collections Include Bonjour",
        "description": "Include the Bonjour bookmarks in the Collections column of the bookmarks view.",
        "type": "boolean"
      },
      "BookmarksMenuIncludesAddressBook": {
        "title": "Bookmarks Menu Includes Contacts",
        "description": "Include the Contacts bookmarks in the bookmarks menu.",
        "type": "boolean"
      },
      "BookmarksMenuIncludesBookmarksToolbar": {
        "title": "Bookmarks Menu Includes Bookmarks Bar",
        "description": "Include the Bookmarks Bar bookmarks in the bookmarks menu.",
        "type": "boolean"
      },
      "BookmarksMenuIncludesRendezvous": {
        "title": "Bookmarks Menu Includes Bonjour",
        "description": "Include the Bonjour bookmarks in the bookmarks menu.",
        "type": "boolean"
      },
      "CanPromptForPushNotifications": {
        "title": "Allow Notifications",
        "description": "Allow websites to request permission to send notifications",
        "type": "boolean"
      },
      "CommandClickMakesTabs": {
        "title": "⌘-click opens a link in a new tab",
        "description": "Open command-clicked links in a new tab rather than a new window.",
        "type": "boolean"
      },
      "ConfirmClosingMultiplePages": {
        "title": "Confirm Closing Multiple Pages",
        "description": "Display a confirmation alert when multiple pages are closed at once.",
        "type": "boolean"
      },
      "DefaultBrowserPromptingState2": {
        "title": "Suppress Default Web Browser Prompt",
        "description": "When Safari is quit for the first time, if it detects it is not configured as the default browser it will present a prompt to the user to choose whether to keep the current default browser or change it to Safari. Enable this preference to suppress this prompt.",
        "type": "integer"
      },
      "DefaultBrowserPromptingState3": {
        "title": "Suppress Default Web Browser Banner",
        "description": "Suppresses the \"Make Safari your Default Browser?\" banner when Safari is launched and is not already set as the default browser.",
        "type": "integer"
      },
      "DefaultDatabaseQuota": {
        "title": "Default Space for Database Storage",
        "description": "Default space reserved for database storage.",
        "type": "integer"
      },
      "DidDisableIndividualExtensionsAfterRemovingOnOffSwitchIfNecessary": {
        "title": "Disable Extensions Immediately",
        "description": "Necessary for extensions to be disabled from first launch",
        "type": "boolean"
      },
      "DidShowWhatsNewInSafari": {
        "title": "Hide What's New in Safari Prompt",
        "description": "If enabled, hides any What's New with Safari prompts.",
        "type": "boolean"
      },
      "DownloadsClearingPolicy": {
        "title": "Downloads Clearing Policy",
        "description": "Policy for when to remove items from the Downloads window.",
        "type": "integer"
      },
      "DownloadsPath": {
        "title": "Downloads Location",
        "description": "File system path (can start with ~) where downloaded files will be saved.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExtensionsEnabled": {
        "title": "Enable Extensions",
        "description": "Allow extensions from the App Store to be enabled/disabled. This will only apply after Safari's first launch unless the \"Disable Extensions Immediately\" key is also set",
        "type": "boolean"
      },
      "HistoryAgeInDaysLimit": {
        "title": "History Age Limit",
        "description": "Policy for when to automatically remove items from History.",
        "type": "integer"
      },
      "HomePage": {
        "title": "Homepage",
        "description": "Homepage URL.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IncludeDevelopMenu": {
        "title": "Show Develop menu in menu bar",
        "description": "Include the Develop menu in the menu bar.",
        "type": "boolean"
      },
      "NewTabBehavior": {
        "title": "Contents of New Tabs",
        "description": "Policy for new tab contents.",
        "type": "integer"
      },
      "NewWindowBehavior": {
        "title": "Contents of New Windows",
        "description": "Policy for new window contents.",
        "type": "integer"
      },
      "OpenNewTabsInFront": {
        "title": "When a new tab or window opens, make it active",
        "description": "Select a tab when it is created.",
        "type": "boolean"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PrintHeadersAndFooters": {
        "title": "Print Headers and Footers",
        "description": "Print the URL, date, page title, and page number in headers and footers.",
        "type": "boolean"
      },
      "SendDoNotTrackHTTPHeader": {
        "title": "Do Not Track",
        "description": "Send \"Do Not Track\" HTTP Header",
        "type": "boolean"
      },
      "TabCreationPolicy": {
        "title": "Open pages in tabs instead of windows",
        "description": "Policy for when to create a tab instead of a window.",
        "type": "integer"
      },
      "com.apple.Safari.ContentPageGroupIdentifier.WebKit2DefaultFixedFontSize": {
        "title": "Default Fixed-width Font Size",
        "description": "The font size used when a webpage specifies a fixed-width font.",
        "type": "integer"
      },
      "com.apple.Safari.ContentPageGroupIdentifier.WebKit2DefaultFontSize": {
        "title": "Default Font Size",
        "description": "The font size used when a webpage does not specify a font size.",
        "type": "integer"
      },
      "com.apple.Safari.ContentPageGroupIdentifier.WebKit2DefaultTextEncodingName": {
        "title": "Default Text Encoding",
        "description": "The name of the text encoding to use for webpages that don't specify a text encoding. See http://www.iana.org/assignments/character-sets",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "com.apple.Safari.ContentPageGroupIdentifier.WebKit2FixedFontFamily": {
        "title": "Default Fixed-width Font",
        "description": "The font family used when a webpage specifies a fixed-width font.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabled": {
        "title": "Enable Java",
        "description": "",
        "type": "boolean"
      },
      "com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically": {
        "title": "Allow JavaScript to Open Windows Automatically",
        "description": "",
        "type": "boolean"
      },
      "com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptEnabled": {
        "title": "Enable JavaScript",
        "description": "",
        "type": "boolean"
      },
      "com.apple.Safari.ContentPageGroupIdentifier.WebKit2LoadsImagesAutomatically": {
        "title": "Display Images",
        "description": "Load and display images when a webpage is loaded.",
        "type": "boolean"
      },
      "com.apple.Safari.ContentPageGroupIdentifier.WebKit2MinimumFontSize": {
        "title": "Minimum Font Size",
        "description": "Minimum font size used for any webpage text.",
        "type": "integer"
      },
      "com.apple.Safari.ContentPageGroupIdentifier.WebKit2PluginsEnabled": {
        "title": "Enable Plug-ins",
        "description": "",
        "type": "boolean"
      },
      "com.apple.Safari.ContentPageGroupIdentifier.WebKit2PrivateBrowsingEnabled": {
        "title": "Private Browsing",
        "description": "Prevent Safari from keeping track of most user activities.",
        "type": "boolean"
      },
      "com.apple.Safari.ContentPageGroupIdentifier.WebKit2ShouldPrintBackgrounds": {
        "title": "Print Backgrounds",
        "description": "Print background images and colors.",
        "type": "boolean"
      },
      "com.apple.Safari.ContentPageGroupIdentifier.WebKit2StandardFontFamily": {
        "title": "Default Font",
        "description": "The font family used when a webpage does not specify a font.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks": {
        "title": "Press Tab to highlight each item on a webpage",
        "description": "Highlight links and form controls as you press the Tab key.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.Safari.SandboxBroker": {
    "title": "Safari Developer",
    "description": "Safari Developer settings",
    "properties": {
      "ShowDevelopMenu": {
        "title": "Show Develop Menu",
        "description": "If enabled, displays the 'Develop' menu bar item (Preferences > Advanced > Show Develop).",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.SetupAssistant.managed": {
    "title": "Setup Assistant",
    "description": "Setup Assistant settings",
    "properties": {
      "SkipAccessibility": {
        "title": "Skip Accessibility",
        "description": "Skips the accessibility setup window.",
        "type": "boolean"
      },
      "SkipAppearance": {
        "title": "Skip Appearance window",
        "description": "Skips the Choose Your Look window.",
        "type": "boolean"
      },
      "SkipCloudSetup": {
        "title": "Skip iCloud",
        "description": "Skips the Apple ID setup window.",
        "type": "boolean"
      },
      "SkipPrivacySetup": {
        "title": "Skip Privacy consent window",
        "description": "Skips the Privacy consent window.",
        "type": "boolean"
      },
      "SkipScreenTime": {
        "title": "Skip Screen Time window",
        "description": "Skips the Screen Time window.",
        "type": "boolean"
      },
      "SkipSetupItems": {
        "title": "iOS Skip Items",
        "description": "List of setup items to skip",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "Android",
                    "Android"
                  ],
                  [
                    "Appearance",
                    "Appearance"
                  ],
                  [
                    "AppleID",
                    "Apple ID"
                  ],
                  [
                    "Biometric",
                    "Biometric"
                  ],
                  [
                    "DeviceToDeviceMigration",
                    "Device to Device Migration"
                  ],
                  [
                    "Diagnostics",
                    "Diagnostics"
                  ],
                  [
                    "DisplayTone",
                    "Display Tone"
                  ],
                  [
                    "HomeButtonSensitivity",
                    "Home Button Sensitivity"
                  ],
                  [
                    "iCloudDiagnostics",
                    "iCloud Diagnostics"
                  ],
                  [
                    "iMessageAndFaceTime",
                    "iMessage and FaceTime"
                  ],
                  [
                    "Location",
                    "Location"
                  ],
                  [
                    "MessagingActivationUsingPhoneNumber",
                    "Messaging Activation Using Phone Number"
                  ],
                  [
                    "OnBoarding",
                    "OnBoarding"
                  ],
                  [
                    "Passcode",
                    "Passcode"
                  ],
                  [
                    "Payment",
                    "Payment"
                  ],
                  [
                    "Privacy",
                    "Privacy"
                  ],
                  [
                    "Restore",
                    "Restore"
                  ],
                  [
                    "RestoreCompleted",
                    "Restore Completed"
                  ],
                  [
                    "ScreenTime",
                    "ScreenTime"
                  ],
                  [
                    "SIMSetup",
                    "SIM Setup"
                  ],
                  [
                    "Siri",
                    "Siri"
                  ],
                  [
                    "SoftwareUpdate",
                    "Software Update"
                  ],
                  [
                    "TapToSetup",
                    "Tap To Setup"
                  ],
                  [
                    "TOS",
                    "Terms of Service"
                  ],
                  [
                    "UnlockWithWatch",
                    "Unlock with Apple Watch"
                  ],
                  [
                    "UpdateCompleted",
                    "Update Completed"
                  ],
                  [
                    "WatchMigration",
                    "Watch Migration"
                  ],
                  [
                    "Welcome",
                    "Welcome"
                  ],
                  [
                    "Zoom",
                    "Zoom"
                  ]
                ]
              }
            }
          ]
        }
      },
      "SkipSiriSetup": {
        "title": "Skip Siri",
        "description": "Skips the Siri setup window.",
        "type": "boolean"
      },
      "SkipTouchIDSetup": {
        "title": "Skip TouchID",
        "description": "Skips the TouchID setup window.",
        "type": "boolean"
      },
      "SkipTrueTone": {
        "title": "Skip True Tone Display window",
        "description": "Skips the True Tone Display window.",
        "type": "boolean"
      },
      "SkipUnlockWithWatch": {
        "title": "Skip Unlock with Apple Watch",
        "description": "Skips the Unlock with Apple Watch setup window.",
        "type": "boolean"
      },
      "SkipWallpaper": {
        "title": "Skip Wallpaper",
        "description": "If 'true', the system skips the Wallpaper selection window.",
        "type": "boolean"
      },
      "SkipiCloudStorageSetup": {
        "title": "Skip iCloud Storage window",
        "description": "Skips the iCloud Storage window.",
        "type": "boolean"
      }
    },
    "supervised": true,
    "unique": false
  },
  "com.apple.ShareKitHelper": {
    "title": "ShareKit",
    "description": "Configures available Share menu options",
    "properties": {
      "SHKAllowedShareServices": {
        "title": "Allowed Share Services",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "com.apple.share.AirDrop",
                    "AirDrop"
                  ],
                  [
                    "com.apple.share.Facebook",
                    "Facebook"
                  ],
                  [
                    "com.apple.share.LinkedIn.post",
                    "LinkedIn"
                  ],
                  [
                    "com.apple.share.Twitter",
                    "Twitter"
                  ],
                  [
                    "com.apple.share.Mail",
                    "Mail"
                  ],
                  [
                    "com.apple.share.Messages",
                    "Messages"
                  ],
                  [
                    "com.apple.Notes.SharingExtension",
                    "Notes"
                  ],
                  [
                    "com.apple.reminders.RemindersShareExtension",
                    "Reminders"
                  ],
                  [
                    "com.apple.share.Video",
                    "Video Services - Flickr, Vimeo, Tuduo, and Youku"
                  ],
                  [
                    "com.apple.share.addtoiphoto",
                    "Add to iPhoto"
                  ],
                  [
                    "com.apple.share.addtoaperture",
                    "Add to Aperture"
                  ],
                  [
                    "com.apple.share.readlater",
                    "Add to Reading List"
                  ],
                  [
                    "com.apple.share.SinaWeibo",
                    "Sina Weibo"
                  ]
                ]
              }
            }
          ]
        }
      },
      "SHKDeniedShareServices": {
        "title": "Denied Share Services",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "com.apple.share.AirDrop",
                    "AirDrop"
                  ],
                  [
                    "com.apple.share.Facebook",
                    "Facebook"
                  ],
                  [
                    "com.apple.share.LinkedIn.post",
                    "LinkedIn"
                  ],
                  [
                    "com.apple.share.Twitter",
                    "Twitter"
                  ],
                  [
                    "com.apple.share.Mail",
                    "Mail"
                  ],
                  [
                    "com.apple.share.Messages",
                    "Messages"
                  ],
                  [
                    "com.apple.Notes.SharingExtension",
                    "Notes"
                  ],
                  [
                    "com.apple.reminders.RemindersShareExtension",
                    "Reminders"
                  ],
                  [
                    "com.apple.share.Video",
                    "Video Services - Flickr, Vimeo, Tuduo, and Youku"
                  ],
                  [
                    "com.apple.share.addtoiphoto",
                    "Add to iPhoto"
                  ],
                  [
                    "com.apple.share.addtoaperture",
                    "Add to Aperture"
                  ],
                  [
                    "com.apple.share.readlater",
                    "Add to Reading List"
                  ],
                  [
                    "com.apple.share.SinaWeibo",
                    "Sina Weibo"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.Siri": {
    "title": "Siri",
    "description": "Siri settings",
    "properties": {
      "StatusMenuVisible": {
        "title": "Enable Status Menu",
        "description": "",
        "type": "boolean"
      },
      "UserHasDeclinedEnable": {
        "title": "UserHasDeclinedEnable",
        "description": "",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.SoftwareUpdate": {
    "title": "Software Update",
    "description": "Software Update settings",
    "properties": {
      "AllowPreReleaseInstallation": {
        "title": "Allow installation of macOS beta releases",
        "description": "",
        "type": "boolean"
      },
      "AutomaticCheckEnabled": {
        "title": "Automatically check for updates",
        "type": "boolean"
      },
      "AutomaticDownload": {
        "title": "Download newly available updates in the background",
        "type": "boolean"
      },
      "AutomaticallyInstallAppUpdates": {
        "title": "Automatically install App Store app updates",
        "type": "boolean"
      },
      "AutomaticallyInstallMacOSUpdates": {
        "title": "Automatically install macOS updates",
        "type": "boolean"
      },
      "CatalogURL": {
        "title": "Catalog URL",
        "description": "Specify a URL of the desired software update catalog in the form of http://server.example.com:8088/index.sucatalog",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ConfigDataInstall": {
        "title": "Install XProtect, MRT, & Gatekeeper updates automatically",
        "type": "boolean"
      },
      "CriticalUpdateInstall": {
        "title": "Install security updates automatically",
        "description": "These are not regular security updates. An example is the OS X NTP Security Update 1.0 update.",
        "type": "boolean"
      },
      "ManagedDeferredInstallDelay": {
        "title": "Update Delay",
        "description": "The duration that software updates will be delayed.",
        "type": "integer"
      },
      "SUDisableEVCheck": {
        "title": "Disable Extended Validation check of TLS certificate.",
        "description": "This option was needed during Mojave betas which required https.",
        "type": "boolean"
      },
      "forceDelayedSoftwareUpdates": {
        "title": "Force Update Delay",
        "description": "Software updates will be delayed by the duration defined by ManagedDeferredInstallDelay.",
        "type": "boolean"
      },
      "restrict-software-update-require-admin-to-install": {
        "title": "Restrict app installations to admin users",
        "description": "This key has the same function as the key restrict-store-require-admin-to-install in the com.apple.appstore payload.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.Spotlight": {
    "title": "Spotlight",
    "description": "Spotlight Search settings",
    "properties": {
      "orderedItems": {
        "title": "orderedItems",
        "description": "Add each Spotlight search item in the order you want them to be displayed in Spotlight. As these items are all contained in a single array, to manage any single item each individual Spotlight search category needs to be added below.  You may need to logout after installing the profile to verify the results.",
        "type": {
          "array": [
            {
              "dictionary": {
                "enabled": {
                  "title": "enabled",
                  "description": "Set this preference to 'false' to disable the applicable Spotlight search option.",
                  "type": "boolean"
                },
                "name": {
                  "title": "name",
                  "description": "Spotlight Search Item Category",
                  "type": {
                    "string": {
                      "rangeList": [
                        [
                          "APPLICATIONS",
                          "Applications"
                        ],
                        [
                          "BOOKMARKS",
                          "Bookmarks & History"
                        ],
                        [
                          "MENU_EXPRESSION",
                          "Calculator"
                        ],
                        [
                          "CONTACT",
                          "Contacts"
                        ],
                        [
                          "MENU_CONVERSION",
                          "Conversion"
                        ],
                        [
                          "MENU_DEFINITION",
                          "Definition"
                        ],
                        [
                          "SOURCE",
                          "Developer"
                        ],
                        [
                          "DOCUMENTS",
                          "Documents"
                        ],
                        [
                          "EVENT_TODO",
                          "Events & Reminders"
                        ],
                        [
                          "DIRECTORIES",
                          "Folders"
                        ],
                        [
                          "FONTS",
                          "Fonts"
                        ],
                        [
                          "IMAGES",
                          "Images"
                        ],
                        [
                          "MESSAGES",
                          "Mail & Messages"
                        ],
                        [
                          "MOVIES",
                          "Movies"
                        ],
                        [
                          "MUSIC",
                          "Music"
                        ],
                        [
                          "MENU_OTHER",
                          "Other"
                        ],
                        [
                          "PDF",
                          "PDF Documents"
                        ],
                        [
                          "PRESENTATIONS",
                          "Presentations"
                        ],
                        [
                          "MENU_SPOTLIGHT_SUGGESTIONS",
                          "Spotlight Suggestions"
                        ],
                        [
                          "SPREADSHEETS",
                          "Spreadsheets"
                        ],
                        [
                          "SYSTEM_PREFS",
                          "System Preferences"
                        ]
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.SubmitDiagInfo": {
    "title": "Submit Diagnostic Information",
    "description": "Use this section to define settings for Submit Diagnostic Information",
    "properties": {
      "AutoSubmit": {
        "title": "Automatically Submit Diagnostic Information",
        "description": "Configures the automatic submission of diagnostic information to Apple.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.SystemConfiguration": {
    "title": "Proxies",
    "description": "Proxies settings",
    "properties": {
      "Proxies": {
        "title": "Proxy Configuration",
        "description": "macOS System Proxy Configuration",
        "type": {
          "dictionary": {
            "ExceptionsList": {
              "title": "Exceptions",
              "description": "Bypass proxy settings for these Hosts & Domains.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "FTPEnable": {
              "title": "Enable FTP Proxy",
              "description": "",
              "type": "integer"
            },
            "FTPPassive": {
              "title": "Use Passive FTP Mode (PASV)",
              "description": "",
              "type": "integer"
            },
            "FTPPort": {
              "title": "FTP Proxy Port",
              "description": "The port on which to connect to the ftp proxy server.",
              "type": "integer"
            },
            "FTPProxy": {
              "title": "FTP Proxy Hostname",
              "description": "The IP address or fully qualified domain name (FQDN) of the ftp proxy server.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "FallBackAllowed": {
              "title": "Allow Proxy PAC Fallback",
              "description": "Enables fallback when set to 1. The default value is 1, except for managed devices whose default is 0.",
              "type": "integer"
            },
            "GopherEnable": {
              "title": "Enable Gopher Proxy",
              "description": "",
              "type": "integer"
            },
            "GopherPort": {
              "title": "Gopher Proxy Port",
              "description": "The port on which to connect to the gopher proxy server.",
              "type": "integer"
            },
            "GopherProxy": {
              "title": "Gopher Proxy Hostname",
              "description": "The IP address or fully qualified domain name (FQDN) of the gopher proxy server.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "HTTPEnable": {
              "title": "Enable HTTP Proxy",
              "description": "",
              "type": "integer"
            },
            "HTTPPort": {
              "title": "HTTP Proxy Port",
              "description": "The port on which to connect to the http proxy server.",
              "type": "integer"
            },
            "HTTPProxy": {
              "title": "HTTP Proxy Hostname",
              "description": "The IP address or fully qualified domain name (FQDN) of the http proxy server.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "HTTPSEnable": {
              "title": "Enable HTTPS Proxy",
              "description": "",
              "type": "integer"
            },
            "HTTPSPort": {
              "title": "HTTPS Proxy Port",
              "description": "The port on which to connect to the https proxy server.",
              "type": "integer"
            },
            "HTTPSProxy": {
              "title": "HTTPS Proxy Hostname",
              "description": "The IP address or fully qualified domain name (FQDN) of the https proxy server.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ProxyAutoConfigEnable": {
              "title": "Enable Automatic Proxy Configuration",
              "description": "Enable the use of a Proxy AutoConfig file.",
              "type": "integer"
            },
            "ProxyAutoConfigURLString": {
              "title": "Automatic Proxy Configuration URL",
              "description": "URL to the Automatic Proxy Configuration file.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ProxyCaptiveLoginAllowed": {
              "title": "Allow Proxy Bypass for Captive Portal Logins",
              "description": "Allow the device to bypass the proxy server to display the login page for captive networks.",
              "type": "boolean"
            },
            "RTSPEnable": {
              "title": "Enable RTSP Steaming Proxy",
              "description": "",
              "type": "integer"
            },
            "RTSPPort": {
              "title": "RTSP Proxy Port",
              "description": "The port on which to connect to the rtsp proxy server.",
              "type": "integer"
            },
            "RTSPProxy": {
              "title": "RTSP Proxy Hostname",
              "description": "The IP address or fully qualified domain name (FQDN) of the rtsp proxy server.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "SOCKSEnable": {
              "title": "Enable SOCKS Proxy",
              "description": "",
              "type": "integer"
            },
            "SOCKSPortInteger": {
              "title": "SOCKS Proxy Port",
              "description": "The port on which to connect to the socks proxy server.",
              "type": "integer"
            },
            "SOCKSProxy": {
              "title": "SOCKS Proxy Hostname",
              "description": "The IP address or fully qualified domain name (FQDN) of the socks proxy server.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.TCC.configuration-profile-policy": {
    "title": "Privacy Preferences Policy Control",
    "description": "Configures Privacy Preferences Policy Control settings",
    "properties": {
      "Services": {
        "title": "Services",
        "description": "Keys are limited to the privacy service names listed below. Each key is an array of dictionaries describing the app or process to which access is given. In the case of conflicting specifications, the most restrictive setting (deny) will be used.",
        "type": {
          "dictionary": {
            "Accessibility": {
              "title": "Accessibility",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "AddressBook": {
              "title": "Contacts",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "AppleEvents": {
              "title": "AppleEvents",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "AEReceiverCodeRequirement": {
                        "title": "AEReceiverCodeRequirement",
                        "description": "Code requirement for the receiving binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "AEReceiverIdentifier": {
                        "title": "AEReceiverIdentifier",
                        "description": "The identifier of the process receiving an ApplEvent sent by the Identifier process.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "AEReceiverIdentifierType": {
                        "title": "AEReceiverIdentifierType",
                        "description": "The type of AEReceiverIdentifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "Calendar": {
              "title": "Calendar",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "Camera": {
              "title": "Camera",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "FileProviderPresence": {
              "title": "FileProviderPresence",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "ListenEvent": {
              "title": "ListenEvent",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "MediaLibrary": {
              "title": "MediaLibrary",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "Microphone": {
              "title": "Microphone",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "Photos": {
              "title": "Photos",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "PostEvent": {
              "title": "PostEvent",
              "description": "Specifies the policies for the application to use CoreGraphics APIs to send CGEvents to the system event stream.",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "Reminders": {
              "title": "Reminders",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "ScreenCapture": {
              "title": "ScreenCapture",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "SpeechRecognition": {
              "title": "SpeechRecognition",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "SystemPolicyAllFiles": {
              "title": "SystemPolicyAllFiles",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "SystemPolicyAppBundles": {
              "title": "App Management",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "SystemPolicyAppData": {
              "title": "SystemPolicyAppData",
              "description": "Allows the application to access data of other apps.",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "AEReceiverCodeRequirement": {
                        "title": "AEReceiverCodeRequirement",
                        "description": "The code requirement for the receiving binary. This code requirement is required for AppleEvents service; not valid for other services.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "AEReceiverIdentifier": {
                        "title": "AEReceiverIdentifier",
                        "description": "The identifier of the process receiving an AppleEvent sent by the Identifier process. This identifier is required for AppleEvents service; not valid for other services.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "AEReceiverIdentifierType": {
                        "title": "AEReceiverIdentifierType",
                        "description": "The type of AEReceiverIdentifier value, either 'bundleID' or 'path'. This setting is required for AppleEvents service; not valid for other services.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If 'true', access is granted; otherwise, the process doesn't have access. The user isn't prompted and can't change this value.",
                        "type": "boolean"
                      },
                      "Authorization": {
                        "title": "Authorization",
                        "description": "The 'Authorization' key is an optional replacement for the 'Allowed' key. Every payload must specify either 'Authorization' or 'Allowed', but not both.\n'Allow': Equivalent to a 'true' value for the 'Allowed' key.\n'Deny': Equivalent to a 'false' value for the 'Allowed' key.\n'AllowStandardUserToSetSystemService:' allows a standard (non-admin) user to configure the permissions for the specified app in the Privacy preferences for services that otherwise require admin authorization. 'AllowStandardUserToSetSystemService' is only valid for the 'ListenEvent' and 'ScreenCapture' services.\nAvailable in macOS 11 and later.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "CodeRequirement": {
                        "title": "CodeRequirement",
                        "description": "Obtained via the command ''codesign -display -r -''.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not used.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "IdentifierType",
                        "description": "The type of identifier value. Application bundles must be identified by bundle ID. Nonbundled binaries must be identified by installation path. Helper tools embedded within an application bundle automatically inherit the permissions of their enclosing app bundle.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If 'true', statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "SystemPolicyDesktopFolder": {
              "title": "SystemPolicyDesktopFolder",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "SystemPolicyDocumentsFolder": {
              "title": "SystemPolicyDocumentsFolder",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "SystemPolicyDownloadsFolder": {
              "title": "SystemPolicyDownloadsFolder",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "SystemPolicyNetworkVolumes": {
              "title": "SystemPolicyNetworkVolumes",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "SystemPolicyRemovableVolumes": {
              "title": "SystemPolicyRemovableVolumes",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            },
            "SystemPolicySysAdminFiles": {
              "title": "System Policy Sys Admin Files",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Allowed": {
                        "title": "Allowed",
                        "description": "If set to true, access is granted. Otherwise the process does not have access. The user is not prompted and cannot change this value.",
                        "type": "boolean"
                      },
                      "CodeRequirement": {
                        "title": "Code Requirement",
                        "description": "The designated requirement describing the code signature of this executable.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Comment": {
                        "title": "Comment",
                        "description": "Not Used",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Identifier": {
                        "title": "Identifier",
                        "description": "The bundle ID or installation path of the binary.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IdentifierType": {
                        "title": "Identifier Type",
                        "description": "The type of Identifier value.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "bundleID",
                                "Bundle ID"
                              ],
                              [
                                "path",
                                "Path"
                              ]
                            ]
                          }
                        }
                      },
                      "StaticCode": {
                        "title": "StaticCode",
                        "description": "If set to true, statically validate the code requirement. Used only if the process invalidates its dynamic code signature.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.TextEdit": {
    "title": "TextEdit",
    "description": "TextEdit settings",
    "properties": {
      "AddExtensionToNewPlainTextFiles": {
        "title": "AddExtensionToNewPlainTextFiles",
        "description": "Set this preference to 'false' to forcibly disable adding the \".txt\" extension to plain text files.",
        "type": "boolean"
      },
      "CheckGrammarWithSpelling": {
        "title": "CheckGrammarWithSpelling",
        "description": "Set this preference to 'false' to forcibly disable grammar checking with spelling.",
        "type": "boolean"
      },
      "CheckSpellingWhileTyping": {
        "title": "CheckSpellingWhileTyping",
        "description": "Set this preference to 'false' to forcibly disable spell checking while typing.",
        "type": "boolean"
      },
      "CorrectSpellingAutomatically": {
        "title": "CorrectSpellingAutomatically",
        "description": "Set this preference to 'false' to forcibly disable automatic spelling correction.",
        "type": "boolean"
      },
      "DataDetectors": {
        "title": "DataDetectors",
        "description": "Set this preference to 'true' to forcibly enable data detectors. Data detectors can automatically detect date, time, and contact information, which can then be used to update a contact, create a new Calendar event, and more.",
        "type": "boolean"
      },
      "HTMLEncoding": {
        "title": "HTMLEncoding",
        "description": "",
        "type": "integer"
      },
      "HeightInChars": {
        "title": "HeightInChars",
        "description": "By default, the Window Size height is 30 lines. Enable this setting to change this default window height.",
        "type": "integer"
      },
      "IgnoreHTML": {
        "title": "IgnoreHTML",
        "description": "Set this preference to 'true' to display .html files as HTML code instead of formatted text when opening a file.",
        "type": "boolean"
      },
      "IgnoreRichText": {
        "title": "IgnoreRichText",
        "description": "Set this preference to 'true' to display .rtf files as RTF code instead of formatted text when opening a file.",
        "type": "boolean"
      },
      "NSDocumentSuppressTempVersionStoreWarning": {
        "title": "NSDocumentSuppressTempVersionStoreWarning",
        "description": "Set this preference to 'false' to suppress TextEdit messages when closing documents saved on storage volumes that don't support Apple's permanent version storage. This will not inform users about being unable to access these older versions via Time Machine.",
        "type": "boolean"
      },
      "NSFixedPitchFont": {
        "title": "Plain Text Font",
        "description": "Enter the name of the desired plain text font.  This defaults to Menlo.\n\nString format: Find your desired font file in either /System/Library/Fonts or /Library/Fonts. Whatever the name of this font file is is exactly what needs to be entered for the font name. Additionally, if you desire to use a font typeset that is not the default - Plain, Regular, etc. - , you can specify this by adding the name of the typeset to end of the font name string with a hyphen inbetween.\n\nEx. AlBayan-Bold\nEx. AmericanTypewriter-Condensed\nEx. ArialMT",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "NSFixedPitchFontSize": {
        "title": "Plain Text Font Size",
        "description": "Enter the desired font size for plain text documents.",
        "type": "integer"
      },
      "NSFont": {
        "title": "Rich Text Font",
        "description": "Enter the name of the desired rich text font. This defaults to Helvetica.\n\nString format: Find your desired font file in either /System/Library/Fonts or /Library/Fonts. Whatever the name of this font file is is exactly what needs to be entered for the font name. Additionally, if you desire to use a font typeset that is not the default - Plain, Regular, etc. - , you can specify this by adding the name of the typeset to end of the font name string with a hyphen inbetween.\n\nEx. AlBayan-Bold\nEx. AmericanTypewriter-Condensed\nEx. ArialMT",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "NSFontSize": {
        "title": "Rich Text Font Size",
        "description": "Enter the desired font size for rich text documents.",
        "type": "integer"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_DocSettings": {
        "title": "PFC_SegmentedControl_DocSettings",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PlainTextEncoding": {
        "title": "PlainTextEncoding",
        "description": "Set this preference to choose a specific encoding method for opening plain text files, rather than \"Automatic\".",
        "type": "integer"
      },
      "PlainTextEncodingForWrite": {
        "title": "PlainTextEncodingForWrite",
        "description": "Set this preference to choose a specific encoding method for saving plain text files, rather than \"Automatic\".",
        "type": "integer"
      },
      "PreserveDocumentWhitespace": {
        "title": "PreserveDocumentWhitespace",
        "description": "Set this preference to 'false' to not include code that preserves the white space in your document's formatted text.",
        "type": "boolean"
      },
      "RichText": {
        "title": "Text Default File Format",
        "description": "Enable this preference to forcibly apply a default TextEdit file format. By default, TextEdit defaults to rich text - .rtf -, rather than plain text - .txt",
        "type": "integer"
      },
      "ShowPageBreaks": {
        "title": "ShowPageBreaks",
        "description": "Set this preference to 'true' to forcibly make text wrap to document margins, rather than window boundaries.",
        "type": "boolean"
      },
      "ShowRuler": {
        "title": "ShowRuler",
        "description": "Set this preference to 'false' to not show the ruler in rich text documents by default.",
        "type": "boolean"
      },
      "SmartCopyPaste": {
        "title": "SmartCopyPaste",
        "description": "Set this preference to 'false' to forcibly disable \"smart\" copy/paste.",
        "type": "boolean"
      },
      "SmartLinks": {
        "title": "SmartLinks",
        "description": "Set this preference to 'false' to forcibly disable \"smart\" links.",
        "type": "boolean"
      },
      "SmartQuotes": {
        "title": "SmartQuotes",
        "description": "Set this preference to 'false' to forcibly disable \"smart\" quotes.",
        "type": "boolean"
      },
      "SmartSubstitutionsEnabledInRichTextOnly": {
        "title": "SmartSubstitutionsEnabledInRichTextOnly",
        "description": "Set this preference to 'true' to enable \"smart\" substitutions for quotes and dashes in rich text documents.  Takes effect for newly opened documents and after \"Make Plain Text\".",
        "type": "boolean"
      },
      "TextReplacement": {
        "title": "TextReplacement",
        "description": "Set this preference to 'false' to forcibly disable text replacement.",
        "type": "boolean"
      },
      "UseEmbeddedCSS": {
        "title": "UseEmbeddedCSS",
        "description": "Enable this setting for HTML Embedded CSS styling.\n\nex. UseEmbeddedCSS = true == \"Embedded CSS\"\nex. UseEmbeddedCSS = true & UseInlineCSS = false == \"Embedded CSS\"\nex. UseEmbeddedCSS = false & UseInlineCSS = false == \"No CSS\"",
        "type": "boolean"
      },
      "UseInlineCSS": {
        "title": "UseInlineCSS",
        "description": "Enable this setting for HTML Inline CSS styling.\n\nex. UseInlineCSS = true == \"Inline CSS\"\nex. UseInlineCSS = true & UseEmbeddedCSS = false == \"Inline CSS\"\nex. UseInlineCSS = false & UseEmbeddedCSS = false == \"No CSS\"",
        "type": "boolean"
      },
      "UseTransitionalDocType": {
        "title": "UseTransitionalDocType",
        "description": "Set this preference to 'false' to use the \"Strict\" HTML or XHTML document type, rather than \"Transitional\".\n\nex. UseTransiontalDocType = false & UseXHTMLDocType = false == \"HTML Strict\"\nex. UseTransiontalDocType = false & UseXHTMLDocType = true == \"XHTML Strict\"\nex. UseTransiontalDocType = true & UseXHTMLDocType = false == \"HTML Transitional\"\nex. UseTransiontalDocType = true & UseXHTMLDocType = true == \"XHTML Transitional\"",
        "type": "boolean"
      },
      "UseXHTMLDocType": {
        "title": "UseXHTMLDocType",
        "description": "Set this preference to 'false' to use the HTML, rather than the XHTML document type.\n\nex. UseTransiontalDocType = false & UseXHTMLDocType = false == \"HTML Strict\"\nex. UseTransiontalDocType = false & UseXHTMLDocType = true == \"XHTML Strict\"\nex. UseTransiontalDocType = true & UseXHTMLDocType = false == \"HTML Transitional\"\nex. UseTransiontalDocType = true & UseXHTMLDocType = true == \"XHTML Transitional\"",
        "type": "boolean"
      },
      "WidthInChars": {
        "title": "WidthInChars",
        "description": "By default, the Window Size width is 90 lines. Enable this setting to change this default window width.",
        "type": "integer"
      },
      "author": {
        "title": "Default Document Author",
        "description": "Enter a default author name for documents.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "company": {
        "title": "Default Document Organization / Company",
        "description": "Enter a default organization / company for documents.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "copyright": {
        "title": "Default Document Copyright",
        "description": "Enter a default copyright for documents.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.TimeMachine": {
    "title": "Time Machine",
    "description": "Time Machine settings",
    "properties": {
      "DoNotOfferNewDisksForBackup": {
        "title": "DoNotOfferNewDisksForBackup",
        "description": "",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.airplay": {
    "title": "AirPlay",
    "description": "AirPlay settings",
    "properties": {
      "AllowList": {
        "title": "Allow List",
        "description": "List of MAC addresses of AirPlay destinations that the device is restricted to. If this list is empty, the device can connect to any device.",
        "type": {
          "array": [
            {
              "dictionary": {
                "DeviceID": {
                  "title": "Device ID",
                  "description": "The AirPlay destination's MAC address",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        },
        "supervised": true
      },
      "Passwords": {
        "title": "Passwords",
        "description": "Sets passwords for known AirPlay destinations",
        "type": {
          "array": [
            {
              "dictionary": {
                "DeviceID": {
                  "title": "Device ID",
                  "description": "The AirPlay destination's MAC address",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "DeviceName": {
                  "title": "Device Name",
                  "description": "The AirPlay destination's name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Password": {
                  "title": "Password",
                  "description": "The password for the AirPlay destination",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "Whitelist": {
        "title": "Allowlist",
        "description": "List of MAC addresses of AirPlay destinations that the device is restricted to. If this list is empty, the device can connect to any device.",
        "type": {
          "array": [
            {
              "dictionary": {
                "DeviceID": {
                  "title": "Device ID",
                  "description": "The AirPlay destination's MAC address",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        },
        "supervised": true
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.airplay.security": {
    "title": "AirPlay Security",
    "description": "Use the AirPlay Security payload to preconfigure access and security settings when connecting to Apple TV.",
    "properties": {
      "AccessType": {
        "title": "Access",
        "description": "Network requirement for devices that connect to Apple TV using airplay.",
        "type": {
          "string": {
            "rangeList": [
              [
                "ANY",
                "Any device"
              ],
              [
                "WIFI_ONLY",
                "Devices on the same network only"
              ]
            ]
          }
        }
      },
      "Password": {
        "title": "Password",
        "description": "The Airplay Password",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecurityType": {
        "title": "Security",
        "description": "Security requirement for for devices that connect to Apple TV using airplay.",
        "type": {
          "string": {
            "rangeList": [
              [
                "NONE",
                "None (deprecated since tvOS 11.3)"
              ],
              [
                "PASSCODE_ONCE",
                "First-time passcode"
              ],
              [
                "PASSCODE_ALWAYS",
                "Passcode"
              ],
              [
                "PASSWORD",
                "Password"
              ]
            ]
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.airprint": {
    "title": "AirPrint",
    "description": "AirPrint settings",
    "properties": {
      "AirPrint": {
        "title": "Air print",
        "description": "List of printers",
        "type": {
          "array": [
            {
              "dictionary": {
                "ForceTLS": {
                  "title": "Force TLS",
                  "description": "Enable and force TLS for AirPrint connections",
                  "type": "boolean"
                },
                "IPAddress": {
                  "title": "IP Address or Hostname",
                  "description": "The AirPrint printer's IP address or hostname",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Port": {
                  "title": "Port",
                  "description": "The AirPrint printer's listening port number",
                  "type": "integer"
                },
                "ResourcePath": {
                  "title": "Resource Path",
                  "description": "The AirPrint printer's resource path",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.app.lock": {
    "title": "Single App Mode",
    "description": "Single App Mode settings",
    "properties": {
      "App": {
        "title": "App",
        "description": "A dictionary containing information about the app",
        "type": {
          "dictionary": {
            "Identifier": {
              "title": "Identifier",
              "description": "The bundle identifier of the application.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Options": {
              "title": "Options",
              "description": "Settings enforced when in Single App Mode",
              "type": {
                "dictionary": {
                  "DisableAutoLock": {
                    "title": "Disable Auto Lock",
                    "description": "Disable Auto Lock",
                    "type": "boolean"
                  },
                  "DisableDeviceRotation": {
                    "title": "Disable Device Rotation",
                    "description": "Disable Device Rotation",
                    "type": "boolean"
                  },
                  "DisableRingerSwitch": {
                    "title": "Disable Ringer Switch",
                    "description": "Disable Ringer Switch",
                    "type": "boolean"
                  },
                  "DisableSleepWakeButton": {
                    "title": "Disable Sleep Wake Button",
                    "description": "Disable Sleep Wake Button",
                    "type": "boolean"
                  },
                  "DisableTouch": {
                    "title": "Disable Touch",
                    "description": "Disable Touch Screen",
                    "type": "boolean"
                  },
                  "DisableVolumeButtons": {
                    "title": "Disable Volume Buttons",
                    "description": "Disable Volume Buttons",
                    "type": "boolean"
                  },
                  "EnableAssistiveTouch": {
                    "title": "Enable Assistive Touch",
                    "description": "Enable Assistive Touch",
                    "type": "boolean"
                  },
                  "EnableInvertColors": {
                    "title": "Enable Invert Colors",
                    "description": "Enable Inverted Colors",
                    "type": "boolean"
                  },
                  "EnableMonoAudio": {
                    "title": "Enable Mono Audio",
                    "description": "Enable Mono Audio",
                    "type": "boolean"
                  },
                  "EnableSpeakSelection": {
                    "title": "Enable Speak Selection",
                    "description": "Enable Speak Selection",
                    "type": "boolean"
                  },
                  "EnableVoiceOver": {
                    "title": "Enable Voice Over",
                    "description": "Enable Voice Over",
                    "type": "boolean"
                  },
                  "EnableZoom": {
                    "title": "Enable Zoom",
                    "description": "Enable Zoom",
                    "type": "boolean"
                  }
                }
              }
            },
            "UserEnabledOptions": {
              "title": "User Enabled Options",
              "description": "Allow the user to change these settings when in Single App Mode",
              "type": {
                "dictionary": {
                  "AssistiveTouch": {
                    "title": "Assistive Touch",
                    "description": "Allow user to enable Assistive Touch",
                    "type": "boolean"
                  },
                  "InvertColors": {
                    "title": "Invert Colors",
                    "description": "Allow user to enable Inverted Colors",
                    "type": "boolean"
                  },
                  "VoiceOver": {
                    "title": "Voice Over",
                    "description": "Allow user to enable Voice Over",
                    "type": "boolean"
                  },
                  "Zoom": {
                    "title": "Zoom",
                    "description": "Allow user to enable Zoom",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "supervised": true,
    "unique": true
  },
  "com.apple.applicationaccess": {
    "title": "Restrictions (tvOS)",
    "description": "tvOS Restrictions preferences",
    "properties": {
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "allowAirPlayIncomingRequests": {
        "title": "Allow incoming AirPlay requests",
        "description": "",
        "type": "boolean",
        "supervised": true
      },
      "allowAutomaticScreenSaver": {
        "title": "Allow Automatic Screen Saver",
        "type": "boolean"
      },
      "allowBookstoreErotica": {
        "title": "Allow explicit sexual content in iBooks Store",
        "description": "If set to false, the user will not be able to download media from Apple Books that has been tagged as erotica.",
        "type": "boolean"
      },
      "allowCamera": {
        "title": "Allow Camera",
        "description": "If 'false', disables the camera, and its icon is removed from the Home screen. Users are unable to take photographs. This restriction is deprecated on unsupervised devices and will be supervised only in a future release.  Available in iOS 4 and later, and macOS 10.11 and later.",
        "type": "boolean"
      },
      "allowCloudPrivateRelay": {
        "title": "Allow iCloud Private Relay",
        "description": "If set to false, prevents the use of iCloud Private Relay.",
        "type": "boolean"
      },
      "allowDeviceNameModification": {
        "title": "Allow modifying device name",
        "description": "If set to false, prevents device name from being changed.",
        "type": "boolean",
        "supervised": true
      },
      "allowExplicitContent": {
        "title": "Allow playback of explicit music, podcasts, and iTunes U",
        "description": "When false, explicit music or video content purchased from the iTunes Store is hidden. Explicit content is marked as such by content providers, such as record labels, when sold through the iTunes Store. This key is deprecated on unsupervised devices.",
        "type": "boolean",
        "supervised": true
      },
      "allowInAppPurchases": {
        "title": "Allow in app purchases",
        "description": "When false, prohibits in-app purchasing.",
        "type": "boolean"
      },
      "allowListedAppBundleIDs": {
        "title": "Allowed Apps",
        "description": "When populated, prevents displaying or launching apps other than the listed ones. Disabled when using the Blocked Apps preference.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        },
        "supervised": true
      },
      "allowPasswordProximityRequests": {
        "title": "Allow proximity based password sharing requests",
        "description": "If set to false, a user's device will not request passwords from nearby devices.",
        "type": "boolean",
        "supervised": true
      },
      "allowRemoteAppPairing": {
        "title": "Allow pairing with Remote app",
        "description": "If set to false, the Apple TV cannot be paired for use with the Remote app or Control Center widget.",
        "type": "boolean"
      },
      "blacklistedAppBundleIDs": {
        "title": "Restrict App Usage - Denylist",
        "description": "If enabled, cannot use the allowlist to restrict app usage.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        },
        "supervised": true
      },
      "blockedAppBundleIDs": {
        "title": "Blocked Apps",
        "description": "When populated, prevents displaying or launching listed apps. Disabled when using the Allowed Apps preference.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        },
        "supervised": true
      },
      "enforcedSoftwareUpdateDelay": {
        "title": "Deferred Software Updates Delay",
        "description": "Number of days the software updates will be hidden from the user.",
        "type": "integer",
        "supervised": true
      },
      "forceAirPlayIncomingRequestsPairingPassword": {
        "title": "Require passcode on first AirPlay pairing",
        "description": "It is recommended to use the AirPlay Security Payload.",
        "type": "boolean"
      },
      "forceAssistantProfanityFilter": {
        "title": "Enable Siri profanity filter",
        "description": "When true, forces the use of the profanity filter assistant.",
        "type": "boolean",
        "supervised": true
      },
      "forceAutomaticDateAndTime": {
        "title": "Force automatic date and time",
        "description": "",
        "type": "boolean",
        "supervised": true
      },
      "forceDelayedSoftwareUpdates": {
        "title": "Defer Software Updates",
        "description": "If set to true, delays user visibility of Software Updates.",
        "type": "boolean",
        "supervised": true
      },
      "ratingApps": {
        "title": "Allowed content ratings - Apps",
        "description": "This value defines the maximum level of app content that is allowed on the device. Not all integer values are used in each region. Apple's Configuration Profile documentation includes the values for the US, so you may need to do some sleuthing here.",
        "type": "integer"
      },
      "ratingMovies": {
        "title": "Allowed content ratings - Movies",
        "description": "This value defines the maximum level of movie content that is allowed on the device. Not all integer values are used in each region. Apple's Configuration Profile documentation includes the values for the US, so you may need to do some sleuthing here.",
        "type": "integer"
      },
      "ratingRegion": {
        "title": "Ratings region",
        "description": "This 2-letter key is used by profile tools to display the proper ratings for given region. It is not recognized or reported by the client.",
        "type": {
          "string": {
            "rangeList": [
              [
                "au",
                "Australia"
              ],
              [
                "ca",
                "Canada"
              ],
              [
                "fr",
                "France"
              ],
              [
                "de",
                "Germany"
              ],
              [
                "ie",
                "Ireland"
              ],
              [
                "jp",
                "Japan"
              ],
              [
                "nz",
                "New Zealand"
              ],
              [
                "gb",
                "United Kingdom"
              ],
              [
                "us",
                "United States"
              ]
            ]
          }
        }
      },
      "ratingTVShows": {
        "title": "Allowed content ratings - TV Shows",
        "description": "This value defines the maximum level of TV content that is allowed on the device. Not all integer values are used in each region. Apple's Configuration Profile documentation includes the values for the US, so you may need to do some sleuthing here.",
        "type": "integer"
      },
      "whitelistedAppBundleIDs": {
        "title": "Restrict App Usage - Allowlist",
        "description": "If enabled, cannot use the denylist to restrict app usage.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        },
        "supervised": true
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.applicationaccess.new": {
    "title": "Parental Controls: Application Access",
    "description": "Configures Parental Controls: Application Access settings",
    "properties": {
      "familyControlsEnabled": {
        "title": "Enable application access restrictions",
        "description": "Set to true to enable application access restrictions.",
        "type": "boolean"
      },
      "pathBlackList": {
        "title": "Denylisted Application Folders",
        "description": "The user can never launch applications in these folders.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "pathWhiteList": {
        "title": "Allowlisted Application Folders",
        "description": "The user can always launch applications in these folders.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "whiteList": {
        "title": "Allowlisted Applications by Code Signature",
        "description": "List of code signatures for applications that are allowed to run.",
        "type": {
          "array": [
            {
              "dictionary": {
                "appID": {
                  "title": "Code Requirement",
                  "description": "The designated requirement describing the code signature of this executable.",
                  "type": "data"
                },
                "appStore": {
                  "title": "App Store",
                  "description": "",
                  "type": "boolean"
                },
                "bundleID": {
                  "title": "Bundle Identifier",
                  "description": "Bundle ID of application.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "detachedSignature": {
                  "title": "Detached Signature",
                  "description": "The required signature for an unsigned binary",
                  "type": "data"
                },
                "disabled": {
                  "title": "Disabled",
                  "description": "Specifies whether this application information is to be included in the allowlist or not.",
                  "type": "boolean"
                },
                "displayName": {
                  "title": "Display Name",
                  "description": "Display name of the application.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "subApps": {
                  "title": "Sub Apps",
                  "description": "For applications that include nested helper applications, describes the signatures of embedded applications.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      },
                      {
                        "string": {
                          "rangeList": []
                        }
                      },
                      "data",
                      "data",
                      "boolean",
                      "boolean"
                    ]
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.appstore": {
    "title": "App Store",
    "description": "App Store settings",
    "properties": {
      "DisableSoftwareUpdateNotifications": {
        "title": "Disable software update notifications",
        "description": "Disable software update notifications",
        "type": "boolean"
      },
      "restrict-store-disable-app-adoption": {
        "title": "Disable App Adoption by users",
        "description": "Disable App Adoption by users",
        "type": "boolean"
      },
      "restrict-store-mdm-install-softwareupdate-only": {
        "title": "Restrict app installations to MDM-installed apps and software updates",
        "description": "Restrict app installations to MDM-installed apps and software updates",
        "type": "boolean"
      },
      "restrict-store-require-admin-to-install": {
        "title": "Require Admin To Install",
        "description": "Restrict app installations to admin users",
        "type": "boolean"
      },
      "restrict-store-softwareupdate-only": {
        "title": "Restrict app installations to software updates only",
        "description": "Restrict app installations to software updates only",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.asam": {
    "title": "Autonomous Single App Mode",
    "description": "This payload grants Autonomous Single App Mode capabilities for specific applications",
    "properties": {
      "AllowedApplications": {
        "title": "Allowed Applications",
        "description": "Array of dictionaries that specify applications that are to be granted access to Assessment APIs.",
        "type": {
          "array": [
            {
              "dictionary": {
                "BundleIdentifier": {
                  "title": "Bundle Identifier",
                  "description": "The application's bundle identifier. BundleIdentifier must be unique. If two dictionaries contain the same BundleIdentifier but different TeamIdentifiers, this will be considered a hard error and the payload will not be installed.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "TeamIdentifier": {
                  "title": "Team Identifier",
                  "description": "The application's team identifier.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.assistant.support": {
    "title": "Assistant (Siri)",
    "description": "Assistant (Siri) settings",
    "properties": {
      "Assistant Enabled": {
        "title": "Enable Siri",
        "description": "",
        "type": "boolean"
      },
      "Siri Data Sharing Opt-In Status": {
        "title": "Improve Siri & Dictation",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.associated-domains": {
    "title": "Associated Domains",
    "description": "Use this section to define settings for Associated Domains to be used with features such as Extensible AppSSO, universal links and Password AutoFill.",
    "properties": {
      "Configuration": {
        "title": "Configuration",
        "description": "A dictionary that maps apps to their associated domains.",
        "type": {
          "array": [
            {
              "dictionary": {
                "ApplicationIdentifier": {
                  "title": "ApplicationIdentifier",
                  "description": "The app identifier to associate the domains with.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "AssociatedDomains": {
                  "title": "AssociatedDomains",
                  "description": "The domains to be associated with the app. Each string is in the form of ''service:domain''. Domains should be fully qualified hostnames, like 'www.example.com'.\nSee Supporting Associated Domains for more information.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "EnableDirectDownloads": {
                  "title": "EnableDirectDownloads",
                  "description": "If 'true', data for this domain should be downloaded directly instead of through a CDN. The entitlement value for this domain must be set to 'service:domain?mode=managed' or this value will be ignored. Available in macOS 11 and later.",
                  "type": "boolean"
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.caldav.account": {
    "title": "Calendar",
    "description": "Calendar settings",
    "properties": {
      "CalDAVAccountDescription": {
        "title": "Account Description",
        "description": "The display name of the account (e.g. \"Company Calendar Account\")",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CalDAVHostName": {
        "title": "Account Hostname",
        "description": "The IP address or fully qualified domain name (FQDN) of the CalDAV server.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CalDAVPassword": {
        "title": "Account Password",
        "description": "The CalDAV password",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CalDAVPort": {
        "title": "Port Number",
        "description": "The port on which to connect to the CalDAV server.",
        "type": "integer"
      },
      "CalDAVPrincipalURL": {
        "title": "Principal URL",
        "description": "The base URL to the user's calendar. In macOS this URL is required if the user doesn't provide a password, because auto-discovery of the service will fail and the account won't be created.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CalDAVUseSSL": {
        "title": "Use SSL",
        "description": "Enable Secure Socket Layer communication with CalDAV server",
        "type": "boolean"
      },
      "CalDAVUsername": {
        "title": "Account Username",
        "description": "The user name for the CalDAV account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.carddav.account": {
    "title": "Contacts",
    "description": "Use the Contacts payload to provide account settings for connecting to a CardDAV-compliant contact server. If you omit the account information, users need to enter it manually when the profile is installed.",
    "properties": {
      "CardDAVAccountDescription": {
        "title": "Account Description",
        "description": "The display name of the account (e.g. \"Company Contacts Account\")",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CardDAVHostName": {
        "title": "Account Hostname",
        "description": "The IP address or fully qualified domain name (FQDN) of the CardDAV server.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CardDAVPassword": {
        "title": "Account Password",
        "description": "The CardDAV password",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CardDAVPort": {
        "title": "Port Number",
        "description": "The port on which to connect to the CardDAV server.",
        "type": "integer"
      },
      "CardDAVPrincipalURL": {
        "title": "Principal URL",
        "description": "The Principal URL for the CardDAV account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CardDAVUseSSL": {
        "title": "Use SSL",
        "description": "Enable Secure Socket Layer communication with CardDAV server",
        "type": "boolean"
      },
      "CardDAVUsername": {
        "title": "Account Username",
        "description": "The CardDAV username",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CommunicationServiceRules": {
        "title": "Communication Service Rules",
        "description": "The communication service handler rules for this account.",
        "type": {
          "dictionary": {
            "DefaultServiceHandlers": {
              "title": "Default Service Handlers",
              "description": "",
              "type": {
                "dictionary": {
                  "AudioCall": {
                    "title": "Bundle Identifier",
                    "description": "Bundle identifier for the default application that handles audio calls made to contacts from this account",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.cellular": {
    "title": "Cellular",
    "description": "Use this section to define custom APNs for cellular data access.",
    "properties": {
      "APNs": {
        "title": "Data APN",
        "description": "List of Data APNs to configure",
        "type": {
          "array": [
            {
              "dictionary": {
                "AllowedProtocolMask": {
                  "title": "Data APN supported IP versions",
                  "description": "Supported Internet Protocol versions for connections",
                  "type": "integer"
                },
                "AllowedProtocolMaskInDomesticRoaming": {
                  "title": "Data APN supported domestic roaming IP versions",
                  "description": "Supported Internet Protocol versions while domestic roaming.",
                  "type": "integer"
                },
                "AllowedProtocolMaskInRoaming": {
                  "title": "Data APN supported roaming IP versions",
                  "description": "Supported Internet Protocol versions while roaming.",
                  "type": "integer"
                },
                "AuthenticationType": {
                  "title": "Data APN authentication type",
                  "description": "Authentication type to use for the connection.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "DefaultProtocolMask": {
                  "title": "Data APN default IP versions",
                  "description": "Default Internet Protocol versions for connections. Set to the same value as AllowedProtocolMask.",
                  "type": "integer"
                },
                "EnableXLAT464": {
                  "title": "Enable 464XLAT IPv6 and IPv4 Interoperability",
                  "type": "boolean"
                },
                "Name": {
                  "title": "Data APN name",
                  "description": "The name of the data APN.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Password": {
                  "title": "Data APN password",
                  "description": "The password for the data APN account.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "ProxyPort": {
                  "title": "Data APN proxy port",
                  "description": "The port number of the data APN proxy server.",
                  "type": "integer"
                },
                "ProxyServer": {
                  "title": "Data APN proxy server",
                  "description": "The IP address or fully qualified domain name (FQDN) of the data APN proxy server.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Username": {
                  "title": "Data APN user name",
                  "description": "The user name for the data APN account.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "AttachAPN": {
        "title": "Default APN",
        "description": "Default APN configuration",
        "type": {
          "dictionary": {
            "AllowedProtocolMask": {
              "title": "Default APN supported IP versions",
              "description": "Supported Internet Protocol versions for connections",
              "type": "integer"
            },
            "AuthenticationType": {
              "title": "Default APN authentication type",
              "description": "Authentication type to use for the connection.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Name": {
              "title": "Default APN name",
              "description": "The name of the default APN.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Password": {
              "title": "Default APN password",
              "description": "The password for the default APN account.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Username": {
              "title": "Default APN user name",
              "description": "The user name for the default APN account.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.cellularprivatenetwork.managed": {
    "title": "Cellular Private Network",
    "description": "Cellular Private Network Settings and Device Configuration",
    "properties": {
      "CellularDataPreferred": {
        "title": "CellularDataPreferred",
        "description": "Set to true if this private network should be preferred over wifi",
        "type": "boolean"
      },
      "DataSetName": {
        "title": "DataSetName",
        "description": "Name for private network configuration dataset",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EnableNRStandalone": {
        "title": "EnableNRStandalone",
        "description": "Set to true if this private network is NR Standalone",
        "type": "boolean"
      },
      "Geofences": {
        "title": "Geofences",
        "description": "List of up to 1000 geofences for private networks. Geofencing is only used on iPhones.",
        "type": {
          "array": [
            {
              "dictionary": {
                "GeofenceId": {
                  "title": "GeofenceId",
                  "description": "ID of geofence, must be unique amongst list",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Latitude": {
                  "title": "Latitude",
                  "description": "Signed decimal value of latitude from -90 to 90",
                  "type": "real"
                },
                "Longitude": {
                  "title": "Longitude",
                  "description": "Signed decimal value of longitude from -180 to 180",
                  "type": "real"
                },
                "Radius": {
                  "title": "Radius",
                  "description": "Specifies the radius of the geofence in meters. Should be set slightly greater than the private cellular network coverage area. Supported values 100 to 6500",
                  "type": "real"
                }
              }
            }
          ]
        }
      },
      "VersionNumber": {
        "title": "VersionNumber",
        "description": "The version number of this dataset. Used to track updates",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.conferenceroomdisplay": {
    "title": "Conference Room Display",
    "description": "Use this section to place an Apple TV device into Conference Room Display mode.",
    "properties": {
      "Message": {
        "title": "Message",
        "description": "A custom message displayed on the screen in Conference Room Display mode.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": true,
    "unique": true
  },
  "com.apple.configurationprofile.identification": {
    "title": "Identification",
    "description": "Identification settings",
    "properties": {
      "PayloadIdentification": {
        "title": "PayloadIdentification",
        "description": "",
        "type": {
          "dictionary": {
            "AuthMethod": {
              "title": "Authentication Method",
              "description": "Allow the user to enter the password upon installation instead of being supplied in the payload",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "EmailAddress": {
              "title": "E-mail address",
              "description": "The address for the accounts.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "FullName": {
              "title": "Full Name",
              "description": "The full name of the designated accounts.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Password": {
              "title": "Password",
              "description": "You can provide the password or choose to have the user provide it when he or she installs the profile.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Prompt": {
              "title": "Prompt",
              "description": "Short prompt text",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "PromptMessage": {
              "title": "Prompt Message",
              "description": "Additional prompt description.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserName": {
              "title": "Username",
              "description": "The UNIX user name for the accounts.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.controlcenter": {
    "title": "Control Center",
    "description": "Control Center settings",
    "properties": {
      "AirplayRecieverEnabled": {
        "title": "Enable AirPlay Receiver",
        "description": "Airplay Receiver allows you to send content from another Apple device to be displayed on the screen as it's being played from your other device.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.coreservices.uiagent": {
    "title": "CoreServices UIAgent",
    "description": "CoreServices UIAgent",
    "properties": {
      "CSUIDisable32BitWarnings": {
        "title": "Hide 32-bit app compatibility alert",
        "description": "Hides the one-time alert shown when opening a 32-bit application.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.dashboard": {
    "title": "Parental Controls: Dashboard",
    "description": "Parental Controls: Dashboard settings",
    "properties": {
      "WhiteList": {
        "title": "Dashboard widget allowlist",
        "description": "List that defines Dashboard widgets.",
        "type": {
          "array": [
            {
              "dictionary": {
                "ID": {
                  "title": "Bundle ID",
                  "description": "The bundle ID of a widget.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Type": {
                  "title": "Entry Type",
                  "description": "Set to \"bundleID\" to use a widget's bundle ID as its ID.",
                  "type": {
                    "string": {
                      "rangeList": [
                        [
                          "bundleID",
                          "Bundle ID"
                        ]
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "whiteListEnabled": {
        "title": "Enable dashboard widget allowlist",
        "description": "Set to true to enable the widget white list items.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.declarations": {
    "title": "Declarations",
    "description": "Declarations",
    "properties": {
      "Declarations": {
        "title": "Declarations",
        "description": "The set of declarations to apply. The items in this array are <data> (base64-encoded) representations\nof the declaration JSON data.",
        "type": {
          "array": [
            "data"
          ]
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.desktop": {
    "title": "Desktop Picture",
    "description": "Desktop Picture settings",
    "properties": {
      "locked": {
        "title": "Lock desktop picture",
        "description": "Prevents users from modifying the desktop picture selection.",
        "type": "boolean"
      },
      "override-picture-path": {
        "title": "Desktop picture path",
        "description": "The path of the file to use as the desktop picture.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.desktopservices": {
    "title": "Desktop Services",
    "description": "Desktop Services settings",
    "properties": {
      "DSDontWriteNetworkStores": {
        "title": "Prevent .DS_Store file creation on network volumes",
        "description": "Prevent .DS_Store file creation when interacting with a remote file server using the Finder.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.dnsProxy.managed": {
    "title": "DNS Proxy",
    "description": "DNS Proxy settings",
    "properties": {
      "AppBundleIdentifier": {
        "title": "App Bundle ID",
        "description": "Bundle ID of the app containing the DNS proxy network extension.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DNSProxyUUID": {
        "title": "DNS Proxy UUID",
        "description": "Global identifier of the proxy configuration in this payload. Used for processing DNS requests of managed apps with an identical attribute by the proxy.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProviderBundleIdentifier": {
        "title": "Provider Bundle ID",
        "description": "Bundle ID of the DNS proxy network extension to use.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProviderConfiguration": {
        "title": "Provider Custom Configuration",
        "description": "A plist formatted dictionary of custom options.",
        "type": "plist"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.dnsSettings.managed": {
    "title": "DNS Settings",
    "description": "DNS Settings",
    "properties": {
      "DNSSettings": {
        "title": "DNS Settings",
        "description": "A dictionary that defines a configuration for an encrypted DNS server.",
        "type": {
          "dictionary": {
            "DNSProtocol": {
              "title": "Protocol",
              "description": "The encrypted transport protocol used to communicate with the DNS server.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ServerAddresses": {
              "title": "Server IP Addresses",
              "description": "An unordered list of DNS server IP address strings. These IP addresses can be a mixture of IPv4 and IPv6 addresses.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "ServerName": {
              "title": "Server Name",
              "description": "The hostname of a DNS-over-TLS server used to validate the server certificate, as defined in RFC 7858. If no ServerAddresses are provided, the hostname will be used to determine the server addresses.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ServerURL": {
              "title": "Server URL",
              "description": "The URI template of a DNS-over-HTTPS server, as defined in RFC 8484. This URL must use the https:// scheme, and the hostname or address in the URL will be used to validate the server certificate",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "SupplementalMatchDomains": {
              "title": "Supplemental Match Domains",
              "description": "A list of domain strings used to determine which DNS queries will use the DNS server. If this array is not provided, all domains will use the DNS server. A single wildcard * prefix is supported, but is not required.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "OnDemandRules": {
        "title": "On Demand Rules",
        "description": "An array of rules defining the DNS settings. If rules are not present, the system always applies the DNS settings. These rules are identical to the OnDemandRules array in VPN payloads.",
        "type": {
          "array": [
            {
              "dictionary": {
                "Action": {
                  "title": "Action",
                  "description": "The action to take if this dictionary matches the current network. Options:\nConnect: Apply DNS Settings when the dictionary matches.\nDisconnect: Do not apply DNS Settings when the dictionary matches.\nEvaluateConnection: Apply DNS Settings with per-domain exceptions when the dictionary matches.",
                  "type": {
                    "string": {
                      "rangeList": [
                        [
                          "Connect",
                          "Connect"
                        ],
                        [
                          "Disconnect",
                          "Disconnect"
                        ],
                        [
                          "EvaluateConnection",
                          "Evaluate Connection"
                        ]
                      ]
                    }
                  }
                },
                "ActionParameters": {
                  "title": "Action Parameters",
                  "description": "A dictionary that provides per-connection rules. This array is used only for settings where the Action value is EvaluateConnection.",
                  "type": {
                    "array": [
                      {
                        "dictionary": {
                          "DomainAction": {
                            "title": "Domain Action",
                            "description": "The DNS settings behavior for the specified domains. Options:\n\t\tNeverConnect: Do not use the DNS Settings for the specified domains.\n\t\tConnectIfNeeded: Allow using the DNS Settings for the specified domains.",
                            "type": {
                              "string": {
                                "rangeList": [
                                  [
                                    "NeverConnect",
                                    "Never Connect"
                                  ],
                                  [
                                    "ConnectIfNeeded",
                                    "Connect if Needed"
                                  ]
                                ]
                              }
                            }
                          },
                          "Domains": {
                            "title": "Domains",
                            "description": "The domains for which this evaluation applies.",
                            "type": {
                              "array": [
                                {
                                  "string": {
                                    "rangeList": []
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "DNSDomainMatch": {
                  "title": "Domain Match",
                  "description": "An array of domain names. This rule matches if any of the domain names in the specified list matches any domain in the device's search domains list. A single wildcard * prefix is supported, but is not required.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "DNSServerAddressMatch": {
                  "title": "Server Address Match",
                  "description": "An array of IP addresses. This rule matches if any of the network's specified DNS servers match any entry in the array. Matching with a single wildcard is supported.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "InterfaceTypeMatch": {
                  "title": "Interface Type",
                  "description": "An interface type. If specified, this rule matches only if the primary network interface hardware matches the specified type.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "SSIDMatch": {
                  "title": "SSID Match",
                  "description": "An array of SSIDs to match against the current network. If the network is not a Wi-Fi network or if the SSID does not appear in this array, the match fails. Omit this key and the corresponding array to match against any SSID.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "URLStringProbe": {
                  "title": "URL String Probe",
                  "description": "A URL to probe. If this URL is successfully fetched (returning a 200 HTTP status code) without redirection, this rule matches.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "PayloadCertificateUUID": {
        "title": "Certificate UUID",
        "description": "UUID pointing to an identity certificate payload. This identity will be used to authenticate the user to the DNS resolver.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProhibitDisablement": {
        "title": "Prohibit Disablement",
        "description": "If true, prohibits users from disabling DNS settings. This key is only available on supervised devices.",
        "type": "boolean",
        "supervised": true
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.dock": {
    "title": "Dock",
    "description": "Dock settings",
    "properties": {
      "AllowDockFixupOverride": {
        "title": "Allow DockFixup override",
        "description": "If true, use the file in /Library/Preferences/com.apple.dockfixup.plist when a new user or migrated user logs in. The format of this file currently has no documentation. This option has no effect for existing users.",
        "type": "boolean"
      },
      "MCXDockSpecialFolders": {
        "title": "Managed Client Special Folders",
        "description": "Folders added by Managed Client.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "AddDockMCXMyApplicationsFolder",
                    "My apps"
                  ],
                  [
                    "AddDockMCXDocumentsFolder",
                    "Documents"
                  ],
                  [
                    "AddDockMCXSharedFolder",
                    "Shared Items"
                  ],
                  [
                    "AddDockMCXOriginalNetworkHomeFolder",
                    "Network home"
                  ]
                ]
              }
            }
          ]
        }
      },
      "autohide": {
        "title": "Automatically hide and show the Dock",
        "description": "Set to true to automatically hide and show the dock.",
        "type": "boolean"
      },
      "autohide-immutable": {
        "title": "Automatically hide and show the Dock checkbox disabled",
        "description": "Prevent user from changing the automatically hide and show the dock setting.",
        "type": "boolean"
      },
      "contents-immutable": {
        "title": "Prevent modifying items in Dock",
        "description": "Prevent user from removing any item from or adding any item to the dock.",
        "type": "boolean"
      },
      "largesize": {
        "title": "Magnification",
        "description": "Largest magnification tile size in pixels.",
        "type": "integer"
      },
      "launchanim": {
        "title": "Animate opening applications",
        "description": "Set to true to use launch animation.",
        "type": "boolean"
      },
      "launchanim-immutable": {
        "title": "Animate opening applications checkbox disabled",
        "description": "Prevent user from changing the animate opening applications setting.",
        "type": "boolean"
      },
      "magnification": {
        "title": "Enable magnification",
        "description": "Set to true to turn on magnification.",
        "type": "boolean"
      },
      "magnify-immutable": {
        "title": "Enable magnification checkbox disabled",
        "description": "Prevent user from changing the enable magnification setting.",
        "type": "boolean"
      },
      "magsize-immutable": {
        "title": "Magnification slider disabled",
        "description": "Prevent user from changing magnification size.",
        "type": "boolean"
      },
      "mineffect": {
        "title": "Minimize window effect",
        "description": "Transition effect to use when minimizing applications to the Dock.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "mineffect-immutable": {
        "title": "Minimize window effect button disabled",
        "description": "Prevent user from changing the minimization setting.",
        "type": "boolean"
      },
      "minimize-to-application": {
        "title": "Minimize windows into application icon",
        "description": "Set to true to minimize windows into application icons.",
        "type": "boolean"
      },
      "minintoapp-immutable": {
        "title": "Minimize windows into application icon Checkbox Disable",
        "description": "Prevent user from changing the minimize windows into application icon setting.",
        "type": "boolean"
      },
      "orientation": {
        "title": "Position on screen",
        "description": "Orientation of the dock.",
        "type": {
          "string": {
            "rangeList": [
              [
                "left",
                "Left"
              ],
              [
                "bottom",
                "Bottom"
              ],
              [
                "right",
                "Right"
              ]
            ]
          }
        }
      },
      "position-immutable": {
        "title": "Position on screen buttons disabled",
        "description": "Prevent user from changing position.",
        "type": "boolean"
      },
      "show-process-indicators": {
        "title": "Show indicators for open applications",
        "description": "Set to true to show an indicator below the application icon when an application is running.",
        "type": "boolean"
      },
      "show-recents": {
        "title": "Show recent applications in Dock",
        "description": "Set to true to show recent applications in the Dock.",
        "type": "boolean"
      },
      "size-immutable": {
        "title": "Size slider disabled",
        "description": "Prevent user from changing tile size.",
        "type": "boolean"
      },
      "static-apps": {
        "title": "Static Apps",
        "description": "Dock items in the Applications side that cannot be removed from the dock.",
        "type": {
          "array": [
            {
              "dictionary": {
                "tile-data": {
                  "title": "Information",
                  "description": "Information about a dock item.",
                  "type": {
                    "dictionary": {
                      "file-data": {
                        "title": "File Data",
                        "description": "Dictionary describing the target file.",
                        "type": {
                          "dictionary": {
                            "_CFURLString": {
                              "title": "Path",
                              "description": "Path to the application.",
                              "type": {
                                "string": {
                                  "rangeList": []
                                }
                              }
                            },
                            "_CFURLStringType": {
                              "title": "Path Type",
                              "description": "Path type. 0 = /Path/to/item, 15 = file://Path/to/item",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "file-label": {
                        "title": "Display Name",
                        "description": "Display name in the profile GUI of a dock item.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "file-type": {
                        "title": "Type",
                        "description": "The type of the tile expressed as a number.",
                        "type": "integer"
                      },
                      "label": {
                        "title": "Label",
                        "description": "Label of a dock item.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      }
                    }
                  }
                },
                "tile-type": {
                  "title": "Type",
                  "description": "The type of the tile. Values may be file-tile, directory-tile, or url-tile. If you are unsure whether the file item is a file or a directory, set this key to file-tile.",
                  "type": {
                    "string": {
                      "rangeList": [
                        [
                          "file-tile",
                          "File"
                        ]
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "static-only": {
        "title": "Remove non-static apps and documents from Dock",
        "description": "Whether these settings will merge with the user's existing Dock settings.",
        "type": "boolean"
      },
      "static-others": {
        "title": "Static Others",
        "description": "Dock items in the Documents side that cannot be removed from the dock.",
        "type": {
          "array": [
            {
              "dictionary": {
                "tile-data": {
                  "title": "Information",
                  "description": "Information about a dock item.",
                  "type": {
                    "dictionary": {
                      "arrangement": {
                        "title": "Arrangement",
                        "description": "Arrangement (sorting) of the directory contents.",
                        "type": "integer"
                      },
                      "displayas": {
                        "title": "Display As",
                        "description": "Display directory as either a Folder or a Stack.",
                        "type": "integer"
                      },
                      "file-data": {
                        "title": "File Data",
                        "description": "Dictionary describing the target file.",
                        "type": {
                          "dictionary": {
                            "_CFURLString": {
                              "title": "Path",
                              "description": "Path to the file.",
                              "type": {
                                "string": {
                                  "rangeList": []
                                }
                              }
                            },
                            "_CFURLStringType": {
                              "title": "Path Type",
                              "description": "Path type. 0 = /Path/to/item, 15 = file://Path/to/item",
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "file-label": {
                        "title": "Display Name",
                        "description": "Display name in the profile GUI of a dock item.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "file-type": {
                        "title": "Type",
                        "description": "The type of the tile expressed as a number.",
                        "type": "integer"
                      },
                      "home directory relative": {
                        "title": "Home Directory Relative",
                        "description": "Path to item relative to the current user's home directory.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "label": {
                        "title": "Label",
                        "description": "Label of a dock item.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "showas": {
                        "title": "Show As",
                        "description": "How to show directory contents.",
                        "type": "integer"
                      },
                      "url": {
                        "title": "URL Data",
                        "description": "Dictionary describing the target url.",
                        "type": {
                          "dictionary": {
                            "_CFURLString": {
                              "title": "URL",
                              "description": "The URL.",
                              "type": {
                                "string": {
                                  "rangeList": []
                                }
                              }
                            },
                            "_CFURLStringType": {
                              "title": "URL Type",
                              "description": "URL type. 0 = /Path/to/item, 15 = file://Path/to/item",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "tile-type": {
                  "title": "Type",
                  "description": "The type of the tile. Values may be file-tile, directory-tile, or url-tile. If you are unsure whether the file item is a file or a directory, set this key to file-tile.",
                  "type": {
                    "string": {
                      "rangeList": [
                        [
                          "file-tile",
                          "File"
                        ],
                        [
                          "directory-tile",
                          "Directory"
                        ],
                        [
                          "url-tile",
                          "URL"
                        ]
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "tilesize": {
        "title": "Size",
        "description": "The tile size in pixels.",
        "type": "integer"
      },
      "wvous-bl-corner": {
        "title": "Bottom Left Hot Corner Action",
        "description": "Action to be taken when the pointer enters the bottom left corner of the screen",
        "type": "integer"
      },
      "wvous-bl-modifier": {
        "title": "Bottom Left Hot Corner Modifier",
        "description": "Modifier keys required to activate the bottom left hot corner",
        "type": "integer"
      },
      "wvous-br-corner": {
        "title": "Bottom Right Hot Corner Action",
        "description": "Action to be taken when the pointer enters the bottom right corner of the screen",
        "type": "integer"
      },
      "wvous-br-modifier": {
        "title": "Bottom Right Hot Corner Modifier",
        "description": "Modifier keys required to activate the bottom right hot corner",
        "type": "integer"
      },
      "wvous-tl-corner": {
        "title": "Top Left Hot Corner Action",
        "description": "Action to be taken when the pointer enters the top left corner of the screen",
        "type": "integer"
      },
      "wvous-tl-modifier": {
        "title": "Top Left Hot Corner Modifier",
        "description": "Modifier keys required to activate the top left hot corner",
        "type": "integer"
      },
      "wvous-tr-corner": {
        "title": "Top Right Hot Corner Action",
        "description": "Action to be taken when the pointer enters the top right corner of the screen",
        "type": "integer"
      },
      "wvous-tr-modifier": {
        "title": "Top Right Hot Corner Modifier",
        "description": "Modifier keys required to activate the top right hot corner",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.domains": {
    "title": "Domains",
    "description": "Use this section to define Domains settings.",
    "properties": {
      "CrossSiteTrackingPreventionRelaxedDomains": {
        "title": "Safari Relaxed Cross Site Tracking Domains",
        "description": "Up to 10 domains can be added for which Cross-Site Tracking Prevention will be relaxed. Domains should be listed as theacmeinc.com which includes any subdomains (without needing to use *theacmeinc.com)",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        },
        "supervised": true
      },
      "EmailDomains": {
        "title": "Unmarked Email Domains",
        "description": "Mail messages that are addressed to domains not in the approved list are marked in red.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "SafariPasswordAutoFillDomains": {
        "title": "Safari Password Domains",
        "description": "User names and passwords entered in websites with Safari can be saved if the domain is listed.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        },
        "supervised": true
      },
      "WebDomains": {
        "title": "Managed Safari Web Domains",
        "description": "Downloads from Safari will be considered managed documents if they originate from a managed domain.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.eas.account": {
    "title": "Exchange (iOS)",
    "description": "Exchange Active Sync settings",
    "properties": {
      "Certificate": {
        "title": "Identity Certificate",
        "description": "X.509 certificate (.p12) for inclusion on device.",
        "type": "data"
      },
      "CertificateName": {
        "title": "Certificate Name",
        "description": "Name or description of the certificate credential.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CertificatePassword": {
        "title": "Certificate Password",
        "description": "Password protecting the PKCS12 file.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CommunicationServiceRules": {
        "title": "Communication Service Rules",
        "description": "The communication service handler rules for this account.",
        "type": {
          "dictionary": {
            "DefaultServiceHandlers": {
              "title": "Default Service Handlers",
              "description": "",
              "type": {
                "dictionary": {
                  "AudioCall": {
                    "title": "BundleIdentifier",
                    "description": "Bundle identifier for the default application that handles audio calls made to contacts from this account",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "EmailAddress": {
        "title": "Account email address",
        "description": "The email address for the account (e.g. \"john@company.com).",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EnableCalendars": {
        "title": "Enabled Services - Calendars",
        "description": "Enables/disables the Calendars service for this account.",
        "type": "boolean"
      },
      "EnableCalendarsUserOverridable": {
        "title": "Account Modification - Calendars",
        "description": "Enables/disables the users to modify the Calendars settings.",
        "type": "boolean"
      },
      "EnableContacts": {
        "title": "Enabled Services - Contacts",
        "description": "Enables/disables the Contacts service for this account.",
        "type": "boolean"
      },
      "EnableContactsUserOverridable": {
        "title": "Account Modification - Contacts",
        "description": "Enables/disables the users to modify the Contacts settings.",
        "type": "boolean"
      },
      "EnableMail": {
        "title": "Enabled Services - Mail",
        "description": "Enables/disables the Mail service for this account.",
        "type": "boolean"
      },
      "EnableMailUserOverridable": {
        "title": "Account Modification - Mail",
        "description": "Enables/disables the users to modify the Mail settings.",
        "type": "boolean"
      },
      "EnableNotes": {
        "title": "Enabled Services - Notes",
        "description": "Enables/disables the Notes service for this account.",
        "type": "boolean"
      },
      "EnableNotesUserOverridable": {
        "title": "Account Modification - Notes",
        "description": "Enables/disables the users to modify the Notes settings.",
        "type": "boolean"
      },
      "EnableReminders": {
        "title": "Enabled Services - Reminders",
        "description": "Enables/disables the Reminders service for this account.",
        "type": "boolean"
      },
      "EnableRemindersUserOverridable": {
        "title": "Account Modification - Reminders",
        "description": "Enables/disables the users to modify the Reminders settings.",
        "type": "boolean"
      },
      "Host": {
        "title": "Internal Exchange Host",
        "description": "The IP address or fully qualified domain name (FQDN) of the internal Exchange host.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MailNumberOfPastDaysToSync": {
        "title": "Number of days to sync",
        "description": "The number of days since synchronization.",
        "type": "integer"
      },
      "OAuth": {
        "title": "Use OAuth",
        "description": "Specifies whether the connection should use OAuth for authentication.",
        "type": "boolean"
      },
      "OverridePreviousPassword": {
        "title": "Override previous password",
        "description": "If true, a previously set EAS password is overriden with a new password in this payload.",
        "type": "boolean"
      },
      "Password": {
        "title": "Account password",
        "description": "The password of the user account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PayloadCertificateUUID": {
        "title": "Identity Certificate UUID",
        "description": "UUID of the certificate payload to use for the identity credential.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PreventAppSheet": {
        "title": "Prevent App Sheet",
        "description": "If set to true, this account will not be available for sending mail in any app other than the Apple Mail app.",
        "type": "boolean"
      },
      "PreventMove": {
        "title": "Prevent Move",
        "description": "If set to true, messages may not be moved out of this email account into another account. Also prevents forwarding or replying from a different account than the message was originated from.",
        "type": "boolean"
      },
      "SMIMEEnableEncryptionPerMessageSwitch": {
        "title": "Allow user to select S/MIME Encryption per message",
        "description": "If set to true, displays the per-message encryption switch in the Mail Compose UI.",
        "type": "boolean"
      },
      "SMIMEEnablePerMessageSwitch": {
        "title": "Enable S/MIME Per Message Switch",
        "description": "If set to true, displays the per-message encryption switch in the Mail Compose UI. As of iOS 12.0, this key is deprecated. It is recommended to use SMIMEEnableEncryptionPerMessageSwitch instead.",
        "type": "boolean"
      },
      "SMIMEEnabled": {
        "title": "Enable S/MIME",
        "description": "If true, this account supports S/MIME.",
        "type": "boolean"
      },
      "SMIMEEncryptByDefault": {
        "title": "Enable S/MIME Encryption",
        "description": "If set to true, S/MIME encryption is enabled by default.",
        "type": "boolean"
      },
      "SMIMEEncryptByDefaultUserOverrideable": {
        "title": "Allow user to select S/MIME Encryption",
        "description": "If set to true, the user can toggle the encryption by default setting.",
        "type": "boolean"
      },
      "SMIMEEncryptionCertificateUUID": {
        "title": "S/MIME Encryption Certificate",
        "description": "The PayloadUUID of the identity certificate used to decrypt messages sent to this account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SMIMEEncryptionCertificateUUIDUserOverrideable": {
        "title": "Allow user to select S/MIME Encryption Certificate",
        "description": "If set to true, the user can select the S/MIME encryption identity and encryption is enabled.",
        "type": "boolean"
      },
      "SMIMEEncryptionEnabled": {
        "title": "Enable S/MIME Encryption",
        "description": "If set to true, S/MIME encryption is on by default for this account. As of iOS 12.0, this key is deprecated. It is recommended to use SMIMEEncryptByDefault instead.",
        "type": "boolean"
      },
      "SMIMESigningCertificateUUID": {
        "title": "S/MIME Signing Certificate",
        "description": "The PayloadUUID of the identity certificate used to sign messages sent from this account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SMIMESigningCertificateUUIDUserOverrideable": {
        "title": "Allow user to select S/MIME Identity",
        "description": "If set to true, the user can select the signing identity.",
        "type": "boolean"
      },
      "SMIMESigningEnabled": {
        "title": "Enable S/MIME Signing",
        "description": "If set to true, S/MIME signing is enabled for this account.",
        "type": "boolean"
      },
      "SMIMESigningUserOverrideable": {
        "title": "Allow user to toggle S/MIME Signing",
        "description": "If set to true, the user can toggle S/MIME signing on or off in Settings.",
        "type": "boolean"
      },
      "SSL": {
        "title": "Use SSL for Internal Exchange Host",
        "description": "Send all communication through Secure Socket Layer.",
        "type": "boolean"
      },
      "UserName": {
        "title": "Account user name",
        "description": "The user name with the optional domain (e.g \"user\" or \"domain\\user\").",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "VPNUUID": {
        "title": "Per-App VPN Payload UUID",
        "description": "UUID of a per-app VPN payload to tunnel this account communication through",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "disableMailRecentsSyncing": {
        "title": "Exclude this account from address recents syncing",
        "description": "If true, this account is excluded from address Recents syncing.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.education": {
    "title": "Education",
    "description": "Education Configuration settings",
    "properties": {
      "Departments": {
        "title": "Departments",
        "description": "Shared: An array of dictionaries that define departments that are shown in the iOS login window.",
        "type": {
          "array": [
            {
              "dictionary": {
                "GroupBeaconIDs": {
                  "title": "Group Beacon IDs",
                  "type": {
                    "array": [
                      "integer"
                    ]
                  }
                },
                "Name": {
                  "title": "Department Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "DeviceGroups": {
        "title": "Device Groups",
        "description": "Leader: An array of dictionaries that define the device groups to which the leader can assign devices. This key is not included in member payloads.",
        "type": {
          "array": [
            {
              "dictionary": {
                "Identifier": {
                  "title": "Device Group Identifier",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Name": {
                  "title": "Device Group Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "SerialNumbers": {
                  "title": "Device Group Serial Numbers",
                  "description": "The strings containing the serial numbers of the devices in the group.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "Groups": {
        "title": "Groups",
        "description": "Shared: An array of dictionaries that define groups that the user can select in the login window.\nLeader: An array of dictionaries that define the groups that the user can control.\nMember: An array of dictionaries that define the groups of which the user is a member.",
        "type": {
          "array": [
            {
              "dictionary": {
                "BeaconID": {
                  "title": "Beacon ID",
                  "type": "integer"
                },
                "ConfigurationSource": {
                  "title": "Configuration Source",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Description": {
                  "title": "Group Description",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "DeviceGroupIdentifiers": {
                  "title": "Device Group Identifiers",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "ImageURL": {
                  "title": "Group Image URL",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "LeaderIdentifiers": {
                  "title": "Leader Identifiers",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "MemberIdentifiers": {
                  "title": "Member Identifiers",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "Name": {
                  "title": "Group Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "LeaderPayloadCertificateAnchorUUID": {
        "title": "Leader Payload Certificate Anchor UUIDs",
        "description": "List of UUIDs referring to certificate payloads that will be used to authorize leader peer certificate identities. This array must contain all certificates needed to validate the entire chain of trust. Leader certificates must have the common name prefix leader (case insensitive) and have a .cer type.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "MemberPayloadCertificateAnchorUUID": {
        "title": "Member Payload Certificate Anchor UUIDs",
        "description": "List of UUIDs referring to certificate payloads that will be used to authorize group member peer certificate identities. This array must contain all certificates needed to validate the entire chain of trust. Member certificates must have the common name prefix member (case insensitive) and have a .cer type.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "OrganizationName": {
        "title": "Organization Name",
        "description": "The organization's display name.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OrganizationUUID": {
        "title": "Organization UUID",
        "description": "All teacher and student devices that need to communicate with one another must have the same OrganizationUUID, particularly if they originated from different Device Enrollment Programs.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PayloadCertificateUUID": {
        "title": "Payload Certificate UUID",
        "description": "Used to perform client authentication between devices.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ResourcePayloadCertificateUUID": {
        "title": "Resource Payload Certificate UUID",
        "description": "The UUID of an identity certificate payload that will be used to perform client authentication when fetching additional resources, such as, student images. If not specified the MDM client identity will be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ScreenObservationPermissionModificationAllowed": {
        "title": "Allow students to modify screen observation permissions",
        "description": "To allow students enrolled in managed classes to modify teacher permission for screen observation, set to 'true'.",
        "type": "boolean"
      },
      "UserIdentifier": {
        "title": "User Identifier",
        "description": "A unique string that identifies the user of this device within the organization.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Users": {
        "title": "Users",
        "description": "Shared: An array of dictionaries that define the users that are shown in the iOS login window.\nLeader: An array of dictionaries that define users that are members of the leaderʼs groups.\nMember: An array of a dictionaries that must contain the definition of the user specified in the UserIdentifier key.\nWith one-to-one member devices, this key should include only the device user and the leader but not other class members.",
        "type": {
          "array": [
            {
              "dictionary": {
                "AppleID": {
                  "title": "Apple ID",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "FamilyName": {
                  "title": "Family Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "FullScreenImageURL": {
                  "title": "Fullscreen Image URL",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "GivenName": {
                  "title": "Given Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Identifier": {
                  "title": "Identifier",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "ImageURL": {
                  "title": "Image URL",
                  "description": "URL pointing to a JPEG, PNG, or TIFF image of the user. Recommended either 256x256 or 512x512 resolution.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Name": {
                  "title": "Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "PasscodeType": {
                  "title": "Passcode Type",
                  "description": "Complex, 4-digit, or 6-digit number.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "PhoneticFamilyName": {
                  "title": "Phonetic Family Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "PhoneticGivenName": {
                  "title": "Phonetic Given Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.ews.account": {
    "title": "Exchange (macOS)",
    "description": "Exchange Web Services settings",
    "properties": {
      "EmailAddress": {
        "title": "Account email address",
        "description": "The email address for the account (e.g. john@company.com).",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExternalHost": {
        "title": "External Exchange Host",
        "description": "The IP address or fully qualified domain name (FQDN) of the external Exchange host.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExternalPath": {
        "title": "External server path",
        "description": "The server path for the external Exchange host.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExternalPort": {
        "title": "External Exchange Host Port",
        "description": "The port on which to connect to the external Exchange host.",
        "type": "integer"
      },
      "ExternalSSL": {
        "title": "Use SSL for External Exchange Host",
        "description": "Send all communication through Secure Socket Layer.",
        "type": "boolean"
      },
      "Host": {
        "title": "Internal Exchange Host",
        "description": "The IP address or fully qualified domain name (FQDN) of the internal Exchange host.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IdentificationUUID": {
        "title": "IdentificationUUID",
        "description": "The UUID of the Identification Payload to use as the source for user values.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OAuth": {
        "title": "Use OAuth",
        "description": "Specifies whether the connection should use OAuth for authentication.",
        "type": "boolean"
      },
      "OAuthSignInURL": {
        "title": "OAuth Sign-In URL",
        "description": "URL to load into a webview for authentication via OAuth when auto-discovery is not used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Password": {
        "title": "Account password",
        "description": "The password of the user account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Path": {
        "title": "Internal server path",
        "description": "The server path for the internal Exchange host.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Port": {
        "title": "Internal Exchange Host Port",
        "description": "The port on which to connect to the internal Exchange host.",
        "type": "integer"
      },
      "SSL": {
        "title": "Use SSL for Internal Exchange Host",
        "description": "Send all communication through Secure Socket Layer.",
        "type": "boolean"
      },
      "UserName": {
        "title": "Account user name",
        "description": "The user name with the optional domain (e.g \"user\" or \"domain\\user\").",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.extensiblesso": {
    "title": "Single Sign-On Extensions",
    "description": "Single Sign-On Extension settings. User-level payload support for macOS 11.x and later.",
    "properties": {
      "AuthenticationMethod": {
        "title": "Authentication Method",
        "description": "Platform SSO authentication method supported and used by the configured SSO extension.",
        "type": {
          "string": {
            "rangeList": [
              [
                "Password",
                "Password"
              ],
              [
                "UserSecureEnclaveKey",
                "User Secure Enclave Key"
              ]
            ]
          }
        }
      },
      "DeniedBundleIdentifiers": {
        "title": "Denied Bundle Identifiers",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionData": {
        "title": "Kerberos Extension Data",
        "description": "Used by the Apple built-in Kerberos extension.",
        "type": {
          "dictionary": {
            "AppAllowList": {
              "title": "App Allow List",
              "description": "Enable SSO for specific apps",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "AppBlockList": {
              "title": "App Block List",
              "description": "Disable SSO for specific apps",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "AppCookieSSOAllowList": {
              "title": "App Cookie SSO Allow List",
              "description": "Enable SSO through cookies for a specific application",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "AppPrefixAllowList": {
              "title": "App Prefix Allow List",
              "description": "Enable SSO for all apps with a specific bundle ID prefix",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Enable_SSO_On_All_ManagedApps": {
              "title": "Enable SSO on All Managed Apps",
              "type": "integer"
            },
            "allowAutomaticLogin": {
              "title": "Allow Automatic Login",
              "description": "If false, passwords are not allowed to be saved to the keychain.",
              "type": "boolean"
            },
            "allowPasswordChange": {
              "title": "Allow Password Change",
              "description": "If false, disables password changes. Available in macOS 10.15 and later.",
              "type": "boolean"
            },
            "allowPlatformSSOAuthFallback": {
              "title": "Allow Platform SSO Authentication Fallback",
              "description": "If true, allows manual sign-ins as fallback.",
              "type": "boolean"
            },
            "browser_sso_disable_mfa": {
              "title": "Disable Asking for MFA During Initial Bootstrapping",
              "type": "integer"
            },
            "browser_sso_interaction_enabled": {
              "title": "Allow Users to Sign in from Unknown Applications using the Safari Browser",
              "type": "integer"
            },
            "cacheName": {
              "title": "Cache Name",
              "description": "The GSS name of the Kerberos cache to use. Rarely set by an administrator.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "certificateUUID": {
              "title": "Certificate UUID",
              "description": "The PayloadUUID of a PKINIT certificate.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "credentialBundleIdACL": {
              "title": "Credential Bundle ID ACL",
              "description": "A list of bundle IDs allowed to access the ticket-granting ticket (TGT).",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "credentialUseMode": {
              "title": "Credential Use Mode",
              "description": "This setting affects how the Kerberos Extension credential is used by other processes. Available in macOS 11 and later.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "always",
                      "Always"
                    ],
                    [
                      "kerberosDefault",
                      "Kerberos Default"
                    ],
                    [
                      "whenNotSpecified",
                      "When Not Specified"
                    ]
                  ]
                }
              }
            },
            "customUsernameLabel": {
              "title": "Custom Username Label",
              "description": "The custom user name label used in the Kerberos extension instead of \"Username\". For example, \"Company ID\". Available on macOS 11 and later.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "delayUserSetup": {
              "title": "Delay User Setup",
              "description": "If true, doesn't prompt the user to setup the Kerberos extension until either the administrator enables it with the app-sso tool or a Kerberos challenge is received. Available in macOS 11 and later.",
              "type": "boolean"
            },
            "disable_explicit_app_prompt": {
              "title": "Disable OAuth2 Application Prompts",
              "type": "integer"
            },
            "disable_explicit_app_prompt_and_autologin": {
              "title": "Disable OAuth2 Application Prompts and Autologin",
              "type": "integer"
            },
            "domainRealmMapping": {
              "title": "domainRealmMapping",
              "description": "A custom domain-realm mapping for Kerberos. This is used when the DNS name of hosts do not match the realm name. Most administrators will not need to customize this.",
              "type": {
                "dictionary": {
                  "Realm": {
                    "title": "Realm",
                    "description": "The key should be the name of the realm, and the value is an array of DNS suffixes that map to the realm.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "helpText": {
              "title": "Help Text",
              "description": "The text to be displayed to the user at the bottom of the Kerberos login window. It can be used to display help information or disclaimer text. Available in iOS 14 and later and macOS 11 and later.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "includeKerberosAppsInBundleIdACL": {
              "title": "Include Kerberos Apps in Bundle ID ACL",
              "description": "If true, the Kerberos extension will allow standard Kerberos utilities such as TicketViewer and klist to access and use the credential. This is in addition to either includeManagedAppsInBundleIdACL or credentialBundleIDACL, if any are specified.",
              "type": "boolean"
            },
            "includeManagedAppsInBundleIdACL": {
              "title": "Include Managed Apps in Bundle ID ACL",
              "description": "If true, the Kerberos extension will allow only managed apps to access and use the credential. This is in addition to the credentialBundleIDACL, if it is specified. Available in iOS 14 and later.",
              "type": "boolean"
            },
            "isDefaultRealm": {
              "title": "Is Default Realm",
              "description": "This property specifies it is the default realm if there is more than one Kerberos extension configuration.",
              "type": "boolean"
            },
            "monitorCredentialsCache": {
              "title": "Monitor Credential Cache",
              "description": "If false, the credential is requested on the next matching Kerberos challenge or network state change. If the credential is expired or missing, a new one will be created. Available in macOS 11 and later.",
              "type": "boolean"
            },
            "performKerberosOnly": {
              "title": "Perform Kerberos Requests Only",
              "description": "If true, the configured extension only handles Kerberos requests and does not check for or show the expiration of the password, does not check external password changes, does not sync passwords, and does not retrieve the user's home directory.",
              "type": "boolean"
            },
            "preferredKDCs": {
              "title": "Preferred KDCs",
              "description": "Preferred Key Distribution Centers for Kerberos traffic when the servers cannot be discovered via DNS.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "principalName": {
              "title": "Principal Name",
              "description": "The principal (aka username) to use. You do not need to include the realm.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "pwChangeURL": {
              "title": "Password Change URL",
              "description": "This URL will launch in the user's default web browser when they initiate a password change. Available in macOS 10.15 and later.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "pwExpireOverride": {
              "title": "Password Expiration Override",
              "description": "The number of days that passwords can be used on this domain. For most domains, this can be calculated automatically. Available in macOS 10.15 and later.",
              "type": "integer"
            },
            "pwNotificationDays": {
              "title": "Password Notification Days",
              "description": "The number of days prior to password expiration when a notification of password expiration will be sent to the user. Available in macOS 10.15 and later.",
              "type": "integer"
            },
            "pwReqComplexity": {
              "title": "Password Requirement Complexity",
              "description": "If true, passwords must meet Active Directory's definition of \"complex\". Available in macOS 10.15 and later.",
              "type": "boolean"
            },
            "pwReqHistory": {
              "title": "Password Requirement History",
              "description": "The number of prior passwords that cannot be re-used on this domain. Available in macOS 10.15 and later.",
              "type": "integer"
            },
            "pwReqLength": {
              "title": "Password Requirement Length",
              "description": "The minimum length of passwords on the domain. Available in macOS 10.15 and later.",
              "type": "integer"
            },
            "pwReqMinAge": {
              "title": "Password Requirement Minimum Age",
              "description": "The minimum age of passwords before they can be changed on this domain. Available in macOS 10.15 and later.",
              "type": "integer"
            },
            "pwReqText": {
              "title": "Password Requirement Text",
              "description": "The text version of the domain's password requirements. Only for use if pwReqComplexity or pwReqLength aren't specified. Available in macOS 10.15 and later.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "replicationTime": {
              "title": "Replication Time",
              "description": "The time, in seconds, required to replicate changes in the Active Directory domain. The Kerberos extension will use this when checking password age after a change. Available in macOS 11 and later.",
              "type": "integer"
            },
            "requireTLSForLDAP": {
              "title": "Require TLS for LDAP",
              "description": "Require that LDAP connections use TLS. Available in macOS 11 and later.",
              "type": "boolean"
            },
            "requireUserPresence": {
              "title": "Require User Presence",
              "description": "If true, requires the user to provide Touch ID, Face ID or their passcode to access the keychain entry.",
              "type": "boolean"
            },
            "siteCode": {
              "title": "Site Code",
              "description": "The name of the Active Directory site the Kerberos extension should use. Most administrators will never need to modify this value, as the Kerberos extension can normally find the site automatically.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "syncLocalPassword": {
              "title": "Sync Local Password",
              "description": "If false, disables password sync. Note that this will not work if the user is logged in with a mobile account. Available in macOS 10.15 and later.",
              "type": "boolean"
            },
            "usePlatformSSOTGT": {
              "title": "Use Platform SSO TGT",
              "description": "If true, the configured SSO extension must use a ticket-granting ticket (TGT) from Platform SSO.",
              "type": "boolean"
            },
            "useSiteAutoDiscovery": {
              "title": "Use Site Auto Discovery",
              "description": "If false, the Kerberos extension doesn't automatically use LDAP and DNS to determine its AD site name.",
              "type": "boolean"
            }
          }
        }
      },
      "ExtensionIdentifier": {
        "title": "Extension Identifier",
        "description": "The bundle identifier of the app extension that performs single sign-on (SSO) for the specified URLs. Enter com.apple.AppSSOKerberos.KerberosExtension to use Apple's Kerberos SSO extension.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Hosts": {
        "title": "Hosts",
        "description": "An array of host names or domain names that can be authenticated through the app extension. Required for Credential payloads. Ignored for Redirect payloads.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PlatformSSO": {
        "title": "PlatformSSO",
        "description": "This is the dictionary used to configure PlatformSSO.",
        "type": {
          "dictionary": {
            "AccountDisplayName": {
              "title": "AccountDisplayName",
              "description": "The display name for the account in notifications and authentication requests.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "AdditionalGroups": {
              "title": "AdditionalGroups",
              "description": "The list of groups that are created and do not have administrator access.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "AdministratorGroups": {
              "title": "AdministratorGroups",
              "description": "The list of groups that are used for administrator access. Membership will be requested during authentication.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "AuthenticationMethod": {
              "title": "AuthenticationMethod",
              "description": "The Platform SSO authentication method to be used with the extension. Requires that the SSO Extension also support the method.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "AuthorizationGroups": {
              "title": "AuthorizationGroups",
              "description": "The pairing of Authorization Rights to group names. The Authorization Right will be updated to use the group when used.",
              "type": {
                "dictionary": {
                  "Authorization Right": {
                    "title": "Authorization Right",
                    "description": "The Authorization Right to update.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "Group": {
                    "title": "Group",
                    "description": "The group to use for the Authorization Right.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "EnableAuthorization": {
              "title": "EnableAuthorization",
              "description": "Enables using identity provider accounts at authorization prompts. Requires 'UseSharedDeviceKeys' is true. The account will be assigned groups using the 'AdministratorGroups', 'AdditionalGroups', or 'AuthorizationGroups'.",
              "type": "boolean"
            },
            "EnableCreateUserAtLogin": {
              "title": "EnableCreateUserAtLogin",
              "description": "Enables creating new users at the login window with either Passwords or SmartCards. Requires 'UseSharedDeviceKeys' is true.",
              "type": "boolean"
            },
            "LoginFrequency": {
              "title": "LoginFrequency",
              "description": "The frequency where a full login is required instead of a refresh. Default is 18 hours. Must be > 1 hour.",
              "type": "integer"
            },
            "NewUserAuthorizationMode": {
              "title": "NewUserAuthorizationMode",
              "description": "This setting affects the permissions for accounts created at login by Platform SSO. It is only used when the account is created. Use of the following:\n* Standard\n    The account will be a standard user.\n* Admin\n    The account will be added to the local administrators group.\n* Groups\n    The account will be assigned groups using the 'AdministratorGroups', 'AdditionalGroups', or 'AuthorizationGroups'.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TokenToUserMapping": {
              "title": "TokenToUserMapping",
              "description": "The attribute mapping used when creating new users or for authorization.",
              "type": {
                "dictionary": {
                  "AccountName": {
                    "title": "AccountName",
                    "description": "The claim name to use for the user's account name.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "FullName": {
                    "title": "FullName",
                    "description": "The claim name to use for the user's full name.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "UseSharedDeviceKeys": {
              "title": "UseSharedDeviceKeys",
              "description": "If set to true, Platform SSO will use the same signing and encryption keys for all users.",
              "type": "boolean"
            },
            "UserAuthorizationMode": {
              "title": "UserAuthorizationMode",
              "description": "This setting affects the permissions after authentication by Platform SSO. It is applied each time user authenticates. Use of the following:\n* Standard\n    The account will be a standard user. It will be removed from the 'admin' group.\n* Admin\n    The account will be added to the local administrators group.\n* Groups\n    The account will be assigned groups using the 'AdministratorGroups', 'AdditionalGroups', or 'AuthorizationGroups'.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "Realm": {
        "title": "Realm",
        "description": "The realm name for Credential payloads. This value should be properly capitalized. This key is ignored for Redirect payloads.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RegistrationToken": {
        "title": "Registration Token",
        "description": "Platform SSO token for use in silent registration.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ScreenLockedBehavior": {
        "title": "Screen Locked Behavior",
        "type": {
          "string": {
            "rangeList": [
              [
                "Cancel",
                "Cancel"
              ],
              [
                "DoNotHandle",
                "Do Not Handle"
              ]
            ]
          }
        }
      },
      "TeamIdentifier": {
        "title": "Team Identifier",
        "description": "The team identifier of the app extension. This key is required on macOS and ignored elsewhere.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Type": {
        "title": "Type",
        "description": "The type of SSO.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "URLs": {
        "title": "URLs",
        "description": "The realm name for Credential payloads. This value should be properly capitalized. This key is ignored for Redirect payloads.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.familycontrols.contentfilter": {
    "title": "Parental Controls: Web Content Filter",
    "description": "Parental Controls: Web Content Filter settings",
    "properties": {
      "filterBlacklist": {
        "title": "Content Filter Backlist",
        "description": "If specified and restrictWeb is true, an array of URLs of Websites never to be allowed.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "filterWhitelist": {
        "title": "Content Filter Allowlist",
        "description": "If specified and restrictWeb is true, an array of URLs designating the only allowed Websites.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "restrictWeb": {
        "title": "Limit access to websites",
        "description": "Set to true to enable Web content filters.",
        "type": "boolean"
      },
      "siteWhitelist": {
        "title": "Site Allowlist",
        "description": "If specified, this key contains an array of dictionaries that define additional allowed sites besides those in the automated list of allowed and unallowed sites, including disallowed adult sites.",
        "type": {
          "array": [
            {
              "dictionary": {
                "address": {
                  "title": "Site address prefix",
                  "description": "Site prefix, including http(s) scheme.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "pageTitle": {
                  "title": "Page Title",
                  "description": "Optional Page Title",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "useContentFilter": {
        "title": "Use built in content filter",
        "description": "Set to true to try to automatically filter content.",
        "type": "boolean"
      },
      "whitelistEnabled": {
        "title": "Enable site allowlist",
        "description": "Set to true to use the filterWhiteList and filterBlackList lists.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.familycontrols.timelimits.v2": {
    "title": "Parental Controls: Time Limits",
    "description": "Parental Controls: Time Limit settings",
    "properties": {
      "familyControlsEnabled": {
        "title": "Enable Time Limits",
        "description": "Set to true to enable family control time limits",
        "type": "boolean"
      },
      "time-limits": {
        "title": "Time Limits",
        "type": {
          "dictionary": {
            "weekday-allowance": {
              "title": "Weekday Allowance",
              "description": "Weekday allowance settings",
              "type": {
                "dictionary": {
                  "enabled": {
                    "title": "Enable Weekday Allowance",
                    "type": "boolean"
                  },
                  "rangeType": {
                    "title": "Range Type",
                    "type": "integer"
                  },
                  "secondsPerDay": {
                    "title": "Allowance Seconds per Day",
                    "type": "integer"
                  }
                }
              }
            },
            "weekday-curfew": {
              "title": "Weekday Curfew",
              "type": {
                "dictionary": {
                  "enabled": {
                    "title": "Enable Weekday Curfew",
                    "type": "boolean"
                  },
                  "end": {
                    "title": "Curfew End Time",
                    "description": "The end time for the curfew in 'hours:minutes:seconds' format.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "rangeType": {
                    "title": "Range Type",
                    "type": "integer"
                  },
                  "start": {
                    "title": "Curfew Start Time",
                    "description": "The start time for the curfew in 'hours:minutes:seconds' format.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "weekend-allowance": {
              "title": "Weekend Allowance",
              "type": {
                "dictionary": {
                  "enabled": {
                    "title": "Enable Weekend Allowance",
                    "type": "boolean"
                  },
                  "rangeType": {
                    "title": "Range Type",
                    "type": "integer"
                  },
                  "secondsPerDay": {
                    "title": "Allowance Seconds per Day",
                    "type": "integer"
                  }
                }
              }
            },
            "weekend-curfew": {
              "title": "Weekend Curfew",
              "type": {
                "dictionary": {
                  "enabled": {
                    "title": "Enable Weekend Curfew",
                    "type": "boolean"
                  },
                  "end": {
                    "title": "Curfew End Time",
                    "description": "The end time for the curfew in 'hours:minutes:seconds' format.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "rangeType": {
                    "title": "Range Type",
                    "type": "integer"
                  },
                  "start": {
                    "title": "Curfew Start Time",
                    "description": "The start time for the curfew in 'hours:minutes:seconds' format.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.fileproviderd": {
    "title": "File Provider",
    "description": "File Provider settings",
    "properties": {
      "AllowManagedFileProvidersToRequestAttribution": {
        "title": "Allow Managed File Providers to Request Attribution",
        "description": "If true, enables file providers access to the path of the requesting process.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.finder": {
    "title": "Finder",
    "description": "Finder settings",
    "properties": {
      "FXRemoveOldTrashItems": {
        "title": "Remove Old Trash Items",
        "description": "Remove items from the Trash after 30 days",
        "type": "boolean"
      },
      "InterfaceLevel": {
        "title": "Finder Interface Level",
        "description": "Select if the standard (Full) or Simple Finder should be used",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProhibitBurn": {
        "title": "Allow Burn Disc",
        "description": "Writes permanent information to a CD or DVD. Disc burning restrictions require both Disc Burning and Finder payloads.",
        "type": "boolean"
      },
      "ProhibitConnectTo": {
        "title": "Allow Connect to Server",
        "description": "Opens a dialog box for finding servers on the network",
        "type": "boolean"
      },
      "ProhibitEject": {
        "title": "Allow Eject",
        "description": "Ejects removable media and mountable volumes",
        "type": "boolean"
      },
      "ProhibitGoToFolder": {
        "title": "Allow Go to Folder",
        "description": "Allows user to open files or folders by typing a pathname",
        "type": "boolean"
      },
      "ShowExternalHardDrivesOnDesktop": {
        "title": "Show External disks",
        "description": "Show external disks on the desktop",
        "type": "boolean"
      },
      "ShowHardDrivesOnDesktop": {
        "title": "Show Hard disks",
        "description": "Show hard disks on the desktop",
        "type": "boolean"
      },
      "ShowMountedServersOnDesktop": {
        "title": "Show Connected servers",
        "description": "Show connected servers on the desktop",
        "type": "boolean"
      },
      "ShowRecentTags": {
        "title": "Show Recent Tags",
        "description": "Show the Recent Tags section in the Finder sidebar",
        "type": "boolean"
      },
      "ShowRemovableMediaOnDesktop": {
        "title": "Show Removable media (CDs, DVDs, etc.)",
        "description": "Show removable media on the desktop",
        "type": "boolean"
      },
      "WarnOnEmptyTrash": {
        "title": "Show warning before emptying the Trash",
        "description": "Warning message requiring user approval before emptying the Trash",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.firstactiveethernet.managed": {
    "title": "802.1X Ethernet: First Active",
    "description": "Use this section to define First Active Ethernet settings",
    "properties": {
      "EAPClientConfiguration": {
        "title": "EAP Client Configuration",
        "description": "Specifies 802.1x EAP authentication parameters.",
        "type": {
          "dictionary": {
            "AcceptEAPTypes": {
              "title": "Accept EAP Types",
              "description": "The EAP types accepted.",
              "type": {
                "array": [
                  "integer"
                ]
              }
            },
            "EAPFASTProvisionPAC": {
              "title": "Provision PAC",
              "description": "If set, allows PAC provisioning.",
              "type": "boolean"
            },
            "EAPFASTProvisionPACAnonymously": {
              "title": "Provision PAC Anonymously",
              "type": "boolean"
            },
            "EAPFASTUsePAC": {
              "title": "Use PAC",
              "type": "boolean"
            },
            "EAPSIMNumberOfRANDs": {
              "title": "Number of RANDs",
              "description": "The minimum number of RAND values accepted from the server. 3 is the default, and 2 is allowed, but offers less security.",
              "type": "integer"
            },
            "OneTimePassword": {
              "title": "One Time Password",
              "type": "boolean"
            },
            "OneTimeUserPassword": {
              "title": "Per-Connection Password",
              "description": "If set, the user will be prompted for a password each time they connect to the network.",
              "type": "boolean"
            },
            "OuterIdentity": {
              "title": "Outer Identity",
              "description": "Externally visible identification (for TTLS, PEAP, and EAP-FAST). This string is used instead of the user's identity outside the encrypted tunnel. This value can be used to mask the true identity of the person using the network.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "PayloadCertificateAnchorUUID": {
              "title": "Certificate Anchor UUID",
              "description": "Array of UUIDs corresponding to the trusted certificates for this authentication.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "SystemModeCredentialsSource": {
              "title": "System Profile Credentials Source",
              "description": "Use an alternate set of credentials when in System mode (AKA not a loginwindow profile). This can be used to tell EAPOLClient to use the computer password in a bound active directory scenario for authentication.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "ActiveDirectory",
                      "Active Directory"
                    ]
                  ]
                }
              }
            },
            "SystemModeUseOpenDirectoryCredentials": {
              "title": "Use OpenDirectory System Profile Credentials",
              "description": "This indicates if the connection should try to use the OpenDirectory machine credentials.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSAllowTrustExceptions": {
              "title": "Allow Trust Exceptions",
              "description": "Allows a dynamic trust decision by the user. If false, the authentication fails if the certificate isn't already trusted.",
              "type": "boolean"
            },
            "TLSCertificateIsRequired": {
              "title": "TLS Certificate is Required",
              "type": "boolean"
            },
            "TLSMaximumVersion": {
              "title": "TLS Maximum Version",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSMinimumVersion": {
              "title": "TLS Minimum Version",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSTrustedServerNames": {
              "title": "Trusted Server Certificate Names",
              "description": "Certificate Common Names expected from authentication server. The wildcard * can be used to match a range of strings.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "TTLSInnerAuthentication": {
              "title": "Inner Authentication",
              "description": "Specifies the inner authentication used by the TTLS module.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserName": {
              "title": "Username",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserPassword": {
              "title": "Password",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "Interface": {
        "title": "Interface",
        "description": "The wired interface to use",
        "type": {
          "string": {
            "rangeList": [
              [
                "FirstActiveEthernet",
                "First Active Ethernet"
              ]
            ]
          }
        }
      },
      "SetupModes": {
        "title": "EAP Setup Modes",
        "description": "Select \"Login Window\" to authenticate the Mac to the network when the user logs in.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "System",
                    "System"
                  ],
                  [
                    "Loginwindow",
                    "Login Window"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.firstethernet.managed": {
    "title": "802.1X Ethernet: First",
    "description": "Use this section to define First Ethernet settings",
    "properties": {
      "EAPClientConfiguration": {
        "title": "EAP Client Configuration",
        "description": "Specifies 802.1x EAP authentication parameters.",
        "type": {
          "dictionary": {
            "AcceptEAPTypes": {
              "title": "Accept EAP Types",
              "description": "The EAP types accepted.",
              "type": {
                "array": [
                  "integer"
                ]
              }
            },
            "EAPFASTProvisionPAC": {
              "title": "Provision PAC",
              "description": "If set, allows PAC provisioning.",
              "type": "boolean"
            },
            "EAPFASTProvisionPACAnonymously": {
              "title": "Provision PAC Anonymously",
              "type": "boolean"
            },
            "EAPFASTUsePAC": {
              "title": "Use PAC",
              "type": "boolean"
            },
            "EAPSIMNumberOfRANDs": {
              "title": "Number of RANDs",
              "description": "The minimum number of RAND values accepted from the server. 3 is the default, and 2 is allowed, but offers less security.",
              "type": "integer"
            },
            "OneTimePassword": {
              "title": "One Time Password",
              "type": "boolean"
            },
            "OneTimeUserPassword": {
              "title": "Per-Connection Password",
              "description": "If set, the user will be prompted for a password each time they connect to the network.",
              "type": "boolean"
            },
            "OuterIdentity": {
              "title": "Outer Identity",
              "description": "Externally visible identification (for TTLS, PEAP, and EAP-FAST). This string is used instead of the user's identity outside the encrypted tunnel. This value can be used to mask the true identity of the person using the network.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "PayloadCertificateAnchorUUID": {
              "title": "Certificate Anchor UUID",
              "description": "Array of UUIDs corresponding to the trusted certificates for this authentication.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "SystemModeCredentialsSource": {
              "title": "System Profile Credentials Source",
              "description": "Use an alternate set of credentials when in System mode (AKA not a loginwindow profile). This can be used to tell EAPOLClient to use the computer password in a bound active directory scenario for authentication.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "ActiveDirectory",
                      "Active Directory"
                    ]
                  ]
                }
              }
            },
            "SystemModeUseOpenDirectoryCredentials": {
              "title": "Use OpenDirectory System Profile Credentials",
              "description": "This indicates if the connection should try to use the OpenDirectory machine credentials.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSAllowTrustExceptions": {
              "title": "Allow Trust Exceptions",
              "description": "Allows a dynamic trust decision by the user. If false, the authentication fails if the certificate isn't already trusted.",
              "type": "boolean"
            },
            "TLSCertificateIsRequired": {
              "title": "TLS Certificate is Required",
              "type": "boolean"
            },
            "TLSMaximumVersion": {
              "title": "TLS Maximum Version",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSMinimumVersion": {
              "title": "TLS Minimum Version",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSTrustedServerNames": {
              "title": "Trusted Server Certificate Names",
              "description": "Certificate Common Names expected from authentication server. The wildcard * can be used to match a range of strings.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "TTLSInnerAuthentication": {
              "title": "Inner Authentication",
              "description": "Specifies the inner authentication used by the TTLS module.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserName": {
              "title": "Username",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserPassword": {
              "title": "Password",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "Interface": {
        "title": "Interface",
        "description": "The wired interface to use",
        "type": {
          "string": {
            "rangeList": [
              [
                "FirstEthernet",
                "First Ethernet"
              ]
            ]
          }
        }
      },
      "SetupModes": {
        "title": "EAP Setup Modes",
        "description": "Select \"Login Window\" to authenticate the Mac to the network when the user logs in.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "System",
                    "System"
                  ],
                  [
                    "Loginwindow",
                    "Login Window"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.font": {
    "title": "Font",
    "description": "Use this section to define Font settings.",
    "properties": {
      "Font": {
        "title": "Font",
        "description": "Font file (.otf or .ttf) for inclusion on device",
        "type": "data"
      },
      "Name": {
        "title": "Font Name",
        "description": "The user-visible name for the font. This field is replaced by the actual name of the font after installation.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.freeform": {
    "title": "Freeform",
    "description": "Freeform settings",
    "properties": {
      "CRLConnectICloudDialogShown": {
        "title": "Disable iCloud Sign In Prompt",
        "description": "Enabling this preference and using the default value will suppress a prompt offering to sign in to iCloud.",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.gamed": {
    "title": "Parental Controls: Game Center",
    "description": "Parental Controls: Game Center settings",
    "properties": {
      "GKFeatureAccountModificationAllowed": {
        "title": "Allow Game Center account modification",
        "description": "Set to false to disable account modifications.",
        "type": "boolean"
      },
      "GKFeatureAddingGameCenterFriendsAllowed": {
        "title": "Allow adding Game Center friends",
        "description": "Set to false to disable adding Game Center friends.",
        "type": "boolean"
      },
      "GKFeatureGameCenterAllowed": {
        "title": "Allow use of Game Center",
        "description": "Set to false to disable Game Center.",
        "type": "boolean"
      },
      "GKFeatureMultiplayerGamingAllowed": {
        "title": "Allow multiplayer gaming",
        "description": "Set to false to disable multiplayer gaming.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.garageband10": {
    "title": "GarageBand",
    "description": "GarageBand settings",
    "properties": {
      "RecentWhatsNewPanelVersion": {
        "title": "Suppress What's New Prompt",
        "description": "So long as the integer value of this preference is set equal or higher to the value produced in the user-level plist after launching the app and acknowledging the \"What's New\" prompt, this will prevent the \"What's New\" prompt from appearing.",
        "type": "integer"
      },
      "ShowMoreDownloadsDialogGB": {
        "title": "Download Additional Content Prompt",
        "description": "If disabled, suppresses the prompt to download additional optional GarageBand content.",
        "type": "boolean"
      },
      "welcomeScreenShown": {
        "title": "Suppress Welcome Screen",
        "description": "If enabled, suppresses the welcome screen.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.globalethernet.managed": {
    "title": "802.1X Ethernet: Global",
    "description": "Use this section to define Global Ethernet settings",
    "properties": {
      "EAPClientConfiguration": {
        "title": "EAP Client Configuration",
        "description": "Specifies 802.1x EAP authentication parameters.",
        "type": {
          "dictionary": {
            "AcceptEAPTypes": {
              "title": "Accept EAP Types",
              "description": "The EAP types accepted.",
              "type": {
                "array": [
                  "integer"
                ]
              }
            },
            "EAPFASTProvisionPAC": {
              "title": "Provision PAC",
              "description": "If set, allows PAC provisioning.",
              "type": "boolean"
            },
            "EAPFASTProvisionPACAnonymously": {
              "title": "Provision PAC Anonymously",
              "type": "boolean"
            },
            "EAPFASTUsePAC": {
              "title": "Use PAC",
              "type": "boolean"
            },
            "EAPSIMNumberOfRANDs": {
              "title": "Number of RANDs",
              "description": "The minimum number of RAND values accepted from the server. 3 is the default, and 2 is allowed, but offers less security.",
              "type": "integer"
            },
            "OneTimePassword": {
              "title": "One Time Password",
              "type": "boolean"
            },
            "OneTimeUserPassword": {
              "title": "Per-Connection Password",
              "description": "If set, the user will be prompted for a password each time they connect to the network.",
              "type": "boolean"
            },
            "OuterIdentity": {
              "title": "Outer Identity",
              "description": "Externally visible identification (for TTLS, PEAP, and EAP-FAST). This string is used instead of the user's identity outside the encrypted tunnel. This value can be used to mask the true identity of the person using the network.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "PayloadCertificateAnchorUUID": {
              "title": "Certificate Anchor UUID",
              "description": "Array of UUIDs corresponding to the trusted certificates for this authentication.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "SystemModeCredentialsSource": {
              "title": "System Profile Credentials Source",
              "description": "Use an alternate set of credentials when in System mode (AKA not a loginwindow profile). This can be used to tell EAPOLClient to use the computer password in a bound active directory scenario for authentication.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "ActiveDirectory",
                      "Active Directory"
                    ]
                  ]
                }
              }
            },
            "SystemModeUseOpenDirectoryCredentials": {
              "title": "Use OpenDirectory System Profile Credentials",
              "description": "This indicates if the connection should try to use the OpenDirectory machine credentials.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSAllowTrustExceptions": {
              "title": "Allow Trust Exceptions",
              "description": "Allows a dynamic trust decision by the user. If false, the authentication fails if the certificate isn't already trusted.",
              "type": "boolean"
            },
            "TLSCertificateIsRequired": {
              "title": "TLS Certificate is Required",
              "type": "boolean"
            },
            "TLSMaximumVersion": {
              "title": "TLS Maximum Version",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSMinimumVersion": {
              "title": "TLS Minimum Version",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSTrustedServerNames": {
              "title": "Trusted Server Certificate Names",
              "description": "Certificate Common Names expected from authentication server. The wildcard * can be used to match a range of strings.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "TTLSInnerAuthentication": {
              "title": "Inner Authentication",
              "description": "Specifies the inner authentication used by the TTLS module.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserName": {
              "title": "Username",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserPassword": {
              "title": "Password",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "Interface": {
        "title": "Interface",
        "description": "The wired interface to use",
        "type": {
          "string": {
            "rangeList": [
              [
                "AnyEthernet",
                "Any Ethernet"
              ]
            ]
          }
        }
      },
      "SetupModes": {
        "title": "EAP Setup Modes",
        "description": "Select \"Login Window\" to authenticate the Mac to the network when the user logs in.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "System",
                    "System"
                  ],
                  [
                    "Loginwindow",
                    "Login Window"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.google-oauth": {
    "title": "Google Account",
    "description": "Use this section to configure Google accounts. The user will be prompted to sign in afterward.",
    "properties": {
      "AccountDescription": {
        "title": "Account Description",
        "description": "Description of the account shown to the user",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AccountName": {
        "title": "Account Name",
        "description": "Full user name of the Google account",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CommunicationServiceRules": {
        "title": "Communication Service Rules",
        "description": "The communication service handler rules for this account",
        "type": {
          "dictionary": {
            "DefaultServiceHandlers": {
              "title": "Default Service Handlers",
              "description": "",
              "type": {
                "dictionary": {
                  "AudioCall": {
                    "title": "Bundle Identifier",
                    "description": "Bundle identifier for the default application that handles audio calls made to contacts from this account",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "EmailAddress": {
        "title": "Email Address",
        "description": "Full Google/Gmail email address for the account",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.iBooksX": {
    "title": "Books/iBooks",
    "description": "Books/iBooks settings",
    "properties": {
      "BKAlreadyDisplayedGDPRWelcomeExperience": {
        "title": "Suppress Welcome to Apple Books Screen",
        "description": "Suppresses the \"Welcome to Apple Books\" screen at launch. This payload should be used in conjunction with the \"Suppress Empty Library\" key.",
        "type": "boolean"
      },
      "BKAlreadyDisplayedUbiquity": {
        "title": "Suppress Empty Library / Go to Store Screen",
        "description": "Suppresses the \"There are no books in your library\" screen. This payload should be used in conjunction with the \"Suppress Welcome to Apple Books Screen\" key",
        "type": "boolean"
      },
      "BKDisableBookStorePreferenceKey": {
        "title": "Disable iBooks Store",
        "description": "This payload also requires an iTunes payload with the \"disableMusicStore\" key set.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.iMovieApp": {
    "title": "iMovie",
    "description": "iMovie settings",
    "properties": {
      "FFiMovieUpgradeFirstRun": {
        "title": "FFiMovieUpgradeFirstRun",
        "description": "Suppresses the popup to upgrade an iMovie library on first run.",
        "type": "boolean"
      },
      "LKWelcomeDisplayedForAppVersion": {
        "title": "Welcome displayed",
        "description": "Suppress the Welcome screen on the selected versions of iMovie.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "iMovie Version",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Suppressed",
              "description": "",
              "type": "boolean"
            }
          }
        }
      },
      "LKWhatsNewDisplayedForAppVersion": {
        "title": "Whats New displayed",
        "description": "Suppress the Whats New screen on the selected versions of iMovie.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "iMovie Version",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Suppressed",
              "description": "",
              "type": "boolean"
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.iTunes": {
    "title": "iTunes",
    "description": "iTunes settings",
    "properties": {
      "DisableDeviceBackups": {
        "title": "Disable Device Backups",
        "type": "boolean"
      },
      "disableAppleMusic": {
        "title": "Disable Apple Music",
        "type": "boolean"
      },
      "disableCheckForUpdates": {
        "title": "Disable Checking for Updates",
        "type": "boolean"
      },
      "disableMusicSocial": {
        "title": "Disable Music Profiles and Posts",
        "type": "boolean"
      },
      "disableMusicStore": {
        "title": "Disable iTunes Store",
        "type": "boolean"
      },
      "disablePodcasts": {
        "title": "Disable Podcasts",
        "type": "boolean"
      },
      "disableRadio": {
        "title": "Disable Internet Radio",
        "type": "boolean"
      },
      "disableShareLibraryInfo": {
        "title": "Disable Library Info Sharing",
        "description": "Share details about your library with Apple.",
        "type": "boolean"
      },
      "disableSharedMusic": {
        "title": "Disable Shared Libraries",
        "type": "boolean"
      },
      "dontAutomaticallySyncIPods": {
        "title": "Prevent iPods, iPhones and iPads from syncing automatically",
        "type": "boolean"
      },
      "license-agreements": {
        "title": "iTunes Software License Agreement",
        "description": "Agrees to the license agreement prompt when first opening iTunes",
        "type": {
          "dictionary": {
            "EA1510": {
              "title": "Agree to iTunes Software Licence Agreement",
              "description": "Automatically accept the iTunes Software Licence Agreement on launch.",
              "type": "boolean"
            }
          }
        }
      },
      "restrictExplicit": {
        "title": "Restrict Music with explicit content",
        "type": "boolean"
      },
      "restrictExplicitBooks": {
        "title": "Restrict Books with explicit sexual content",
        "type": "boolean"
      },
      "restrictGames": {
        "title": "Restrict Games",
        "type": "boolean"
      },
      "restrictMovies": {
        "title": "Restrict Movies",
        "type": "boolean"
      },
      "restrictTVShows": {
        "title": "Restrict TV Shows",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.iWork.Keynote": {
    "title": "Keynote",
    "description": "Keynote settings",
    "properties": {
      "TMAFirstLaunchVersion": {
        "title": "Suppress Welcome Dialog",
        "type": "integer"
      },
      "TSURemoteDefaultsNextUpdate": {
        "title": "Suppress iWork Update Messages",
        "type": "date"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.iWork.Numbers": {
    "title": "Numbers",
    "description": "Numbers settings",
    "properties": {
      "TMAFirstLaunchVersion": {
        "title": "Suppress Welcome Dialog",
        "type": "integer"
      },
      "TSURemoteDefaultsNextUpdate": {
        "title": "Suppress iWork Update Messages",
        "type": "date"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.iWork.Pages": {
    "title": "Pages",
    "description": "Pages settings",
    "properties": {
      "TMAFirstLaunchVersion": {
        "title": "Suppress Welcome Dialog",
        "type": "integer"
      },
      "TSURemoteDefaultsNextUpdate": {
        "title": "Suppress iWork Update Messages",
        "type": "date"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.icloud.managed": {
    "title": "iCloud Find My",
    "description": "iCloud Find My settings",
    "properties": {
      "DisableFMMiCloudSetting": {
        "title": "Disable Find My iCloud Setting",
        "description": "",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.ironwood.support": {
    "title": "Parental Controls: Dictation and Profanity",
    "description": "Parental Controls: Dictation and Profanity settings",
    "properties": {
      "Assistant Allowed": {
        "title": "Allow Assistant",
        "description": "Allow Assistant",
        "type": "boolean"
      },
      "Ironwood Allowed": {
        "title": "Allow use of Siri and Dictation",
        "description": "Set to false to disable dictation.",
        "type": "boolean"
      },
      "Profanity Allowed": {
        "title": "Allow Profanity in Dictation",
        "description": "Set to false to suppress profanity.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.jabber.account": {
    "title": "Messages: Jabber",
    "description": "Messages: Jabber settings",
    "properties": {
      "JabberAccountDescription": {
        "title": "Account description",
        "description": "The display name for the account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "JabberAuthentication": {
        "title": "Authentication Type",
        "description": "The authentication method for the server.",
        "type": {
          "string": {
            "rangeList": [
              [
                "JabberAuthPassword",
                "Password"
              ],
              [
                "JabberAuthKerberos",
                "Kerberos v5"
              ]
            ]
          }
        }
      },
      "JabberHostName": {
        "title": "Hostname",
        "description": "The IP address or fully qualified domain name (FQDN) of the server.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "JabberPassword": {
        "title": "Password",
        "description": "The password for the account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "JabberPort": {
        "title": "Port",
        "description": "The port on which to connect to the server.",
        "type": "integer"
      },
      "JabberUseSSL": {
        "title": "Use SSL",
        "description": "Enable Secure Socket Layer for this connection.",
        "type": "boolean"
      },
      "JabberUserName": {
        "title": "Account name",
        "description": "The chat name of the user.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.ldap.account": {
    "title": "LDAP",
    "description": "LDAP settings",
    "properties": {
      "LDAPAccountDescription": {
        "title": "Account Description",
        "description": "The display name of the account (e.g. 'Company LDAP Account')",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LDAPAccountHostName": {
        "title": "Account Hostname",
        "description": "The LDAP Hostname or IP address",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LDAPAccountPassword": {
        "title": "Account Password",
        "description": "The password for this LDAP account",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LDAPAccountUseSSL": {
        "title": "Use SSL",
        "description": "Enable Secure Socket Layer for this connection",
        "type": "boolean"
      },
      "LDAPAccountUserName": {
        "title": "Account Username",
        "description": "The username for this LDAP account",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LDAPSearchSettings": {
        "title": "Search Settings",
        "description": "Scope and search base for this LDAP server.",
        "type": {
          "array": [
            {
              "dictionary": {
                "LDAPSearchSettingDescription": {
                  "title": "Description",
                  "description": "Description for this setting",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "LDAPSearchSettingScope": {
                  "title": "Scope",
                  "description": "Defines what recursion to use in the search",
                  "type": {
                    "string": {
                      "rangeList": [
                        [
                          "LDAPSearchSettingScopeBase",
                          "Base"
                        ],
                        [
                          "LDAPSearchSettingScopeOneLevel",
                          "One Level"
                        ],
                        [
                          "LDAPSearchSettingScopeSubtree",
                          "Subtree"
                        ]
                      ]
                    }
                  }
                },
                "LDAPSearchSettingSearchBase": {
                  "title": "Search Base",
                  "description": "Conceptually, the path to the the node to start a search at",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.logic10": {
    "title": "Logic Pro X",
    "description": "Logic Pro X settings",
    "properties": {
      "DontShowAdditionalContentDowload": {
        "title": "Don't Show Additional Content Download",
        "description": "Suppresses the popup to download additonal sound content on launch. Yes, in fact, 'Download' is spelled 'Dowload' in the preference key.",
        "type": "boolean"
      },
      "FeatureAvailable_ExpertAudio": {
        "title": "Enable Additional Option: Audio",
        "description": "Enables destructive audio editing, and advanced configuration options for audio editing experts.",
        "type": "boolean"
      },
      "FeatureAvailable_ExpertCS": {
        "title": "Enable Additional Option: Control Surfaces",
        "description": "Allows experts to create new, and edit any functional detail of existing control surface systems.",
        "type": "boolean"
      },
      "FeatureAvailable_ExpertEditing": {
        "title": "Enable Additional Option: Advanced Editing",
        "description": "Enables advanced editing functionality, including: aliases, track reassignment, historic tuning scales, and the Tempo Interpreter.",
        "type": "boolean"
      },
      "FeatureAvailable_ExpertMIDI": {
        "title": "Enable Additional Option: MIDI",
        "description": "Allows signal flow control and real-time processing of MIDI input and output streams in the Environment.",
        "type": "boolean"
      },
      "FeatureAvailable_ExpertScore": {
        "title": "Enable Additional Option: Score",
        "description": "Enables the full feature set of the Score window for notation experts.",
        "type": "boolean"
      },
      "FeatureAvailable_Surround": {
        "title": "Enable Additional Option: Surround",
        "description": "Enables all features for surround audio productions, and requires a surround speaker setup for monitoring.",
        "type": "boolean"
      },
      "QuickHelpMode": {
        "title": "Quick Help Mode",
        "description": "Set to 0 to disable Quick Help Mode overlays.",
        "type": "integer"
      },
      "RecentWhatsNewPanelVersion": {
        "title": "Suppress What's New Prompt",
        "description": "So long as the integer value of this preference is set equal or higher to the value produced in the user-level plist after launching the app and acknowledging the \"What's New\" prompt, this will prevent the \"What's New\" prompt from appearing.",
        "type": "integer"
      },
      "startupAction": {
        "title": "Startup Action",
        "description": "Configures Logic's startup behaviour.",
        "type": "integer"
      },
      "userLevel": {
        "title": "Enable Show Advanced Tools",
        "description": "Configures whether Show Advanced Tools is enabled.",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.loginitems.managed": {
    "title": "Login Items",
    "description": "Login Items settings",
    "properties": {
      "AutoLaunchedApplicationDictionary-managed": {
        "title": "Automatically launched items",
        "description": "Automatically launch these items at login.",
        "type": {
          "array": [
            {
              "dictionary": {
                "AuthenticateAsLoginUserShortName": {
                  "title": "Authenticate with short name",
                  "description": "Authenticate to the URL with the current users short name. Required if URL is specified, but not for Path",
                  "type": "boolean"
                },
                "Hide": {
                  "title": "Hide",
                  "description": "If true, hide this item in the Users & Groups login items list.",
                  "type": "boolean"
                },
                "Path": {
                  "title": "Path",
                  "description": "Path to the item's location.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "URL": {
                  "title": "URL",
                  "description": "URL to mount in the form scheme://mount.point/Share",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.loginwindow": {
    "title": "Login Window",
    "description": "Login Window settings",
    "properties": {
      "AdminHostInfo": {
        "title": "Show additional information in the menu bar",
        "description": "Cycle through the hostname, macOS version, and IP address when the menu bar is clicked.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AdminMayDisableMCX": {
        "title": "Mac computer administrators may refresh content or disable management",
        "description": "Allows Mac administrators on the computer to refresh or disable the management features.",
        "type": "boolean"
      },
      "AllowList": {
        "title": "Allowed Users or Groups",
        "description": "User or group GUIDs of users that are allowed to log in. An asterisk '*' string specifies all users or groups.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AlwaysShowWorkgroupDialog": {
        "title": "Always show workgroup dialog during log in",
        "description": "If the workgroup has a specific dialog, that dialog is shown when users log in.",
        "type": "boolean"
      },
      "AutologinPassword": {
        "title": "AutologinPassword",
        "description": "Optional user password when setting up auto login.  If this key does not exist, and a user name was specified, auto login will be set up the next time the specified user logs in to the client.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AutologinUsername": {
        "title": "AutologinUsername",
        "description": "Sets up auto login with the specified short user name.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ChangePasswordDisabled": {
        "title": "Allow user to change password",
        "description": "Enable or disable the \"Change Password…\" button in the Users & Groups preference pane.",
        "type": "boolean"
      },
      "CombineUserWorkgroups": {
        "title": "Combine available workgroup settings",
        "description": "If users are part of a nested workgroup, all nested workgroup settings are enforced.",
        "type": "boolean"
      },
      "DenyList": {
        "title": "Denied Users or Groups",
        "description": "User or group GUIDs of users that cannot log in. This list takes priority over the list in the AllowList key.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DisableConsoleAccess": {
        "title": "Enable >console login",
        "description": "Allows users to use >console at the login window.",
        "type": "boolean"
      },
      "DisableFDEAutoLogin": {
        "title": "Disable automatic login if FileVault is enabled",
        "description": "Both the EFI Login and loginwindow password will be required to login.",
        "type": "boolean"
      },
      "DisableScreenLockImmediate": {
        "title": "Disable the immediate Screen Lock function",
        "description": "",
        "type": "boolean"
      },
      "EnableExternalAccounts": {
        "title": "Enable external accounts",
        "description": "Allows external accounts to log in.",
        "type": "boolean"
      },
      "FlattenUserWorkgroups": {
        "title": "Ignore workgroup nesting",
        "description": "If users are part of a nested workgroup, only the settings of the user's workgroup are enforced.",
        "type": "boolean"
      },
      "HiddenUsersList": {
        "title": "Hidden Users List",
        "description": "Hides users defined in the list from the login window under the Other button",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "HideAdminUsers": {
        "title": "Show Mac computer's administrator accounts",
        "description": "",
        "type": "boolean"
      },
      "HideLocalUsers": {
        "title": "Show local users",
        "description": "",
        "type": "boolean"
      },
      "HideMobileAccounts": {
        "title": "Show mobile accounts",
        "description": "",
        "type": "boolean"
      },
      "IncludeNetworkUser": {
        "title": "Show network users",
        "description": "",
        "type": "boolean"
      },
      "LocalUserLoginEnabled": {
        "title": "Local-only users may log in",
        "description": "Permit only local users to log in. Network users won't be allowed to log in.",
        "type": "boolean"
      },
      "LocalUsersHaveWorkgroups": {
        "title": "Local-only users use available workgroup settings",
        "description": "Local users are forced to use any available workgroup settings.",
        "type": "boolean"
      },
      "LogOutDisabledWhileLoggedIn": {
        "title": "Disable the Log Out menu item while logged in",
        "description": "",
        "type": "boolean"
      },
      "LoginwindowText": {
        "title": "Banner",
        "description": "Enter a message that's displayed above the login prompt. You might use this to provide a warning about unauthorized use.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PowerOffDisabledWhileLoggedIn": {
        "title": "Disable the Power Off menu item while logged in",
        "description": "",
        "type": "boolean"
      },
      "RestartDisabled": {
        "title": "Show the Restart button",
        "description": "",
        "type": "boolean"
      },
      "RestartDisabledWhileLoggedIn": {
        "title": "Disable the Restart menu item while logged in",
        "description": "",
        "type": "boolean"
      },
      "RetriesUntilHint": {
        "title": "Show password hints after failed attempts",
        "description": "Number of tries until password hint is shown (0 = disable password hints).",
        "type": "integer"
      },
      "SHOWFULLNAME": {
        "title": "Display login window as",
        "description": "The display style and related options of the login prompt.",
        "type": "boolean"
      },
      "SHOWOTHERUSERS_MANAGED": {
        "title": "Show \"Other\"",
        "description": "",
        "type": "boolean"
      },
      "ShutDownDisabled": {
        "title": "Show the Shut Down button",
        "description": "",
        "type": "boolean"
      },
      "ShutDownDisabledWhileLoggedIn": {
        "title": "Disable the Shut Down menu item while logged in",
        "description": "",
        "type": "boolean"
      },
      "SleepDisabled": {
        "title": "Show the Sleep button",
        "description": "",
        "type": "boolean"
      },
      "TALLogoutSavesState": {
        "title": "Reopen windows when logging back in",
        "description": "Reopens windows that were open at time of logout",
        "type": "boolean"
      },
      "UseComputerNameForComputerRecordName": {
        "title": "Set Mac computer name to computer record name",
        "description": "Forces the name of the Mac to be set as the computer record name.",
        "type": "boolean"
      },
      "com.apple.login.mcx.DisableAutoLoginClient": {
        "title": "Disable automatic login if FileVault is disabled",
        "description": "A loginwindow password will be required to login.",
        "type": "boolean"
      },
      "showInputMenu": {
        "title": "Show input menu in login window",
        "description": "",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.lom": {
    "title": "Lights Out Management (LOM)",
    "description": "Use this section to define settings for Lights Out Management (LOM).",
    "properties": {
      "ControllerCACertificateUUIDs": {
        "title": "Controller CA Certificate UUIDs",
        "description": "An array of UUIDs of payloads in this profile that contain certificates that will be used for controller certificate trustworthiness evaluation.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ControllerCertificateUUID": {
        "title": "Controller Certificate UUID",
        "description": "UUID of a payload in this profile that contains the certificate of the LOM controller. Configures the device to accept LOMDeviceRequestCommand.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DeviceCACertificateUUIDs": {
        "title": "Device CA Certificate UUIDs",
        "description": "An array of UUIDs of payloads in this profile that contain certificates that will be used for device certificate trustworthiness evaluation.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DeviceCertificateUUID": {
        "title": "Device Certificate UUID",
        "description": "UUID of a payload in this profile that contains the certificate of the LOM device. Configures the device to accept PowerON, PowerOFF, and Reset requests.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.mDNSResponder": {
    "title": "Bonjour",
    "description": "Bonjour Settings",
    "properties": {
      "NoMulticastAdvertisements": {
        "title": "Disable Bonjour",
        "description": "",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.mail.managed": {
    "title": "Mail",
    "description": "Mail settings",
    "properties": {
      "EmailAccountDescription": {
        "title": "Account Description",
        "description": "The display name of the account (e.g. \"Company Mail Account\")",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EmailAccountName": {
        "title": "User Display Name",
        "description": "The display name of the user (e.g. \"John Appleseed\")",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EmailAccountType": {
        "title": "Account Type",
        "description": "The protocol for accessing the account",
        "type": {
          "string": {
            "rangeList": [
              [
                "EmailTypeIMAP",
                "IMAP"
              ],
              [
                "EmailTypePOP",
                "POP"
              ]
            ]
          }
        }
      },
      "EmailAddress": {
        "title": "Email Address",
        "description": "The address of the account (e.g. \"john@company.com\")",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IdentificationUUID": {
        "title": "IdentificationUUID",
        "description": "The UUID of the Identification Payload to use as the source for the user email and username values.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IncomingMailServerAuthentication": {
        "title": "Incoming Mail Server Authentification Type",
        "description": "The authentication method for the incoming mail server",
        "type": {
          "string": {
            "rangeList": [
              [
                "EmailAuthNone",
                "None"
              ],
              [
                "EmailAuthPassword",
                "Password"
              ],
              [
                "EmailAuthCRAMMD5",
                "MD5 Challenge-Response"
              ],
              [
                "EmailAuthNTLM",
                "NTLM"
              ],
              [
                "EmailAuthHTTPMD5",
                "HTTP MD5 Digest"
              ]
            ]
          }
        }
      },
      "IncomingMailServerHostName": {
        "title": "Incoming Mail Server Hostname",
        "description": "Hostname or IP Address for incoming mail",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IncomingMailServerIMAPPathPrefix": {
        "title": "Path Prefix",
        "description": "Path prefix for IMAP mail server",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IncomingMailServerPortNumber": {
        "title": "Incoming Mail Server Port",
        "description": "Port number for incoming mail",
        "type": "integer"
      },
      "IncomingMailServerUseSSL": {
        "title": "Incoming Mail Server Use SSL",
        "description": "Retrieve incoming mail through Secure Socket Layer",
        "type": "boolean"
      },
      "IncomingMailServerUsername": {
        "title": "Incoming Mail Server Username",
        "description": "The username used to connect to the server for incoming mail",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IncomingPassword": {
        "title": "Incoming Mail Server Password",
        "description": "The password for the incoming mail server",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OutgoingMailServerAuthentication": {
        "title": "Outgoing Mail Server Authentication Type",
        "description": "The authentication method for the outgoing mail server",
        "type": {
          "string": {
            "rangeList": [
              [
                "EmailAuthNone",
                "None"
              ],
              [
                "EmailAuthPassword",
                "Password"
              ],
              [
                "EmailAuthCRAMMD5",
                "MD5 Challenge-Response"
              ],
              [
                "EmailAuthNTLM",
                "NTLM"
              ],
              [
                "EmailAuthHTTPMD5",
                "HTTP MD5 Digest"
              ]
            ]
          }
        }
      },
      "OutgoingMailServerHostName": {
        "title": "Outgoing Mail Server Hostname",
        "description": "Hostname or IP address for outgoing mail",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OutgoingMailServerPortNumber": {
        "title": "Outgoing Mail Server Port",
        "description": "The port number for outgoing mail",
        "type": "integer"
      },
      "OutgoingMailServerUseSSL": {
        "title": "Outgoing Mail Server Use SSL",
        "description": "Send outgoing mail through Secure Socket Layer",
        "type": "boolean"
      },
      "OutgoingMailServerUsername": {
        "title": "Outgoing Mail Server Username",
        "description": "The username used to connect to the server for outgoing mail",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OutgoingPassword": {
        "title": "Outgoing Mail Server Password",
        "description": "The password for the outgoing mail server",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OutgoingPasswordSameAsIncomingPassword": {
        "title": "Outgoing Password Same As Incoming",
        "description": "SMTP authentication uses the same password as POP/IMAP",
        "type": "boolean"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PreventAppSheet": {
        "title": "Use Only In Mail",
        "description": "Send outgoing mail from this account only from Mail app",
        "type": "boolean"
      },
      "PreventMove": {
        "title": "Allow user to move messages from this account",
        "description": "Messages can be moved out of this account into another.",
        "type": "boolean"
      },
      "SMIMEEnableEncryptionPerMessageSwitch": {
        "title": "Enable per-message encryption switch",
        "description": "Allow the user toggle encrytion in the compose view and encryption is enabled.",
        "type": "boolean"
      },
      "SMIMEEnablePerMessageSwitch": {
        "title": "Enable per-message encryption switch",
        "description": "Allow the user to choose whether to encrypt each message",
        "type": "boolean"
      },
      "SMIMEEnabled": {
        "title": "S/MIME Enabled",
        "description": "If set to true, this account will support S/MIME",
        "type": "boolean"
      },
      "SMIMEEncryptByDefault": {
        "title": "Enable S/MIME by default",
        "description": "If SMIMEEnableEncryptionPerMessageSwitch is false, this default cannot be changed by the user.",
        "type": "boolean"
      },
      "SMIMEEncryptByDefaultUserOverrideable": {
        "title": "Enable user to toggle S/MIME by default",
        "description": "Allow the user to toggle the encryption by default setting.",
        "type": "boolean"
      },
      "SMIMEEncryptionCertificateUUID": {
        "title": "S/MIME Encryption Certificate",
        "description": "The PayloadUUID of the identity certificate used to decrypt messages coming into this account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SMIMEEncryptionCertificateUUIDUserOverrideable": {
        "title": "Enable user to select the signing identity and encryption is enabled",
        "description": "Allow the user to select the signing identity and encryption is enabled.",
        "type": "boolean"
      },
      "SMIMEEncryptionEnabled": {
        "title": "Enable S/MIME Encryption",
        "description": "Support S/MIME encryption from this account",
        "type": "boolean"
      },
      "SMIMESigningCertificateUUID": {
        "title": "S/MIME Signing Certificate",
        "description": "The PayloadUUID of the identity certificate used to sign messages sent from this account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SMIMESigningCertificateUUIDUserOverrideable": {
        "title": "Enable user to select the signing identity",
        "description": "Allow the user to select the signing identity.",
        "type": "boolean"
      },
      "SMIMESigningEnabled": {
        "title": "Enable S/MIME Signing",
        "description": "Support S/MIME signing for this account",
        "type": "boolean"
      },
      "SMIMESigningUserOverrideable": {
        "title": "Enable S/MIME toggle",
        "description": "Allow the user to toggle S/MIME signing on or off in Settings.",
        "type": "boolean"
      },
      "allowMailDrop": {
        "title": "Allow Mail Drop",
        "description": "Allow Mail Drop for this account",
        "type": "boolean"
      },
      "disableMailRecentsSyncing": {
        "title": "Allow recent addresses to be synced",
        "description": "Include this account in recent address syncing",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.mcxloginscripts": {
    "title": "Login Window: Scripts",
    "description": "Login Window: Scripts settings",
    "properties": {
      "loginscripts": {
        "title": "Login script",
        "description": "Select the script that runs when users log in",
        "type": {
          "array": [
            {
              "dictionary": {
                "filedata": {
                  "title": "Script",
                  "description": "Script to run at login",
                  "type": "data"
                },
                "filename": {
                  "title": "Name",
                  "description": "Name of the script",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "logoutscripts": {
        "title": "Logout script",
        "description": "Select the script that runs when users log out",
        "type": {
          "array": [
            {
              "dictionary": {
                "filedata": {
                  "title": "Script",
                  "description": "Script to run at logout",
                  "type": "data"
                },
                "filename": {
                  "title": "Name",
                  "description": "Name of the script",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "skipLoginHook": {
        "title": "Execute the Mac computer's LoginHook script",
        "description": "Run any LoginHook script in addition to the Login script",
        "type": "boolean"
      },
      "skipLogoutHook": {
        "title": "Execute the Mac computer's LogoutHook script",
        "description": "Run any LogoutHook script in addition to the Logout script",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.mcxprinting": {
    "title": "Printing",
    "description": "Printing settings",
    "properties": {
      "AllowLocalPrinters": {
        "title": "Allow Local Printers",
        "description": "If true, allows printers that connect directly to a user's computer.",
        "type": "boolean"
      },
      "DefaultPrinter": {
        "title": "Default Printer",
        "description": "The default printer for the user. This information should match one of the printers in the Printer List.",
        "type": {
          "dictionary": {
            "DeviceURI": {
              "title": "Device URI",
              "description": "The device URI. This should match one of the printers in the Printer List.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "DisplayName": {
              "title": "Display Name",
              "description": "The printer display name. This should match one of the printers in the Printer List.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "FooterFontName": {
        "title": "Footer Font Name",
        "description": "The font to use when printing a footer.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FooterFontSize": {
        "title": "Footer Font Size",
        "description": "The font size to use when printing a footer.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PrintFooter": {
        "title": "Footer",
        "description": "If true, prints the page footer (including the user name and date).",
        "type": "boolean"
      },
      "PrintMACAddress": {
        "title": "Print MAC Address",
        "description": "If true, includes the MAC address.",
        "type": "boolean"
      },
      "RequireAdminToAddPrinters": {
        "title": "Require Admin To Add Printers",
        "description": "If true, requires an administrator password to add printers.",
        "type": "boolean"
      },
      "RequireAdminToPrintLocally": {
        "title": "Require Admin To Print Locally",
        "description": "If true, requires an administrator password to print locally.",
        "type": "boolean"
      },
      "ShowOnlyManagedPrinters": {
        "title": "Show Only Managed Printers",
        "description": "If true, shows only managed printers.",
        "type": "boolean"
      },
      "UserPrinterList": {
        "title": "User Printer List",
        "description": "The printers available to a user.",
        "type": {
          "array": [
            {
              "dictionary": {
                "DeviceURI": {
                  "title": "IP / Hostname",
                  "description": "The device URI.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "DisplayName": {
                  "title": "Display Name",
                  "description": "The printer display name.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Location": {
                  "title": "Location",
                  "description": "The printer's location.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Model": {
                  "title": "Model",
                  "description": "The printer's model.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "PPDURL": {
                  "title": "PPD Location",
                  "description": "The printer's PPDURL.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "PrinterLocked": {
                  "title": "Locked?",
                  "description": "If true, locks the printer.",
                  "type": "boolean"
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.mdm": {
    "title": "MDM",
    "description": "Use this section to define mobile device management (MDM) settings.",
    "properties": {
      "AccessRights": {
        "title": "Access Rights",
        "description": "Logical OR of access rights bit-flags. When 2 is specified 1 must be specified along. When 128 is specified 64 must be specified along. This property is ignored when ManagedAppleID is present.",
        "type": "integer"
      },
      "AssignedManagedAppleID": {
        "title": "Assigned Managed Apple ID",
        "description": "The Managed Apple ID pre-assigned to the authenticated user of a user-enrolled (non-supervised) device.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CheckInURL": {
        "title": "Check-In URL",
        "description": "URL used by the device for checking-in during installation. When omitted, ServerURL will be used for checking-in as well instead. Must be an HTTPS URL and may contain a port number.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CheckInURLPinningCertificateUUIDs": {
        "title": "Check-In URL Pinning Certificate Identifiers",
        "description": "An array of UUIDs of Certificate payloads in this profile. The certificates are used for evaluating trustworthiness of the Check-In URLs of MDM servers.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CheckOutWhenRemoved": {
        "title": "Check-Out When Removed",
        "description": "When enabled, the device will attempt to send a check-out message on removal of this profile.",
        "type": "boolean"
      },
      "EnrollmentMode": {
        "title": "EnrollmentMode",
        "description": "The enrollment mode for a user-enrolled (non-supervised) device.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IdentityCertificateUUID": {
        "title": "Identity Certificate Identifier",
        "description": "UUID of a Certificate or SCEP payload in this profile, which will be used for the identity of the device.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ManagedAppleID": {
        "title": "Managed Apple ID",
        "description": "The Managed Apple ID of the user. Available in iOS 13.1 and later, and macOS 10.15 and later. This is only used with the profile-driven BYOD enrollment flow, and must not be present in the BYOD and ADDE account-driven enrollment flows. As of iOS 17 and macOS 14, profile-driven user enrollments are deprecated and will be removed in a future release.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PinningRevocationCheckRequired": {
        "title": "Pinning Revocation Check Required",
        "description": "When enabled, verified positive responses are required in order to pass certificate revocation checks. Otherwise, failed attemps to reach the server may not fail checks.",
        "type": "boolean"
      },
      "PromptUserToAllowBootstrapTokenForAuthentication": {
        "title": "Prompt User to Allow Bootstrap Token for Authentication",
        "description": "When enabled, notifies the user about needing to reboot into RecoveryOS and allowing the MDM to use the Bootstrap Token for authentication for certain operations (e.g. enabling some kernel extensions or software updates). When these operations are unnecessary for the MDM server to perform, this key can remain false.",
        "type": "boolean"
      },
      "RequiredAppIDForMDM": {
        "title": "Required App ID for MDM on Unsupervised Device",
        "description": "iTunesStoreID of a single app that the MDM service can require and push to a user-enrolled (non-supervised) device.",
        "type": "integer"
      },
      "ServerCapabilities": {
        "title": "Server Capabilities",
        "description": "An array of unique capability identifiers.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ServerURL": {
        "title": "Server URL",
        "description": "URL used by the device to contact and retrieve device management instructions. Must be an HTTPS URL and may contain a port number.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ServerURLPinningCertificateUUIDs": {
        "title": "Server URL Pinning Certificate Identifiers",
        "description": "An array of UUIDs of Certificate payloads in this profile. The certificates are used for evaluating trustworthiness of the Connect URLs of MDM servers.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "SignMessage": {
        "title": "Sign Message",
        "description": "When enabled, messages coming from the device will bear the Mdm-Signature HTTP header.",
        "type": "boolean"
      },
      "Topic": {
        "title": "Topic",
        "description": "The topic that MDM listens to for Push notifications. The topic must have the prefix 'com.apple.mgmt.'. Also, certificate used by the server to send notifications must contain this topic in its subject.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UseDevelopmentAPNS": {
        "title": "Use Development Apns",
        "description": "When enabled, the device will you development APNS servers instead of production ones. Must not be enabled when using Apple Push Notification Service certificate issued by the Apple Push Certificate Portal.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.mobiledevice.passwordpolicy": {
    "title": "Passcode",
    "description": "Passcode settings",
    "properties": {
      "allowSimple": {
        "title": "Allow simple passcode",
        "description": "Permits the use of repeating, ascending, and descending character sequences in passcodes. For example, \"3333\" or \"DEFG\".",
        "type": "boolean"
      },
      "changeAtNextAuth": {
        "title": "Reset passcode at next login",
        "description": "Causes a password reset to occur the next time the user tries to authenticate.",
        "type": "boolean"
      },
      "customRegex": {
        "title": "customRegex",
        "description": "Specifies a regular expression, and its description, used to enforce password compliance. Use the simpler passcode restrictions whenever possible, and rely on regular expression matching only when necessary. Mistakes in regular expressions can lead to frustrating user experiences, such as unsatisfiable passcode policies, or policy descriptions that don't match the enforced policy.\nAvailable in macOS 14 and later.",
        "type": {
          "dictionary": {
            "passwordContentDescription": {
              "title": "passwordContentDescription",
              "description": "Contains a dictionary of keys for supported OS language IDs (for example, “en-US”), and whose values represent a localized description of the policy enforced by the regular expression. Use the special 'default' key can for languages that aren't contained in the dictionary.",
              "type": {
                "dictionary": {
                  "{{key}}": {
                    "title": "{{key}}",
                    "description": "",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "{{value}}": {
                    "title": "{{value}}",
                    "description": "",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "passwordContentRegex": {
              "title": "passwordContentRegex",
              "description": "A regular expression string that they system matches against the password to determine whether it complies with a policy. The regular expression uses the ICU syntax (<https://unicode-org.github.io/icu/userguide/strings/regexp.html>). The string must not exceed 2048 characters in length.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "forcePIN": {
        "title": "Require passcode on device",
        "description": "Enforce the use of a passcode before using the device.",
        "type": "boolean"
      },
      "maxFailedAttempts": {
        "title": "Maximum number of failed attempts",
        "description": "The number of failed passcode attempts that can be made before an iOS device is erased or a macOS device is locked.",
        "type": "integer"
      },
      "maxGracePeriod": {
        "title": "Maximum grace period for device lock",
        "description": "How soon the device can be unlocked again after use, without reprompting again for the passcode. (0 = no grace period, which requires a passcode immediately). In macOS, this grace period value is translated to screen-saver settings.",
        "type": "integer"
      },
      "maxInactivity": {
        "title": "Maximum Auto-Lock",
        "description": "If the device isn't used for the period of time you specify, it automatically locks. It can be set to lock after 1 to 15 minutes, or turned off with a value of 0. In macOS, this inactivity value is translated to screen-saver settings.",
        "type": "integer"
      },
      "maxPINAgeInDays": {
        "title": "Maximum passcode age",
        "description": "Requires users to change their passcode at the specified interval. It can be set to between 1 and 730 days, or turned off with a value of 0.",
        "type": "integer"
      },
      "minComplexChars": {
        "title": "Minimum number of complex characters",
        "description": "Minimum number of non-alphanumeric characters the passcode must contain.",
        "type": "integer"
      },
      "minLength": {
        "title": "Minimum passcode length",
        "description": "Minimum number of characters a passcode can contain.",
        "type": "integer"
      },
      "minutesUntilFailedLoginReset": {
        "title": "Delay after failed login attempts",
        "description": "The number of minutes before the login window reappears, after the maximum number of failed attempts is reached. This key requires setting maxFailedAttempts.",
        "type": "integer"
      },
      "pinHistory": {
        "title": "Passcode history",
        "description": "The device refuses a new passcode if it matches a previously used passcode. You can specify how many previous passcodes are remembered and compared. It can be set to between 1 and 50 passcodes, or turned off with a value of 0.",
        "type": "integer"
      },
      "requireAlphanumeric": {
        "title": "Require alphanumeric value",
        "description": "Requires that the passcode contain at least one letter and one number.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.motionapp": {
    "title": "Motion",
    "description": "Motion settings",
    "properties": {
      "FFCheckedUpgrade": {
        "title": "Upgrade Checked",
        "description": "Suppresses the popup to upgrade an Motion on first run.",
        "type": "boolean"
      },
      "LKWhatsNewDisplayedForAppVersion": {
        "title": "Whats New displayed",
        "description": "Suppress the Whats New screen on the selected versions of Motion.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Motion Version",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Suppressed",
              "description": "",
              "type": "boolean"
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.networkusagerules": {
    "title": "Network Usage Rules",
    "description": "Network Usage Rules settings",
    "properties": {
      "ApplicationRules": {
        "title": "Application Network Usage Rules",
        "description": "Specify how managed apps use cellular data networks",
        "type": {
          "array": [
            {
              "dictionary": {
                "AllowCellularData": {
                  "title": "Allow Cellular Data",
                  "description": "Allow cellular data over the network",
                  "type": "boolean"
                },
                "AllowRoamingCellularData": {
                  "title": "Allow Data Roaming",
                  "description": "Allow data roaming over the network",
                  "type": "boolean"
                },
                "AppIdentifierMatches": {
                  "title": "Bundle Identifier Matches",
                  "description": "A list of managed app identifiers, as strings, that must follow the associated rules. If this key is missing, the rules will apply to all managed apps on the device.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "SIMRules": {
        "title": "Wi-Fi Assist Policy Rules",
        "description": "Specify the Wi-Fi assist policy to be used with specific SIM cards",
        "type": {
          "array": [
            {
              "dictionary": {
                "ICCIDs": {
                  "title": "SIM ICCIDs",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "WiFiAssistPolicy": {
                  "title": "Policy",
                  "type": "integer"
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.notificationsettings": {
    "title": "Notifications",
    "description": "Configures Notification settings for iOS & macOS apps",
    "properties": {
      "NotificationSettings": {
        "title": "Notification Settings",
        "description": "Notification settings for macOS apps",
        "type": {
          "array": [
            {
              "dictionary": {
                "AlertType": {
                  "title": "Alert Type",
                  "description": "The type of alert for notifications for this app. None/Banner/Alert",
                  "type": "integer"
                },
                "BadgesEnabled": {
                  "title": "Badges Enabled",
                  "description": "Whether badges are allowed for this app.",
                  "type": "boolean"
                },
                "BundleIdentifier": {
                  "title": "App Bundle Identifier",
                  "description": "Bundle identifier of the target app",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "CriticalAlertEnabled": {
                  "title": "Enable Critical Alerts",
                  "description": "Whether an app can mark notifications as 'critical', bypassing Do Not Disturb and ringer settings.",
                  "type": "boolean"
                },
                "NotificationsEnabled": {
                  "title": "Enable Notifications",
                  "description": "Whether notifications are allowed for this app.",
                  "type": "boolean"
                },
                "ShowInLockScreen": {
                  "title": "Show on Lock Screen",
                  "description": "Whether notifications can be shown on the lock screen.",
                  "type": "boolean"
                },
                "ShowInNotificationCenter": {
                  "title": "Show in Notification Center",
                  "description": "Whether notifications can be shown in notification center.",
                  "type": "boolean"
                },
                "SoundsEnabled": {
                  "title": "Sounds Enabled",
                  "description": "Whether sounds are allowed for this app.",
                  "type": "boolean"
                }
              }
            }
          ]
        }
      }
    },
    "supervised": true,
    "unique": true
  },
  "com.apple.osxserver.account": {
    "title": "macOS Server Accounts",
    "description": "Use the macOS Server Accounts payload to specify macOS Server account information allowing an iOS device to use it as a document repository.",
    "properties": {
      "AccountDescription": {
        "title": "Account Description",
        "description": "The display name for the macOS Server Account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ConfiguredAccounts": {
        "title": "Documents Server Port",
        "description": "The port on macOS Server over which the connection is established.",
        "type": {
          "array": [
            {
              "dictionary": {
                "Port": {
                  "title": "Port Number",
                  "description": "The port on which to connect to the server.",
                  "type": "integer"
                },
                "Type": {
                  "title": "Account Type",
                  "description": "Must be com.apple.osxserver.documents (the Documents account type).",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "HostName": {
        "title": "Hostname",
        "description": "The IP address or fully qualified domain name (FQDN) of the server.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Password": {
        "title": "Account Password",
        "description": "The password for the user.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UserName": {
        "title": "User Name",
        "description": "The name of the user.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.preference.security": {
    "title": "System Preferences: Security",
    "description": "System Preferences: Security settings",
    "properties": {
      "dontAllowLockMessageUI": {
        "title": "Allow user to set lock message",
        "description": "",
        "type": "boolean"
      },
      "dontAllowPasswordResetUI": {
        "title": "Allow user to change password",
        "description": "",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.preferences.sharing.SharingPrefsExtension": {
    "title": "Media Sharing",
    "description": "Media Sharing settings",
    "properties": {
      "homeSharingUIStatus": {
        "title": "Home Sharing",
        "description": "When Media Sharing is enabled, the computer starts a network listening service that shares the contents of the user’s music collection with other users in the same subnet.",
        "type": "integer"
      },
      "legacySharingUIStatus": {
        "title": "Legacy Sharing",
        "description": "When Media Sharing is enabled, the computer starts a network listening service that shares the contents of the user’s music collection with other users in the same subnet.",
        "type": "integer"
      },
      "mediaSharingUIStatus": {
        "title": "Media Sharing",
        "description": "When Media Sharing is enabled, the computer starts a network listening service that shares the contents of the user’s music collection with other users in the same subnet.",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.print.add": {
    "title": "Printing: Toolbar of Add Printer Window",
    "description": "Use this section to configure the toolbar of the Add Printer window under Printers and Scanners in System Preferences. The primary use case for this manifest is for prepopulating the toolbar with the 'Advanced' button.",
    "properties": {
      "NSToolbar Configuration com.apple.print.add.toolbar": {
        "title": "Add Printer Dictionary",
        "type": {
          "dictionary": {
            "TB Display Mode": {
              "title": "Toolbar Display Mode",
              "description": "The toolbar display mode.",
              "type": "integer"
            },
            "TB Icon Size Mode": {
              "title": "Toolbar Icon Size Mode",
              "description": "The icon size style.",
              "type": "integer"
            },
            "TB Is Shown": {
              "title": "Show Toolbar",
              "description": "Show or hide the toolbar.",
              "type": "integer"
            },
            "TB Item Identifiers": {
              "title": "Toolbar Items",
              "description": "The items to include in the toolbar and their order. The only items that can be added more than once are the Flexible Space and Space. Warning: configuring this property with no actual buttons (Default, IP, Windows, or Advanced) may lead to the display of no UI, and this condition may persist after removal of profile.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "com.apple.print.pbm.uber",
                          "Default"
                        ],
                        [
                          "com.apple.print.pbm.ip",
                          "IP"
                        ],
                        [
                          "com.apple.print.pbm.smb",
                          "Windows"
                        ],
                        [
                          "com.apple.print.pbm.advanced",
                          "Advanced"
                        ],
                        [
                          "com.apple.print.add.search",
                          "Search"
                        ],
                        [
                          "NSToolbarFlexibleSpaceItem",
                          "Flexible Space"
                        ],
                        [
                          "NSToolbarSpaceItem",
                          "Space"
                        ]
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.profileRemovalPassword": {
    "title": "Profile Removal",
    "description": "Use this section to define settings for profile removal",
    "properties": {
      "RemovalPassword": {
        "title": "Removal Password",
        "description": "The password for profile removal.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": true,
    "unique": true
  },
  "com.apple.proxy.http.global": {
    "title": "Global HTTP Proxy",
    "description": "Global HTTP Proxy settings",
    "properties": {
      "ProxyCaptiveLoginAllowed": {
        "title": "Allow Proxy Bypass for Captive Portal Logins",
        "description": "Allow the device to bypass the proxy server to display the login page for captive networks.",
        "type": "boolean"
      },
      "ProxyPACFallbackAllowed": {
        "title": "Allow Proxy PAC Fallback",
        "description": "Proxy PAC Fallback Allowed",
        "type": "boolean"
      },
      "ProxyPACURL": {
        "title": "Proxy PAC URL",
        "description": "The URL of the PAC file that defines the proxy configuration.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyPassword": {
        "title": "Proxy Password",
        "description": "The password used to authenticate to the proxy server. This setting is only used if the ProxyType is set to Manual, and is ignored if the ProxyType is set to Automatic.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyServer": {
        "title": "Proxy Server",
        "description": "The proxy server's network address. This is required if the ProxyType is set to Manual, and is ignored if the ProxyType is set to Automatic.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyServerPort": {
        "title": "Proxy Server Port",
        "description": "The proxy server's port number. This is required if the ProxyType is set to Manual, and is ignored if the ProxyType is set to Automatic.",
        "type": "integer"
      },
      "ProxyType": {
        "title": "Proxy Type",
        "description": "Use Manual for proxies that require authentication.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyUsername": {
        "title": "Proxy Username",
        "description": "The user name used to authenticate to the proxy server. This setting is only used if the ProxyType is set to Manual, and is ignored if the ProxyType is set to Automatic.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": true,
    "unique": true
  },
  "com.apple.python": {
    "title": "Python",
    "description": "Settings for macOS-bundled Python",
    "properties": {
      "DisablePythonAlert": {
        "title": "Disable Python Deprecation Alert",
        "description": "Controls whether warnings are shown to the user when an app or process calls the macOS-bundled Python2 interpreter. This interpreter has been deprecated and will be removed in a future version of macOS.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.relay.managed": {
    "title": "Relay",
    "description": "Use this section to define settings for network relays.",
    "properties": {
      "ExcludedDomains": {
        "title": "Excluded Domains",
        "description": "A list of domain strings that should not be routed through the servers contained in Relays. Any connection that matches the domain exactly or is a subdomain of the listed domain will not use the relay server.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "MatchDomains": {
        "title": "Match Domains",
        "description": "A list of domain strings used to determine which connection should be routed through the servers contained in Relays. Any connection that matches the domain exactly or is a subdomain of the listed domain will use the relay servers, unless they match an excluded domain. If no domains are listed, traffic to all domains, except those matching an excluded domain, will be routed to the relay servers.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "RelayUUID": {
        "title": "RelayUUID",
        "description": "A globally-unique identifier for this relay configuration. This UUID is used to route managed apps through the servers contained in Relays.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Relays": {
        "title": "Relays",
        "description": "An array of dictionaries that describes one or more relay servers that can be chained together.",
        "type": {
          "array": [
            {
              "dictionary": {
                "AdditionalHTTPHeaderFields": {
                  "title": "Additional HTTP Header Fields",
                  "description": "A dictionary of custom HTTP header keys and values to add to each request to the relay. The dictionary key name represents the HTTP header field name to use, and the dictionary value is the string to use as the HTTP header field value.",
                  "type": {
                    "dictionary": {
                      "{{key}}": {
                        "title": "{{key}}",
                        "description": "",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "{{value}}": {
                        "title": "{{value}}",
                        "description": "",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      }
                    }
                  }
                },
                "HTTP2RelayURL": {
                  "title": "HTTP/2 Relay URL",
                  "description": "The URL or URI template (such as defined in RFC 9298) of a relay server that is reachable using HTTP/2 and supports proxying TCP and UDP using the CONNECT method. Each relay must have at least one URL, for either HTTP/3 or HTTP/2, and may support both.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "HTTP3RelayURL": {
                  "title": "HTTP/3 Relay URL",
                  "description": "The URL or URI template (such as defined in RFC 9298) of a relay server that is reachable using HTTP/3 and supports proxying TCP and UDP using the CONNECT method. Each relay must have at least one URL, for either HTTP/3 or HTTP/2, and may support both.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "PayloadCertificateUUID": {
                  "title": "Certificate UUID",
                  "description": "UUID pointing to an identity certificate payload. This identity will be used to authenticate the user to the relay server.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "RawPublicKeys": {
                  "title": "Raw Public Keys",
                  "description": "An array of raw public keys used to authenticate the server during a TLS handshake. The server must use one of the keys in the handshake in order to authenticate. If no keys are specified, default TLS trust evaluation is used.",
                  "type": {
                    "array": [
                      "data"
                    ]
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.screencapture": {
    "title": "Screencapture",
    "description": "Screencapture settings",
    "properties": {
      "disable-shadow": {
        "title": "Disable Screenshot Drop Shadow",
        "description": "",
        "type": "boolean"
      },
      "location": {
        "title": "Screenshot Location",
        "description": "File system path (can start with ~) where screenshots will be saved.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.screensaver": {
    "title": "Screensaver",
    "description": "Screensaver settings",
    "properties": {
      "askForPassword": {
        "title": "Require password to unlock screen.",
        "description": "If true, the user will be prompted for a password when the screensaver is unlocked or stopped.",
        "type": "boolean"
      },
      "askForPasswordDelay": {
        "title": "Require password delay",
        "description": "Number of seconds to delay before the password will be required to unlock or stop the screen saver (the \"grace period\"). A value of 2147483647 can be used to disable this requirement.",
        "type": "integer"
      },
      "idleTime": {
        "title": "Screensaver idle time",
        "description": "Number of seconds of inactivity before screensaver activates. (0 = never activate).",
        "type": "integer"
      },
      "loginWindowIdleTime": {
        "title": "LoginWindow Screensaver idle time",
        "description": "Number of seconds of inactivity before screensaver activates. (0 = never activate).",
        "type": "integer"
      },
      "loginWindowModulePath": {
        "title": "Screensaver path",
        "description": "A full path to the screen saver module to be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "moduleName": {
        "title": "Screensaver Module Name",
        "description": "Name of the screensaver module to use.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.screensaver.user": {
    "title": "Screensaver User",
    "description": "Screensaver User settings",
    "properties": {
      "idleTime": {
        "title": "Screensaver idle time",
        "description": "Number of seconds of inactivity before screensaver activates. (0 = never activate).",
        "type": "integer"
      },
      "moduleName": {
        "title": "Screensaver Module Name",
        "description": "Name of the screensaver module to use.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "modulePath": {
        "title": "Screensaver path",
        "description": "A full path to the screen saver module to be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.secondactiveethernet.managed": {
    "title": "802.1X Ethernet: Second Active",
    "description": "Use this section to define Second Active Ethernet settings",
    "properties": {
      "EAPClientConfiguration": {
        "title": "EAP Client Configuration",
        "description": "Specifies 802.1x EAP authentication parameters.",
        "type": {
          "dictionary": {
            "AcceptEAPTypes": {
              "title": "Accept EAP Types",
              "description": "The EAP types accepted.",
              "type": {
                "array": [
                  "integer"
                ]
              }
            },
            "EAPFASTProvisionPAC": {
              "title": "Provision PAC",
              "description": "If set, allows PAC provisioning.",
              "type": "boolean"
            },
            "EAPFASTProvisionPACAnonymously": {
              "title": "Provision PAC Anonymously",
              "type": "boolean"
            },
            "EAPFASTUsePAC": {
              "title": "Use PAC",
              "type": "boolean"
            },
            "EAPSIMNumberOfRANDs": {
              "title": "Number of RANDs",
              "description": "The minimum number of RAND values accepted from the server. 3 is the default, and 2 is allowed, but offers less security.",
              "type": "integer"
            },
            "OneTimePassword": {
              "title": "One Time Password",
              "type": "boolean"
            },
            "OneTimeUserPassword": {
              "title": "Per-Connection Password",
              "description": "If set, the user will be prompted for a password each time they connect to the network.",
              "type": "boolean"
            },
            "OuterIdentity": {
              "title": "Outer Identity",
              "description": "Externally visible identification (for TTLS, PEAP, and EAP-FAST). This string is used instead of the user's identity outside the encrypted tunnel. This value can be used to mask the true identity of the person using the network.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "PayloadCertificateAnchorUUID": {
              "title": "Certificate Anchor UUID",
              "description": "Array of UUIDs corresponding to the trusted certificates for this authentication.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "SystemModeCredentialsSource": {
              "title": "System Profile Credentials Source",
              "description": "Use an alternate set of credentials when in System mode (AKA not a loginwindow profile). This can be used to tell EAPOLClient to use the computer password in a bound active directory scenario for authentication.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "ActiveDirectory",
                      "Active Directory"
                    ]
                  ]
                }
              }
            },
            "SystemModeUseOpenDirectoryCredentials": {
              "title": "Use OpenDirectory System Profile Credentials",
              "description": "This indicates if the connection should try to use the OpenDirectory machine credentials.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSAllowTrustExceptions": {
              "title": "Allow Trust Exceptions",
              "description": "Allows a dynamic trust decision by the user. If false, the authentication fails if the certificate isn't already trusted.",
              "type": "boolean"
            },
            "TLSCertificateIsRequired": {
              "title": "TLS Certificate is Required",
              "type": "boolean"
            },
            "TLSMaximumVersion": {
              "title": "TLS Maximum Version",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSMinimumVersion": {
              "title": "TLS Minimum Version",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSTrustedServerNames": {
              "title": "Trusted Server Certificate Names",
              "description": "Certificate Common Names expected from authentication server. The wildcard * can be used to match a range of strings.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "TTLSInnerAuthentication": {
              "title": "Inner Authentication",
              "description": "Specifies the inner authentication used by the TTLS module.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserName": {
              "title": "Username",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserPassword": {
              "title": "Password",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "Interface": {
        "title": "Interface",
        "description": "The wired interface to use",
        "type": {
          "string": {
            "rangeList": [
              [
                "SecondActiveEthernet",
                "Second Active Ethernet"
              ]
            ]
          }
        }
      },
      "SetupModes": {
        "title": "EAP Setup Modes",
        "description": "Select \"Login Window\" to authenticate the Mac to the network when the user logs in.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "System",
                    "System"
                  ],
                  [
                    "Loginwindow",
                    "Login Window"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.secondethernet.managed": {
    "title": "802.1X Ethernet: Second",
    "description": "Use this section to define Second Ethernet settings",
    "properties": {
      "EAPClientConfiguration": {
        "title": "EAP Client Configuration",
        "description": "Specifies 802.1x EAP authentication parameters.",
        "type": {
          "dictionary": {
            "AcceptEAPTypes": {
              "title": "Accept EAP Types",
              "description": "The EAP types accepted.",
              "type": {
                "array": [
                  "integer"
                ]
              }
            },
            "EAPFASTProvisionPAC": {
              "title": "Provision PAC",
              "description": "If set, allows PAC provisioning.",
              "type": "boolean"
            },
            "EAPFASTProvisionPACAnonymously": {
              "title": "Provision PAC Anonymously",
              "type": "boolean"
            },
            "EAPFASTUsePAC": {
              "title": "Use PAC",
              "type": "boolean"
            },
            "EAPSIMNumberOfRANDs": {
              "title": "Number of RANDs",
              "description": "The minimum number of RAND values accepted from the server. 3 is the default, and 2 is allowed, but offers less security.",
              "type": "integer"
            },
            "OneTimePassword": {
              "title": "One Time Password",
              "type": "boolean"
            },
            "OneTimeUserPassword": {
              "title": "Per-Connection Password",
              "description": "If set, the user will be prompted for a password each time they connect to the network.",
              "type": "boolean"
            },
            "OuterIdentity": {
              "title": "Outer Identity",
              "description": "Externally visible identification (for TTLS, PEAP, and EAP-FAST). This string is used instead of the user's identity outside the encrypted tunnel. This value can be used to mask the true identity of the person using the network.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "PayloadCertificateAnchorUUID": {
              "title": "Certificate Anchor UUID",
              "description": "Array of UUIDs corresponding to the trusted certificates for this authentication.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "SystemModeCredentialsSource": {
              "title": "System Profile Credentials Source",
              "description": "Use an alternate set of credentials when in System mode (AKA not a loginwindow profile). This can be used to tell EAPOLClient to use the computer password in a bound active directory scenario for authentication.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "ActiveDirectory",
                      "Active Directory"
                    ]
                  ]
                }
              }
            },
            "SystemModeUseOpenDirectoryCredentials": {
              "title": "Use OpenDirectory System Profile Credentials",
              "description": "This indicates if the connection should try to use the OpenDirectory machine credentials.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSAllowTrustExceptions": {
              "title": "Allow Trust Exceptions",
              "description": "Allows a dynamic trust decision by the user. If false, the authentication fails if the certificate isn't already trusted.",
              "type": "boolean"
            },
            "TLSCertificateIsRequired": {
              "title": "TLS Certificate is Required",
              "type": "boolean"
            },
            "TLSMaximumVersion": {
              "title": "TLS Maximum Version",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSMinimumVersion": {
              "title": "TLS Minimum Version",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSTrustedServerNames": {
              "title": "Trusted Server Certificate Names",
              "description": "Certificate Common Names expected from authentication server. The wildcard * can be used to match a range of strings.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "TTLSInnerAuthentication": {
              "title": "Inner Authentication",
              "description": "Specifies the inner authentication used by the TTLS module.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserName": {
              "title": "Username",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserPassword": {
              "title": "Password",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "Interface": {
        "title": "Interface",
        "description": "The wired interface to use",
        "type": {
          "string": {
            "rangeList": [
              [
                "SecondEthernet",
                "Second Ethernet"
              ]
            ]
          }
        }
      },
      "SetupModes": {
        "title": "EAP Setup Modes",
        "description": "Select \"Login Window\" to authenticate the Mac to the network when the user logs in.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "System",
                    "System"
                  ],
                  [
                    "Loginwindow",
                    "Login Window"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.security": {
    "title": "Security",
    "description": "Security settings",
    "properties": {
      "GKAutoRearm": {
        "title": "Disable Gatekeeper Automatic Reenablement",
        "description": "",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.security.FDERecoveryKeyEscrow": {
    "title": "FileVault Recovery Key Escrow",
    "description": "FileVault Recovery Key Escrow settings",
    "properties": {
      "DeviceKey": {
        "title": "DeviceKey",
        "description": "An optional string that will be included in help text if the user appears to have forgotten the password. Can be used by a site admin to look up the escrowed key for the particular machine. Replaces the RecordNumber key used in previous escrow mechanism. If missing, the device serial number will be used instead.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EncryptCertPayloadUUID": {
        "title": "EncryptCertPayloadUUID",
        "description": "The UUID of a payload within the same profile that contains the certificate that will be used to encrypt the recovery key. The referenced payload must be of type com.apple.security.pkcs1.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Location": {
        "title": "Location",
        "description": "A short description of the location where the recovery key will be escrowed. This text will be inserted into the message the user sees when enabling FileVault.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.security.FDERecoveryRedirect": {
    "title": "FileVault Recovery Key Redirection Payload",
    "description": "FileVault Recovery Key Redirection settings",
    "properties": {
      "EncryptCertPayloadUUID": {
        "title": "Encryption Certificate Payload UUID",
        "description": "The UUID of a payload within the same profile that contains a certificate whose public key is used to encrypt the recovery key when it is sent to the redirected URL. The referenced payload must be of type com.apple.security.pkcs1.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RedirectURL": {
        "title": "Redirect URL",
        "description": "The URL to which FDE recovery keys should be sent instead of Apple. Must begin with https://.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.security.acme": {
    "title": "ACME Certificate",
    "description": "Use this section to define settings to have an ACME server issue a client certificate.",
    "properties": {
      "AllowAllAppsAccess": {
        "title": "Allow All Apps Access",
        "description": "If true, all apps have access to the private key.",
        "type": "boolean"
      },
      "Attest": {
        "title": "Attest",
        "description": "If 'true', the device provides attestations describing the device and the generated key to the ACME server. The server can use the attestations as strong evidence that the key is bound to the device, and that the device has properties listed in the attestation. The server can use that as part of a trust score to decide whether to issue the requested certificate.\nWhen 'Attest' is 'true', 'HardwareBound' must also be 'true'.",
        "type": "boolean"
      },
      "ClientIdentifier": {
        "title": "Client identifier",
        "description": "A unique string identifying a specific device. The server may use this as a nonce to prevent issuing multiple certificates. This identifier also indicates to the ACME server that the device has access to a valid client identifier issued by the enterprise infrastructure. This can help the ACME server determine whether to trust the device. Though this is a relatively weak indication because of the risk that an attacker can intercept the client identifier.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DirectoryURL": {
        "title": "ACME directory URL",
        "description": "The directory URL of the ACME server. The URL must use the https scheme.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExtendedKeyUsage": {
        "title": "Extended Key Usage",
        "description": "The value is an array of strings. Each string is an OID in dotted notation. For instance, [”1.3.6.1.5.5.7.3.2”, “1.3.6.1.5.5.7.3.4”] indicates client authentication and email protection.\nThe device requests this field for the certificate that the ACME server issues. The ACME server may override or ignore this field in the certificate it issues.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "HardwareBound": {
        "title": "Hardware Bound",
        "description": "If 'false', the private key isn't bound to the device.\nIf 'true', the private key is bound to the device. The Secure Enclave generates the key pair, and the private key is cryptographically entangled with a system key. This prevents the system from exporting the private key.\nIf 'true', 'KeyType' must be 'ECSECPrimeRandom' and 'KeySize' must be 256 or 384.",
        "type": "boolean"
      },
      "KeyIsExtractable": {
        "title": "Key Is Extractable",
        "description": "Whether the private key of the identity obtained via SCEP should be tagged as \"non-extractable\" in the keychain.",
        "type": "boolean"
      },
      "KeySize": {
        "title": "Key Size",
        "description": "The valid values for 'KeySize' depend on the values of 'KeyType' and 'HardwareBound'. See those keys for specific requirements.",
        "type": "integer"
      },
      "KeyType": {
        "title": "Key Type",
        "description": "The type of key pair to generate.\n* 'RSA': Specifies an RSA key pair. RSA key pairs must have a KeySize in the range [1024..4096] inclusive and a multiple of 8, and 'HardwareBound' must be false.\n* 'ECSECPrimeRandom': Specifies a key pair on the P-192, P-256, P-384 or P-521 curves as defined in FIPS Pub 186-4. KeySize defines the particular curve, which must be 192, 256, 384 or 521. Hardware bound keys only support values of 256 and 384. Note that the key size is 521, not 512, even though the other key sizes are multiples of 64.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Subject": {
        "title": "Subject",
        "description": "The device requests this subject for the certificate that the ACME server issues. The ACME server may override or ignore this field in the certificate it issues.\nThe representation of a X.500 name represented as an array of OID and value. For example, /C=US/O=Apple Inc./CN=foo/1.2.5.3=bar corresponds to:\n[ [ [”C”, “US”] ], [ [”O”, “Apple Inc.”] ], ..., [ [ “1.2.5.3”, “bar” ] ] ]\nDotted numbers can represent OIDs , with shortcuts for country (C), locality (L), state (ST), organization (O), organizational unit (OU), and common name (CN).",
        "type": {
          "array": [
            {
              "array": [
                {
                  "array": [
                    {
                      "string": {
                        "rangeList": []
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "SubjectAltName": {
        "title": "Subject Alt Name",
        "description": "The Subject Alt Name that the device requests for the certificate that the ACME server issues. The ACME server may override or ignore this field in the certificate it issues.",
        "type": {
          "dictionary": {
            "dNSName": {
              "title": "DNS Name",
              "description": "The DNS name.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ntPrincipalName": {
              "title": "NT Principal Name",
              "description": "The NT principal name.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "rfc822Name": {
              "title": "RFC 822 Name",
              "description": "The RFC 822 (email address) string.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "uniformResourceIdentifier": {
              "title": "URI",
              "description": "The Uniform Resource Identifier.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "UsageFlags": {
        "title": "Key Usage",
        "description": "This value is a bit field.\n* Bit '0x01' indicates digital signature.\n* Bit '0x10' indicates key agreement.\nThe device requests this key for the certificate that the ACME server issues. The ACME server may override or ignore this field in the certificate it issues.",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.security.certificatepreference": {
    "title": "Certificate Preference",
    "description": "Certificate Preference settings",
    "properties": {
      "Name": {
        "title": "Name",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PayloadCertificateUUID": {
        "title": "Payload Certificate UUID",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.security.certificatetransparency": {
    "title": "Certificate Transparency",
    "description": "Certificate Transparency settings",
    "properties": {
      "DisabledForCerts": {
        "title": "Disabled Certificates",
        "description": "A list of certificate hashes for which certificate transparency is disabled.",
        "type": {
          "array": [
            {
              "dictionary": {
                "Algorithm": {
                  "title": "Algorithm",
                  "description": "Hash algorithm",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Hash": {
                  "title": "Hash",
                  "description": "Hash of the certificate's subjectPublicKeyInfo",
                  "type": "data"
                }
              }
            }
          ]
        }
      },
      "DisabledForDomains": {
        "title": "Disabled Domains",
        "description": "List of domains where certificate transparency is disabled.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.security.firewall": {
    "title": "Firewall",
    "description": "Firewall settings",
    "properties": {
      "AllowSigned": {
        "title": "Allow Incoming Connections to macOS-Bundled Software",
        "type": "boolean"
      },
      "AllowSignedApp": {
        "title": "Allow Incoming Connections to Downloaded Signed Apps",
        "type": "boolean"
      },
      "Applications": {
        "title": "Applications",
        "description": "Add applications to either allow or block them from connecting to your network and the Internet.",
        "type": {
          "array": [
            {
              "dictionary": {
                "Allowed": {
                  "title": "Allowed",
                  "description": "Specifies whether or not incoming connections are allowed.",
                  "type": "boolean"
                },
                "BundleID": {
                  "title": "Bundle ID",
                  "description": "Identifies the application",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Name": {
                  "title": "Name",
                  "description": "Name of application (Undocumented)",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "BlockAllIncoming": {
        "title": "Block All Incoming Connections",
        "description": "Blocks all incoming connections except those required for basic Internet services, such as DHCP, Bonjour and IPSec.",
        "type": "boolean"
      },
      "EnableFirewall": {
        "title": "Enable Firewall",
        "description": "Enables the firewall on managed Mac computers.",
        "type": "boolean"
      },
      "EnableLogging": {
        "title": "Enable Logging",
        "type": "boolean"
      },
      "EnableStealthMode": {
        "title": "Enable Stealth Mode",
        "description": "Don't respond to or acknowledge attempts to access this computer from the network by test applications using ICMP, such as Ping.",
        "type": "boolean"
      },
      "LoggingOption": {
        "title": "Logging Option",
        "type": {
          "string": {
            "rangeList": [
              [
                "throttled",
                "Throttled"
              ],
              [
                "brief",
                "Brief"
              ],
              [
                "detail",
                "Detail"
              ]
            ]
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.security.pem": {
    "title": "Certificate PEM",
    "description": "Use this section to define settings for a PEM certificate.",
    "properties": {
      "PayloadCertificateFileName": {
        "title": "Certificate Name",
        "description": "Name or description of the certificate credential.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PayloadContent": {
        "title": "Certificate",
        "description": "X.509 certificate (.pem, .cer, .crt, etc) for inclusion on device.",
        "type": "data"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.security.pkcs1": {
    "title": "Certificate PKCS1",
    "description": "Use this section to define settings for a pkcs1 certificate.",
    "properties": {
      "PayloadCertificateFileName": {
        "title": "Certificate Name",
        "description": "Name or description of the certificate credential.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PayloadContent": {
        "title": "Certificate or Identity Data",
        "description": "X.509 certificate (.cer, .crt, etc) for inclusion on device.",
        "type": "data"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.security.pkcs12": {
    "title": "Certificate PKCS12",
    "description": "Use this section to define settings for a pkcs12 certificate.",
    "properties": {
      "AllowAllAppsAccess": {
        "title": "Allow Private Key Access to All Apps",
        "description": "Allows all apps on the device to access the private key of this certificate",
        "type": "boolean"
      },
      "KeyIsExtractable": {
        "title": "Key is Extractable",
        "description": "Allows exporting the private key from the keychain",
        "type": "boolean"
      },
      "Password": {
        "title": "Password",
        "description": "Password protecting the PKCS12 file.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PayloadCertificateFileName": {
        "title": "Certificate Name",
        "description": "Name or description of the certificate credential.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PayloadContent": {
        "title": "Certificate or Identity Data",
        "description": "X.509 certificate (.p12) for inclusion on device.",
        "type": "data"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.security.root": {
    "title": "Certificate Root",
    "description": "Certificate Root settings",
    "properties": {
      "PayloadCertificateFileName": {
        "title": "Certificate Name",
        "description": "Name or description of the certificate credential.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PayloadContent": {
        "title": "Root Certificate",
        "description": "X.509 Root certificate (.cer, .crt, etc) for inclusion on device.",
        "type": "data"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.security.scep": {
    "title": "SCEP",
    "description": "Use this section to define settings for configuration access to SCEP servers.",
    "properties": {
      "PayloadContent": {
        "title": "Payload Content",
        "description": "This dictionary contains the payload contents",
        "type": {
          "dictionary": {
            "AllowAllAppsAccess": {
              "title": "Allow access to all apps",
              "description": "Allow all apps to access the certificate in the keychain",
              "type": "boolean"
            },
            "CAFingerprint": {
              "title": "Fingerprint",
              "description": "The fingerprint (hex string) of the Certificate Authority certificate.",
              "type": "data"
            },
            "CertificateRenewalTimeInterval": {
              "title": "Certificate Expiration Notification",
              "description": "The number of days before the certificate expires at which to start showing the expiration notification",
              "type": "integer"
            },
            "Challenge": {
              "title": "Challenge",
              "description": "Used as the pre-shared secret for automatic enrollment.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Key Type": {
              "title": "Key Type",
              "description": "Currently always \"RSA\".",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Key Usage": {
              "title": "Key Usage",
              "description": "A bitmask indicating the use of the key.\\n• 1 - signing\\n• 4 - encryption\\n• 5 - signing and encryption",
              "type": "integer"
            },
            "KeyIsExtractable": {
              "title": "Key is Extractable",
              "description": "Allow / restrict exporting the private key from the keychain.",
              "type": "boolean"
            },
            "Keysize": {
              "title": "Key Size",
              "description": "Key size in bits",
              "type": "integer"
            },
            "Name": {
              "title": "Name",
              "description": "Any string that is understood by the SCEP server. For example, it could be a domain name like example.org. If a certificate authority has multiple CA certificates this field can be used to distinguish which is required.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Retries": {
              "title": "Retries",
              "description": "The number of times the device should retry if the server sends a PENDING response.",
              "type": "integer"
            },
            "RetryDelay": {
              "title": "Retry Delay",
              "description": "The number of seconds to wait between subsequent retries. The first retry is attempted without this delay.",
              "type": "integer"
            },
            "Subject": {
              "title": "Subject",
              "description": "The representation of a X.500 name represented as an array of OID and value. OIDs can be represented as dotted numbers, with shortcuts for country (C), locality (L), state (ST), organization (O), organizational unit (OU), and common name (CN).",
              "type": {
                "array": [
                  {
                    "array": [
                      {
                        "array": [
                          {
                            "string": {
                              "rangeList": []
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "SubjectAltName": {
              "title": "Subject Alt Name",
              "description": "Specifies the Subject Alt Name for the certificate.",
              "type": {
                "dictionary": {
                  "dNSName": {
                    "title": "DNS Name",
                    "description": "DNS Name",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "ntPrincipalName": {
                    "title": "NT Principal Name",
                    "description": "NT Principal Name",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "rfc822Name": {
                    "title": "RFC 822 Name",
                    "description": "RFC 822 (email address) string",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "uniformResourceIdentifier": {
                    "title": "URI",
                    "description": "Uniform Resource Indentifier",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "URL": {
              "title": "URL",
              "description": "The base URL for the SCEP server",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.security.smartcard": {
    "title": "SmartCard",
    "description": "SmartCard settings",
    "properties": {
      "UserPairing": {
        "title": "User Pairing",
        "description": "If false, users don't get the pairing dialog, although existing pairings still work.",
        "type": "boolean"
      },
      "allowSmartCard": {
        "title": "Allow SmartCard",
        "description": "If false, disables the SmartCard for logins, authorizations, and screen saver unlocking. It is still allowed for other functions, such as signing emails and accessing the web.",
        "type": "boolean"
      },
      "allowUnmappedUsers": {
        "title": "Allow Unmapped Users",
        "description": "If set to integer 1, allows users who aren't paired with a smart card to log in with password.",
        "type": "integer"
      },
      "checkCertificateTrust": {
        "title": "Certificate Trust Validation",
        "description": "Require unexpired, system trusted certificates for smart cards to work.",
        "type": "integer"
      },
      "enforceSmartCard": {
        "title": "Require SmartCard",
        "description": "If true, a user can only log in or authenticate with a SmartCard.",
        "type": "boolean"
      },
      "oneCardPerUser": {
        "title": "Restrict One Card Per User",
        "description": "If true, a user can pair with only one SmartCard, although existing pairings are allowed if already set up.",
        "type": "boolean"
      },
      "tokenRemovalAction": {
        "title": "Enable Screen Saver on Removal",
        "description": "If enabled, enables the screen saver when the SmartCard is removed.",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.servicemanagement": {
    "title": "Service Management - Managed Login Items",
    "description": "Control the user experience for ServiceManagement login items (including launchd agents and daemons) in Login Items Settings.",
    "properties": {
      "Rules": {
        "title": "Rules",
        "description": "An array of rule dictionaries.",
        "type": {
          "array": [
            {
              "dictionary": {
                "Comment": {
                  "title": "Comment",
                  "description": "An optional description of the rule.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "RuleType": {
                  "title": "Rule Type",
                  "description": "The type of comparison to make.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "RuleValue": {
                  "title": "Rule Value",
                  "description": "The value to compare with each login item's value, to determine a match to this rule.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "TeamIdentifier": {
                  "title": "Team Identifier",
                  "description": "An additional constraint to limit the scope of the rule that is tested after matching the RuleType/RuleValue.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.shareddeviceconfiguration": {
    "title": "Lock Screen Message",
    "description": "Lock Screen Message settings",
    "properties": {
      "AssetTagInformation": {
        "title": "Asset tag",
        "description": "Displays the asset tag information in the Login window and on the Lock screen.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IfLostReturnToMessage": {
        "title": "\"If lost, return to\"",
        "description": "Displays a name, address, or phone number on the Login window and Lock screen. Deprecated. Use LockScreenFootnote instead.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LockScreenFootnote": {
        "title": "Lock Screen Footnote",
        "description": "Displays a name, address, or phone number on the Login window and Lock screen.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": true,
    "unique": true
  },
  "com.apple.sharingd": {
    "title": "AirDrop Discoverability (macOS)",
    "description": "macOS AirDrop Discoverability Settings",
    "properties": {
      "DiscoverableMode": {
        "title": "Discoverability",
        "description": "Configure the AirDrop option \"Allow me to be discovered by:\"",
        "type": {
          "string": {
            "rangeList": [
              [
                "Off",
                "No One"
              ],
              [
                "Contacts Only",
                "iCloud Contacts Only"
              ],
              [
                "Everyone",
                "Everyone"
              ]
            ]
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.sso": {
    "title": "Single Sign-On",
    "description": "Single Sign-On Account Payload",
    "properties": {
      "Kerberos": {
        "title": "Kerberos-Related Information",
        "description": "Kerberos-related information.",
        "type": {
          "dictionary": {
            "AppIdentifierMatches": {
              "title": "App Identifiers",
              "description": "List of app identifiers that are allowed to use this login",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "PayloadCertificateUUID": {
              "title": "Identity Certificate UUID",
              "description": "The PayloadUUID of an identity certificate payload for Kerberos credential renewal without user interaction.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "PrincipalName": {
              "title": "Kerberos Principal Name",
              "description": "The Kerberos principal name. The user will be prompted for one during profile installation if not provided.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Realm": {
              "title": "Kerberos Realm Name",
              "description": "Properly capitalized Kerberos realm name",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "URLPrefixMatches": {
              "title": "URLs Prefix Matches",
              "description": "List of URLs prefixes that must be matched to use this account for Kerberos authentication over HTTP. Note that the URL postfixes must match as well.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "Name": {
        "title": "Account Name",
        "description": "Human-readable name for the account",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.subscribedcalendar.account": {
    "title": "Subscribed Calendars",
    "description": "Use this section to define settings for subscribed calendar account.",
    "properties": {
      "SubCalAccountDescription": {
        "title": "Description",
        "description": "The description of the calendar subscription",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SubCalAccountHostName": {
        "title": "URL",
        "description": "The URL of the calendar file",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SubCalAccountPassword": {
        "title": "Password",
        "description": "The password for this subscription",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SubCalAccountUseSSL": {
        "title": "Use SSL",
        "description": "Use Secure Socket Layer for this subscription",
        "type": "boolean"
      },
      "SubCalAccountUsername": {
        "title": "Username",
        "description": "The username for this subscription",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.syspolicy.kernel-extension-policy": {
    "title": "Kernel Extension Policy",
    "description": "Kernel Extension Policy settings",
    "properties": {
      "AllowNonAdminUserApprovals": {
        "title": "Allow non-admin users to approve kernel extensions",
        "description": "Non-admin users can approve kernel extensions not explicitly allowed by configuration profiles.",
        "type": "boolean"
      },
      "AllowUserOverrides": {
        "title": "Allow users to approve kernel extensions",
        "description": "Users can approve kernel extensions not explicitly allowed by configuration profiles.",
        "type": "boolean"
      },
      "AllowedKernelExtensions": {
        "title": "Allowed Kernel Extensions",
        "description": "Bundle identifier and team identifier of kernel extensions that will be allowed. Use an empty team identifier for unsigned legacy kernel extensions.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Team Identifier",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Bundle Identifier",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "AllowedTeamIdentifiers": {
        "title": "Allowed Team Identifiers",
        "description": "List of team identifiers that define which validly signed kernel extensions will be allowed to load.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.system-extension-policy": {
    "title": "System Extension Policy",
    "description": "Use this section to define policy for system extensions.",
    "properties": {
      "AllowUserOverrides": {
        "title": "Allow users to approve system extensions",
        "description": "Set this property to false to prevent users from approving system extensions not explicitly allowed by configuration profiles.",
        "type": "boolean"
      },
      "AllowedSystemExtensionTypes": {
        "title": "Allowed System Extension Types",
        "description": "Dictionary of developer teams and their allowed system extension types. Entries use the team identifier as the key and an array of the allowed extension type strings as the associated value.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Team Identifier",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "System Extension Types",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "DriverExtension",
                          "Driver"
                        ],
                        [
                          "NetworkExtension",
                          "Network"
                        ],
                        [
                          "EndpointSecurityExtension",
                          "Endpoint Security"
                        ]
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "AllowedSystemExtensions": {
        "title": "Allowed System Extensions",
        "description": "Dictionary of system extensions that will be allowed. Extensions are represented in the dictionary using a team identifier string as key and an array of allowed extension bundle identifier strings as the associated value.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Team Identifier",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Bundle Identifier",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "AllowedTeamIdentifiers": {
        "title": "Allowed Team Identifiers",
        "description": "List of team identifiers that define which validly signed system extensions will be allowed to load.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "RemovableSystemExtensions": {
        "title": "Removable System Extensions",
        "description": "Dictionary of system extensions that can be removed by their own app without requiring an admin password. Extensions are represented in the dictionary using a team identifier string as key and an array of removable extension bundle identifier strings as the associated value.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Team Identifier",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Bundle Identifier",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.system.logging": {
    "title": "System Logging",
    "description": "System Logging settings",
    "properties": {
      "System": {
        "title": "System",
        "type": {
          "dictionary": {
            "Enable-Private-Data": {
              "title": "Allow private data system-wide in unified logs",
              "description": "Enables private data logging for the entire system",
              "type": "boolean"
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.systemmigration": {
    "title": "System Migration",
    "description": "System Migration settings",
    "properties": {
      "CustomBehavior": {
        "title": "Custom Paths",
        "description": "Custom Paths to be migrated from source system",
        "type": {
          "array": [
            {
              "dictionary": {
                "Context": {
                  "title": "Context",
                  "description": "The context to which custom paths apply.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Paths": {
                  "title": "Paths",
                  "description": "The custom paths to be migrated from a source system to a target system.",
                  "type": {
                    "array": [
                      {
                        "dictionary": {
                          "SourcePath": {
                            "title": "Source Path",
                            "description": "The path to the migrating file or directory on the source system.",
                            "type": {
                              "string": {
                                "rangeList": []
                              }
                            }
                          },
                          "SourcePathInUserHome": {
                            "title": "Source Path In User Home",
                            "description": "If the source path is located within a user home directory.",
                            "type": "boolean"
                          },
                          "TargetPath": {
                            "title": "Target Path",
                            "description": "The path to the destination file or directory on the target system.",
                            "type": {
                              "string": {
                                "rangeList": []
                              }
                            }
                          },
                          "TargetPathInUserHome": {
                            "title": "Target Path In User Home",
                            "description": "If the target path is located within a user home directory.",
                            "type": "boolean"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.systempolicy.control": {
    "title": "System Policy: Control",
    "description": "System Policy: Control settings",
    "properties": {
      "AllowIdentifiedDevelopers": {
        "title": "Allow Identified Developers",
        "description": "If the key is present and has a value of YES, Gatekeeper's \"Mac App Store and identified developers” option is chosen. If the key is present and has a value of NO, Gatekeeper's \"Mac App Store” option is chosen. If EnableAssessment is not true, this key has no effect.",
        "type": "boolean"
      },
      "EnableAssessment": {
        "title": "Enable Gatekeeper",
        "description": "If the key is present and has a value of YES, Gatekeeper is enabled. If the key is present and has a value of NO, Gatekeeper is disabled.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.systempolicy.managed": {
    "title": "System Policy: Managed",
    "description": "System Policy: Managed settings",
    "properties": {
      "DisableOverride": {
        "title": "Disable contextual menu override of Gatekeeper",
        "description": "If YES, the Finder's contextual menu item will be disabled.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.systempreferences": {
    "title": "System Preferences",
    "description": "Use this section to define enabled or disabled Preference Panes in System Preferences.",
    "properties": {
      "AttentionPrefBundleIDs": {
        "title": "Attention Preference Pane Bundle IDs",
        "description": "Not documented by Apple, but by entering 0 for individual System Preference pane bundle IDs, or by adding this preference and leaving the dictionary blank, it is possible to suppress the alert icon from appearing on the System Preferences app (ex. when software updates are available).",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "BundleIDs",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Alert #",
              "description": "",
              "type": "integer"
            }
          }
        }
      },
      "DisabledPreferencePanes": {
        "title": "Disabled Preference Panes",
        "description": "Disabled Preference Panes within the System Preferences application.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "com.apple.preference.universalaccess",
                    "Accessibility"
                  ],
                  [
                    "com.apple.preferences.appstore",
                    "App Store"
                  ],
                  [
                    "com.apple.preferences.AppleIDPrefPane",
                    "Apple ID"
                  ],
                  [
                    "com.apple.preference.battery",
                    "Battery"
                  ],
                  [
                    "com.apple.preferences.Bluetooth",
                    "Bluetooth"
                  ],
                  [
                    "com.apple.preference.digihub.discs",
                    "CDs & DVDs"
                  ],
                  [
                    "com.apple.ClassroomSettings",
                    "Classroom"
                  ],
                  [
                    "com.apple.preference.datetime",
                    "Date & Time"
                  ],
                  [
                    "com.apple.preference.desktopscreeneffect",
                    "Desktop & Screen Saver"
                  ],
                  [
                    "com.apple.preference.displays",
                    "Displays"
                  ],
                  [
                    "com.apple.preference.dock",
                    "Dock"
                  ],
                  [
                    "com.apple.preference.energysaver",
                    "Energy Saver"
                  ],
                  [
                    "com.apple.preferences.extensions",
                    "Extensions"
                  ],
                  [
                    "com.apple.preferences.FamilySharingPrefPane",
                    "Family Sharing"
                  ],
                  [
                    "com.apple.prefpanel.fibrechannel",
                    "Fibre Channel"
                  ],
                  [
                    "com.apple.preference.general",
                    "General"
                  ],
                  [
                    "com.apple.preferences.icloud",
                    "iCloud"
                  ],
                  [
                    "com.apple.preference.ink",
                    "Ink"
                  ],
                  [
                    "com.apple.preferences.internetaccounts",
                    "Internet Accounts"
                  ],
                  [
                    "com.apple.preference.keyboard",
                    "Keyboard"
                  ],
                  [
                    "com.apple.Localization",
                    "Language & Region"
                  ],
                  [
                    "com.apple.preference.expose",
                    "Mission Control"
                  ],
                  [
                    "com.apple.preference.internet",
                    "MobileMe"
                  ],
                  [
                    "com.apple.preference.mouse",
                    "Mouse"
                  ],
                  [
                    "com.apple.preference.network",
                    "Network"
                  ],
                  [
                    "com.apple.preference.notifications",
                    "Notifications"
                  ],
                  [
                    "com.apple.preferences.parentalcontrols",
                    "Parental Controls"
                  ],
                  [
                    "com.apple.preference.printfax",
                    "Printers & Scanners"
                  ],
                  [
                    "com.apple.preferences.configurationprofiles",
                    "Profiles"
                  ],
                  [
                    "com.apple.preference.screentime",
                    "Screentime"
                  ],
                  [
                    "com.apple.preference.security",
                    "Security & Privacy"
                  ],
                  [
                    "com.apple.preferences.sharing",
                    "Sharing"
                  ],
                  [
                    "com.apple.preference.sidecar",
                    "Sidecar"
                  ],
                  [
                    "com.apple.preference.speech",
                    "Siri"
                  ],
                  [
                    "com.apple.preferences.softwareupdate",
                    "Software Update"
                  ],
                  [
                    "com.apple.preference.sound",
                    "Sound"
                  ],
                  [
                    "com.apple.preference.spotlight",
                    "Spotlight"
                  ],
                  [
                    "com.apple.preference.startupdisk",
                    "Startup Disk"
                  ],
                  [
                    "com.apple.prefs.backup",
                    "Time Machine"
                  ],
                  [
                    "com.apple.preferences.password",
                    "Touch ID"
                  ],
                  [
                    "com.apple.preference.trackpad",
                    "Trackpad"
                  ],
                  [
                    "com.apple.preferences.users",
                    "Users & Groups"
                  ],
                  [
                    "com.apple.preferences.wallet",
                    "Wallet & Apple Pay"
                  ],
                  [
                    "com.apple.Xsan",
                    "Xsan"
                  ],
                  [
                    "com.adobe.flashplayerpreferences",
                    "Adobe Flash"
                  ],
                  [
                    "com.euphonix.prefpanel",
                    "Avid Euphonix"
                  ],
                  [
                    "com.blackmagic-design.Blackmagic-Desktop-Video",
                    "Blackmagic Video"
                  ],
                  [
                    "com.websense.endpoint.preference",
                    "Forcepoint"
                  ],
                  [
                    "com.kensington.trackballworks2.prefPane",
                    "KensingtonWorks"
                  ],
                  [
                    "com.mysql.prefpane",
                    "MySQL"
                  ],
                  [
                    "com.oracle.java.JavaControlPanel",
                    "Oracle Java"
                  ],
                  [
                    "com.smarttech.SMARTBoardPref",
                    "SMART Board"
                  ],
                  [
                    "cl.fail.lordkamina.SwiftDefaultApps",
                    "Swift Default Apps"
                  ],
                  [
                    "com.tenablesecurity.NessusAgent.Preferences",
                    "Tenable Nessus Agent"
                  ],
                  [
                    "com.tuxera.ntfs.mac.prefpane",
                    "Tuxera NTFS"
                  ]
                ]
              }
            }
          ]
        }
      },
      "DisabledSettingsExtensions": {
        "title": "Disabled Settings Extensions",
        "description": "System settings extensions that will be disabled. All other extensions will be enabled. When the key is specified, Disabled Preference Panes and Enabled Preference Panes are ignored. Disabling a system extension will disable all of the sections it provides.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "com.apple.Accessibility-Settings.extension",
                    "Accessibility Settings"
                  ],
                  [
                    "com.apple.AirDrop-Handoff-Settings.extension",
                    "AirDrop Handoff Settings"
                  ],
                  [
                    "com.apple.Battery-Settings.extension",
                    "Battery Settings"
                  ],
                  [
                    "com.apple.BluetoothSettings",
                    "Bluetooth Settings"
                  ],
                  [
                    "com.apple.CD-DVD-Settings.extension",
                    "CD DVD Settings"
                  ],
                  [
                    "com.apple.ClassKit-Settings.extension",
                    "ClassKit Settings"
                  ],
                  [
                    "com.apple.Classroom-Settings.extension",
                    "Classroom Settings"
                  ],
                  [
                    "com.apple.ControlCenter-Settings.extension",
                    "Control Center Settings"
                  ],
                  [
                    "com.apple.Date-Time-Settings.extension",
                    "Date Time Settings"
                  ],
                  [
                    "com.apple.Desktop-Settings.extension",
                    "Desktop Settings"
                  ],
                  [
                    "com.apple.Displays-Settings.extension",
                    "Displays Settings"
                  ],
                  [
                    "com.apple.ExtensionsPreferences",
                    "Extensions Preferences"
                  ],
                  [
                    "com.apple.Family-Settings.extension",
                    "Family Settings"
                  ],
                  [
                    "com.apple.Focus-Settings.extension",
                    "Focus Settings"
                  ],
                  [
                    "com.apple.Game-Center-Settings.extension",
                    "Game Center Settings"
                  ],
                  [
                    "com.apple.Game-Controller-Settings.extension",
                    "Game Controller Settings"
                  ],
                  [
                    "com.apple.HeadphoneSettings",
                    "Headphone Settings"
                  ],
                  [
                    "com.apple.Internet-Accounts-Settings.extension",
                    "Internet Accounts Settings"
                  ],
                  [
                    "com.apple.Keyboard-Settings.extension",
                    "Keyboard Settings"
                  ],
                  [
                    "com.apple.Localization-Settings.extension",
                    "Localization Settings"
                  ],
                  [
                    "com.apple.Lock-Screen-Settings.extension",
                    "Lock Screen Settings"
                  ],
                  [
                    "com.apple.LoginItems-Settings.extension",
                    "LoginItems Settings"
                  ],
                  [
                    "com.apple.Mouse-Settings.extension",
                    "Mouse Settings"
                  ],
                  [
                    "com.apple.Network-Settings.extension",
                    "Network Settings"
                  ],
                  [
                    "com.apple.NetworkExtensionSettingsUI.NESettingsUIExtension",
                    "Network Extension Settings UI"
                  ],
                  [
                    "com.apple.Notifications-Settings.extension",
                    "Notifications Settings"
                  ],
                  [
                    "com.apple.Passwords-Settings.extension",
                    "Passwords Settings"
                  ],
                  [
                    "com.apple.Print-Scan-Settings.extension",
                    "Print Scan Settings"
                  ],
                  [
                    "com.apple.Screen-Time-Settings.extension",
                    "Screen Time Settings"
                  ],
                  [
                    "com.apple.ScreenSaver-Settings.extension",
                    "Screen Saver Settings"
                  ],
                  [
                    "com.apple.Sharing-Settings.extension",
                    "Sharing Settings"
                  ],
                  [
                    "com.apple.Siri-Settings.extension",
                    "Siri Settings"
                  ],
                  [
                    "com.apple.Software-Update-Settings.extension",
                    "Software Update Settings"
                  ],
                  [
                    "com.apple.Sound-Settings.extension",
                    "Sound Settings"
                  ],
                  [
                    "com.apple.Startup-Disk-Settings.extension",
                    "Startup Disk Settings"
                  ],
                  [
                    "com.apple.Time-Machine-Settings.extension",
                    "Time Machine Settings"
                  ],
                  [
                    "com.apple.Touch-ID-Settings.extension",
                    "Touch ID Settings"
                  ],
                  [
                    "com.apple.Trackpad-Settings.extension",
                    "Trackpad Settings"
                  ],
                  [
                    "com.apple.Transfer-Reset-Settings.extension",
                    "Transfer Reset Settings"
                  ],
                  [
                    "com.apple.Users-Groups-Settings.extension",
                    "Users Groups Settings"
                  ],
                  [
                    "com.apple.WalletSettingsExtension",
                    "Wallet Settings Extension"
                  ],
                  [
                    "com.apple.Wallpaper-Settings.extension",
                    "Wallpaper Settings"
                  ],
                  [
                    "com.apple.settings.Storage",
                    "Storage Settings"
                  ],
                  [
                    "com.apple.systempreferences.AppleIDSettings",
                    "Apple ID Settings"
                  ],
                  [
                    "com.apple.wifi-settings-extension",
                    "WiFi Settings"
                  ]
                ]
              }
            }
          ]
        }
      },
      "EnabledPreferencePanes": {
        "title": "Enabled Preference Panes",
        "description": "Allowed Preference Panes within the System Preferences application.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "com.apple.preference.universalaccess",
                    "Accessibility"
                  ],
                  [
                    "com.apple.preferences.appstore",
                    "App Store"
                  ],
                  [
                    "com.apple.preferences.AppleIDPrefPane",
                    "Apple ID"
                  ],
                  [
                    "com.apple.preference.battery",
                    "Battery"
                  ],
                  [
                    "com.apple.preferences.Bluetooth",
                    "Bluetooth"
                  ],
                  [
                    "com.apple.preference.digihub.discs",
                    "CDs & DVDs"
                  ],
                  [
                    "com.apple.ClassroomSettings",
                    "Classroom"
                  ],
                  [
                    "com.apple.preference.datetime",
                    "Date & Time"
                  ],
                  [
                    "com.apple.preference.desktopscreeneffect",
                    "Desktop & Screen Saver"
                  ],
                  [
                    "com.apple.preference.displays",
                    "Displays"
                  ],
                  [
                    "com.apple.preference.dock",
                    "Dock"
                  ],
                  [
                    "com.apple.preference.energysaver",
                    "Energy Saver"
                  ],
                  [
                    "com.apple.preferences.extensions",
                    "Extensions"
                  ],
                  [
                    "com.apple.preferences.FamilySharingPrefPane",
                    "Family Sharing"
                  ],
                  [
                    "com.apple.prefpanel.fibrechannel",
                    "Fibre Channel"
                  ],
                  [
                    "com.apple.preference.general",
                    "General"
                  ],
                  [
                    "com.apple.preferences.icloud",
                    "iCloud"
                  ],
                  [
                    "com.apple.preference.ink",
                    "Ink"
                  ],
                  [
                    "com.apple.preferences.internetaccounts",
                    "Internet Accounts"
                  ],
                  [
                    "com.apple.preference.keyboard",
                    "Keyboard"
                  ],
                  [
                    "com.apple.Localization",
                    "Language & Region"
                  ],
                  [
                    "com.apple.preference.expose",
                    "Mission Control"
                  ],
                  [
                    "com.apple.preference.internet",
                    "MobileMe"
                  ],
                  [
                    "com.apple.preference.mouse",
                    "Mouse"
                  ],
                  [
                    "com.apple.preference.network",
                    "Network"
                  ],
                  [
                    "com.apple.preference.notifications",
                    "Notifications"
                  ],
                  [
                    "com.apple.preferences.parentalcontrols",
                    "Parental Controls"
                  ],
                  [
                    "com.apple.preference.printfax",
                    "Printers & Scanners"
                  ],
                  [
                    "com.apple.preferences.configurationprofiles",
                    "Profiles"
                  ],
                  [
                    "com.apple.preference.screentime",
                    "Screentime"
                  ],
                  [
                    "com.apple.preference.security",
                    "Security & Privacy"
                  ],
                  [
                    "com.apple.preferences.sharing",
                    "Sharing"
                  ],
                  [
                    "com.apple.preference.sidecar",
                    "Sidecar"
                  ],
                  [
                    "com.apple.preference.speech",
                    "Siri"
                  ],
                  [
                    "com.apple.preferences.softwareupdate",
                    "Software Update"
                  ],
                  [
                    "com.apple.preference.sound",
                    "Sound"
                  ],
                  [
                    "com.apple.preference.spotlight",
                    "Spotlight"
                  ],
                  [
                    "com.apple.preference.startupdisk",
                    "Startup Disk"
                  ],
                  [
                    "com.apple.prefs.backup",
                    "Time Machine"
                  ],
                  [
                    "com.apple.preferences.password",
                    "Touch ID"
                  ],
                  [
                    "com.apple.preference.trackpad",
                    "Trackpad"
                  ],
                  [
                    "com.apple.preferences.users",
                    "Users & Groups"
                  ],
                  [
                    "com.apple.preferences.wallet",
                    "Wallet & Apple Pay"
                  ],
                  [
                    "com.apple.Xsan",
                    "Xsan"
                  ],
                  [
                    "com.adobe.flashplayerpreferences",
                    "Adobe Flash"
                  ],
                  [
                    "com.euphonix.prefpanel",
                    "Avid Euphonix"
                  ],
                  [
                    "com.blackmagic-design.Blackmagic-Desktop-Video",
                    "Blackmagic Video"
                  ],
                  [
                    "com.websense.endpoint.preference",
                    "Forcepoint"
                  ],
                  [
                    "com.kensington.trackballworks2.prefPane",
                    "KensingtonWorks"
                  ],
                  [
                    "com.mysql.prefpane",
                    "MySQL"
                  ],
                  [
                    "com.oracle.java.JavaControlPanel",
                    "Oracle Java"
                  ],
                  [
                    "com.smarttech.SMARTBoardPref",
                    "SMART Board"
                  ],
                  [
                    "cl.fail.lordkamina.SwiftDefaultApps",
                    "Swift Default Apps"
                  ],
                  [
                    "com.tenablesecurity.NessusAgent.Preferences",
                    "Tenable Nessus Agent"
                  ],
                  [
                    "com.tuxera.ntfs.mac.prefpane",
                    "Tuxera NTFS"
                  ]
                ]
              }
            }
          ]
        }
      },
      "HiddenPreferencePanes": {
        "title": "Hidden Preference Panes",
        "description": "Hidden Preference Panes within the System Preferences application.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "com.apple.preference.universalaccess",
                    "Accessibility"
                  ],
                  [
                    "com.apple.preferences.appstore",
                    "App Store"
                  ],
                  [
                    "com.apple.preferences.AppleIDPrefPane",
                    "Apple ID"
                  ],
                  [
                    "com.apple.preference.battery",
                    "Battery"
                  ],
                  [
                    "com.apple.preferences.Bluetooth",
                    "Bluetooth"
                  ],
                  [
                    "com.apple.preference.digihub.discs",
                    "CDs & DVDs"
                  ],
                  [
                    "com.apple.ClassroomSettings",
                    "Classroom"
                  ],
                  [
                    "com.apple.preference.datetime",
                    "Date & Time"
                  ],
                  [
                    "com.apple.preference.desktopscreeneffect",
                    "Desktop & Screen Saver"
                  ],
                  [
                    "com.apple.preference.displays",
                    "Displays"
                  ],
                  [
                    "com.apple.preference.dock",
                    "Dock"
                  ],
                  [
                    "com.apple.preference.energysaver",
                    "Energy Saver"
                  ],
                  [
                    "com.apple.preferences.extensions",
                    "Extensions"
                  ],
                  [
                    "com.apple.preferences.FamilySharingPrefPane",
                    "Family Sharing"
                  ],
                  [
                    "com.apple.prefpanel.fibrechannel",
                    "Fibre Channel"
                  ],
                  [
                    "com.apple.preference.general",
                    "General"
                  ],
                  [
                    "com.apple.preferences.icloud",
                    "iCloud"
                  ],
                  [
                    "com.apple.preference.ink",
                    "Ink"
                  ],
                  [
                    "com.apple.preferences.internetaccounts",
                    "Internet Accounts"
                  ],
                  [
                    "com.apple.preference.keyboard",
                    "Keyboard"
                  ],
                  [
                    "com.apple.Localization",
                    "Language & Region"
                  ],
                  [
                    "com.apple.preference.expose",
                    "Mission Control"
                  ],
                  [
                    "com.apple.preference.internet",
                    "MobileMe"
                  ],
                  [
                    "com.apple.preference.mouse",
                    "Mouse"
                  ],
                  [
                    "com.apple.preference.network",
                    "Network"
                  ],
                  [
                    "com.apple.preference.notifications",
                    "Notifications"
                  ],
                  [
                    "com.apple.preferences.parentalcontrols",
                    "Parental Controls"
                  ],
                  [
                    "com.apple.preference.printfax",
                    "Printers & Scanners"
                  ],
                  [
                    "com.apple.preferences.configurationprofiles",
                    "Profiles"
                  ],
                  [
                    "com.apple.preference.screentime",
                    "Screentime"
                  ],
                  [
                    "com.apple.preference.security",
                    "Security & Privacy"
                  ],
                  [
                    "com.apple.preferences.sharing",
                    "Sharing"
                  ],
                  [
                    "com.apple.preference.sidecar",
                    "Sidecar"
                  ],
                  [
                    "com.apple.preference.speech",
                    "Siri"
                  ],
                  [
                    "com.apple.preferences.softwareupdate",
                    "Software Update"
                  ],
                  [
                    "com.apple.preference.sound",
                    "Sound"
                  ],
                  [
                    "com.apple.preference.spotlight",
                    "Spotlight"
                  ],
                  [
                    "com.apple.preference.startupdisk",
                    "Startup Disk"
                  ],
                  [
                    "com.apple.prefs.backup",
                    "Time Machine"
                  ],
                  [
                    "com.apple.preferences.password",
                    "Touch ID"
                  ],
                  [
                    "com.apple.preference.trackpad",
                    "Trackpad"
                  ],
                  [
                    "com.apple.preferences.users",
                    "Users & Groups"
                  ],
                  [
                    "com.apple.preferences.wallet",
                    "Wallet & Apple Pay"
                  ],
                  [
                    "com.apple.Xsan",
                    "Xsan"
                  ],
                  [
                    "com.adobe.flashplayerpreferences",
                    "Adobe Flash"
                  ],
                  [
                    "com.euphonix.prefpanel",
                    "Avid Euphonix"
                  ],
                  [
                    "com.blackmagic-design.Blackmagic-Desktop-Video",
                    "Blackmagic Video"
                  ],
                  [
                    "com.websense.endpoint.preference",
                    "Forcepoint"
                  ],
                  [
                    "com.kensington.trackballworks2.prefPane",
                    "KensingtonWorks"
                  ],
                  [
                    "com.mysql.prefpane",
                    "MySQL"
                  ],
                  [
                    "com.oracle.java.JavaControlPanel",
                    "Oracle Java"
                  ],
                  [
                    "com.smarttech.SMARTBoardPref",
                    "SMART Board"
                  ],
                  [
                    "cl.fail.lordkamina.SwiftDefaultApps",
                    "Swift Default Apps"
                  ],
                  [
                    "com.tenablesecurity.NessusAgent.Preferences",
                    "Tenable Nessus Agent"
                  ],
                  [
                    "com.tuxera.ntfs.mac.prefpane",
                    "Tuxera NTFS"
                  ]
                ]
              }
            }
          ]
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.systemuiserver": {
    "title": "Allowed Media and Menu Bar Extras",
    "description": "Allowed media management and menu bar extras settings",
    "properties": {
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "logout-eject": {
        "title": "Eject on logout",
        "description": "Volumes to eject when the user logs out.",
        "type": {
          "dictionary": {
            "bd": {
              "title": "Blu-ray",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "blankbd": {
              "title": "Recordable Blu-ray",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "blankcd": {
              "title": "Recordable CD",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "blankdvd": {
              "title": "Recordable DVD",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "cd": {
              "title": "CD",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "disk-image": {
              "title": "Disk Image",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "dvd": {
              "title": "DVD",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "dvdram": {
              "title": "DVD-RAM",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "harddisk-external": {
              "title": "External Disk",
              "description": "This key is the default for media types that donʼt fall into other categories. Like internally installed SD-Cards and USB flash drives.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "harddisk-internal": {
              "title": "Internal Disk",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "networkdisk": {
              "title": "Network Disk",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "menuExtras": {
        "title": "Menu Extras",
        "description": "List of menu extras to combine with the user's menu bar",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "mount-controls": {
        "title": "Volume Mount Controls",
        "description": "Media type dictionary to control volume mounting.",
        "type": {
          "dictionary": {
            "bd": {
              "title": "Blu-ray",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "blankbd": {
              "title": "Recordable Blu-ray",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "blankcd": {
              "title": "Recordable CD",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "blankdvd": {
              "title": "Recordable DVD",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "cd": {
              "title": "CD",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "disk-image": {
              "title": "Disk Image",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "dvd": {
              "title": "DVD",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "dvdram": {
              "title": "DVD-RAM",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "harddisk-external": {
              "title": "External Disk",
              "description": "This key is the default for media types that donʼt fall into other categories. Like internally installed SD-Cards and USB flash drives.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "harddisk-internal": {
              "title": "Internal Disk",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "networkdisk": {
              "title": "Network Disk",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "unmount-controls": {
        "title": "Volume Unmount Controls",
        "description": "Media type dictionary to control volume unmounting.",
        "type": {
          "dictionary": {
            "bd": {
              "title": "Blu-ray",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "blankbd": {
              "title": "Recordable Blu-ray",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "blankcd": {
              "title": "Recordable CD",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "blankdvd": {
              "title": "Recordable DVD",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "cd": {
              "title": "CD",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "disk-image": {
              "title": "Disk Image",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "dvd": {
              "title": "DVD",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "dvdram": {
              "title": "DVD-RAM",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "harddisk-external": {
              "title": "External Disk",
              "description": "This key is the default for media types that donʼt fall into other categories. Like internally installed SD-Cards and USB flash drives.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "harddisk-internal": {
              "title": "Internal Disk",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "networkdisk": {
              "title": "Network Disk",
              "description": "",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "authenticate",
                          "Authenticate"
                        ],
                        [
                          "read-only",
                          "Read-Only"
                        ],
                        [
                          "deny",
                          "Deny"
                        ],
                        [
                          "eject",
                          "Eject"
                        ],
                        [
                          "alert",
                          "Alert"
                        ]
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.thirdactiveethernet.managed": {
    "title": "802.1X Ethernet: Third Active",
    "description": "Use this section to define Third Active Ethernet settings",
    "properties": {
      "EAPClientConfiguration": {
        "title": "EAP Client Configuration",
        "description": "Specifies 802.1x EAP authentication parameters.",
        "type": {
          "dictionary": {
            "AcceptEAPTypes": {
              "title": "Accept EAP Types",
              "description": "The EAP types accepted.",
              "type": {
                "array": [
                  "integer"
                ]
              }
            },
            "EAPFASTProvisionPAC": {
              "title": "Provision PAC",
              "description": "If set, allows PAC provisioning.",
              "type": "boolean"
            },
            "EAPFASTProvisionPACAnonymously": {
              "title": "Provision PAC Anonymously",
              "type": "boolean"
            },
            "EAPFASTUsePAC": {
              "title": "Use PAC",
              "type": "boolean"
            },
            "EAPSIMNumberOfRANDs": {
              "title": "Number of RANDs",
              "description": "The minimum number of RAND values accepted from the server. 3 is the default, and 2 is allowed, but offers less security.",
              "type": "integer"
            },
            "OneTimePassword": {
              "title": "One Time Password",
              "type": "boolean"
            },
            "OneTimeUserPassword": {
              "title": "Per-Connection Password",
              "description": "If set, the user will be prompted for a password each time they connect to the network.",
              "type": "boolean"
            },
            "OuterIdentity": {
              "title": "Outer Identity",
              "description": "Externally visible identification (for TTLS, PEAP, and EAP-FAST). This string is used instead of the user's identity outside the encrypted tunnel. This value can be used to mask the true identity of the person using the network.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "PayloadCertificateAnchorUUID": {
              "title": "Certificate Anchor UUID",
              "description": "Array of UUIDs corresponding to the trusted certificates for this authentication.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "SystemModeCredentialsSource": {
              "title": "System Profile Credentials Source",
              "description": "Use an alternate set of credentials when in System mode (AKA not a loginwindow profile). This can be used to tell EAPOLClient to use the computer password in a bound active directory scenario for authentication.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "ActiveDirectory",
                      "Active Directory"
                    ]
                  ]
                }
              }
            },
            "SystemModeUseOpenDirectoryCredentials": {
              "title": "Use OpenDirectory System Profile Credentials",
              "description": "This indicates if the connection should try to use the OpenDirectory machine credentials.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSAllowTrustExceptions": {
              "title": "Allow Trust Exceptions",
              "description": "Allows a dynamic trust decision by the user. If false, the authentication fails if the certificate isn't already trusted.",
              "type": "boolean"
            },
            "TLSCertificateIsRequired": {
              "title": "TLS Certificate is Required",
              "type": "boolean"
            },
            "TLSMaximumVersion": {
              "title": "TLS Maximum Version",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSMinimumVersion": {
              "title": "TLS Minimum Version",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSTrustedServerNames": {
              "title": "Trusted Server Certificate Names",
              "description": "Certificate Common Names expected from authentication server. The wildcard * can be used to match a range of strings.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "TTLSInnerAuthentication": {
              "title": "Inner Authentication",
              "description": "Specifies the inner authentication used by the TTLS module.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserName": {
              "title": "Username",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserPassword": {
              "title": "Password",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "Interface": {
        "title": "Interface",
        "description": "The wired interface to use",
        "type": {
          "string": {
            "rangeList": [
              [
                "ThirdActiveEthernet",
                "Third Active Ethernet"
              ]
            ]
          }
        }
      },
      "SetupModes": {
        "title": "EAP Setup Modes",
        "description": "Select \"Login Window\" to authenticate the Mac to the network when the user logs in.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "System",
                    "System"
                  ],
                  [
                    "Loginwindow",
                    "Login Window"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.thirdethernet.managed": {
    "title": "802.1X Ethernet: Third",
    "description": "Use this section to define Third Ethernet settings",
    "properties": {
      "EAPClientConfiguration": {
        "title": "EAP Client Configuration",
        "description": "Specifies 802.1x EAP authentication parameters.",
        "type": {
          "dictionary": {
            "AcceptEAPTypes": {
              "title": "Accept EAP Types",
              "description": "The EAP types accepted.",
              "type": {
                "array": [
                  "integer"
                ]
              }
            },
            "EAPFASTProvisionPAC": {
              "title": "Provision PAC",
              "description": "If set, allows PAC provisioning.",
              "type": "boolean"
            },
            "EAPFASTProvisionPACAnonymously": {
              "title": "Provision PAC Anonymously",
              "type": "boolean"
            },
            "EAPFASTUsePAC": {
              "title": "Use PAC",
              "type": "boolean"
            },
            "EAPSIMNumberOfRANDs": {
              "title": "Number of RANDs",
              "description": "The minimum number of RAND values accepted from the server. 3 is the default, and 2 is allowed, but offers less security.",
              "type": "integer"
            },
            "OneTimePassword": {
              "title": "One Time Password",
              "type": "boolean"
            },
            "OneTimeUserPassword": {
              "title": "Per-Connection Password",
              "description": "If set, the user will be prompted for a password each time they connect to the network.",
              "type": "boolean"
            },
            "OuterIdentity": {
              "title": "Outer Identity",
              "description": "Externally visible identification (for TTLS, PEAP, and EAP-FAST). This string is used instead of the user's identity outside the encrypted tunnel. This value can be used to mask the true identity of the person using the network.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "PayloadCertificateAnchorUUID": {
              "title": "Certificate Anchor UUID",
              "description": "Array of UUIDs corresponding to the trusted certificates for this authentication.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "SystemModeCredentialsSource": {
              "title": "System Profile Credentials Source",
              "description": "Use an alternate set of credentials when in System mode (AKA not a loginwindow profile). This can be used to tell EAPOLClient to use the computer password in a bound active directory scenario for authentication.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "ActiveDirectory",
                      "Active Directory"
                    ]
                  ]
                }
              }
            },
            "SystemModeUseOpenDirectoryCredentials": {
              "title": "Use OpenDirectory System Profile Credentials",
              "description": "This indicates if the connection should try to use the OpenDirectory machine credentials.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSAllowTrustExceptions": {
              "title": "Allow Trust Exceptions",
              "description": "Allows a dynamic trust decision by the user. If false, the authentication fails if the certificate isn't already trusted.",
              "type": "boolean"
            },
            "TLSCertificateIsRequired": {
              "title": "TLS Certificate is Required",
              "type": "boolean"
            },
            "TLSMaximumVersion": {
              "title": "TLS Maximum Version",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSMinimumVersion": {
              "title": "TLS Minimum Version",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSTrustedServerNames": {
              "title": "Trusted Server Certificate Names",
              "description": "Certificate Common Names expected from authentication server. The wildcard * can be used to match a range of strings.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "TTLSInnerAuthentication": {
              "title": "Inner Authentication",
              "description": "Specifies the inner authentication used by the TTLS module.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserName": {
              "title": "Username",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserPassword": {
              "title": "Password",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "Interface": {
        "title": "Interface",
        "description": "The wired interface to use",
        "type": {
          "string": {
            "rangeList": [
              [
                "ThirdEthernet",
                "Third Ethernet"
              ]
            ]
          }
        }
      },
      "SetupModes": {
        "title": "EAP Setup Modes",
        "description": "Select \"Login Window\" to authenticate the Mac to the network when the user logs in.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "System",
                    "System"
                  ],
                  [
                    "Loginwindow",
                    "Login Window"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.timed": {
    "title": "macOS Time Synchronization",
    "description": "macOS Time Synchronization Daemon settings",
    "properties": {
      "TMAutomaticTimeOnlyEnabled": {
        "title": "Enable automatic time synchronization",
        "description": "If enabled, ensures the uniformity of time stamps for information systems with multiple system clocks and systems connected over a network.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.touristd": {
    "title": "New to Mac / Tours",
    "description": "\"New to Mac\" notification settings",
    "properties": {
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "seed-viewed-+trJt2VsTvK1yfPGwOySDw": {
        "title": "iMac 21a: 10.13 - 10.14",
        "description": "https://help.apple.com/macOS/high-sierra/imac-21a",
        "type": "date"
      },
      "seed-viewed-/+vP78HsSh+Yeb4xJnUT9A": {
        "title": "MacBook Pro 15: 10.12 - 10.14",
        "description": "https://help.apple.com/osx/mac/10.12/macbook-pro-15",
        "type": "date"
      },
      "seed-viewed-2+LvxAVyT6qnV1sDMZT0NA": {
        "title": "MacBook Pro 13d: 10.12 - 10.14",
        "description": "https://help.apple.com/osx/mac/10.12/macbook-pro-13d",
        "type": "date"
      },
      "seed-viewed-40reAuuYTHOsx4oGcx4qrA": {
        "title": "iMac Pro: 10.14",
        "description": "https://help.apple.com/macOS/mojave/imac-pro",
        "type": "date"
      },
      "seed-viewed-APhNaYV1RxSS41lC7ZJJ9Q": {
        "title": "iMac Pro: 10.13 - 10.14",
        "description": "https://help.apple.com/macOS/high-sierra/imac-pro",
        "type": "date"
      },
      "seed-viewed-B70mVuHeT0WUgKh/VdUuZQ": {
        "title": "MacBook Pro 13c: 10.12 - 10.14",
        "description": "https://help.apple.com/osx/mac/10.12/macbook-pro-13c",
        "type": "date"
      },
      "seed-viewed-EBFV2ZqnQiaqrZhvyifLeQ": {
        "title": "MacBook Pro 13 Mid 2019: 10.14",
        "description": "https://help.apple.com/macos/mojave/mid-2019/macbook-pro-13/",
        "type": "date"
      },
      "seed-viewed-ETJeJ9/1QmmWUde7uK8fDg": {
        "title": "MacBook Pro 13: 10.13 - 10.14",
        "description": "https://help.apple.com/macOS/high-sierra/macbook-pro-13",
        "type": "date"
      },
      "seed-viewed-EWfaSdJwR/6f1BYGiyLpcQ": {
        "title": "MacBook Pro 15d: 10.12 - 10.14",
        "description": "https://help.apple.com/osx/mac/10.12/macbook-pro-15d",
        "type": "date"
      },
      "seed-viewed-EeEFv8cyS0CVe3ia2UEehA": {
        "title": "iMac 21a: 10.14",
        "description": "https://help.apple.com/macOS/mojave/imac-21a",
        "type": "date"
      },
      "seed-viewed-FQrkbNP9ThKQQtpqx2saFg": {
        "title": "MacBook: 10.12 - 10.14",
        "description": "https://help.apple.com/macOS/Sierra/macbook",
        "type": "date"
      },
      "seed-viewed-GZAJdmpdSqmfH2PkCr8ebw": {
        "title": "MacBook Pro 13d: 10.12 - 10.14",
        "description": "https://help.apple.com/macOS/Sierra/macbook-pro-13d",
        "type": "date"
      },
      "seed-viewed-JTecrrXDSVut2tSfltty9Q": {
        "title": "MacBook Pro 13c: 10.12 - 10.14",
        "description": "https://help.apple.com/macOS/Sierra/macbook-pro-13c",
        "type": "date"
      },
      "seed-viewed-KwUoo0fRRM2VPmIm0V67xg": {
        "title": "iMac: 10.13 - 10.14",
        "description": "https://help.apple.com/macOS/high-sierra/imac",
        "type": "date"
      },
      "seed-viewed-LR2P9+rnQ2q9xSUy1ZgWOw": {
        "title": "New to Mac: 10.13",
        "description": "https://help.apple.com/macOS/high-sierra/mac-basics",
        "type": "date"
      },
      "seed-viewed-MM3ne3nTR9eXFyVwZ5gN7Q": {
        "title": "MacBook Pro 15: 10.13 - 10.14",
        "description": "https://help.apple.com/macOS/high-sierra/macbook-pro-15",
        "type": "date"
      },
      "seed-viewed-Pa88nesPSO6POlutVN4/Sg": {
        "title": "MacBook: 10.12 - 10.14",
        "description": "https://help.apple.com/osx/mac/10.12/macbook",
        "type": "date"
      },
      "seed-viewed-SdV08ZZQRxOCWq6JBEXmfg": {
        "title": "MacBook: 10.11 - 10.14",
        "description": "https://help.apple.com/osx-elcapitan/get-to-know-your-mac-book",
        "type": "date"
      },
      "seed-viewed-SkI/dLAkQu6k/qpzSOG6Iw": {
        "title": "MacBook Air Mid 2019: 10.14",
        "description": "https://help.apple.com/macos/mojave/mid-2019/macbook-air",
        "type": "date"
      },
      "seed-viewed-Tu81gKhDTvmNkjyqcPBfKA": {
        "title": "MacBook Air: 10.14",
        "description": "https://help.apple.com/macos/mojave/macbook-air/",
        "type": "date"
      },
      "seed-viewed-UhiR1M79RWmXLIQr4M0AWw": {
        "title": "iMac 21r: 10.14",
        "description": "https://help.apple.com/macOS/Sierra/mid-2017/imac-21r",
        "type": "date"
      },
      "seed-viewed-WEyaCPMVRB6HbnmRq9EnNQ": {
        "title": "iMac 21a: 10.12 - 10.14",
        "description": "https://help.apple.com/macOS/Sierra/mid-2017/imac-21a",
        "type": "date"
      },
      "seed-viewed-We59wh+OTa6c1yas/yppwg": {
        "title": "MacBook: 10.14",
        "description": "https://help.apple.com/macOS/mojave/macbook",
        "type": "date"
      },
      "seed-viewed-aytyxqEmTIOvEz3iS4IbkA": {
        "title": "iMac Early 2019: 10.14",
        "description": "https://help.apple.com/macos/mojave/early-2019/imac",
        "type": "date"
      },
      "seed-viewed-b/dLke8ZTQaN9KKrxfwDQw": {
        "title": "MacBook: 10.13 - 10.14",
        "description": "https://help.apple.com/macOS/high-sierra/macbook",
        "type": "date"
      },
      "seed-viewed-baXokbqsQ/2KLkzIZrR6ng": {
        "title": "Mac mini: 10.14",
        "description": "https://help.apple.com/macos/mojave/mac-mini/",
        "type": "date"
      },
      "seed-viewed-bigsur_early-2021_imac-24-2": {
        "title": "M1 iMac 24-2: 11.0",
        "description": "https://help.apple.com/macos/big-sur/early-2021/imac-24-2",
        "type": "date"
      },
      "seed-viewed-bigsur_early-2021_imac-24-4": {
        "title": "M1 iMac 24-4: 11.0",
        "description": "https://help.apple.com/macos/big-sur/early-2021/imac-24-4",
        "type": "date"
      },
      "seed-viewed-bigsur_imac": {
        "title": "iMac: 11.0",
        "description": "https://help.apple.com/macos/big-sur/imac",
        "type": "date"
      },
      "seed-viewed-bigsur_imac-21": {
        "title": "iMac 21: 11.0",
        "description": "https://help.apple.com/macos/big-sur/imac-21",
        "type": "date"
      },
      "seed-viewed-bigsur_imac-pro": {
        "title": "iMac Pro: 11.0",
        "description": "https://help.apple.com/macos/big-sur/imac-pro",
        "type": "date"
      },
      "seed-viewed-bigsur_late-2020_mac-mini": {
        "title": "Mac mini Late 2020: 11.0",
        "description": "https://help.apple.com/macos/big-sur/late-2020/mac-mini",
        "type": "date"
      },
      "seed-viewed-bigsur_late-2020_macbook-air": {
        "title": "MacBook Air Late 2020: 11.0",
        "description": "https://help.apple.com/macos/big-sur/macbook-air",
        "type": "date"
      },
      "seed-viewed-bigsur_late-2020_macbook-pro-13": {
        "title": "MacBook Pro 13 Late 2020: 11.0",
        "description": "https://help.apple.com/macos/big-sur/late-2020/macbook-pro-13",
        "type": "date"
      },
      "seed-viewed-bigsur_mac-mini": {
        "title": "Mac mini: 11.0",
        "description": "https://help.apple.com/macos/big-sur/mac-mini",
        "type": "date"
      },
      "seed-viewed-bigsur_mac-pro": {
        "title": "Mac Pro: 11.0",
        "description": "https://help.apple.com/macos/big-sur/mac-pro",
        "type": "date"
      },
      "seed-viewed-bigsur_mac_basics": {
        "title": "Mac Basics: 11.0",
        "description": "https://help.apple.com/macos/big-sur/mac-basics",
        "type": "date"
      },
      "seed-viewed-bigsur_macbook-pro": {
        "title": "MacBook Pro: 11.0",
        "description": "https://help.apple.com/macos/big-sur/macbook-pro",
        "type": "date"
      },
      "seed-viewed-bigsur_macbook-pro-13": {
        "title": "MacBook Pro 13: 11.0",
        "description": "https://help.apple.com/macos/big-sur/macbook-pro-13",
        "type": "date"
      },
      "seed-viewed-bigsur_whats_new": {
        "title": "What's New: 11.0",
        "description": "https://help.apple.com/macos/big-sur/whats-new",
        "type": "date"
      },
      "seed-viewed-bydF6fX5Sp6aBYdEXD0VwQ": {
        "title": "New to Mac: 10.14",
        "description": "https://help.apple.com/macOS/mojave/mac-basics",
        "type": "date"
      },
      "seed-viewed-catalina_early-2020_macbook-air": {
        "title": "MacBook Air Early 2020: 10.15",
        "description": "https://help.apple.com/macos/catalina/early-2020/macbook-air",
        "type": "date"
      },
      "seed-viewed-catalina_early-2020_macbook-pro-13": {
        "title": "MacBook Pro 13 Early 2020: 10.15",
        "description": "https://help.apple.com/macos/catalina/early-2020/macbook-pro-13",
        "type": "date"
      },
      "seed-viewed-catalina_imac": {
        "title": "iMac: 10.15",
        "description": "https://help.apple.com/macos/catalina/imac",
        "type": "date"
      },
      "seed-viewed-catalina_imac-21a": {
        "title": "iMac 21a: 10.15",
        "description": "https://help.apple.com/macos/catalina/imac-21a",
        "type": "date"
      },
      "seed-viewed-catalina_imac-pro": {
        "title": "iMac Pro: 10.15",
        "description": "https://help.apple.com/macos/catalina/imac-pro",
        "type": "date"
      },
      "seed-viewed-catalina_late-2019_macbook-pro": {
        "title": "MacBook Pro Late 2019: 10.15",
        "description": "https://help.apple.com/macos/catalina/late-2019/macbook-pro",
        "type": "date"
      },
      "seed-viewed-catalina_mac-mini": {
        "title": "Mac mini: 10.15",
        "description": "https://help.apple.com/macos/catalina/mac-mini",
        "type": "date"
      },
      "seed-viewed-catalina_mac-pro": {
        "title": "Mac Pro: 10.15",
        "description": "https://help.apple.com/macos/catalina/mac-pro",
        "type": "date"
      },
      "seed-viewed-catalina_mac_basics": {
        "title": "New to Mac: 10.15",
        "description": "https://help.apple.com/macos/catalina/mac-basics",
        "type": "date"
      },
      "seed-viewed-catalina_macbook-air": {
        "title": "MacBook Air: 10.15",
        "description": "https://help.apple.com/macos/catalina/macbook-air",
        "type": "date"
      },
      "seed-viewed-catalina_macbook-pro": {
        "title": "MacBook Pro: 10.15",
        "description": "https://help.apple.com/macos/catalina/macbook-pro",
        "type": "date"
      },
      "seed-viewed-catalina_macbook-pro-13": {
        "title": "MacBook Pro 13: 10.15",
        "description": "https://help.apple.com/macos/catalina/macbook-pro-13",
        "type": "date"
      },
      "seed-viewed-catalina_mid-2020_imac": {
        "title": "iMac Mid 2020: 10.15",
        "description": "https://help.apple.com/macos/catalina/mid-2020/imac",
        "type": "date"
      },
      "seed-viewed-catalina_whats_new": {
        "title": "What's New: 10.15",
        "description": "https://help.apple.com/macos/catalina/whats-new",
        "type": "date"
      },
      "seed-viewed-d+gfl8CNTNeauANKjf9WqA": {
        "title": "iMac 27: 10.12 - 10.14",
        "description": "https://help.apple.com/macOS/Sierra/mid-2017/imac-27",
        "type": "date"
      },
      "seed-viewed-f/Pn3F4RScOh+GUBKO9sRA": {
        "title": "What's New: 10.13",
        "description": "https://help.apple.com/macOS/high-sierra/whats-new",
        "type": "date"
      },
      "seed-viewed-fWRpNw7IR3S3qxX63nmvMw": {
        "title": "MacBook Pro 13: 10.14",
        "description": "https://help.apple.com/macOS/mojave/macbook-pro-13",
        "type": "date"
      },
      "seed-viewed-hP2OZh+MTEKeFcjgec2gZw": {
        "title": "MacBook Late 2018: 10.14",
        "description": "https://help.apple.com/macos/mojave/late-2018/macbook/",
        "type": "date"
      },
      "seed-viewed-krdWS8DSQIqJSqQFXW1/pw": {
        "title": "MacBook Pro Mid 2018: 10.13 - 10.14",
        "description": "https://help.apple.com/macOS/high-sierra/mid-2018/macbook-pro",
        "type": "date"
      },
      "seed-viewed-kti4ZkMKQFyCL2kbgCY23A": {
        "title": "MacBook Pro 15d: 10.12 - 10.14",
        "description": "https://help.apple.com/macOS/Sierra/macbook-pro-15d",
        "type": "date"
      },
      "seed-viewed-lEDfW5O+SZe8KTQ93HGOPA": {
        "title": "MacBook Pro: 10.13 - 10.14",
        "description": "https://help.apple.com/macOS/high-sierra/macbook-pro",
        "type": "date"
      },
      "seed-viewed-lQlm1yrMS0GPVyAL44id+A": {
        "title": "What's New: 10.14",
        "description": "https://help.apple.com/macOS/mojave/whats-new",
        "type": "date"
      },
      "seed-viewed-n87FVu1TSwGzble8vqBvsg": {
        "title": "MacBook Pro 15: 10.12 - 10.14",
        "description": "https://help.apple.com/osx/mac/10.12/macbook-pro-15",
        "type": "date"
      },
      "seed-viewed-pDWyREoARJm5V1mJYr9GKg": {
        "title": "iMac: 10.14",
        "description": "https://help.apple.com/macOS/mojave/imac",
        "type": "date"
      },
      "seed-viewed-srluh6uOQiuWCzxguqhDNw": {
        "title": "MacBook Pro: 10.14",
        "description": "https://help.apple.com/macOS/mojave/macbook-pro",
        "type": "date"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.tvremote": {
    "title": "TV Remote",
    "description": "TV Remote app settings",
    "properties": {
      "AllowedRemotes": {
        "title": "Allowed Remotes",
        "description": "List of permitted iOS remote devices restricted on this device.",
        "type": {
          "array": [
            {
              "dictionary": {
                "RemoteDeviceID": {
                  "title": "Remote Device ID",
                  "description": "The iOS remote's MAC address",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "AllowedTVs": {
        "title": "Allowed TVs",
        "description": "List of permitted tvOS remote devices restricted on this device.",
        "type": {
          "array": [
            {
              "dictionary": {
                "TVDeviceID": {
                  "title": "TV Device ID",
                  "description": "The tvOS destination MAC address",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "TVDeviceName": {
                  "title": "TV Device Name",
                  "description": "The tvOS destination device name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": true,
    "unique": true
  },
  "com.apple.universalaccess": {
    "title": "Accessibility",
    "description": "Accessibility Settings",
    "properties": {
      "closeViewFarPoint": {
        "title": "Minimum Zoom",
        "description": "The minimal zoom magnification that can be set in the Zoom options in an integer value between 1 and 40",
        "type": "integer"
      },
      "closeViewHotkeysEnabled": {
        "title": "Enable Zoom via Keyboard",
        "description": "Turns on \"Use keyboard shortcuts to zoom\" in the zoom options",
        "type": "boolean"
      },
      "closeViewNearPoint": {
        "title": "Maximum Zoom",
        "description": "The maximal zoom magnification that can be set in the Zoom options in an integer value between 1 and 40",
        "type": "integer"
      },
      "closeViewScrollWheelToggle": {
        "title": "Enable Zoom via ScrollWheel",
        "description": "Turns on \"Use scroll gesture with modifier keys to zoom\" in the zoom options",
        "type": "boolean"
      },
      "closeViewShowPreview": {
        "title": "Show preview rectangle when zoomed out",
        "description": "Turns on \"Show preview rectangle\" in the Zoom options",
        "type": "boolean"
      },
      "closeViewSmoothImages": {
        "title": "Smooth images",
        "description": "Turns on \"Smooth images\" in the Zoom options",
        "type": "boolean"
      },
      "contrast": {
        "title": "Display Contrast",
        "description": "The contrast value in the Display options.",
        "type": "real"
      },
      "flashScreen": {
        "title": "Flash screen on alert sound",
        "description": "Turns on \"Flash the screen when an alert sound occurs\" in the Audio options",
        "type": "boolean"
      },
      "grayscale": {
        "title": "Use Grayscale",
        "description": "Turns on \"Use grayscale\" in the Display options",
        "type": "boolean"
      },
      "mouseDriver": {
        "title": "Enable Mouse Keys",
        "description": "Turns on \"Enable Mouse Keys\" in the Pointer Control options. Mouse Keys allows the mouse pointer to be controlled using the keyboard number pad",
        "type": "boolean"
      },
      "mouseDriverCursorSize": {
        "title": "Cursor Size",
        "description": "The size of the mouse cursor in a decimal value between 1 and 4, where 1 is normal and 4 is the maximum",
        "type": "real"
      },
      "mouseDriverIgnoreTrackpad": {
        "title": "Ignore built-in trackpad",
        "description": "Turns on \"Ignore built-in trackpad when mouse or wireless trackpad is present\" in the Mouse & Trackpad options",
        "type": "boolean"
      },
      "mouseDriverInitialDelay": {
        "title": "Initial delay",
        "description": "The initial delay before moving the mouse cursor with Mouse Keys in a decimal value representing seconds",
        "type": "real"
      },
      "mouseDriverMaxSpeed": {
        "title": "Maximum speed",
        "description": "The maximum speed for the cursor when using Mouse Keys in an integer value between 1 and 32, where 1 is the slowest and 32 is the fastest",
        "type": "integer"
      },
      "slowKey": {
        "title": "Enable Slow Keys",
        "description": "Turns on \"Slow Keys\" in the Keyboard options. Slow keys adjusts the amount of time between when a key is pressed and when it is activated",
        "type": "boolean"
      },
      "slowKeyBeepOn": {
        "title": "Use click key sounds",
        "description": "Turns on \"Use click key sounds\" for Slow Keys in the Keyboard options",
        "type": "boolean"
      },
      "slowKeyDelay": {
        "title": "Acceptance delay",
        "description": "The acceptance delay for Slow Keys in miliseconds",
        "type": "integer"
      },
      "stereoAsMono": {
        "title": "Play stereo audio as mono",
        "description": "Turns on \"Play stereo audio as mono\" in the Audio options",
        "type": "boolean"
      },
      "stickyKey": {
        "title": "Enable Sticky Keys",
        "description": "Turns on \"Sticky Keys\" in the Keyboard options. Sticky keys allows modifier keys to be set without having to hold the key down",
        "type": "boolean"
      },
      "stickyKeyBeepOnModifier": {
        "title": "Beep when a modifier key is set",
        "description": "Turns on \"Beep when a modifier key is set\" for Sticky Keys in Keyboard options",
        "type": "boolean"
      },
      "stickyKeyShowWindow": {
        "title": "Display pressed keys on screen",
        "description": "Turns on \"Display pressed keys on screen\" for Sticky Keys in Keyboard options",
        "type": "boolean"
      },
      "voiceOverOnOffKey": {
        "title": "Enable VoiceOver",
        "description": "VoiceOver provides spoken and brailled descriptions of items on the computer screen and provides control of the computer through the user of the keyboard",
        "type": "boolean"
      },
      "whiteOnBlack": {
        "title": "Invert colors",
        "description": "Turns on \"Invert colors\" in Display options",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.webClip.managed": {
    "title": "Web Clips",
    "description": "Use this section to define web clips",
    "properties": {
      "FullScreen": {
        "title": "Full Screen",
        "description": "Opens the URL as a web app without a browser",
        "type": "boolean"
      },
      "Icon": {
        "title": "Icon",
        "description": "The icon to use for the Web Clip",
        "type": "data"
      },
      "IgnoreManifestScope": {
        "title": "Ignore Manifest Scope",
        "description": "If true, a full screen web clip will not show the Safari UI when navigating to URLs other than the web clip's own.",
        "type": "boolean"
      },
      "IsRemovable": {
        "title": "Removable",
        "description": "Whether the Web Clip can be removed by users",
        "type": "boolean"
      },
      "Label": {
        "title": "Label",
        "description": "The name of the Web Clip",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Precomposed": {
        "title": "Precomposed Icon",
        "description": "Prevents the iOS device from adding a shine to the image",
        "type": "boolean"
      },
      "TargetApplicationBundleIdentifier": {
        "title": "Target Application Bundle Identifier",
        "description": "Bundle identifier of the application that opens this web clip's URL.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "URL": {
        "title": "URL",
        "description": "The URL of the web clip.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.webcontent-filter": {
    "title": "Web Content Filter",
    "description": "Web Content Filter settings",
    "properties": {
      "AllowListBookmarks": {
        "title": "Allow List Bookmarks",
        "description": "If present, these URLs are added to the browser's bookmarks, and the user is not allowed to visit any sites other than these. The number of these URLs should be limited to about 500.",
        "type": {
          "array": [
            {
              "dictionary": {
                "Title": {
                  "title": "Title",
                  "description": "The title of the bookmark.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "URL": {
                  "title": "URL",
                  "description": "URL of the allow list bookmark.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "AutoFilterEnabled": {
        "title": "Limit adult content automatically",
        "description": "Optional. If true, automatic filtering is enabled. This function evaluates each web page as it is loaded and attempts to identify and block content not suitable for children.\n\nThe search algorithm is complex and may vary from release to release, but it is basically looking for adult language, i.e. swearing and sexually explicit language. The default value is false.",
        "type": "boolean"
      },
      "BlacklistedURLs": {
        "title": "Denylisted URLs",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ContentFilterUUID": {
        "title": "Content Filter UUID",
        "description": "Global identifier of the content filter configuration in this payload. Used for processing network traffic of managed apps with an identical attribute by the filter.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DenyListURLs": {
        "title": "Deny List URLs",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "FilterBrowsers": {
        "title": "Filter WebKit Traffic",
        "type": "boolean"
      },
      "FilterDataProviderBundleIdentifier": {
        "title": "Filter Data Provider System Extension Bundle ID",
        "description": "The bundle identifier string of the Filter Data Provider System Extension. This string identifies the Filter Data Provider when the filter starts running.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FilterDataProviderDesignatedRequirement": {
        "title": "Filter Data Provider Designated Requirement",
        "description": "The designated requirement string that is embedded in the code signature of the Filter Data Provider System Extension. This string identifies the Filter Data Provider when the filter starts running.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FilterGrade": {
        "title": "Filter Grade",
        "type": {
          "string": {
            "rangeList": [
              [
                "firewall",
                "Firewall"
              ],
              [
                "inspector",
                "Inspector"
              ]
            ]
          }
        }
      },
      "FilterPacketProviderBundleIdentifier": {
        "title": "Filter Packet Provider Bundle ID",
        "description": "The bundle identifier string of the Filter Packet Provider System Extension. This string identifies the Filter Packet Provider when the filter starts running.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FilterPacketProviderDesignatedRequirement": {
        "title": "Filter Packet Provider Designated Requirement",
        "description": "The designated requirement string that is embedded in the code signature of the Filter Packet Provider System Extension. This string identifies the Filter Packet Provider when the filter starts running.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FilterPackets": {
        "title": "Enable Packet Filtering",
        "description": "",
        "type": "boolean"
      },
      "FilterSockets": {
        "title": "Enable Socket Filtering",
        "type": "boolean"
      },
      "FilterType": {
        "title": "Filter Type",
        "type": {
          "string": {
            "rangeList": [
              [
                "BuiltIn",
                "Built-In (iOS only)"
              ],
              [
                "Plugin",
                "Plug-In"
              ]
            ]
          }
        }
      },
      "Organization": {
        "title": "Organization",
        "description": "An Organization string that will be passed to the 3rd party plugin.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Password": {
        "title": "Password",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PayloadCertificateUUID": {
        "title": "Certificate UUID",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PermittedURLs": {
        "title": "Permitted URLs",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PluginBundleID": {
        "title": "Plug-In Bundle ID",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ServerAddress": {
        "title": "Server Address",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UserDefinedName": {
        "title": "Filter Configuration Display Name",
        "description": "A string which will be displayed for this filtering configuration.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UserName": {
        "title": "Username",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "VendorConfig": {
        "title": "Vendor Configuration",
        "description": "Custom key/value pairs for the filtering service plugin",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Vendor Custom Key Name",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Vendor Custom Key Value",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "WhitelistedBookmarks": {
        "title": "Allowlisted Bookmarks",
        "description": "If present, these URLs are added to the browser's bookmarks, and the user is not allowed to visit any sites other than these. The number of these URLs should be limited to about 500.",
        "type": {
          "array": [
            {
              "dictionary": {
                "Title": {
                  "title": "Title",
                  "description": "The title of the bookmark.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "URL": {
                  "title": "URL",
                  "description": "URL of the allowlisted bookmark.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.wifi.managed": {
    "title": "Wi-Fi",
    "description": "Use this section to define Wi-Fi settings",
    "properties": {
      "AutoJoin": {
        "title": "Auto Join",
        "description": "Automatically join the network without notifying users.",
        "type": "boolean"
      },
      "CaptiveBypass": {
        "title": "Disable Captive Network Detection",
        "description": "Users won't have an opportunity to join networks that require agreements or other information prior to network access.",
        "type": "boolean"
      },
      "DisableAssociationMACRandomization": {
        "title": "Disable MAC Address Randomization",
        "description": "If true, disables MAC address randomization for that Wi-Fi network while associated with the network. This also shows a privacy warning in Settings indicating that the network has reduced privacy protections.",
        "type": "boolean"
      },
      "DisplayedOperatorName": {
        "title": "Provider Display Name",
        "description": "Display name of the Passpoint service provider.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DomainName": {
        "title": "Domain Name",
        "description": "Domain name of the Passpoint service provider.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EAPClientConfiguration": {
        "title": "EAP Client Configuration",
        "description": "Specifies 802.1x EAP authentication parameters.",
        "type": {
          "dictionary": {
            "AcceptEAPTypes": {
              "title": "Accept EAP Types",
              "description": "The EAP types accepted.",
              "type": {
                "array": [
                  "integer"
                ]
              }
            },
            "EAPFASTProvisionPAC": {
              "title": "Provision PAC",
              "description": "If set, allows PAC provisioning.",
              "type": "boolean"
            },
            "EAPFASTProvisionPACAnonymously": {
              "title": "Provision PAC Anonymously",
              "description": "If set, provisions the device anonymously. Note that there are known man-in-the-middle attacks for anonymous provisioning.",
              "type": "boolean"
            },
            "EAPFASTUsePAC": {
              "title": "Use PAC",
              "description": "If set, the device will use an existing PAC if it's present. Otherwise the server must present its identity using a certificate.",
              "type": "boolean"
            },
            "EAPSIMNumberOfRANDs": {
              "title": "Number of RANDs",
              "description": "The minimum number of RAND values accepted from the server. 3 is the default, and 2 is allowed, but offers less security.",
              "type": "integer"
            },
            "OneTimeUserPassword": {
              "title": "Per-Connection Password",
              "description": "If set, the user will be prompted for a password each time they connect to the network.",
              "type": "boolean"
            },
            "OuterIdentity": {
              "title": "Outer Identity",
              "description": "Externally visible identification (for TTLS, PEAP, and EAP-FAST). This string is used instead of the user's identity outside the encrypted tunnel. This value can be used to mask the true identity of the person using the network.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "PayloadCertificateAnchorUUID": {
              "title": "Certificate Anchor UUID",
              "description": "Array of UUIDs corresponding to the trusted certificates for this authentication.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "SystemModeCredentialsSource": {
              "title": "System Profile Credentials Source",
              "description": "Use an alternate set of credentials when in System mode (AKA not a loginwindow profile). This can be used to tell EAPOLClient to use the computer password in a bound active directory scenario for authentication.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "SystemModeUseOpenDirectoryCredentials": {
              "title": "Use OpenDirectory System Profile Credentials",
              "description": "This indicates if the connection should try to use the OpenDirectory machine credentials.",
              "type": "boolean"
            },
            "TLSAllowTrustExceptions": {
              "title": "Allow Trust Exceptions",
              "description": "Allows a dynamic trust decision by the user.",
              "type": "boolean"
            },
            "TLSCertificateIsRequired": {
              "title": "TLSCertificateIsRequired",
              "description": "If 'true', allows for two-factor authentication for EAP-TTLS, PEAP, or EAP-FAST. If 'false', allows for zero-factor authentication for EAP-TLS.\nIf you don't specify a value, the default is 'true' for EAP-TLS, and 'false' for other EAP types.",
              "type": "boolean"
            },
            "TLSMaximumVersion": {
              "title": "TLS Maximum Version",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSMinimumVersion": {
              "title": "TLS Minimum Version",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "TLSTrustedCertificates": {
              "title": "TLS Trusted Certificates",
              "description": "An array of trusted certificates. Each entry in the array must contain certificate data that represents an anchor certificate used for verifying the server certificate.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "TLSTrustedServerNames": {
              "title": "Trusted Server Certificate Names",
              "description": "Certificate Common Names expected from authentication server. The wildcard * can be used to match a range of strings.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "TTLSInnerAuthentication": {
              "title": "Inner Authentication",
              "description": "Specifies the inner authentication used by the TTLS module.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserName": {
              "title": "Username",
              "description": "Username. If not provided, the user may be prompted during login.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UserPassword": {
              "title": "Password",
              "description": "Password. If not provided, the user may be prompted during login.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "EnableIPv6": {
        "title": "Enable IPv6",
        "description": "If 'true', enables IPv6 on this interface.",
        "type": "boolean"
      },
      "EncryptionType": {
        "title": "Encryption Type",
        "description": "Wireless network encryption to use when connecting. The None value is available in iOS 5.0 and later and the WPA2 value is available in iOS 8.0 and later",
        "type": {
          "string": {
            "rangeList": [
              [
                "None",
                "None"
              ],
              [
                "WEP",
                "WEP"
              ],
              [
                "WPA",
                "WPA and WPA2"
              ],
              [
                "WPA2",
                "WPA2 and WPA3"
              ],
              [
                "WPA3",
                "WPA3"
              ],
              [
                "Any",
                "Any"
              ]
            ]
          }
        }
      },
      "HIDDEN_NETWORK": {
        "title": "Hidden Network",
        "description": "Specify whether the network that the device connects to is broadcasting its identity.",
        "type": "boolean"
      },
      "Interface": {
        "title": "Interface",
        "description": "The wireless interface to use",
        "type": {
          "string": {
            "rangeList": [
              [
                "AnyEthernet",
                "Any Ethernet"
              ],
              [
                "FirstEthernet",
                "First Ethernet"
              ],
              [
                "FirstActiveEthernet",
                "First Active Ethernet"
              ],
              [
                "SecondEthernet",
                "Second Ethernet"
              ],
              [
                "SecondActiveEthernet",
                "Second Active Ethernet"
              ],
              [
                "ThirdEthernet",
                "Third Ethernet"
              ],
              [
                "ThirdActiveEthernet",
                "Third Active Ethernet"
              ]
            ]
          }
        }
      },
      "IsHotspot": {
        "title": "Is Hotspot",
        "description": "If the network should be treated as a Legacy Hotspot or Passpoint network.",
        "type": "boolean"
      },
      "MCCAndMNCs": {
        "title": "MCC/MNCs",
        "description": "HotSpot 2.0 MCC/MNCs.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NAIRealmNames": {
        "title": "Realm Names",
        "description": "Enter the known NAI realm names.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PFC_InterfaceSelector": {
        "title": "Network Interface",
        "description": "Type of network interface on the device.",
        "type": {
          "string": {
            "rangeList": [
              [
                "BuiltInWireless",
                "Wi-Fi"
              ],
              [
                "Hotspot",
                "Legacy Hotspot"
              ],
              [
                "Hotspot2",
                "Passpoint"
              ]
            ]
          }
        }
      },
      "Password": {
        "title": "Password",
        "description": "Specifies the password for the access point.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PayloadCertificateUUID": {
        "title": "Certificate UUID",
        "description": "UUID of the certificate payload containing an identity used as the client credential.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyPACFallbackAllowed": {
        "title": "Proxy PAC Fallback",
        "description": "Enable to allow direct connection if PAC is unreachable",
        "type": "boolean"
      },
      "ProxyPACURL": {
        "title": "Proxy PAC URL",
        "description": "URL used to receive proxy settings. If no URL is specified, the device uses the web proxy autodiscovery protocol (WPAD) to discover proxies",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyPassword": {
        "title": "Proxy Password",
        "description": "The password for the manual proxy connection.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyServer": {
        "title": "Proxy Server",
        "description": "The hostname of the proxy server.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyServerPort": {
        "title": "Proxy Server Port",
        "description": "The port used to connect to the proxy server.",
        "type": "integer"
      },
      "ProxyType": {
        "title": "Proxy Type",
        "description": "The type of proxy configuration to use for this wireless connection.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyUsername": {
        "title": "Proxy Username",
        "description": "The user name for the manual proxy connection.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "QoSMarkingPolicy": {
        "title": "QoS Marking Policy",
        "description": "Restrict fast lane QoS marking.",
        "type": {
          "dictionary": {
            "QoSMarkingAllowListAppIdentifiers": {
              "title": "Allow List App Identifiers",
              "description": "Add specific apps to an allow list for QoS marking.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "QoSMarkingAppleAudioVideoCalls": {
              "title": "QoS marking for audio/video calls",
              "description": "Enable QoS for WiFi Calling, FaceTime, SMS, etc.",
              "type": "boolean"
            },
            "QoSMarkingEnabled": {
              "title": "Allow QoS marking",
              "description": "Enable any kind of QoS marking.",
              "type": "boolean"
            },
            "QoSMarkingWhitelistedAppIdentifiers": {
              "title": "Allowlisted App Identifiers",
              "description": "Add specific apps to an allow list for QoS marking.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "RoamingConsortiumOIs": {
        "title": "Roaming OIs",
        "description": "Enter a series of digits corresponding to one of the service provider's Passpoint network.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "SSID_STR": {
        "title": "Service Set Identifier (SSID)",
        "description": "Displayed name of the wireless network",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ServiceProviderRoamingEnabled": {
        "title": "Connect to roaming partner Passpoint networks",
        "description": "Specify whether to connect to additional Passpoint networks pre-approved by the service provider.",
        "type": "boolean"
      },
      "SetupModes": {
        "title": "EAP Setup Modes",
        "description": "Select \"Login Window\" to authenticate the Mac to the network when the user logs in.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "System",
                    "System"
                  ],
                  [
                    "Loginwindow",
                    "Login Window"
                  ]
                ]
              }
            }
          ]
        }
      },
      "TLSCertificateRequired": {
        "title": "Certificate Required",
        "description": "If set, force a non-default authentication method. (if YES, uses certificate from PayloadCertificateUUID).",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.apple.xsan": {
    "title": "Xsan",
    "description": "Xsan settings",
    "properties": {
      "fsnameservers": {
        "title": "File system name servers",
        "description": "The IP address or fully qualified domain name (FQDN) of each Xsan file server.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "sanAuthMethod": {
        "title": "Authentication method",
        "description": "",
        "type": {
          "string": {
            "rangeList": [
              [
                "auth_secret",
                "Shared Secret"
              ]
            ]
          }
        }
      },
      "sanName": {
        "title": "Xsan name",
        "description": "The name of the Xsan network.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "sharedSecret": {
        "title": "Authentication secret",
        "description": "The secret credential used to join the Xsan network.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.apple.xsan.preferences": {
    "title": "Xsan Preferences",
    "description": "Xsan Preference settings",
    "properties": {
      "denyDLC": {
        "title": "Deny DLC",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "denyMount": {
        "title": "Deny Mount",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "onlyMount": {
        "title": "Only Mount",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "preferDLC": {
        "title": "Prefer DLC",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "useDLC": {
        "title": "Use Distributed LAN Client (DLC)",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.barebones.bbedit": {
    "title": "BBEdit",
    "description": "BBEdit settings",
    "properties": {
      "AllowShiftRightToIndentWhitespaceOnlyLines": {
        "title": "Allow Shift Right to Indent Whitespace Only Lines",
        "description": "By default, the \"Shift Right\" command on the Text menu will not add indentation to lines that are empty or consist entirely of white space. If you would prefer to indent every line, regardless of its whitespace-only nature, set this preference to 'true'.",
        "type": "boolean"
      },
      "AllowVolumeMountDuringStateRestore": {
        "title": "Allow Volume Mount During State Restore",
        "description": "BBEdit provides control over whether documents on remote servers - FTP/SFTP - or unmounted volumes are opened when automatically reopening documents at application startup. You can modify its behavior by setting this to 'true'.",
        "type": "boolean"
      },
      "AlwaysUseSystemAppearanceForTitleBar": {
        "title": "AlwaysUseSystemAppearanceForTitleBar",
        "description": "BBEdit will use a light or dark (system-defined) appearance for the window title bar, appropriate to the color scheme. If you would prefer that BBEdit always use the system standard - light - appearance, set this preference to 'true'.",
        "type": "boolean"
      },
      "AskForUnguessableFileEncoding": {
        "title": "AskForUnguessableFileEncoding",
        "description": "Ordinarily, BBEdit will only ask you to choose a file's encoding when it can't otherwise figure out what the encoding is, and your \"if the file's encoding can't be guessed\" preference is a UTF-8 or UTF-16 variant. This should be fine for general use, but if for some reason you always want BBEdit to ask you when it can't guess a file's encoding, even if your preference would do the job, you can set this to 'true'.",
        "type": "boolean"
      },
      "AskXcodeForOpenFileByName": {
        "title": "Ask XCode to Open File by Name",
        "description": "If Xcode is running, Open Selection and Open File by Name will ask it for a path to the file name; if something useful comes back, BBEdit will open it. If for some reason you are using Xcode but don't want BBEdit to do this, you can turn it off by setting this to 'false'.",
        "type": "boolean"
      },
      "AutoRevealSelectedDocumentInProjectList": {
        "title": "AutoRevealSelectedDocumentInProjectList",
        "description": "BBEdit will not automatically reveal documents in the project list when you select them;  View => Reveal in Project List works for this purpose. If you want automatic revealing, set to this to 'true'",
        "type": "boolean"
      },
      "AutoSaveIntervalInMinutes_v2": {
        "title": "AutoSave Interval",
        "description": "If document auto-save for crash recovery is on, this preference will define the default save time interval.",
        "type": "integer"
      },
      "BBEditRegisteredOwner:11.0": {
        "title": "BBEdit Registered Owner v11",
        "description": "Organization registered to BBEdit 11 license.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BBEditRegisteredOwner:12.0": {
        "title": "BBEdit Registered Owner v12",
        "description": "Organization registered to BBEdit 12 license.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BBEditRegisteredOwner:13.0": {
        "title": "BBEdit Registered Owner v13",
        "description": "Organization registered to BBEdit 13 license.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BBEditRegisteredOwner:14.0": {
        "title": "BBEdit Registered Owner v14",
        "description": "Organization registered to BBEdit 14 license.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BBEditSerialNumber:11.0": {
        "title": "BBEdit License v11",
        "description": "BBEdit 11 license.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BBEditSerialNumber:12.0": {
        "title": "BBEdit License v12",
        "description": "BBEdit 12 license.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BBEditSerialNumber:13.0": {
        "title": "BBEdit License v13",
        "description": "BBEdit 13 license.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BBEditSerialNumber:14.0": {
        "title": "BBEdit License v14",
        "description": "BBEdit 14 license.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BRIEFStateTimeout": {
        "title": "Brief State Timeout",
        "description": "The progressive (BRIEF compatible) behavior of the Home and End keys operates within a specific time period; if you wait longer than that, the behavior state resets. The factory default timeout period is ten seconds.",
        "type": "real"
      },
      "BalanceIncludesDelimiters": {
        "title": "Balance Includes Delimiters",
        "description": "By default, the \"Balance\" command (or double-clicking on a delimiter to balance) does not include the delimiters in the resulting selection. If you would like for it to do so, set this preference to 'true'.",
        "type": "boolean"
      },
      "CloseOFBNWindowAfterOpeningSelection": {
        "title": "CloseOFBNWindowAfterOpeningSelection",
        "description": "By default, the \"Open File by Name\" window stays open when you click the \"Open\" button. However, if you would prefer for it to act more like a modal dialog, set this to 'true'.",
        "type": "boolean"
      },
      "CommentWholeLineWithInsertionPoint": {
        "title": "Comment Whole Line with Insertion Point",
        "description": "When using the Un/Comment command, if nothing is selected, BBEdit will use the line comment delimiter to comment (or uncomment) the entire line. If you would prefer that BBEdit insert the line-comment delimiter at the insertion point instead, set this preference to 'false'.",
        "type": "boolean"
      },
      "CounterpartSiblingSearchNames": {
        "title": "CounterpartSiblingSearchNames",
        "description": "When the active document is either a source or a header file, the \"Open Counterpart\" command will now search the siblings of this file's parent for eligible counterparts. By default, BBEdit will only search in such folders if their names match one of the following patterns (including wildcards): `inc*`, `source`, `src`, or `*priv*`. If you wish to add additional qualifying names, you may do so by setting \"CounterpartSiblingSearchNames\" to contain a comma-delimited list of folder name patterns.\n\nAny whitespace surrounding the provided names will be stripped.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultLanguageNameForNewDocuments": {
        "title": "Default Language for New Documents",
        "description": "If you like, you can set the default language for new untitled documents.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Diff_IgnoreRCSKeywords": {
        "title": "Ignore RCS Keywords",
        "description": "When comparing text files, BBEdit will canonicalize RCS keywords to their unexpanded state, so that the values of RCS keywords are not significant to the differences calculations. If you wish, you can disable this, so that any chance in the RCS keywords on a line will cause the line to appear in the differences.",
        "type": "boolean"
      },
      "DisableCtagsScanOnRemoteVolumes": {
        "title": "Disable Ctags Scan on Remote Volumes",
        "description": "When editing files that are on remote file servers - AFP, NFS, SMB, etc. -, BBEdit will not look for directory-relative ctags data files. This is a particular performance win when the file is located on a volume mounted via MacFUSE/SSH or similar, or if the file server is over a slow or high-latency link.\n\nTo enable scanning for tags files on remote volumes, set this to 'false'.",
        "type": "boolean"
      },
      "DisablePassiveFTP": {
        "title": "Disable Passive FTP",
        "description": "Settings are available for disabling passive FTP, in order to deal with hosts that misbehave when sent the PASV command.\n\nPassive FTP can be disabled per host, per domain, or globally.",
        "type": "boolean"
      },
      "Editor_AlwaysOpenQuickFind": {
        "title": "Always Open Quick Find",
        "description": "The Live Search bar is not visible by default, but appears when you choose \"Live Search\" from the Search menu. If you would like the Live Search bar to be visible in each new document that you create or open, set this to 'true'.",
        "type": "boolean"
      },
      "Editor_AutoWordCountSizeThreshold": {
        "title": "Auto Word Count Size Threshold",
        "description": "Automatic word counting is disabled for documents over a set size threshold, in order to avoid needless delays when working on very large documents. The factory default is 16M characters - 16777216 -, but you may change this limit. Setting to 0 disables the limit check entirely.",
        "type": "integer"
      },
      "Editor_ControlArrowCamelCase": {
        "title": "Control Arrow Camel Case",
        "description": "BBEdit supports \"camel case\" navigation: press Control-left-arrow or Control-right-arrow to jump to the next (or previous) transition from lower-case to upper-case characters (or a word boundary, whichever comes first).\n\nNote that this use of Control-left-arrow and Control-right-arrow replaces the pre-8.5 behavior of using these key combinations to scroll horizontally. If you prefer the old behavior, set these this preference to 'false'.",
        "type": "boolean"
      },
      "Editor_ControlArrowHScroll": {
        "title": "Control Arrow Horizontal Scroll",
        "description": "BBEdit supports \"camel case\" navigation: press Control-left-arrow or Control-right-arrow to jump to the next (or previous) transition from lower-case to upper-case characters (or a word boundary, whichever comes first).\n\nNote that this use of Control-left-arrow and Control-right-arrow replaces the pre-8.5 behavior of using these key combinations to scroll horizontally. If you prefer the old behavior, set these this preference to 'true'.",
        "type": "boolean"
      },
      "Editor_DeleteIndentationWhitespaceToTabStop": {
        "title": "Delete Indentation Whitespace to Tab Stop",
        "description": "When you backspace from the insertion point, BBEdit will delete a tab stop's worth of spaces if there are only spaces (and tabs) between the insertion point and the start of the line on which you're editing. This may be disabled by setting this preference to 'false'.",
        "type": "boolean"
      },
      "Editor_SpellCheckLengthLimit": {
        "title": "Spell Check Length Limit",
        "description": "Since \"Find All Misspelled Words\" is pretty much pointless on files over a certain size, the maximum amount of text checked by this command is limited to 1M - 1024 squared - characters. This may be adjusted. Setting to 0 supresses the limit altogether.",
        "type": "integer"
      },
      "EnableAutoSave_v2": {
        "title": "Enable AutoSave",
        "description": "Document auto-save for crash recovery is on by default, to change this set this to 'false'.",
        "type": "boolean"
      },
      "EnableSSHCompression": {
        "title": "Enable SSH Compression",
        "description": "Some servers don't work correctly when SSH compression is enabled. To work around this, SSH compression can be disabled per host, per domain, or globally.",
        "type": "boolean"
      },
      "FTPShowParentDir": {
        "title": "Show FTP Parent Directories",
        "description": "On FTP servers, when using 'Show items starting with \".\",' the FTP server may return the `.` and `..` items as part of the listing. This is normal, but if you don't want to see these items, you can hide them.",
        "type": "boolean"
      },
      "FindAndReplaceHistorySize": {
        "title": "Find & Replace History Size",
        "description": "By default, BBEdit will remember the 16 most recent search and replace strings/patterns for the popup menu in the Find and Multi-File Search windows. Setting the history to zero makes it infinite.",
        "type": "integer"
      },
      "FindDialog_UsesFindScrap": {
        "title": "Use Find Scrap",
        "description": "Like many Mac OS X applications, BBEdit supports the \"Find Scrap\", a feature of the OS that enables sharing of the \"search for\" string between applications. Some applications put inappropriate content - such as Web search strings - on the Find Scrap, which can cause the \"search for\" string in BBEdit's Find dialog to be replaced when you didn't expect it.\n\nTo tell BBEdit not to import the Find Scrap into its Find window, nor to export the \"search for\" string to the Find Scrap, set this to 'false'.",
        "type": "boolean"
      },
      "FixedWidthFontSmoothingThreshold": {
        "title": "Fixed Width Font Smoothing Threshold",
        "description": "Whether or not BBEdit uses text smoothing - antialiasing - may be adjusted separately for fixed-width and for proportional fonts. The factory default smoothing thresholds are 8pt for fixed width fonts, and 4pt for proportional fonts, respectively.",
        "type": "integer"
      },
      "FlashBalancePointsWhenNavigating": {
        "title": "Flash Balance Points When Navigating",
        "description": "When you use the right-arrow key to navigate over a closing delimiter (right paren/brace/bracket/curly quote), the opening delimiter will be briefly highlighted. If you wish to turn this off, set this preference to 'false'.",
        "type": "boolean"
      },
      "FontSmoothingThreshold": {
        "title": "Font Smoothing Threshold",
        "description": "Whether or not BBEdit uses text smoothing - antialiasing - may be adjusted separately for fixed-width and for proportional fonts. Font sizes above the specified FixedWidthFontSmoothingThreshold are smoothed; font sizes below the threshold are not.",
        "type": "integer"
      },
      "FullScreenWidthThreshold": {
        "title": "Full Screen Width Threshold",
        "description": "When entering full screen mode, the application figures out whether the window width should be increased to take up the full screen width, or not, based on the width of the window relative to the width of the screen that it's on. The threshold at which the window is made to take up the entire screen width can be set. This setting requires that FullScreenWindowsHogScreen be turned on\nNEED FLOAT NUMBER MIN & MAX",
        "type": "real"
      },
      "FullScreenWindowsHogScreen": {
        "title": "Full Screen Windows Hog Screen",
        "description": "By default, the application will allow windows to take up the entire screen when entering full screen mode. If desired, you may prevent this and instruct the application to figure out whether a window should be made the full width of the screen by setting this to 'false'.",
        "type": "boolean"
      },
      "GitToolPathOverride": {
        "title": "Git Path Override",
        "description": "BBEdit will ordinarily select the appropriate command-line tool for communicating with the SCM system, based on your $PATH environment variable. If you find that an undesired command-line tool is running within BBEdit but the desired tool is being invoked from a Terminal command line, examine your tool installation and $PATH setup for errors.\n\nHowever, for specific cases in which it is necessary to force BBEdit to use a particular tool, you may do by specifying the path.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HTMLImageMarkupCreatesSizeAttributes": {
        "title": "HTML Image Markup with Image Tags",
        "description": "When you drop an image file into an HTML document to generate an image tag, BBEdit will generate \"width\" and \"height\" tags based on information in the file itself. If you would prefer to omit these, set these to 'false'.",
        "type": "boolean"
      },
      "HTMLImageMarkupUseInlineStyleForImageSize": {
        "title": "HTML Image Markup Inline Styles",
        "description": "If HTMLImageMarkupCreatesSizeAttributes is turned on, you can instruct BBEdit to generate inline styles for image sizes, instead of height and width by setting this to 'true'.",
        "type": "boolean"
      },
      "HTMLImageMarkupUsesFileNameForAlt": {
        "title": "Undo Selection (Legacy)",
        "description": "When generating image markup as a result of dropping an image file into an HTML document, BBEdit will generate an \"alt\" attribute for the image tag, whose value is the file's name. If you would prefer for the \"alt\" attribute to be omitted (which will result in an error when checking syntax), you can disable this by setting this to 'false'.",
        "type": "boolean"
      },
      "LegacyUndoSelectionBehavior": {
        "title": "Undo Selection (Legacy)",
        "description": "When performing an Undo or Redo and the selection range changes, the Undo/Redo operation will select the affected text, rather than updating the Undo/Redo state to include the actual current selection range. If however you prefer the classic behavior (as implemented from the beginning of time up through BBEdit 11.6), you may obtain set this preference to 'true'.",
        "type": "boolean"
      },
      "MarkupPanelAutoPrefillRecommendedAttributeNames": {
        "title": "Prefill Recommended Attribute Names in Markup",
        "description": "When you invoke the Markup Panel to create a new tag, it will automatically fill in attribute names for \"promoted\" attributes. If there are any attributes that you don't want to be present in the generated markup, just leave their values blank, and the panel will omit them (unless the attributes are required).\n\nIf you wish, you can suppress the auto fill by setting this to 'false'.\n\nTurning off the auto fill will cause the \"gear\" to appear in the markup panel, and clicking it will manually fill in the promoted attributes for you.",
        "type": "boolean"
      },
      "MarkupToolsMisc_SkipXMLFilesWhenScanningFolders": {
        "title": "Skip XML Files When Scanning Folders",
        "description": "When doing Check Syntax, Check Links, Update, or Update Images on a folder (including a web site), BBEdit will skip XML files (that is, files determined to be XML either by mapping their file name extensions, or by inspection of their contents). If you prefer to include such files, set this to 'false'.",
        "type": "boolean"
      },
      "MaxDocumentLengthForCompletionTokenizer": {
        "title": "Misspelled Word Character Limit",
        "description": "Since \"Find All Misspelled Words\" is pretty much pointless on files over a certain size, the maximum amount of text checked by this command is limited to 1M - 1024 squared - characters. This may be adjusted. Setting to 0 supresses the limit altogether.",
        "type": "integer"
      },
      "MostRecentItemsGroupLimit": {
        "title": "Most recent items group limit",
        "description": "The \"Remember the … most recently used items\" setting in the Application preferences applies to all item types. So, if it's set to 15, BBEdit will remember 15 text documents, 15 folders, 15 projects, 15 images, and so on. If you want finer control, you can construct an expert pref using the name of the document type as it appears in the menu, and if that name contains spaces, you'll need to quote it.\n\nYou can also control the number of items shown in the \"Most Recently Used\" group.",
        "type": "integer"
      },
      "MoveModelessWindowsToActiveSpace": {
        "title": "Move All Window types to active space",
        "description": "When using Spaces, you can control whether BBEdit's modeless dialog boxes - Find, Multi-File Search, and Open File by Name - get moved to the active space when switching spaces. By default, this is allowed for the Find, Multi-File Search, and Open File by Name windows. To control whether windows of these types are moved to the active space, set this to 'true'.\n\nThis preference sets the default behavior for any of the defined window types for which a default is not explicitly specified.",
        "type": "boolean"
      },
      "MoveModelessWindowsToActiveSpace_FindWindow": {
        "title": "Move Find Window to Active Space",
        "description": "When using Spaces, you can control whether BBEdit's modeless dialog boxes - Find, Multi-File Search, and Open File by Name - get moved to the active space when switching spaces. By default, this is allowed for the Find, Multi-File Search, and Open File by Name windows. To control whether windows of these types are moved to the active space, set this to 'true'.",
        "type": "boolean"
      },
      "MoveModelessWindowsToActiveSpace_MultiFileFindWindow": {
        "title": "Move Multi-File Find Window to Active Space",
        "description": "When using Spaces, you can control whether BBEdit's modeless dialog boxes - Find, Multi-File Search, and Open File by Name - get moved to the active space when switching spaces. By default, this is allowed for the Find, Multi-File Search, and Open File by Name windows. To control whether windows of these types are moved to the active space, set this to 'true'.",
        "type": "boolean"
      },
      "MoveModelessWindowsToActiveSpace_OpenFileByNameWindow": {
        "title": "Move Open File by Name Window to active space",
        "description": "When using Spaces, you can control whether BBEdit's modeless dialog boxes - Find, Multi-File Search, and Open File by Name - get moved to the active space when switching spaces. By default, this is allowed for the Find, Multi-File Search, and Open File by Name windows. To control whether windows of these types are moved to the active space, set this to 'true'.",
        "type": "boolean"
      },
      "NSRecentDocumentsLimit:Folders": {
        "title": "Recent Folders # Limit",
        "description": "The \"Remember the … most recently used items\" setting in the Application preferences applies to all item types. So, if it's set to 15, BBEdit will remember 15 text documents, 15 folders, 15 projects, 15 images, and so on. If you want finer control, you can construct an expert pref using the name of the document type as it appears in the menu, and if that name contains spaces, you'll need to quote it.\n\nIf you don't want to remember any recent documents of a particular type - they won't appear in the menu, either -, you can set its limit to 0",
        "type": "integer"
      },
      "NSRecentDocumentsLimit:Images": {
        "title": "Recent Images # Limit",
        "description": "The \"Remember the … most recently used items\" setting in the Application preferences applies to all item types. So, if it's set to 15, BBEdit will remember 15 text documents, 15 folders, 15 projects, 15 images, and so on. If you want finer control, you can construct an expert pref using the name of the document type as it appears in the menu, and if that name contains spaces, you'll need to quote it.\n\nIf you don't want to remember any recent documents of a particular type - they won't appear in the menu, either -, you can set its limit to 0",
        "type": "integer"
      },
      "NSRecentDocumentsLimit:Projects": {
        "title": "Recent Projects Limit",
        "description": "The \"Remember the … most recently used items\" setting in the Application preferences applies to all item types. So, if it's set to 15, BBEdit will remember 15 text documents, 15 folders, 15 projects, 15 images, and so on. If you want finer control, you can construct an expert pref using the name of the document type as it appears in the menu, and if that name contains spaces, you'll need to quote it.\n\nIf you don't want to remember any recent documents of a particular type - they won't appear in the menu, either -, you can set its limit to 0",
        "type": "integer"
      },
      "OpenByNameMaxWildcardMatches": {
        "title": "Open by Name Max Wilcard Matches",
        "description": "When searching for matches, Open File by Name limits the number of matches to a reasonable maximum. The factory default is 200.",
        "type": "integer"
      },
      "OpenPDFsAsText": {
        "title": "OpenPDFsAsText",
        "description": "By default, PDFs are considered text files and so may be opened and searched along with all other text files. To have PDFs treated as a special file type - (they will be ignored for any operation that requires a text file - set this to 'false'.",
        "type": "boolean"
      },
      "OpenPanelShowsFrontDocumentDirectory": {
        "title": "Open Panel Shows Active Document Directory",
        "description": "By default, the Open panel implements the standard system behavior of displaying the same folder that was viewed the last time you used the Open command. If you wish, you may instead have the Open panel display the directory containing the active document by setting this to 'true'.\n\nIf the active document is untitled or was opened from an FTP/SFTP server, or if there are no documents open, the Open panel will show you the last-used directory.",
        "type": "boolean"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_ExpertPrefs": {
        "title": "PFC_SegmentedControl_ExpertPrefs",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PrecomposeUnicodeWhenPasting": {
        "title": "Precompose Unicode When Pasting",
        "description": "If you find that you frequently need to bring in text which contains combining Unicode characters (as are frequently found in PDFs generated on other platforms, for example), it can be desirable to preprocess the combining characters into one composed character where possible. This is not a general need, but if you run into it often enough, you can tell BBEdit to combine the characters for you by setting this preference to 'true'.\nDespite the name, the precomposition is done when BBEdit imports the Clipboard from other applications, not when the paste is actually done.\n\nNote that this requires an additional copy of the Clipboard when the application imports the text, and for very large pastes, there may be a noticeable delay while the text gets precomposed. Thus, you should only turn on this setting when you are frequently working with text that contains combining Unicode characters",
        "type": "boolean"
      },
      "ProjectsListCanAcquireKeyboardFocus": {
        "title": "ProjectsListCanAcquireKeyboardFocus",
        "description": "In project windows, the file list does not accept keyboard focus by default, unless the editing view is hidden. You can modify this so that the file list gets the focus whenever you click on it, set this to 'true'.",
        "type": "boolean"
      },
      "ProjectsOpenItemsOnSingleClick": {
        "title": "ProjectsOpenItemsOnSingleClick",
        "description": "Project windows will ordinarily open an item in the file list for editing when you click on it and the editing view is visible. To require a double-click, set this to 'false'.",
        "type": "boolean"
      },
      "PromptToReopenRemoteDocuments": {
        "title": "Prompt to Reopen Remote Documents",
        "description": "If set to 'false', BBEdit will not attempt to open any documents that were opened from FTP/SFTP servers. Defaults to 'true'.  If set to 'false', BBEdit will open remote documents without asking, if ReopenRemoteDocuments is set to 'true'.",
        "type": "boolean"
      },
      "QuickTimeImages": {
        "title": "QuickTimeImages",
        "description": "BBEdit ordinarily recognizes image files as images, and will open them into image windows (or ignore them when filtering for text files). To have images possibly treated as text files, which can be potentially dangerous, set this to 'false'.",
        "type": "boolean"
      },
      "RecentItems_RememberTempFiles": {
        "title": "Remember Temp Files",
        "description": "By default, BBEdit does not remember recent items opened from any of the canonical locations for temporary files. This also includes the \"svn-commit.tmp\" files used for Subversion commits. If desired, you can change this by setting this to 'true'.",
        "type": "boolean"
      },
      "ReopenRemoteDocuments": {
        "title": "Reopen Remote Documents",
        "description": "If set to 'true', BBEdit will attempt to mount a volume containing a document it wants to reopen. Defaults to 'false'.",
        "type": "boolean"
      },
      "ReplaceAllResultsIncludeTiming": {
        "title": "Replace All w/ Timing",
        "description": "If you want to amaze and impress your friends and family with just how fast BBEdit's \"Replace All\" is, set this to 'true'.\n\nWhen set to 'true', the sheet, or growl notification, will display the amount of time required for the \"Replace All\" operation.",
        "type": "boolean"
      },
      "ReportReplaceAllResults": {
        "title": "Replace All Confirmation",
        "description": "When performing a single-file \"Replace All\" operation, BBEdit can show a confirmation sheet showing the number of replacements performed. If you would like to see this confirmation, set this to 'true'.",
        "type": "boolean"
      },
      "SFTPConnectionTimeout": {
        "title": "SFTP Connection Timeout",
        "description": "Most of the time, the default timeout for connecting to an SFTP server will suffice; however, if the server is heavily loaded it may take longer to respond.",
        "type": "integer"
      },
      "SSHServerKeepaliveInterval": {
        "title": "SSH Server Keepalive Interval",
        "description": "If you have problems with your SSH server closing the connection after a period of non-use (which will subsequently cause errors in BBEdit), you can tell BBEdit to send a periodic \"keepalive\" message to while connected to the server.\n\nThis is configurable per host, per domain, or globally. Determining the appropriate value may require some experimentation, but 90 seconds is probably a good starting point.",
        "type": "integer"
      },
      "SUAllowsAutomaticUpdates": {
        "title": "Automatic Update Install Prompt",
        "description": "Controls the automatic update install prompt. When enabled, presents users with the option to allow automatic download and install of available updates. If disabled, disallows automatic updates and requires manual installation every time.",
        "type": "boolean"
      },
      "SUAutomaticallyUpdate": {
        "title": "Enable Automatic Silent Updates",
        "description": "Controls automatic silent updates. If enabled, users will not be informed about updates and updates will be silently installed when the app quits.",
        "type": "boolean"
      },
      "SUEnableAutomaticChecks": {
        "title": "Enable Automatic Update Checks",
        "description": "Controls automatic update checks.",
        "type": "boolean"
      },
      "SUFeedURL": {
        "title": "Sparkle Feed URL",
        "description": "Setting this to a non-existent URL will disable the ability for users to manually check for updates. Useful when you intend to use your own software distribution mechanism to deploy updates.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SUScheduledCheckInterval": {
        "title": "Automatic Update Check Interval",
        "description": "Controls the automatic update check interval. The default is 1 day (86400 seconds). Setting to 0 disables updates.",
        "type": "integer"
      },
      "SaveDocumentStateForTempFiles": {
        "title": "SaveDocumentStateForTempFiles",
        "description": "By default, BBEdit will not store document state for documents located in any of the canonical locations for temporary files. This also includes the \"svn-commit.tmp\" files used for Subversion commits. If you wish, you can change this by setting this to 'true'.",
        "type": "boolean"
      },
      "SaveTitledDocumentsBeforeSleeping": {
        "title": "Save Titled Documents Before Sleeping",
        "description": "The \"Sleep\" command does not save any documents in place, since it creates an auto-save file for any open documents with unsaved changes. However, if you want BBEdit to save any titled - i.e. opened from an existing file - documents to disk before sleeping, you can set this preference to 'true'.",
        "type": "boolean"
      },
      "ScriptEditorBundleID": {
        "title": "Preferred Script Editor BundleID",
        "description": "By default, BBEdit will open AppleScript files using whatever application the OS claims is capable of doing so. If you wish to override this, change the \"ScriptEditorBundleID\" preference to the bundle ID of your preferred script editor.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ShowFullPathsInSearchResults": {
        "title": "Show Full Paths in Search Results",
        "description": "If you like BBEdit to show the full paths of files listed in search results windows, set this to 'true'.",
        "type": "boolean"
      },
      "ShowIconsInSidebarLists": {
        "title": "Show Icons in Sidebar Lists",
        "description": "When displaying file names in the sidebars of disk browsers, projects, and multi-document editing windows, BBEdit will include the item's icon, as reported by the system. If you would prefer to suppress the icon, which allows a few more items to be displayed in the same amount of vertical space, set this preference to 'false'.",
        "type": "boolean"
      },
      "ShowSVNSwitchedItems": {
        "title": "ShowSVNSwitchedItems",
        "description": "\"Show Working Copy Status\" for svn does not include switched items. If this affects you and you would prefer to see switched items, you may make them visibile by setting this to 'true'.",
        "type": "boolean"
      },
      "SkipSCMAdminDirsWhenScanningFolders": {
        "title": "Skip SCM Admin Directories When Scanning Folders",
        "description": "When scanning folders for various purposes - multi-file search, Find differences, and others -, SCM administrative directories are specifically ignored, even if \"Search Invisible Folders\" is turned on: CVS, .svn, .git, .hg, .bzr. This avoids potential disasters that can result from indiscriminate search and replace in such directories. If, however, you choose to live dangerously, you can allow BBEdit to see inside of these directories by setting this to 'false'.",
        "type": "boolean"
      },
      "SubversionToolPathOverride": {
        "title": "Subversion Tool Path Override",
        "description": "BBEdit will ordinarily select the appropriate command-line tool for communicating with the SCM system, based on your $PATH environment variable. If you find that an undesired command-line tool is running within BBEdit but the desired tool is being invoked from a Terminal command line, examine your tool installation and $PATH setup for errors.\n\nHowever, for specific cases in which it is necessary to force BBEdit to use a particular tool, you may do so by specifying the path.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SurfNextPreviousInDisplayOrder": {
        "title": "Navigate Documents by File List Order",
        "description": "When using the \"Previous Document\" and \"Next Document\" commands on the View menu, or the navigation arrows in the navigation bar, the order in which BBEdit navigates documents is determined by the order in which they were opened. If you prefer, these commands can be made to navigate the documents in the order shown in the file list by setting this to 'true'.",
        "type": "boolean"
      },
      "TerminalBundleID": {
        "title": "Preferred Terminal BundleID",
        "description": "The \"Run in Terminal\" and \"Go Here in Terminal\" commands will use Apple's \"Terminal\" application by default. If you would like to use a different one, set this here.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UseClippingsForCompletion": {
        "title": "Use Clippings for Completion",
        "description": "If there is a partial word to the immediate left of the insertion point, the \"Insert Clipping...\" command will attempt to autocomplete that word based clipping names in the current and universal set (using a \"begins with\" style match.) If you wish to disable the autocompletion, set this preference to 'false'.",
        "type": "boolean"
      },
      "UseDashForReferenceLookups": {
        "title": "Use Dash for Reference Lookups",
        "description": "If Dash is installed, BBEdit will use it for \"Find in Reference\", in preference to any predefined or custom reference lookup URLs.\n\nYou could, if you wanted, turn off Dash support by default and then enable it for specific languages.",
        "type": "boolean"
      },
      "UseInlineStylesForCopiedHTML": {
        "title": "Use Inline Styles for Copied HTML",
        "description": "The \"Copy as Styled HTML\" and \"Save as Styled HTML\" commands normally generate style information inline. If you want to use an embedded style sheet instead, set this to 'false'.",
        "type": "boolean"
      },
      "UseResourceForkForDocumentState": {
        "title": "UseResourceForkForDocumentState",
        "description": "Beginning with version 8.0, BBEdit stores document state (window position and various settings) in a central repository in your BBEdit preferences folder. If you wish, you can ask BBEdit to store document state in the resource fork of the document's file by setting this to 'true'.",
        "type": "boolean"
      },
      "UseSeparatorsInUnixScriptOutput": {
        "title": "Use Separators in Unix Script Output",
        "description": "Ordinarily, the output from Unix scripts run within BBEdit is delimited with line separators - except when the script output is sent to a new untitled document. If you wish to suppress the separators, you can set this to 'false'.",
        "type": "boolean"
      },
      "UseSystemAppearanceWhenInDarkMode": {
        "title": "Use System Appearance When in Dark Mode",
        "description": "If there is a partial word to the immediate left of the insertion point, the \"Insert Clipping...\" command will attempt to autocomplete that word based clipping names in the current and universal set using a \"begins with\" style match. If you wish to disable the autocompletion, set this preference to 'false'.",
        "type": "boolean"
      },
      "UseTabKeyAsCompletionTrigger": {
        "title": "Use Tab Key as Completion Trigger",
        "description": "To use the Tab key to trigger text completion, set this preference to 'true'.",
        "type": "boolean"
      },
      "UseXMLMarkupRulesForHTML5": {
        "title": "Use XML Markup Rules for HTML5",
        "description": "Ordinarily, BBEdit will generate XHTML-style markup in HTML5 documents (those with a \"<!DOCTYPE HTML>\" declaration). If you wish, you can suppress this by setting this to 'false'.",
        "type": "boolean"
      },
      "WarnMalformedUTF8": {
        "title": "WarnMalformedUTF8",
        "description": "To control whether BBEdit warns you when opening a malformed UTF-8 file, set this to 'true'.",
        "type": "boolean"
      },
      "WriteExtendedAttributes": {
        "title": "WriteExtendedAttributes",
        "description": "By default, BBEdit will avoid writing extended attributes - HFS Type/Creator - to volumes which don't natively support them - i.e. to avoid creating the ._FILE - when it is safe to do so. We'll be able to re-open the document correctly later. If desired, you can fine-tune this behavior.",
        "type": {
          "string": {
            "rangeList": [
              [
                "always",
                "Always write the HFS file type and creator: the pre-8.6 behavior"
              ],
              [
                "never",
                "Never set the HFS file type and creator, even if the document's volume supports it"
              ],
              [
                "smart",
                "Smart: Write HFS file type and creator only if the document's volume supports it"
              ]
            ]
          }
        }
      },
      "ZoomWindowsInPlace": {
        "title": "Zoom Windows in Place",
        "description": "BBEdit attempts to move windows as little as possible when you zoom them. To override this and let BBEdit place the window in the upper left-hand corner of the screen, set this to 'false'.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.brave.Browser": {
    "title": "Brave Browser",
    "description": "Brave Browser Managed Settings",
    "properties": {
      "AbusiveExperienceInterventionEnforce": {
        "title": "Abusive Experience Intervention Enforce",
        "description": "Allows you to set whether sites with abusive experiences should be prevented from opening new windows or tabs.",
        "type": "boolean"
      },
      "AccessibilityImageLabelsEnabled": {
        "title": "Allow accessibility descriptions for Google images",
        "description": "Enable Get Image Descriptions from Google. Enables visually-impaired screen reader users to get descriptions of unlabeled images on the web.",
        "type": "boolean"
      },
      "AdsSettingForIntrusiveAdsSites": {
        "title": "Ads setting for sites with intrusive ads",
        "description": "Allows you to set whether ads should be blocked on sites with intrusive ads.",
        "type": "integer"
      },
      "AdvancedProtectionAllowed": {
        "title": "Enable Advanced Protection",
        "description": "Enable additional protections for users enrolled in the Advanced Protection program.",
        "type": "boolean"
      },
      "AdvancedProtectionDeepScanningEnabled": {
        "title": "Advanced Protection Deep Scanning",
        "description": "This policy controls whether users enrolled in the Advanced Protection program are allowed to send their downloads to Google for malware scanning. If set to True or not set, enrolled users will be be prompted to send their files to Google for deep scanning. If the user selects 'Scan', their download will be sent to Google. If set to False, users will not be prompted and their downloads will not be sent to Google.",
        "type": "boolean"
      },
      "AllowCrossOriginAuthPrompt": {
        "title": "Cross-origin HTTP Basic Auth prompts",
        "description": "Controls whether third-party sub-content on a page is allowed to pop-up an HTTP Basic Auth dialog box.",
        "type": "boolean"
      },
      "AllowDeletingBrowserHistory": {
        "title": "Enable deleting browser and download history",
        "description": "Enables deleting browser history and download history in Brave Browser and prevents users from changing this setting.",
        "type": "boolean"
      },
      "AllowDinosaurEasterEgg": {
        "title": "Allow Dinosaur Easter Egg Game",
        "description": "Allow users to play dinosaur easter egg game when device is offline.",
        "type": "boolean"
      },
      "AllowFileSelectionDialogs": {
        "title": "Allow invocation of file selection dialogs",
        "description": "Allows access to local files on the machine by allowing Brave Browser to display file selection dialogs.",
        "type": "boolean"
      },
      "AllowOutdatedPlugins": {
        "title": "Allow running plugins that are outdated",
        "description": "If you enable this setting, outdated plugins are used as normal plugins.",
        "type": "boolean"
      },
      "AllowPopupsDuringPageUnload": {
        "title": "Allow a page to show popups during its unloading",
        "description": "This policy allows an admin to specify that a page may show popups during its unloading.",
        "type": "boolean"
      },
      "AllowSyncXHRInPageDismissal": {
        "title": "Allows a page to perform synchronous XHR requests during page dismissal.",
        "description": "This policy allows an admin to specify that a page may send synchronous XHR requests during page dismissal.",
        "type": "boolean"
      },
      "AllowedDomainsForApps": {
        "title": "Define domains allowed to access G Suite",
        "description": "Enables Brave Browser's restricted log in feature in G Suite and prevents users from changing this setting.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AlternateErrorPagesEnabled": {
        "title": "Enable alternate error pages",
        "description": "Enables the use of alternate error pages that are built into Brave Browser (such as 'page not found') and prevents users from changing this setting.",
        "type": "boolean"
      },
      "AlternativeBrowserParameters": {
        "title": "Alternative Browser Parameters",
        "description": "This policy controls command-line parameters to launch to the alternative browser.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AlternativeBrowserPath": {
        "title": "Alternative Browser Path",
        "description": "This policy controls which command to use to open URLs in an alternative browser.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AlwaysOpenPdfExternally": {
        "title": "Always Open PDF files externally",
        "description": "Disables the internal PDF viewer in Brave Browser. Instead it treats it as download and allows the user to open PDF files with the default application.",
        "type": "boolean"
      },
      "AmbientAuthenticationInPrivateModesEnabled": {
        "title": "Ambient Authentication",
        "description": "Configuring this policy will allow/disallow ambient authenticaiton for Incognito and Guest profiles in Brave Browser.",
        "type": "integer"
      },
      "AppCacheForceEnabled": {
        "title": "Force Enable App Cache",
        "description": "Allows the AppCache feature to be re-enabled even if it is off by default.",
        "type": "boolean"
      },
      "AudioCaptureAllowed": {
        "title": "Allow or deny audio capture",
        "description": "If enabled or not configured (default), the user will be prompted for audio capture access except for URLs configured in the AudioCaptureAllowedUrls list which will be granted access without prompting.",
        "type": "boolean"
      },
      "AudioCaptureAllowedUrls": {
        "title": "URLs that will be granted access to audio capture devices without prompt",
        "description": "Patterns in this list will be matched against the security\norigin of the requesting URL.  If a match is found, access to audio\ncapture devices will be granted without prompt.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AudioSandboxEnabled": {
        "title": "Enable the audio sandbox",
        "description": "Allow the audio sandbox to run. If this policy is enabled, the audio process will run sandboxed. If this policy is disabled, the audio process will run unsandboxed and the WebRTC audio-processing module will run in the renderer process. This leaves users open to security risks related to running the audio subsystem unsandboxed.",
        "type": "boolean"
      },
      "AuthNegotiateDelegateAllowlist": {
        "title": "Kerberos delegation server allowlist",
        "description": "Servers that Brave Browser may delegate to.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AuthNegotiateDelegateByKdcPolicy": {
        "title": "Kerberos delegation KDC policy",
        "description": "Use KDC policy to delegate credentials. Controls whether approval by KDC policy is respected to decide whether to delegate Kerberos tickets.",
        "type": "boolean"
      },
      "AuthNegotiateDelegateWhitelist": {
        "title": "Kerberos delegation server whitelist",
        "description": "Servers that Brave Browser may delegate to.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AuthSchemes": {
        "title": "Supported authentication schemes",
        "description": "Specifies which HTTP authentication schemes are supported by Brave Browser. Possible values are 'basic', 'digest', 'ntlm' and 'negotiate'. Separate multiple values with commas.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AuthServerAllowlist": {
        "title": "Authentication server allowlist",
        "description": "Specifies which servers should be allowed for integrated authentication. Integrated authentication is only enabled when Brave Browser receives an authentication challenge from a proxy or from a server which is in this permitted list.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AuthServerWhitelist": {
        "title": "Authentication server whitelist",
        "description": "Specifies which servers should be whitelisted for integrated authentication. Integrated authentication is only enabled when Brave Browser receives an authentication challenge from a proxy or from a server which is in this permitted list.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AutoFillEnabled": {
        "title": "Enable AutoFill",
        "description": "Enable AutoFill. This policy is deprecated in M70, please use AutofillAddressEnabled and AutofillCreditCardEnabled instead.",
        "type": "boolean"
      },
      "AutoLaunchProtocolsFromOrigins": {
        "title": "Allow protocols to auto launch external applications",
        "description": "Define a list of protocols that can launch an external application from listed origins without prompting the user. If this policy is set, a protocol will only be permitted to launch an external application without prompting by policy if the protocol is listed, and the origin of the site trying to launch the protocol matches one of the origin patterns in that protocol's allowed_origins list.",
        "type": {
          "array": [
            {
              "dictionary": {
                "allowed_origins": {
                  "title": "Allowed Origins",
                  "description": "A list of allowed origin patterns for the specified protocol.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "protocol": {
                  "title": "Protocol",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "AutoOpenAllowedForURLs": {
        "title": "Allowed URLs for auto open filetypes",
        "description": "URLs where AutoOpenFileTypes can apply. List of URLs specifying which urls AutoOpenFileTypes will apply to. This policy has no impact on automatically open values set by users.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AutoOpenFileTypes": {
        "title": "Allow file extensions to auto open",
        "description": "List of file types that should be automatically opened on download.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AutoSelectCertificateForUrls": {
        "title": "Automatically select client certificates for these sites",
        "description": "Allows you to specify a list of url patterns that specify sites for which Brave Browser should automatically select a client certificate, if the site requests a certificate.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AutofillAddressEnabled": {
        "title": "Enable AutoFill for addresses",
        "description": "Enables Brave Browser's AutoFill feature and allows users to auto complete address information in web forms using previously stored information.",
        "type": "boolean"
      },
      "AutofillCreditCardEnabled": {
        "title": "Enable AutoFill for credit cards",
        "description": "Enables Brave Browser's AutoFill feature and allows users to auto complete credit card information in web forms using previously stored information.",
        "type": "boolean"
      },
      "AutoplayAllowed": {
        "title": "Allow media autoplay",
        "description": "Allows you to control if videos can play automatically (without user consent) with audio content in Brave Browser.",
        "type": "boolean"
      },
      "AutoplayAllowlist": {
        "title": "Allow media autoplay on an allow list of URL patterns",
        "description": "Controls the allow list of URL patterns that autoplay will always be enabled on.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AutoplayWhitelist": {
        "title": "Allow media autoplay on a whitelist of URL patterns",
        "description": "Controls the whitelist of URL patterns that autoplay will always be enabled on.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "BasicAuthOverHttpEnabled": {
        "title": "Allow Basic authentication for HTTP",
        "description": "Setting the policy to Enabled or leaving it unset will allow Basic authentication challenges received over non-secure HTTP. Setting the policy to Disabled forbids non-secure HTTP requests from using the Basic authentication scheme; only secure HTTPS is allowed.",
        "type": "boolean"
      },
      "BlockExternalExtensions": {
        "title": "Block external extensions",
        "description": "Blocks external extensions from being installed.",
        "type": "boolean"
      },
      "BlockThirdPartyCookies": {
        "title": "Block third party cookies",
        "description": "Enabling this setting prevents cookies from being set by web page elements that are not from the domain that is in the browser's address bar.",
        "type": "boolean"
      },
      "BookmarkBarEnabled": {
        "title": "Enable Bookmark Bar",
        "description": "If you enable this setting, Brave Browser will show a bookmark bar.",
        "type": "boolean"
      },
      "BraveRewardsDisabled": {
        "title": "Disable Brave Rewards",
        "description": "false = Brave Rewards Enabled; true = Brave Rewards Disabled",
        "type": "boolean"
      },
      "BraveShieldsDisabledForUrls": {
        "title": "Brave Shields Disabled for URLs",
        "description": "Array of websites (each as a string) for which you want to enable Brave shields. Once enabled, the user can’t override and disable. Wildcards are not supported.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "BraveShieldsEnabledForUrls": {
        "title": "Brave Shields Enabled for URLs",
        "description": "Array of websites (each as a string) for which you want to enable Brave shields. Once enabled, the user can’t override and disable. Wildcards are not supported.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "BraveVPNDisabled": {
        "title": "Disable Brave VPN",
        "type": "integer"
      },
      "BraveWalletDisabled": {
        "title": "Disable Brave Wallet",
        "description": "false = Brave Wallet Enabled; true = Brave Wallet Disabled",
        "type": "boolean"
      },
      "BrowserAddPersonEnabled": {
        "title": "Enable add person in user manager",
        "description": "If this policy is set to true or not configured, Brave Browser will allow Add Person from the user manager.",
        "type": "boolean"
      },
      "BrowserGuestModeEnabled": {
        "title": "Enable guest mode in browser",
        "description": "If this policy is set to true or not configured, Brave Browser will enable guest logins. Guest logins are Brave Browser profiles where all windows are in incognito mode.",
        "type": "boolean"
      },
      "BrowserGuestModeEnforced": {
        "title": "Force guest mode in browser",
        "description": "If this policy is set to enabled, Brave Browser will enforce guest sessions and prevents profile logins. Guest logins are Brave Browser profiles where all windows are in incognito mode.",
        "type": "boolean"
      },
      "BrowserNetworkTimeQueriesEnabled": {
        "title": "Allow queries to a Google time service",
        "description": "Setting this policy to false stops Brave Browser from occasionally sending queries to a Google server to retrieve an accurate timestamp. These queries will be enabled if this policy is set to True or is not set.",
        "type": "boolean"
      },
      "BrowserSignin": {
        "title": "Browser Signin",
        "description": "This policy controls the sign-in behavior of the browser. It allows you to specify if the user can sign in to Brave Browser with their account and use account related services like Brave Browser sync.",
        "type": "integer"
      },
      "BrowserSwitcherDelay": {
        "title": "Browser Switcher Delay",
        "description": "This policy controls how long to wait before launching an alternative browser, in milliseconds. When this policy is set to a number, Brave Browser shows a message for that many milliseconds, and then opens the alternative browser.",
        "type": "integer"
      },
      "BrowserSwitcherEnabled": {
        "title": "Browser Switcher Enabled",
        "description": "This policy controls whether to enable Legacy Browser Support. When this policy is set to true, Brave Browser will attempt to launch some URLs in an alternate browser.",
        "type": "boolean"
      },
      "BrowserSwitcherExternalGreylistUrl": {
        "title": "Browser Switcher External Greylist URL",
        "description": "This policy is a URL, that points to an XML file in the same format as Internet Explorer's SiteList policy. This loads rules from an XML file, without sharing those rules with Internet Explorer.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BrowserSwitcherExternalSitelistUrl": {
        "title": "Browser Switcher External Sitelist URL",
        "description": "This policy is a URL, that points to an XML file in the same format as Internet Explorer's SiteList policy. This loads rules from an XML file, without sharing those rules with Internet Explorer.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BrowserSwitcherKeepLastChromeTab": {
        "title": "Keep Brave Browser open when the last tab switches to another browser",
        "description": "This policy controls whether to close Brave Browser completely when the last tab would switch to another browser.",
        "type": "boolean"
      },
      "BrowserSwitcherUrlGreylist": {
        "title": "Browser Switcher URL Greylist",
        "description": "This policy controls the list of websites that will never cause a browser switch.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "BrowserSwitcherUrlList": {
        "title": "Browser Switcher URL List",
        "description": "This policy controls the list of websites to open in an alternative browser.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "BuiltInDnsClientEnabled": {
        "title": "Use built-in DNS client",
        "description": "Controls whether the built-in DNS client is used in Brave Browser.",
        "type": "boolean"
      },
      "BuiltinCertificateVerifierEnabled": {
        "title": "Use built-in certificate verifier",
        "description": "Determines whether the built-in certificate verifier will be used to verify server certificates. When this setting is enabled, Brave Browser will perform verification of server certificates using the built-in certificate verifier. When this setting is disabled, Brave Browser will perform verification of server certificates using the legacy certificate verifier provided by the platform. When this setting is not set, the built-in or the legacy certificate verifier may be used.",
        "type": "boolean"
      },
      "CertificateTransparencyEnforcementDisabledForCas": {
        "title": "Disable Certificate Transparency enforcement for a list of subjectPublicKeyInfo hashes",
        "description": "Disables enforcing Certificate Transparency requirements for a list of subjectPublicKeyInfo hashes.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CertificateTransparencyEnforcementDisabledForLegacyCas": {
        "title": "Disable Certificate Transparency enforcement for a list of Legacy Certificate Authorities",
        "description": "Disables enforcing Certificate Transparency requirements for a list of Legacy Certificate Authorities.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CertificateTransparencyEnforcementDisabledForUrls": {
        "title": "Disable Certificate Transparency enforcement for a list of URLs",
        "description": "Disables enforcing Certificate Transparency requirements to the listed URLs. A URL pattern is formatted according to https://www.chromium.org/administrators/url-blacklist-filter-format.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ChromeVariations": {
        "title": "Brave Browser Variations",
        "description": "Determine the availability of variations.",
        "type": "integer"
      },
      "ClickToCallEnabled": {
        "title": "Enable Click to Call",
        "description": "Enable the Click to Call Feature.",
        "type": "boolean"
      },
      "CloudExtensionRequestEnabled": {
        "title": "Enable Cloud Extension Install Requests",
        "description": "Enables Brave Browser extension installation requests. When the policy CloudReportingEnabled is left unset or set to disabled, this policy will be ignored, extension installation requests are not created or uploaded. When this policy is left unset or set to disabled, extension installation requests are not created or uploaded. When this policy is set to enabled, extension installation requests are created and uploaded to Google Admin console.",
        "type": "boolean"
      },
      "CloudManagementEnrollmentMandatory": {
        "title": "Make cloud managment enrollment mandatory",
        "description": "If this policy is set to True, cloud management enrollment is mandatory and blocks Brave Browser launch process if failed.",
        "type": "boolean"
      },
      "CloudManagementEnrollmentToken": {
        "title": "Cloud Management Enrollment Token",
        "description": "If this policy is set, Brave Browser will try to register itself and apply associated cloud policy for all profiles.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CloudPolicyOverridesPlatformPolicy": {
        "title": "Cloud Policy Overrides Platform Policy",
        "description": "If the policy is set to true, cloud policy takes precedence if it conflicts with platform policy. If the policy is set to false or not configured, platform policy takes precedence if it conflicts with cloud policy.",
        "type": "boolean"
      },
      "CloudPrintProxyEnabled": {
        "title": "Enable Google Cloud Print proxy",
        "description": "Enables Brave Browser to act as a proxy between Google Cloud Print and legacy printers connected to the machine.",
        "type": "boolean"
      },
      "CloudPrintSubmitEnabled": {
        "title": "Enable submission of documents to Google Cloud Print",
        "description": "Enables Brave Browser to submit documents to Google Cloud Print for printing.  NOTE: This only affects Google Cloud Print support in Brave Browser.  It does not prevent users from submitting print jobs on web sites.",
        "type": "boolean"
      },
      "CloudReportingEnabled": {
        "title": "Enable Cloud Reporting",
        "description": "Enables Brave Browser cloud reporting. When this policy is left unset or set to False, there is no data collected or uploaded. When this policy is set to True, the data is collected and uploaded to Google Admin console.",
        "type": "boolean"
      },
      "CommandLineFlagSecurityWarningsEnabled": {
        "title": "Command Line Flag Security Warnings Enabled",
        "description": "If disabled, prevents security warnings from appearing when Brave Browser is launched with some potentially dangerous command-line flags.",
        "type": "boolean"
      },
      "ComponentUpdatesEnabled": {
        "title": "Enable component updates in Brave Browser",
        "description": "Enables component updates for all components in Brave Browser when not set or set to True.",
        "type": "boolean"
      },
      "CookiesAllowedForUrls": {
        "title": "Allow cookies on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to set cookies.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CookiesBlockedForUrls": {
        "title": "Block cookies on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to set cookies.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CookiesSessionOnlyForUrls": {
        "title": "Limit cookies from matching URLs to the current session",
        "description": "Cookies set by pages matching these URL patterns will be limited to the current session, i.e. they will be deleted when the browser exits.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CorsLegacyModeEnabled": {
        "title": "Enable Cross-Origin Resource Sharing legacy mode",
        "description": "Use the legacy CORS implementation rather than new CORS.",
        "type": "boolean"
      },
      "CorsMitigationList": {
        "title": "Cross-Origin Resource Sharing mitigation list",
        "description": "Enable CORS check mitigations in the new CORS implementation, allowing Extensions to keep compatible behavior, and allowing Brave Browser to send specified headers without CORS checks.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DNSInterceptionChecksEnabled": {
        "title": "DNS Interception Checks",
        "description": "This policy configures a local switch that can be used to disable DNS interception checks. The checks attempt to discover whether the browser is behind a proxy that redirects unknown host names.",
        "type": "boolean"
      },
      "DefaultBrowserSettingEnabled": {
        "title": "Set Brave Browser as Default Browser",
        "description": "Configures the default browser checks in Brave Browser and prevents users from changing them.",
        "type": "boolean"
      },
      "DefaultCookiesSetting": {
        "title": "Default cookies setting",
        "description": "Allows you to set whether websites are allowed to set local data. Setting local data can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultDownloadDirectory": {
        "title": "Set default download directory",
        "description": "Configures the default directory that Brave Browser will use for downloading files. This policy is not mandatory, so the user will be able to change the directory.\n\nSee https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultGeolocationSetting": {
        "title": "Default geolocation setting",
        "description": "Allows you to set whether websites are allowed to track the users' physical location. Tracking the users' physical location can be allowed by default, denied by default or the user can be asked every time a website requests the physical location.",
        "type": "integer"
      },
      "DefaultImagesSetting": {
        "title": "Default images setting",
        "description": "Allows you to set whether websites are allowed to display images. Displaying images can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultInsecureContentSetting": {
        "title": "Default insecure content setting",
        "description": "Control use of insecure content exceptions. Allows you to set whether users can add exceptions to allow mixed content for specific sites. If this policy is left not set, users will be allowed to add exceptions to allow blockable mixed content and disable autoupgrades for optionally blockable mixed content.",
        "type": "integer"
      },
      "DefaultJavaScriptSetting": {
        "title": "Default JavaScript setting",
        "description": "Allows you to set whether websites are allowed to run JavaScript. Running JavaScript can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultMediaStreamSetting": {
        "title": "Default mediastream setting",
        "description": "Allows you to set whether websites are allowed to get access to media capture devices. Access to media capture devices can be allowed by default, or the user can be asked every time a website wants to get access to media capture devices. - Documentation doesn't indicate when this was deprecated, but AudioCaptureAllowed was added in M25, so making an assumption.",
        "type": "integer"
      },
      "DefaultNotificationsSetting": {
        "title": "Default notification setting",
        "description": "Allows you to set whether websites are allowed to display desktop notifications. Displaying desktop notifications can be allowed by default, denied by default or the user can be asked every time a website wants to show desktop notifications.",
        "type": "integer"
      },
      "DefaultPluginsSetting": {
        "title": "Default Flash setting",
        "description": "Allows you to set whether websites are allowed to automatically run the Flash plugin. Automatically running the Flash plugin can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultPopupsSetting": {
        "title": "Default popups setting",
        "description": "Allows you to set whether websites are allowed to show pop-ups. Showing popups can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultPrinterSelection": {
        "title": "Default printer selection rules",
        "description": "Overrides Brave Browser default printer selection rules.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderAlternateURLs": {
        "title": "List of alternate URLs for the default search provider",
        "description": "Specifies a list of alternate URLs that can be used to extract search terms from the search engine. The URLs should contain the string '{searchTerms}', which will be used to extract the search terms.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DefaultSearchProviderContextMenuAccessAllowed": {
        "title": "Enable default search provider on context menu",
        "description": "Allow default search provider context menu search access.",
        "type": "boolean"
      },
      "DefaultSearchProviderEnabled": {
        "title": "Enable the default search provider",
        "description": "Enables the use of a default search provider.",
        "type": "boolean"
      },
      "DefaultSearchProviderEncodings": {
        "title": "Default search provider encodings",
        "description": "Specifies the character encodings supported by the search provider. Encodings are code page names like UTF-8, GB2312, and ISO-8859-1. They are tried in the order provided.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DefaultSearchProviderIconURL": {
        "title": "Default search provider icon",
        "description": "Specifies the favorite icon URL of the default search provider.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderImageURL": {
        "title": "Parameter providing search-by-image feature for the default search provider",
        "description": "Specifies the URL of the search engine used to provide image search. Search requests will be sent using the GET method. If the DefaultSearchProviderImageURLPostParams policy is set then image search requests will use the POST method instead.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderImageURLPostParams": {
        "title": "Parameters for image URL which uses POST",
        "description": "Specifies the parameters used when doing image search with POST. It consists of comma-separated name/value pairs. If a value is a template parameter, like {imageThumbnail} in above example, it will be replaced with real image thumbnail data.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderKeyword": {
        "title": "Default search provider keyword",
        "description": "Specifies the keyword, which is the shortcut used in the omnibox to trigger the search for this provider.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderName": {
        "title": "Default search provider name",
        "description": "Specifies the name of the default search provider. If left empty or not set, the host name specified by the search URL will be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderNewTabURL": {
        "title": "Default search provider new tab page URL",
        "description": "Specifies the URL that a search engine uses to provide a new tab page.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderSearchURL": {
        "title": "Default search provider search URL",
        "description": "Specifies the URL of the search engine used when doing a default search. The URL should contain the string '{searchTerms}', which will be replaced at query time by the terms the user is searching for.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderSearchURLPostParams": {
        "title": "Parameters for search URL which uses POST",
        "description": "Specifies the parameters used when searching a URL with POST. It consists of comma-separated name/value pairs. If a value is a template parameter, like {searchTerms} in above example, it will be replaced with real search terms data.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderSuggestURL": {
        "title": "Default search provider suggest URL",
        "description": "Specifies the URL of the search engine used to provide search suggestions. The URL should contain the string '{searchTerms}', which will be replaced at query time by the text the user has entered so far.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderSuggestURLPostParams": {
        "title": "Parameters for suggest URL which uses POST",
        "description": "Specifies the parameters used when doing suggestion search with POST. It consists of comma-separated name/value pairs. If a value is a template parameter, like {searchTerms} in above example, it will be replaced with real search terms data.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultThirdPartyStoragePartitioningSetting": {
        "title": "Default Third Party Storage Partitioning Setting",
        "description": "Third-party storage partitioning is on by default for some users as of M113, but can be disabled via Brave Browser flag. If this policy is set to AllowPartitioning or unset, third-party storage partitioning may be enabled. If this policy is set to BlockPartitioning, third-party storage partitioning cannot be enabled.",
        "type": "integer"
      },
      "DefaultWebBluetoothGuardSetting": {
        "title": "Control use of the Web Bluetooth API",
        "description": "Allows you to set whether websites are allowed to get access to nearby Bluetooth devices. Access can be completely blocked, or the user can be asked every time a website wants to get access to nearby Bluetooth devices.",
        "type": "integer"
      },
      "DefaultWebUsbGuardSetting": {
        "title": "Control use of the WebUSB API",
        "description": "Allows you to set whether websites are allowed to get access to connected USB devices. Access can be completely blocked, or the user can be asked every time a website wants to get access to connected USB devices.",
        "type": "integer"
      },
      "DeveloperToolsAvailability": {
        "title": "Control where Developer Tools can be used",
        "description": "Allows you to control where Developer Tools can be used.",
        "type": "integer"
      },
      "DeveloperToolsDisabled": {
        "title": "Control where Developer Tools can be used",
        "description": "Disables the Developer Tools and the JavaScript console. This policy is deprecated in M68, please use DeveloperToolsAvailability instead.",
        "type": "boolean"
      },
      "Disable3DAPIs": {
        "title": "Disable support for 3D graphics APIs",
        "description": "Enabling this setting prevents web pages from accessing the graphics processing unit (GPU). Specifically, web pages can not access the WebGL API and plugins can not use the Pepper 3D API.",
        "type": "boolean"
      },
      "DisableAuthNegotiateCnameLookup": {
        "title": "Disable CNAME lookup when negotiating Kerberos authentication",
        "description": "Specifies whether the generated Kerberos SPN is based on the canonical DNS name or the original name entered.",
        "type": "boolean"
      },
      "DisablePrintPreview": {
        "title": "Disable Print Preview",
        "description": "Show the system print dialog instead of print preview.",
        "type": "boolean"
      },
      "DisableSafeBrowsingProceedAnyway": {
        "title": "Disable proceeding from the Safe Browsing warning page",
        "description": "The Safe Browsing service shows a warning page when users navigate to sites that are flagged as potentially malicious. Enabling this setting prevents users from proceeding anyway from the warning page to the malicious site.",
        "type": "boolean"
      },
      "DisableScreenshots": {
        "title": "Disable taking screenshots",
        "description": "If enabled, screenshots cannot be taken using keyboard shortcuts or extension APIs.",
        "type": "boolean"
      },
      "DisabledPlugins": {
        "title": "Disabled Plugins",
        "description": "This policy is deprecated. Please use the DefaultPluginsSetting to control the avalability of the Flash plugin and AlwaysOpenPdfExternally to control whether the integrated PDF viewer should be used for opening PDF files.\n\nSpecifies a list of plugins that are disabled in Brave Browser and prevents users from changing this setting.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DisabledPluginsExceptions": {
        "title": "Disabled Plugins Exceptions",
        "description": "This policy is deprecated. Please use the DefaultPluginsSetting to control the avalability of the Flash plugin and AlwaysOpenPdfExternally to control whether the integrated PDF viewer should be used for opening PDF files.\n\nSpecifies a list of plugins that user can enable or disable in Brave Browser.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DisabledSchemes": {
        "title": "Disabled URL Protocol Schemes",
        "description": "This policy is deprecated, please use URLBlocklist instead.\n\nDisables the listed protocol schemes in Brave Browser.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DiskCacheDir": {
        "title": "Set disk cache directory",
        "description": "Configures the directory that Brave Browser will use for storing cached files on the disk. See https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used. To avoid data loss or other unexpected errors this policy should not be set to a volume's root directory or to a directory used for other purposes, because Brave Browser manages its contents",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DiskCacheSize": {
        "title": "Set disk cache size",
        "description": "Configures the cache size that Brave Browser will use for storing cached files on the disk. The value specified in this policy is not a hard boundary but rather a suggestion to the caching system, any value below a few megabytes is too small and will be rounded up to a sane minimum. If the value of this policy is 0, the default cache size will be used but the user will not be able to change it.",
        "type": "integer"
      },
      "DnsOverHttpsMode": {
        "title": "DNS-over-HTTPS mode",
        "description": "Controls the mode of DNS-over-HTTPS",
        "type": {
          "string": {
            "rangeList": [
              [
                "off",
                "Disable DNS-over-HTTPS"
              ],
              [
                "automatic",
                "Enable DNS-over-HTTPS with insecure fallback"
              ],
              [
                "secure",
                "Enable DNS-over-HTTPS without insecure fallback"
              ]
            ]
          }
        }
      },
      "DnsOverHttpsTemplates": {
        "title": "DNS-over-HTTPS mode",
        "description": "Specify URI template of desired DNS-over-HTTPS resolver. To specify multiple DNS-over-HTTPS resolvers, separate the corresponding URI templates with spaces.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DownloadDirectory": {
        "title": "Set download directory",
        "description": "Configures the directory that Brave Browser will use for downloading files. If you set this policy, Brave Browser will use the provided directory regardless whether the user has specified one or enabled the flag to be prompted for download location every time. If this policy is left not set the default download directory will be used and the user will be able to change it.\n\nSee https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DownloadRestrictions": {
        "title": "Download restrictions",
        "description": "Configures the type of downloads that Brave Browser will completely block, without letting users override the security decision.",
        "type": "integer"
      },
      "EditBookmarksEnabled": {
        "title": "Enable or disable bookmark editing",
        "description": "If you enable this setting, bookmarks can be added, removed or modified. This is the default also when this policy is not set.",
        "type": "boolean"
      },
      "EnableAuthNegotiatePort": {
        "title": "Include non-standard port in Kerberos SPN",
        "description": "Specifies whether the generated Kerberos SPN should include a non-standard port.",
        "type": "boolean"
      },
      "EnableDeprecatedWebPlatformFeatures": {
        "title": "Enable deprecated web platform features for a limited time",
        "description": "ExampleDeprecatedFeature_EffectiveUntil20080902 - Enable ExampleDeprecatedFeature API through 2008/09/02\nSpecify a list of deprecated web platform features to re-enable temporarily.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "EnableExperimentalPolicies": {
        "title": "Enable experimental policies",
        "description": "Allows Brave Browser to load experimental policies.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "EnableMediaRouter": {
        "title": "Enable Google Cast",
        "description": "If this policy is set to true or is not set, Google Cast will be enabled, and users will be able to launch it from the app menu, page context menus, media controls on Cast-enabled websites, and (if shown) the Cast toolbar icon.",
        "type": "boolean"
      },
      "EnableOnlineRevocationChecks": {
        "title": "Whether online OCSP/CRL checks are performed",
        "description": "In light of the fact that soft-fail, online revocation checks provide no effective security benefit, they are disabled by default in Chromium version 19 and later. By setting this policy to true, the previous behavior is restored and online OCSP/CRL checks will be performed.",
        "type": "boolean"
      },
      "EnabledPlugins": {
        "title": "Enabled Plugins",
        "description": "This policy is deprecated. Please use the DefaultPluginsSetting to control the avalability of the Flash plugin and AlwaysOpenPdfExternally to control whether the integrated PDF viewer should be used for opening PDF files.\n\nSpecifies a list of plugins that are enabled in Brave Browser and prevents users from changing this setting.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "EnterpriseHardwarePlatformAPIEnabled": {
        "title": "Enable Managed Extensions to use the Enterprise Hardware API",
        "description": "When this policy is set to enabled, extensions installed by enterprise policy are allowed to use the Enterprise Hardware Platform API.",
        "type": "boolean"
      },
      "EnterpriseRealTimeUrlCheckMode": {
        "title": "Check Safe Browsing status of URLs in real time",
        "description": "This policy controls checking URLs in real time to identify unsafe URLs. If this policy is left not set or set to ‘Disabled', the consumer Safe Browsing checks will be applied. If this policy is set to ‘Enabled', URLs will be sent to be scanned in real time under enterprise ToS. It will result in Brave Browser sending URLs to Google Cloud or third parties of your choosing to check them in real time. The consumer version of Safe Browsing real time lookup will be switched off.",
        "type": "integer"
      },
      "ExtensionAllowInsecureUpdates": {
        "title": "Allow insecure extension updates",
        "description": "Allow insecure algorithms in integrity checks on extension updates and installs.",
        "type": "boolean"
      },
      "ExtensionAllowedTypes": {
        "title": "Types of extensions/apps that are allowed to be installed",
        "description": "Controls which app/extension types are allowed to be installed and limits runtime access.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "extension",
                    "Extension"
                  ],
                  [
                    "hosted_app",
                    "Hosted App"
                  ],
                  [
                    "legacy_packaged_app",
                    "Legacy Packaged App"
                  ],
                  [
                    "platform_app",
                    "Platform App"
                  ],
                  [
                    "theme",
                    "Theme"
                  ],
                  [
                    "user_script",
                    "User Script"
                  ]
                ]
              }
            }
          ]
        }
      },
      "ExtensionInstallAllowlist": {
        "title": "Extension ID Allowlist",
        "description": "Allows you to specify which extensions are not subject to the blocklist.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionInstallBlacklist": {
        "title": "Extension ID Blacklist",
        "description": "Allows you to specify which extensions the users can NOT install. Extensions already installed will be disabled if denied, without a way for the user to enable them. Once an extension is disabled due to the blacklist being removed, it will automatically get re-enabled. Enter * to deny all extensions.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionInstallBlocklist": {
        "title": "Extension ID Blocklist",
        "description": "Allows you to specify which extensions the users can NOT install. Extensions already installed will be disabled if denied, without a way for the user to enable them. Once an extension is disabled due to the blocklist being removed, it will automatically get re-enabled. Enter * to deny all extensions.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionInstallForcelist": {
        "title": "Extension/App IDs and update URLs to be silently installed",
        "description": "Specifies a list of apps and extensions that are installed silently, without user interaction, and which cannot be uninstalled nor disabled by the user. All permissions requested by the apps/extensions are granted implicitly, without user interaction, including any additional permissions requested by future versions of the app/extension. Furthermore, permissions are granted for the enterprise.deviceAttributes and enterprise.platformKeys extension APIs. (These two APIs are not available to apps/extensions that are not force-installed.)",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionInstallSources": {
        "title": "URL patterns to allow extension, app, and user script installs from",
        "description": "Allows you to specify which URLs are allowed to install extensions, apps, and themes.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionInstallWhitelist": {
        "title": "Extension ID Whitelist",
        "description": "Allows you to specify which extensions are not subject to the blacklist.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionManifestV2Availability": {
        "title": "ExtensionManifestV2Availability",
        "description": "Control if Manifest v2 extensions can be used by browser.",
        "type": "integer"
      },
      "ExtensionSettings": {
        "title": "Extension management settings",
        "description": "Configures extension management settings for Brave Browser. A default configuration can be set for the special ID \"*\"",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Extension ID",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "{{value}}",
              "description": "",
              "type": {
                "dictionary": {
                  "allowed_types": {
                    "title": "allowed_types",
                    "description": "This setting whitelists the allowed types of extension/apps that can be installed in Brave Browser.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "blocked_install_message": {
                    "title": "blocked_install_message",
                    "description": "This maps to a string specifying the error message to display to users if they're blocked from installing an extension.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "blocked_permissions": {
                    "title": "blocked_permissions",
                    "description": "Maps to a list of strings indicating the blocked API permissions for the extension.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "install_sources": {
                    "title": "install_sources",
                    "description": "Each item in this list is an extension-style match pattern.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "installation_mode": {
                    "title": "installation_mode",
                    "description": "Maps to a string indicating the installation mode for the extension.",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "allowed",
                            "Allowed"
                          ],
                          [
                            "blocked",
                            "Blocked"
                          ],
                          [
                            "force_installed",
                            "Force Installed"
                          ],
                          [
                            "normal_installed",
                            "Normal Installed"
                          ]
                        ]
                      }
                    }
                  },
                  "minimum_version_required": {
                    "title": "minimum_version_required",
                    "description": "Maps to a version string.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "runtime_allowed_hosts": {
                    "title": "runtime_allowed_hosts",
                    "description": "Maps to a list of strings representing hosts that an extension can interact with regardless of whether they are listed in \"runtime_blocked_hosts\".",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "runtime_blocked_hosts": {
                    "title": "runtime_blocked_hosts",
                    "description": "Maps to a list of strings representing hosts whose webpages the extension will be blocked from modifying.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "update_url": {
                    "title": "update_url",
                    "description": "Maps to a string indicating where Brave Browser can download a force_installed or normal_installed extension.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ExternalProtocolDialogShowAlwaysOpenCheckbox": {
        "title": "Display \"Always open\" checkbox in external protocol dialog",
        "description": "Show an \"Always open\" checkbox in external protocol dialog.",
        "type": "boolean"
      },
      "ForceBrowserSignin": {
        "title": "Enable force sign in for Brave Browser",
        "description": "If this policy is set to true, user has to sign in to Brave Browser with their profile before using the browser. And the default value of BrowserGuestModeEnabled will be set to false. Note that existing unsigned profiles will be locked and inaccessible after enabling this policy. For more information, see help center article. This policy is deprecated, consider using BrowserSignin instead.",
        "type": "boolean"
      },
      "ForceEphemeralProfiles": {
        "title": "Ephemeral profile",
        "description": "If set to enabled this policy forces the profile to be switched to ephemeral mode. If this policy is specified as an OS policy (e.g. GPO on Windows) it will apply to every profile on the system; if the policy is set as a Cloud policy it will apply only to a profile signed in with a managed account.",
        "type": "boolean"
      },
      "ForceGoogleSafeSearch": {
        "title": "Force Google SafeSearch",
        "description": "Forces queries in Google Web Search to be done with SafeSearch set to active and prevents users from changing this setting.",
        "type": "boolean"
      },
      "ForceLegacyDefaultReferrerPolicy": {
        "title": "Force Legacy Default Referrer",
        "description": "This enterprise policy is for short-term adaptation and will be removed in M82.",
        "type": "boolean"
      },
      "ForceSafeSearch": {
        "title": "Force SafeSearch",
        "description": "This policy is deprecated, please use ForceGoogleSafeSearch and ForceYouTubeRestrict instead. This policy is ignored if either the ForceGoogleSafeSearch, the ForceYouTubeRestrict or the (deprecated) ForceYouTubeSafetyMode policies are set.",
        "type": "boolean"
      },
      "ForceYouTubeRestrict": {
        "title": "Force minimum YouTube Restricted Mode",
        "description": "Enforces a minimum Restricted Mode on YouTube and prevents users from picking a less restricted mode.",
        "type": "integer"
      },
      "ForceYouTubeSafetyMode": {
        "title": "Force YouTube Safety Mode",
        "description": "This policy is deprecated. Consider using ForceYouTubeRestrict, which overrides this policy and allows more fine-grained tuning.\n\nForces YouTube Moderate Restricted Mode and prevents users from changing this setting.",
        "type": "boolean"
      },
      "GloballyScopeHTTPAuthCacheEnabled": {
        "title": "Enable globally scoped HTTP auth cache",
        "description": "This policy configures a single global per profile cache with HTTP server authentication credentials.",
        "type": "boolean"
      },
      "HSTSPolicyBypassList": {
        "title": "HSTS Policy Bypass List",
        "description": "List of names that will bypass the HSTS policy check. Hostnames specified in this list will be exempt from the HSTS policy check that could potentially upgrade requests from http to https.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "HardwareAccelerationModeEnabled": {
        "title": "Use hardware acceleration when available",
        "description": "If this policy is set to true or left unset, hardware acceleration will be enabled unless a certain GPU feature is blacklisted.",
        "type": "boolean"
      },
      "HideWebStoreIcon": {
        "title": "Hide the web store from the New Tab Page and app launcher",
        "description": "Hide the Chrome Web Store app and footer link from the New Tab Page and Brave Browser OS app launcher.",
        "type": "boolean"
      },
      "HomepageIsNewTabPage": {
        "title": "Use New Tab Page as homepage",
        "description": "Configures the type of the default home page in Brave Browser and prevents users from changing home page preferences. The home page can either be set to a URL you specify or set to the New Tab Page.",
        "type": "boolean"
      },
      "HomepageLocation": {
        "title": "Home page URL",
        "description": "Configures the default home page URL in Brave Browser and prevents users from changing it.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Http09OnNonDefaultPortsEnabled": {
        "title": "Enable HTTP/0.9 support on non-default ports",
        "description": "This policy enables HTTP/0.9 on ports other than 80 for HTTP and 443 for HTTPS.",
        "type": "boolean"
      },
      "IPFSEnabled": {
        "title": "Enable IPFS",
        "description": "false = IPFS Disabled; true = IPFS Enabled",
        "type": "boolean"
      },
      "ImagesAllowedForUrls": {
        "title": "Allow images on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to display images.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ImagesBlockedForUrls": {
        "title": "Block images on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to display images.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ImportAutofillFormData": {
        "title": "Import autofill form data from default browser on first run",
        "description": "This policy forces the autofill form data to be imported from the previous default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "ImportBookmarks": {
        "title": "Import bookmarks from default browser on first run",
        "description": "This policy forces bookmarks to be imported from the current default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "ImportHistory": {
        "title": "Import browsing history from default browser on first run",
        "description": "This policy forces the browsing history to be imported from the current default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "ImportHomepage": {
        "title": "Import of homepage from default browser on first run",
        "description": "This policy forces the home page to be imported from the current default browser if enabled.",
        "type": "boolean"
      },
      "ImportSavedPasswords": {
        "title": "Import saved passwords from default browser on first run",
        "description": "This policy forces the saved passwords to be imported from the previous default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "ImportSearchEngine": {
        "title": "Import search engines from default browser on first run",
        "description": "This policy forces search engines to be imported from the current default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "IncognitoEnabled": {
        "title": "Enable Incognito",
        "description": "This policy is deprecated. Please, use IncognitoModeAvailability instead. Enables Incognito mode in Brave Browser.\n\nIf this setting is enabled or not configured, users can open web pages in incognito mode.",
        "type": "boolean"
      },
      "IncognitoModeAvailability": {
        "title": "Incognito mode availability",
        "description": "Specifies whether the user may open pages in Incognito mode in Brave Browser.",
        "type": "integer"
      },
      "InsecureContentAllowedForUrls": {
        "title": "Allow insecure content on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to display blockable (i.e. active) mixed content (i.e. HTTP content on HTTPS sites) and for which optionally blockable mixed content upgrades will be disabled.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "InsecureContentBlockedForUrls": {
        "title": "Block insecure content on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to display blockable (i.e. active) mixed content (i.e. HTTP content on HTTPS sites), and for which optionally blockable (i.e. passive) mixed content will be upgraded.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "IntensiveWakeUpThrottlingEnabled": {
        "title": "Enable Intensive Wake Up Throttling",
        "description": "When enabled, the IntensiveWakeUpThrottling feature causes JavaScript timers in background tabs to be aggressively throttled and coalesced, running no more than once per minute after a page has been backgrounded for 5 minutes or more.",
        "type": "boolean"
      },
      "IsolateOrigins": {
        "title": "Enable Site Isolation for specified origins",
        "description": "If the policy is enabled, each of the named origins in a comma-separated list will run in its own process. This will also isolate origins named by subdomains; e.g. specifying https://example.com/ will also cause https://foo.example.com/ to be isolated as part of the https://example.com/ site. If the policy is disabled, no explicit Site Isolation will happen and field trials of IsolateOrigins and SitePerProcess will be disabled. Users will still be able to enable IsolateOrigins manually. If the policy is not configured, the user will be able to change this setting. On Brave Browser OS, it is recommended to also set the DeviceLoginScreenIsolateOrigins device policy to the same value. If the values specified by the two policies don't match, a delay may be incurred when entering a user session while the value specified by user policy is being applied.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "JavaScriptAllowedForUrls": {
        "title": "Allow JavaScript on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to run JavaScript.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "JavaScriptBlockedForUrls": {
        "title": "Block JavaScript on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to run JavaScript.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "JavascriptEnabled": {
        "title": "Javascript Enabled",
        "description": "This policy is deprecated, please use DefaultJavaScriptSetting instead.\n\nCan be used to disabled JavaScript in Brave Browser.",
        "type": "boolean"
      },
      "LegacySameSiteCookieBehaviorEnabled": {
        "title": "Enable legacy SameSite cookie behavior",
        "description": "Allows you to revert all cookies to legacy SameSite behavior.",
        "type": "integer"
      },
      "LegacySameSiteCookieBehaviorEnabledForDomainList": {
        "title": "Enable legacy SameSite cookie behavior for list of domains",
        "description": "Cookies set for domains matching these patterns will revert to legacy SameSite behavior. For cookies on domains not covered by the patterns specified here, or for all cookies if this policy is not set, the global default value will be used either from the LegacySameSiteCookieBehaviorEnabled policy, if it is set, or the user's personal configuration otherwise.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "LocalDiscoveryEnabled": {
        "title": "Enable chrome://devices",
        "description": "This policy controls access to controllable features in the local discovery UI (chrome://devices) which shows discoverable devices near the user as well as cloud devices registered to them. On all operating systems except for Brave Browser OS, the local discovery UI also allows users to add classic printers connected to their computers to Google Cloud Print.",
        "type": "boolean"
      },
      "LookalikeWarningAllowlistDomains": {
        "title": "Suppress lookalike domain warnings on domains",
        "description": "This policy prevents the display of lookalike URL warnings on the sites listed. These warnings are typically shown on sites that Brave Browser believes might be trying to spoof another site the user is familiar with. If the policy is enabled and set to one or more domains, no lookalike warnings pages will be shown when the user visits pages on that domain. If the policy is disabled, not set, or set to an empty list, warnings may appear on any site the user visits.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "MachineLevelUserCloudPolicyEnrollmentToken": {
        "title": "The enrollment token of cloud policy on desktop",
        "description": "The enrollment token of cloud policy on desktop. This policy is deprecated in M72. Please use CloudManagementEnrollmentToken instead.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ManagedBookmarks": {
        "title": "Managed Bookmarks",
        "description": "Configures a list of managed bookmarks.",
        "type": {
          "array": [
            {
              "dictionary": {
                "name": {
                  "title": "name",
                  "description": "Name of the bookmark.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "url": {
                  "title": "url",
                  "description": "URL for the bookmark.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            },
            {
              "dictionary": {
                "toplevel_name": {
                  "title": "Top Level Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "MaxConnectionsPerProxy": {
        "title": "Maximal number of concurrent connections to the proxy server",
        "description": "Specifies the maximal number of simultaneous connections to the proxy server.",
        "type": "integer"
      },
      "MaxInvalidationFetchDelay": {
        "title": "Maximum fetch delay after a policy invalidation",
        "description": "Specifies the maximum delay in milliseconds between receiving a policy invalidation and fetching the new policy from the device management service.",
        "type": "integer"
      },
      "MediaRecommendationsEnabled": {
        "title": "Enable Media Recommendations",
        "description": "By default the browser will show media recommendations that are personalized to the user. Setting this policy to Disabled will result in these recommendations being hidden from the user. Setting this policy to Enabled or leaving it unset will result in the media recommendations being shown to the user.",
        "type": "boolean"
      },
      "MediaRouterCastAllowAllIPs": {
        "title": "Allow Google Cast to connect to Cast devices on all IP addresses.",
        "description": "If this policy is set to true, Google Cast will connect to Cast devices on all IP addresses, not just RFC1918/RFC4913 private addresses.",
        "type": "boolean"
      },
      "MetricsReportingEnabled": {
        "title": "Enable reporting of usage and crash-related data",
        "description": "Enables anonymous reporting of usage and crash-related data about Brave Browser to Google and prevents users from changing this setting.",
        "type": "boolean"
      },
      "NTPCardsVisible": {
        "title": "Show cards on the New Tab Page",
        "description": "This policy controls the visibility of cards on the New Tab Page. Cards surface entry points to launch common user journeys based on the user's browsing behavior.\n\nIf the policy is set to Enabled, the New Tab Page will show cards if content is available.\n\nIf the policy is set to Disabled, the New Tab Page won't show cards.",
        "type": "boolean"
      },
      "NTPCustomBackgroundEnabled": {
        "title": "Allow New Tab page background customization",
        "description": "Allow users to customize the background on the New Tab page",
        "type": "boolean"
      },
      "NativeMessagingAllowlist": {
        "title": "Native Messaging Host Allowlist",
        "description": "Allows you to specify which native messaging hosts are not subject to the block list. A block list value of * means all native messaging hosts are denied and only native messaging hosts listed in the allow list will be loaded.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NativeMessagingBlacklist": {
        "title": "Native Messaging Host Blacklist",
        "description": "Allows you to specify which native messaging hosts that should not be loaded. A blacklist value of '*' means all native messaging hosts are denied unless they are explicitly listed in the allowlist.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NativeMessagingBlocklist": {
        "title": "Native Messaging Host Blocklist",
        "description": "Allows you to specify which native messaging hosts that should not be loaded. A block list value of '*' means all native messaging hosts are denied unless they are explicitly listed in the allow list.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NativeMessagingUserLevelHosts": {
        "title": "Allow user-level Native Messaging hosts (installed without admin permissions)",
        "description": "Enables user-level installation of Native Messaging hosts.",
        "type": "boolean"
      },
      "NativeMessagingWhitelist": {
        "title": "Native Messaging Host Whitelist",
        "description": "Allows you to specify which native messaging hosts are not subject to the blacklist. A blacklist value of * means all native messaging hosts are denied and only native messaging hosts listed in the whitelist will be loaded.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NetworkPredictionOptions": {
        "title": "Enable network prediction",
        "description": "(Deprecated in 50, removed in 52. After 52, if value 1 is set, it will be treated as 0 - predict network actions on any network connection.)\nEnables network prediction in Brave Browser and prevents users from changing this setting.",
        "type": "integer"
      },
      "NewTabPageLocation": {
        "title": "New Tab page URL",
        "description": "Configures the default New Tab page URL and prevents users from changing it.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "NotificationsAllowedForUrls": {
        "title": "Allow notifications on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to display notifications.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NotificationsBlockedForUrls": {
        "title": "Block notifications on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to display notifications.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NtlmV2Enabled": {
        "title": "Enable NTLMv2 authentication",
        "description": "Controls whether NTLMv2 is enabled.",
        "type": "boolean"
      },
      "OverrideSecurityRestrictionsOnInsecureOrigin": {
        "title": "Origins or hostname patterns to be treated as secure context.",
        "description": "The policy specifies a list of origins (URLs) or hostname patterns (such as \"*.example.com\") to be treated as secure contexts. The intent is to allow organizations to set up a staging server for internal web development, so that their developers can test out features requiring secure contexts without having to deploy TLS on the staging server.\n\nSetting a list of URLs in this policy has the same effect as setting the command-line flag '--unsafely-treat-insecure-origin-as-secure' to a comma-separated list of the same URLs. If the policy is set, it will override the command-line flag.\n\nFor more information on secure contexts, see https://www.w3.org/TR/secure-contexts/",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordLeakDetectionEnabled": {
        "title": "Enable password leak detection",
        "description": "This policy can be used to force enable or force disable credential leak checking in Brave Browser.",
        "type": "boolean"
      },
      "PasswordManagerEnabled": {
        "title": "Enable saving passwords to the password manager",
        "description": "If this setting is enabled, users can have Brave Browser memorize passwords and provide them automatically the next time they log in to a site.",
        "type": "boolean"
      },
      "PasswordProtectionChangePasswordURL": {
        "title": "Configure the change password URL.",
        "description": "Configure the change password URL (HTTP and HTTPS schemes only). Password protection service will send users to this URL to change their password after seeing a warning in the browser.\nIn order for Brave Browser to correctly capture the new password fingerprint on this change password page, please make sure your change password page follows the guidelines on https://www.chromium.org/developers/design-documents/create-amazing-password-forms.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordProtectionLoginURLs": {
        "title": "Configure the list of enterprise login URLs where password protection service should capture fingerprint of password.",
        "description": "Configure the list of enterprise login URLs (HTTP and HTTPS schemes only). Fingerprint of password will be captured on these URLs and used for password reuse detection.\nIn order for Brave Browser to correctly capture password fingerprints, please make sure your login pages follow the guidelines on https://www.chromium.org/developers/design-documents/create-amazing-password-forms.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PasswordProtectionWarningTrigger": {
        "title": "Password protection warning trigger",
        "description": "Allows you to control the triggering of passwore protection warning. Password protection alerts users when they reuse their protected password on potentially suspicious sites.",
        "type": "integer"
      },
      "PaymentMethodQueryEnabled": {
        "title": "Payment Method Query",
        "description": "Allows you to set whether websites are allowed to check if the user has payment methods saved.",
        "type": "boolean"
      },
      "PluginsAllowedForUrls": {
        "title": "Allow the Flash plugin on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to run the Flash plugin.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PluginsBlockedForUrls": {
        "title": "Block the Flash plugin on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to run the Flash plugin.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PolicyAtomicGroupsEnabled": {
        "title": "Enable Policy Atomic Groups",
        "description": "Enables the concept of policy atomic groups.",
        "type": "boolean"
      },
      "PolicyDictionaryMultipleSourceMergeList": {
        "title": "Allow merging dictionary policies from different sources",
        "description": "Allows the selected policies to be merged when they come from different sources, with the same scopes and level. Entered strings must match a Brave Browser policy / key name that uses a dictionary for its data type.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PolicyListMultipleSourceMergeList": {
        "title": "Allow merging list policies from different sources",
        "description": "Allows the selected policies to be merged when they come from different sources, with the same scopes and level. Entered strings must match a Brave Browser policy / key name that use an array (list) of strings for its data type.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PolicyRefreshRate": {
        "title": "Policy Refresh Rate",
        "description": "Refresh rate for user policy. Specifies the period in milliseconds at which the device management service is queried for user policy information. Setting this policy overrides the default value of 3 hours. Valid values for this policy are in the range from 1800000 (30 minutes) to 86400000 (1 day).",
        "type": "integer"
      },
      "PopupsAllowedForUrls": {
        "title": "Allow popups on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to open popups.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PopupsBlockedForUrls": {
        "title": "Block popups on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to open popups.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PrintHeaderFooter": {
        "title": "Print Headers & Footers",
        "description": "Force 'headers and footers' to be on or off in the printing dialog.",
        "type": "boolean"
      },
      "PrintPreviewUseSystemDefaultPrinter": {
        "title": "Use System Default Printer as Default",
        "description": "Causes Brave Browser to use the system default printer as the default choice in Print Preview instead of the most recently used printer.",
        "type": "boolean"
      },
      "PrinterPaperSizeDefault": {
        "title": "Default printer paper size",
        "description": "Overrides default printing page size. If 'custom' is provided, custom size width and height keys must also be included.",
        "type": {
          "dictionary": {
            "custom_size": {
              "title": "Custom Size",
              "type": {
                "dictionary": {
                  "height": {
                    "title": "Height",
                    "description": "Height of the page",
                    "type": "integer"
                  },
                  "width": {
                    "title": "Width",
                    "description": "Width of the page",
                    "type": "integer"
                  }
                }
              }
            },
            "name": {
              "title": "Name",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "PrinterTypeDenyList": {
        "title": "Printer Type Deny List",
        "description": "The printers of types placed on the deny list will be disabled from being discovered or having their capabilities fetched.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "privet",
                    "Zeroconf-based (mDNS + DNS-SD) protocol destinations"
                  ],
                  [
                    "extension",
                    "Extension-based destinations"
                  ],
                  [
                    "pdf",
                    "The 'Save as PDF' destination"
                  ],
                  [
                    "local",
                    "Local printer destinations"
                  ],
                  [
                    "cloud",
                    "Google Cloud Print and 'Save to Google Drive' destinations"
                  ]
                ]
              }
            }
          ]
        }
      },
      "PrintingAllowedBackgroundGraphicsModes": {
        "title": "Background graphics printing mode",
        "description": "Restricts background graphics printing mode. Unset policy is treated as no restriction.",
        "type": {
          "string": {
            "rangeList": [
              [
                "any",
                "Allow printing both with and without background graphics"
              ],
              [
                "enabled",
                "Allow printing only with background graphics"
              ],
              [
                "disabled",
                "Allow printing only without background graphics"
              ]
            ]
          }
        }
      },
      "PrintingBackgroundGraphicsDefault": {
        "title": "Default background graphics printing mode",
        "description": "Overrides default background graphics printing mode.",
        "type": {
          "string": {
            "rangeList": [
              [
                "enabled",
                "Enabled"
              ],
              [
                "disabled",
                "Disabled"
              ]
            ]
          }
        }
      },
      "PrintingEnabled": {
        "title": "Enable printing",
        "description": "Enables printing in Brave Browser and prevents users from changing this setting.",
        "type": "boolean"
      },
      "PrivacySandboxAdMeasurementEnabled": {
        "title": "Privacy Sandbox Ad Measurement Enabled",
        "description": "A policy to control whether the Privacy Sandbox Ad measurement setting can be disabled for your users.",
        "type": "boolean"
      },
      "PrivacySandboxAdTopicsEnabled": {
        "title": "Privacy Sandbox Ad Topics Enabled",
        "description": "A policy to control whether the Privacy Sandbox Ad measurement setting can be disabled for your users.",
        "type": "boolean"
      },
      "PrivacySandboxPromptEnabled": {
        "title": "Privacy Sandbox Prompt Enabled",
        "description": "A policy to control whether your users see the Privacy Sandbox prompt.",
        "type": "boolean"
      },
      "PrivacySandboxSiteEnabledAdsEnabled": {
        "title": "Privacy Sandbox Site Enabled Ads Enabled",
        "description": "A policy to control whether the Privacy Sandbox Site-suggested ads setting can be disabled for your users.",
        "type": "boolean"
      },
      "ProfilePickerOnStartupAvailability": {
        "title": "Profile picker availabily on startup",
        "description": "Specifies whether the profile picker is enabled, disabled or forced at the browser startup. By default the profile picker is not shown if the browser starts in guest or incognito mode, a profile directory and/or urls are specified by command line, an app is explicitly requested to open, the browser was launched by a native notification, there is only one profile available or the policy ForceBrowserSignin is set to true.",
        "type": "integer"
      },
      "PromotionalTabsEnabled": {
        "title": "Enable showing full-tab promotional content",
        "description": "Allows you to control the presentation of full-tab promotional and/or educational content in Brave Browser.",
        "type": "boolean"
      },
      "PromptForDownloadLocation": {
        "title": "Ask where to save each file before downloading",
        "description": "If the policy is enabled, the user will be asked where to save each file before downloading.\nIf the policy is disabled, downloads will start immediately, and the user will not be asked where to save the file.\nIf the policy is not configured, the user will be able to change this setting.",
        "type": "boolean"
      },
      "ProxyBypassList": {
        "title": "Comma-separated list of proxy bypass rules",
        "description": "Brave Browser will bypass any proxy for the list of hosts given here.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyMode": {
        "title": "Choose how to specify proxy server settings",
        "description": "Allows you to specify the proxy server used by Brave Browser and prevents users from changing proxy settings.",
        "type": {
          "string": {
            "rangeList": [
              [
                "direct",
                "Never use a proxy"
              ],
              [
                "auto_detect",
                "Auto detect proxy settings"
              ],
              [
                "pac_script",
                "Use a .pac proxy script"
              ],
              [
                "fixed_servers",
                "Use fixed proxy servers"
              ],
              [
                "system",
                "Use system proxy settings"
              ]
            ]
          }
        }
      },
      "ProxyPacUrl": {
        "title": "URL to a proxy .pac file",
        "description": "You can specify a URL to a proxy .pac file here.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyServer": {
        "title": "Address or URL of proxy server",
        "description": "You can specify the URL of the proxy server here.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyServerMode": {
        "title": "Proxy server settings",
        "description": "This policy is deprecated, use ProxyMode instead.\n\nAllows you to specify the proxy server used by Brave Browser and prevents users from changing proxy settings.",
        "type": "integer"
      },
      "ProxySettings": {
        "title": "Proxy Settings",
        "description": "Configures the proxy settings for Brave Browser. These proxy settings will be available for ARC-apps too.\n\nIf you enable this setting, Brave Browser and ARC-apps ignore all proxy-related options specified from the command line.",
        "type": {
          "dictionary": {
            "ProxyBypassList": {
              "title": "Proxy Bypass List",
              "description": "Defines a comma-separated list of hosts for which Brave Browser bypasses any proxy.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ProxyMode": {
              "title": "Proxy Mode",
              "description": "Specifies the proxy server Brave Browser uses and prevents users from changing proxy settings.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "direct",
                      "Never use proxy (ignores other fields)"
                    ],
                    [
                      "system",
                      "System (ignores other fields)"
                    ],
                    [
                      "auto_detect",
                      "Auto Detect (ignores other fields)"
                    ],
                    [
                      "fixed_servers",
                      "Fixed (Uses ProxyServer & ProxyBypassList)"
                    ],
                    [
                      "pac_script",
                      "Pac Script (Uses ProxyPacUrl & ProxyBypassList)"
                    ]
                  ]
                }
              }
            },
            "ProxyPacMandatory": {
              "title": "Proxy PAC Mandatory",
              "description": "Prevents the network stack from falling back to direct connections with invalid or unavailable PAC script.",
              "type": "boolean"
            },
            "ProxyPacUrl": {
              "title": "Proxy PAC URL",
              "description": "Specifies the URL for a proxy auto-config (PAC) file.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ProxyServer": {
              "title": "Proxy Server URL",
              "description": "Specifies the URL of the proxy server",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "QuicAllowed": {
        "title": "Allow QUIC protocol",
        "description": "If this policy is set to true or not set usage of QUIC protocol in Brave Browser is allowed.\nIf this policy is set to false usage of QUIC protocol is disallowed.",
        "type": "boolean"
      },
      "RegisteredProtocolHandlers": {
        "title": "Register protocol handlers",
        "description": "Allows you to register a list of protocol handlers. This can only be a recommended policy. The property |protocol| should be set to the scheme such as 'mailto' and the property |url| should be set to the URL pattern of the application that handles the scheme. The pattern can include a '%s', which if present will be replaced by the handled URL.",
        "type": {
          "array": [
            {
              "dictionary": {
                "default": {
                  "title": "default",
                  "type": "boolean"
                },
                "protocol": {
                  "title": "protocol",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "url": {
                  "title": "url",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "RelaunchNotification": {
        "title": "Notify a user that a browser relaunch is recommended or required",
        "description": "Notify users that Brave Browser must be relaunched to apply a pending update.",
        "type": "integer"
      },
      "RelaunchNotificationPeriod": {
        "title": "Update time period",
        "description": "Allows you to set the time period, in milliseconds, over which users are notified that Brave Browser must be relaunched or that a Brave Browser OS device must be restarted to apply a pending update.",
        "type": "integer"
      },
      "RemoteAccessHostAllowClientPairing": {
        "title": "Enable or disable PIN-less authentication for remote access hosts",
        "description": "If this setting is enabled or not configured, then users can opt to pair clients and hosts at connection time, eliminating the need to enter a PIN every time.",
        "type": "boolean"
      },
      "RemoteAccessHostAllowFileTransfer": {
        "title": "Allow remote access file transfer",
        "description": "Controls the ability of a user connected to a remote access host to transfer files between the client and the host. This does not apply to remote assistance connections, which do not support file transfer.",
        "type": "boolean"
      },
      "RemoteAccessHostAllowGnubbyAuth": {
        "title": "Allow gnubby authentication for remote access hosts",
        "description": "If this setting is enabled, then gnubby authentication requests will be proxied across a remote host connection.",
        "type": "boolean"
      },
      "RemoteAccessHostAllowRelayedConnection": {
        "title": "Enable the use of relay servers by the remote access host",
        "description": "Enables usage of relay servers when remote clients are trying to establish a connection to this machine.",
        "type": "boolean"
      },
      "RemoteAccessHostClientDomain": {
        "title": "Configure the required domain names for remote access clients",
        "description": "Configure the required domain name for remote access clients. This policy is deprecated. Please use RemoteAccessHostClientDomainList instead.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "RemoteAccessHostClientDomainList": {
        "title": "Configure the required domain names for remote access clients",
        "description": "Configures the required client domain names that will be imposed on remote access clients and prevents users from changing it.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "RemoteAccessHostDomain": {
        "title": "Configure the required domain names for remote access hosts",
        "description": "Configure the required domain name for remote access hosts. This policy is deprecated. Please use RemoteAccessHostDomainList instead.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "RemoteAccessHostDomainList": {
        "title": "Configure the required domain names for remote access hosts",
        "description": "Configures the required host domain names that will be imposed on remote access hosts and prevents users from changing it.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "RemoteAccessHostFirewallTraversal": {
        "title": "Enable firewall traversal from remote access host",
        "description": "Enables usage of STUN servers when remote clients are trying to establish a connection to this machine.",
        "type": "boolean"
      },
      "RemoteAccessHostMatchUsername": {
        "title": "Require that the name of the local user and the remote access host owner match",
        "description": "If this setting is enabled, then the remote access host compares the name of the local user (that the host is associated with) and the name of the Google account registered as the host owner (i.e. \"johndoe\" if the host is owned by \"johndoe@example.com\" Google account).  The remote access host will not start if the name of the host owner is different from the name of the local user that the host is associated with.  RemoteAccessHostMatchUsername policy should be used together with RemoteAccessHostDomain to also enforce that the Google account of the host owner is associated with a specific domain (i.e. \"example.com\").",
        "type": "boolean"
      },
      "RemoteAccessHostRequireCurtain": {
        "title": "Enable curtaining of remote access hosts",
        "description": "Enables curtaining of remote access hosts while a connection is in progress.",
        "type": "boolean"
      },
      "RemoteAccessHostTalkGadgetPrefix": {
        "title": "Configure the TalkGadget prefix for remote access hosts",
        "description": "Configures the TalkGadget prefix that will be used by remote access hosts and prevents users from changing it.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RemoteAccessHostTokenUrl": {
        "title": "URL where remote access clients should obtain their authentication token",
        "description": "If this policy is set, the remote access host will require authenticating clients to obtain an authentication token from this URL in order to connect. Must be used in conjunction with RemoteAccessHostTokenValidationUrl.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RemoteAccessHostTokenValidationCertificateIssuer": {
        "title": "Client certificate for connecting to RemoteAccessHostTokenValidationUrl",
        "description": "If this policy is set, the host will use a client certificate with the given issuer CN to authenticate to RemoteAccessHostTokenValidationUrl. Set it to \"*\" to use any available client certificate.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RemoteAccessHostTokenValidationUrl": {
        "title": "URL for validating remote access client authentication token",
        "description": "If this policy is set, the remote access host will use this URL to validate authentication tokens from remote access clients, in order to accept connections. Must be used in conjunction with RemoteAccessHostTokenUrl.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RemoteAccessHostUdpPortRange": {
        "title": "Restrict the UDP port range used by the remote access host",
        "description": "Restricts the UDP port range used by the remote access host in this machine.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ReportSafeBrowsingData": {
        "title": "Report Safe Browsing",
        "description": "Report Safe Browsing information.",
        "type": "boolean"
      },
      "RestoreOnStartup": {
        "title": "Action on startup",
        "description": "Allows you to specify the behavior on startup.",
        "type": "integer"
      },
      "RestoreOnStartupURLs": {
        "title": "URLs to open on startup",
        "description": "If 'Open a list of URLs' is selected as the startup action, this allows you to specify the list of URLs that are opened. If left not set no URL will be opened on start up.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "RestrictSigninToPattern": {
        "title": "Restrict which users are allowed to sign in to Brave Browser",
        "description": "Contains a regular expression which is used to determine which users can sign in to Brave Browser.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RunAllFlashInAllowMode": {
        "title": "Extend Flash content setting to all content",
        "description": "If you enable this setting, all Flash content embedded on websites that have been set to allow Flash in content settings -- either by the user or by enterprise policy -- will be run, including content from other origins or small content.",
        "type": "boolean"
      },
      "SSLErrorOverrideAllowed": {
        "title": "Allow proceeding from the SSL warning page",
        "description": "Brave Browser shows a warning page when users navigate to sites that have SSL errors. By default or when this policy is set to true, users are allowed to click through these warning pages.\nSetting this policy to false disallows users to click through any warning page.",
        "type": "boolean"
      },
      "SSLVersionMin": {
        "title": "Minimum SSL version enabled",
        "description": "If this policy is not configured then Brave Browser uses a default minimum version which is TLS 1.0.",
        "type": {
          "string": {
            "rangeList": [
              [
                "tls1",
                "TLS 1.0"
              ],
              [
                "tls1.1",
                "TLS 1.1"
              ],
              [
                "tls1.2",
                "TLS 1.2"
              ]
            ]
          }
        }
      },
      "SUAllowsAutomaticUpdates": {
        "title": "Automatic Update Install Prompt",
        "description": "Controls the automatic update install prompt. When enabled, presents users with the option to allow automatic download and install of available updates. If disabled, disallows automatic updates and requires manual installation every time.",
        "type": "boolean"
      },
      "SUAutomaticallyUpdate": {
        "title": "Enable Automatic Silent Updates",
        "description": "Controls automatic silent updates. If enabled, users will not be informed about updates and updates will be silently installed when the app quits.",
        "type": "boolean"
      },
      "SUEnableAutomaticChecks": {
        "title": "Enable Automatic Update Checks",
        "description": "Controls automatic update checks.",
        "type": "boolean"
      },
      "SUFeedURL": {
        "title": "Sparkle Feed URL",
        "description": "Setting this to a non-existent URL will disable the ability for users to manually check for updates. Useful when you intend to use your own software distribution mechanism to deploy updates.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SUScheduledCheckInterval": {
        "title": "Automatic Update Check Interval",
        "description": "Controls the automatic update check interval. The default is 1 day (86400 seconds). Setting to 0 disables updates.",
        "type": "integer"
      },
      "SafeBrowsingAllowlistDomains": {
        "title": "Configure the list of domains on which Safe Browsing will not trigger warnings.",
        "description": "Configure the list of domains which Safe Browsing will trust. This means:\nSafe Browsing will not check for dangerous resources (e.g. phishing, malware, or unwanted software) if their URLs match these domains.\nSafe Browsing's download protection service will not check downloads hosted on these domains.\nSafe Browsing's password protection service will not check for password reuse if the page URL matches these domains.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "SafeBrowsingEnabled": {
        "title": "Enable Safe Browsing",
        "description": "Enables Brave Browser's Safe Browsing feature and prevents users from changing this setting.",
        "type": "boolean"
      },
      "SafeBrowsingExtendedReportingEnabled": {
        "title": "Enable Safe Browsing Extended Reporting",
        "description": "Enables Brave Browser's Safe Browsing Extended Reporting and prevents users from changing this setting.",
        "type": "boolean"
      },
      "SafeBrowsingExtendedReportingOptInAllowed": {
        "title": "Allow users to opt in to Safe Browsing extended reporting",
        "description": "This setting is deprecated, use SafeBrowsingExtendedReportingEnabled instead. Enabling or disabling SafeBrowsingExtendedReportingEnabled is equivalent to setting SafeBrowsingExtendedReportingOptInAllowed to False.",
        "type": "boolean"
      },
      "SafeBrowsingProtectionLevel": {
        "title": "Safe Browsing protection level",
        "description": "Allows you to control whether Brave Browser's Safe Browsing feature is enabled and the mode it operates in. Safe Browsing 'enhanced' mode provides better security, but requires sharing more browsing information with Google.",
        "type": "integer"
      },
      "SafeBrowsingWhitelistDomains": {
        "title": "Configure the list of domains on which Safe Browsing will not trigger warnings.",
        "description": "Configure the list of domains which Safe Browsing will trust. This means:\nSafe Browsing will not check for dangerous resources (e.g. phishing, malware, or unwanted software) if their URLs match these domains.\nSafe Browsing's download protection service will not check downloads hosted on these domains.\nSafe Browsing's password protection service will not check for password reuse if the page URL matches these domains.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "SafeSitesFilterBehavior": {
        "title": "Control SafeSites adult content filtering.",
        "description": "This policy controls the application of the SafeSites URL filter.\nThis filter uses the Google Safe Search API to classify URLs as pornographic or not.",
        "type": "integer"
      },
      "SavingBrowserHistoryDisabled": {
        "title": "Disable saving browser history",
        "description": "Disables saving browser history in Brave Browser and prevents users from changing this setting.",
        "type": "boolean"
      },
      "ScreenCaptureAllowed": {
        "title": "Screen Capture",
        "description": "If enabled or not configured (default), a Web page can use screen-share APIs (e.g., getDisplayMedia() or the Desktop Capture extension API) to prompt the user to select a tab, window or desktop to capture.",
        "type": "boolean"
      },
      "ScrollToTextFragmentEnabled": {
        "title": "Enable scroll to text fragment",
        "description": "This feature allows for hyperlinks and address bar URL navigations to target specific text within a web page, which will be scrolled to once the loading of the web page is complete.",
        "type": "boolean"
      },
      "SearchSuggestEnabled": {
        "title": "Enable search suggestions",
        "description": "Enables search suggestions in Brave Browser's omnibox and prevents users from changing this setting.",
        "type": "boolean"
      },
      "SecurityKeyPermitAttestation": {
        "title": "URLs/domains automatically permitted direct Security Key attestation",
        "description": "Specifies URLs and domains for which no prompt will be shown when attestation certificates from Security Keys are requested. Additionally, a signal will be sent to the Security Key indicating that individual attestation may be used. Without this, users will be prompted in Chromium 65+ when sites request attestation of Security Keys.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "SharedClipboardEnabled": {
        "title": "Enable Shared Clipboard",
        "description": "Enables the Shared Clipboard feature which allows users to send text between Brave Browser Desktops and an Android device when Sync is enabled and the user is Signed-in.",
        "type": "boolean"
      },
      "ShowAppsShortcutInBookmarkBar": {
        "title": "Show the apps shortcut in the bookmark bar",
        "description": "Enables or disables the apps shortcut in the bookmark bar.",
        "type": "boolean"
      },
      "ShowCastIconInToolbar": {
        "title": "Show the Google Cast toolbar icon",
        "description": "If this policy is set to true, the Cast toolbar icon will always be shown on the toolbar or the overflow menu, and users will not be able to remove it.",
        "type": "boolean"
      },
      "ShowFullUrlsInAddressBar": {
        "title": "Show Full URLs",
        "description": "This feature enables display of the full URL in the address bar. If this policy is set to True, then the full URL will be shown in the address bar, including schemes and subdomains. If this policy is set to False, then the default URL display will apply.",
        "type": "boolean"
      },
      "ShowHomeButton": {
        "title": "Show Home button on toolbar",
        "description": "Shows the Home button on Brave Browser's toolbar.",
        "type": "boolean"
      },
      "SignedHTTPExchangeEnabled": {
        "title": "Enabled Signed HTTP Exchange (SXG) support",
        "description": "Enable support for Signed HTTP Exchange (SXG).",
        "type": "boolean"
      },
      "SigninAllowed": {
        "title": "Allow sign in",
        "description": "This policy is deprecated, consider using BrowserSignin instead.\n\nAllows the user to sign in to Brave Browser.",
        "type": "boolean"
      },
      "SigninInterceptionEnabled": {
        "title": "Enable signin interception",
        "description": "This settings enables or disables signin interception. When this policy not set or is set to True, the signin interception dialog triggers when a Google account is added on the web, and the user may benefit from moving this account to another (new or existing) profile. When this is set to False, the signin interception dialog does not trigger.",
        "type": "boolean"
      },
      "SitePerProcess": {
        "title": "Enable Site Isolation for every site",
        "description": "You might want to look at the IsolateOrigins policy setting to get the best of both worlds, isolation and limited impact for users, by using IsolateOrigins with a list of the sites you want to isolate. This setting, SitePerProcess, isolates all sites. If the policy is enabled, each site will run in its own process. If the policy is disabled, no explicit Site Isolation will happen and field trials of IsolateOrigins and SitePerProcess will be disabled. Users will still be able to enable SitePerProcess manually. If the policy is not configured, the user will be able to change this setting. On Brave Browser OS, it is recommended to also set the DeviceLoginScreenSitePerProcess device policy to the same value. If the values specified by the two policies don't match, a delay may be incurred when entering a user session while the value specified by user policy is being applied.",
        "type": "boolean"
      },
      "SpellCheckServiceEnabled": {
        "title": "Enable or disable spell checking web service",
        "description": "Brave Browser can use a Google web service to help resolve spelling errors. If this setting is enabled, then this service is always used. If this setting is disabled, then this service is never used.",
        "type": "boolean"
      },
      "SpellcheckEnabled": {
        "title": "Enable spellcheck",
        "description": "If this policy is not set or enabled, the user is allowed to use spellcheck.",
        "type": "boolean"
      },
      "StricterMixedContentTreatmentEnabled": {
        "title": "Stricter Mixed Content Treatment",
        "description": "This policy controls the treatment for mixed content (HTTP content in HTTPS sites) in the browser. If the policy is set to true or unset, audio and video mixed content will be autoupgraded to HTTPS (i.e. the URL will be rewritten as HTTPS, without a fallback if the resource is not available over HTTPS) and a 'Not Secure' warning will be shown in the URL bar for image mixed content. If the policy is set to false, autoupgrades will be disabled for audio and video, and no warning will be shown for images. This policy does not affect other types of mixed content other than audio, video, and images. This policy will no longer take effect starting in Chromium 84.",
        "type": "boolean"
      },
      "SuppressUnsupportedOSWarning": {
        "title": "Suppress the unsupported OS warning",
        "description": "Suppresses the warning that appears when Brave Browser is running on a computer or operating system that is no longer supported.",
        "type": "boolean"
      },
      "SyncDisabled": {
        "title": "Disable synchronization of data with Google",
        "description": "Disables data synchronization in Brave Browser using Google-hosted synchronization services and prevents users from changing this setting.",
        "type": "boolean"
      },
      "SyncTypesListDisabled": {
        "title": "Sync types to disable",
        "description": "If this policy is set, all specified data types will be excluded from synchronization both for Google Sync as well as for roaming profile synchronization.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "apps",
                    "Apps"
                  ],
                  [
                    "autofill",
                    "Autofill"
                  ],
                  [
                    "bookmarks",
                    "Bookmarks"
                  ],
                  [
                    "extensions",
                    "Extensions"
                  ],
                  [
                    "passwords",
                    "Passwords"
                  ],
                  [
                    "preferences",
                    "Preferences"
                  ],
                  [
                    "tabs",
                    "Tabs"
                  ],
                  [
                    "themes",
                    "Themes"
                  ],
                  [
                    "typedUrls",
                    "Typed URLs"
                  ],
                  [
                    "wifiConfiguration",
                    "Wifi Configuration"
                  ]
                ]
              }
            }
          ]
        }
      },
      "TLS13HardeningForLocalAnchorsEnabled": {
        "title": "Enable TLS 1.3 hardening for local anchors",
        "description": "Enable a TLS 1.3 security feature for local trust anchors. This policy controls a security feature in TLS 1.3 which protects connections against downgrade attacks. It is backwards-compatible and will not affect connections to compliant TLS 1.2 servers or proxies. However, older versions of some TLS-intercepting proxies have an implementation flaw which causes them to be incompatible.",
        "type": "boolean"
      },
      "TargetBlankImpliesNoOpener": {
        "title": "Do not set window.opener for links targeting _blank",
        "description": "Setting the policy to Disabled allows popups targeting _blank to access (via JavaScript) the page that requested to open the popup. Setting the policy to Enabled or leaving it unset causes the window.opener property to be set to null unless the anchor specifies rel=\"opener\".",
        "type": "boolean"
      },
      "TaskManagerEndProcessEnabled": {
        "title": "Enable ending processes in Task Manager",
        "description": "If set to false, the 'End process' button is disabled in the Task Manager.",
        "type": "boolean"
      },
      "ThirdPartyStoragePartitioningBlockedForOrigins": {
        "title": "Third Party Storage Partitioning Blocked For Origins",
        "description": "Allows you to set a list of url patterns that specify top-level (the url in the tab's address bar) origins which block third-party storage partitioning (partitioning of cross-origin iframe storage). If this policy is left not set or a top-level origin doesn't match then the value from DefaultThirdPartyStoragePartitioningSetting will be used.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "TorDisabled": {
        "title": "Disable Tor",
        "description": "false = Tor Enabled; true = Tor Disabled",
        "type": "boolean"
      },
      "TotalMemoryLimitMb": {
        "title": "Total Memory Limit",
        "description": "Configures the amount of memory that a single Brave Browser instance can use before tabs start being discarded (I.E. the memory used by the tab will be freed and the tab will have to be reloaded when switched to) to save memory. The minimum allowed value is 1024.",
        "type": "integer"
      },
      "TranslateEnabled": {
        "title": "Enable Translate",
        "description": "Enables the integrated Google Translate service on Brave Browser.",
        "type": "boolean"
      },
      "URLAllowlist": {
        "title": "Allow access to a list of URLs",
        "description": "Allows access to the listed URLs, as exceptions to the URL block list. A URL pattern is formatted according to https://www.chromium.org/administrators/url-blacklist-filter-format.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "URLBlacklist": {
        "title": "URL Blacklist",
        "description": "This policy prevents the user from loading web pages from blacklisted URLs. The denylist provides a list of URL patterns that specify which URLs will be denied. A URL pattern is formatted according to https://www.chromium.org/administrators/url-blacklist-filter-format.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "URLBlocklist": {
        "title": "URL Blocklist",
        "description": "This policy prevents the user from loading web pages from blocked URLs. The blocklist provides a list of URL patterns that specify which URLs will be denied. A URL pattern is formatted according to https://www.chromium.org/administrators/url-blacklist-filter-format.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "URLWhitelist": {
        "title": "Allow access to a list of URLs",
        "description": "Allows access to the listed URLs, as exceptions to the URL denylist. A URL pattern is formatted according to https://www.chromium.org/administrators/url-blacklist-filter-format.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "UnsafelyTreatInsecureOriginAsSecure": {
        "title": "Origins or hostname patterns for which restrictions on insecure origins should not apply",
        "description": "Deprecated in M69. Use OverrideSecurityRestrictionsOnInsecureOrigin instead.\n\nThe policy specifies a list of origins (URLs) or hostname patterns (such as \"*.example.com\") for which security restrictions on insecure origins will not apply.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "UrlKeyedAnonymizedDataCollectionEnabled": {
        "title": "Enable URL-keyed anonymized data collection",
        "description": "Enable URL-keyed anonymized data collection in Brave Browser and prevents users from changing this setting.",
        "type": "boolean"
      },
      "UserAgentClientHintsEnabled": {
        "title": "Enable user agent client hints",
        "description": "When enabled the User-Agent Client Hints feature sends granular request headers providing information about the user browser and environment.",
        "type": "boolean"
      },
      "UserDataDir": {
        "title": "Set user data directory",
        "description": "Configures the directory that Brave Browser will use for storing user data. See https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UserDataSnapshotRetentionLimit": {
        "title": "User data snapshot retention limit",
        "description": "Limits the number of user data snapshots retained for use in case of emergency rollback. If this policy is not set, the default value of 3 is used. If the policy is set to 0, no snapshots will be taken.",
        "type": "integer"
      },
      "UserFeedbackAllowed": {
        "title": "Allow user feedback",
        "description": "Allow user feedback. If the policy is set to false, users can not send feedback to Google.",
        "type": "boolean"
      },
      "VideoCaptureAllowed": {
        "title": "Allow or deny video capture",
        "description": "If enabled or not configured (default), the user will be prompted for\nvideo capture access except for URLs configured in the\nVideoCaptureAllowedUrls list which will be granted access without prompting.",
        "type": "boolean"
      },
      "VideoCaptureAllowedUrls": {
        "title": "URLs that will be granted access to video capture devices without prompt",
        "description": "Patterns in this list will be matched against the security\norigin of the requesting URL.  If a match is found, access to audio\ncapture devices will be granted without prompt.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "WPADQuickCheckEnabled": {
        "title": "Enable WPAD optimization",
        "description": "Allows to turn off WPAD (Web Proxy Auto-Discovery) optimization in Brave Browser.",
        "type": "boolean"
      },
      "WebAppInstallForceList": {
        "title": "WebApp Force Install List",
        "description": "Specifies a list of websites that are installed silently, without user interaction, and which cannot be uninstalled nor disabled by the user.",
        "type": {
          "array": [
            {
              "dictionary": {
                "create_desktop_shortcut": {
                  "title": "Create Desktop Shortcut",
                  "type": "boolean"
                },
                "custom_icon": {
                  "title": "Custom Icon",
                  "type": {
                    "dictionary": {
                      "hash": {
                        "title": "Custom Icon Hash",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "url": {
                        "title": "Custom Icon URL",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      }
                    }
                  }
                },
                "custom_name": {
                  "title": "Custom Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "default_launch_container": {
                  "title": "Default Launch Container",
                  "type": {
                    "string": {
                      "rangeList": [
                        [
                          "window",
                          "Window"
                        ],
                        [
                          "tab",
                          "Tab"
                        ]
                      ]
                    }
                  }
                },
                "fallback_app_name": {
                  "title": "Fallback App Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "install_as_shortcut": {
                  "title": "Install as Shortcut",
                  "type": "boolean"
                },
                "url": {
                  "title": "URL",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "WebComponentsV0Enabled": {
        "title": "Re-enable Web Components v0 API until M84",
        "description": "The Web Components v0 APIs (Shadow DOM v0, Custom Elements v0, and HTML Imports) were deprecated in 2018, and have been disabled by default starting in M80. This policy allows these features to be selectively re-enabled until M84.",
        "type": "boolean"
      },
      "WebDriverOverridesIncompatiblePolicies": {
        "title": "Allow WebDriver to Override Incompatible Policies",
        "description": "This policy allows users of the WebDriver feature to override policies which can interfere with its operation.",
        "type": "boolean"
      },
      "WebRtcAllowLegacyTLSProtocols": {
        "title": "Allow legacy TLS/DTLS downgrade in WebRTC",
        "description": "f enabled, WebRTC peer connections can downgrade to obsolete versions of the TLS/DTLS (DTLS 1.0, TLS 1.0 and TLS 1.1) protocols. When this policy is disabled or not set, these TLS/DTLS versions are disabled.",
        "type": "boolean"
      },
      "WebRtcEventLogCollectionAllowed": {
        "title": "Allow collection of WebRTC event logs from Google services",
        "description": "If the policy is set to true, Brave Browser is allowed to collect WebRTC event logs from Google services (e.g. Google Meet), and upload those logs to Google.",
        "type": "boolean"
      },
      "WebRtcLocalIpsAllowedUrls": {
        "title": "Allowed WebRTC local IP URLs",
        "description": "Patterns in this list will be matched against the security origin of the requesting URL. If a match is found or chrome://flags/#enable-webrtc-hide-local-ips-with-mdns is Disabled, the local IP addresses are shown in WebRTC ICE candidates. Otherwise, local IP addresses are concealed with mDNS hostnames.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "WebRtcUdpPortRange": {
        "title": "Restrict the range of local UDP ports used by WebRTC",
        "description": "If the policy is set, the UDP port range used by WebRTC is restricted to the specified port interval (endpoints included).",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "WebUsbAllowDevicesForUrls": {
        "title": "Automatically grant permission to these sites to connect to USB devices with the given vendor and product IDs",
        "description": "Allows you to set a list of urls that specify which sites will automatically be granted permission to access a USB device with the given vendor and product IDs.",
        "type": {
          "array": [
            {
              "dictionary": {
                "devices": {
                  "title": "Devices",
                  "type": {
                    "array": [
                      {
                        "dictionary": {
                          "product_id": {
                            "title": "product_id",
                            "type": "integer"
                          },
                          "vendor_id": {
                            "title": "vendor_id",
                            "type": "integer"
                          }
                        }
                      }
                    ]
                  }
                },
                "urls": {
                  "title": "URLs",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "WebUsbAskForUrls": {
        "title": "Allow WebUSB on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to ask the user to grant them access to a USB device.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "WebUsbBlockedForUrls": {
        "title": "Block WebUSB on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are prevented from asking the user to grant them access to a USB device.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.citrix.receiver.nomas": {
    "title": "Citrix Receiver",
    "description": "Citrix Receiver",
    "properties": {
      "AutoUpdateRollOutBucketIndex": {
        "title": "AutoUpdateRollOutBucketIndex",
        "description": "Used to configure the Updates rollout period.",
        "type": "integer"
      },
      "AutoUpdateState": {
        "title": "AutoUpdateState",
        "description": "Used to configure Citrix Receiver Updates state.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BITApplicationWasLaunched": {
        "title": "BITApplicationWasLaunched",
        "description": "",
        "type": "boolean"
      },
      "CEIPEnabled": {
        "title": "CEIPEnabled",
        "description": "",
        "type": "boolean"
      },
      "DisplaySplashScreen": {
        "title": "DisplaySplashScreen",
        "description": "",
        "type": "boolean"
      },
      "HDXOverUDPAllowed": {
        "title": "HDXOverUDPAllowed",
        "description": "Disables Enlightened Data Transport (EDT).",
        "type": "boolean"
      },
      "HockeySDKAutomaticallySendCrashReports": {
        "title": "HockeySDKAutomaticallySendCrashReports",
        "description": "",
        "type": "boolean"
      },
      "HockeySDKCrashReportActivated": {
        "title": "HockeySDKCrashReportActivated",
        "description": "",
        "type": "boolean"
      },
      "LegacyPublishedContentEnabled": {
        "title": "LegacyPublishedContentEnabled",
        "description": "Allows the use of non-HTTP(S) URLs",
        "type": "boolean"
      },
      "MenuBarAutoShowDelay": {
        "title": "MenuBarAutoShowDelay",
        "description": "",
        "type": "real"
      },
      "MenuBarAutoShowDelayEnabled": {
        "title": "MenuBarAutoShowDelayEnabled",
        "description": "",
        "type": "boolean"
      },
      "NetDisruptBrightness": {
        "title": "NetDisruptBrightness",
        "description": "Configures the greyscale brightness used for an inactive session. 100 = transparent, 0 = black",
        "type": "integer"
      },
      "PreferFFMPEGDecoder": {
        "title": "PreferFFMPEGDecoder",
        "description": "",
        "type": "boolean"
      },
      "PreferH264HardwareDecoder": {
        "title": "PreferH264HardwareDecoder",
        "description": "",
        "type": "boolean"
      },
      "PreferMetalRendering": {
        "title": "PreferMetalRendering",
        "description": "",
        "type": "boolean"
      },
      "SSLCertificateRevocationCheckPolicy": {
        "title": "SSLCertificateRevocationCheckPolicy",
        "description": "This setting governs how a given trusted root certificate authority is treated during an attempt to open a remote session through SSL. When you enable this setting, the client checks whether or not the server's certificate is revoked.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecurityAllowedTLSVersions": {
        "title": "SecurityAllowedTLSVersions",
        "description": "This setting specifies the TLS protocol versions that should be accepted during protocol negotiation. This information is represented as an array and any combination of the possible values is supported. When this setting is not configured, the values TLS10, TLS11 and TLS12 are used as the default values. ",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "TLS10",
                    "TLS 1.0"
                  ],
                  [
                    "TLS11",
                    "TLS 1.1"
                  ],
                  [
                    "TLS12",
                    "TLS 1.2"
                  ]
                ]
              }
            }
          ]
        }
      },
      "SecurityComplianceMode": {
        "title": "SecurityComplianceMode",
        "description": "Sets the security compliance mode for the policy. If you don't configure SecurityComplianceMode, FIPS is used as the default value.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TraceOn": {
        "title": "TraceOn",
        "description": "",
        "type": "boolean"
      },
      "UDPStackParameters": {
        "title": "UDPStackParameters",
        "description": "",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.crowdstrike.falcon": {
    "title": "CrowdStrike Falcon",
    "description": "CrowdStrike Falcon Settings",
    "properties": {
      "ccid": {
        "title": "CustomerID with Checksum (CCID)",
        "description": "The CCID licenses the CrowdStrike Falcon sensor to your customer ID.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "groupingTags": {
        "title": "Grouping Tags",
        "description": "Grouping Tags are an optional way to add text-based attributes that can be filtered on in Host Groups management. Multiple Grouping Tags can be added, separated by commas. Do not include spaces. See Documentation > Host and Host Group Management > Using Grouping Tags for more information.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "provisioningToken": {
        "title": "Provisioning Token",
        "description": "Installation Tokens are an optional way to require additional, revocable tokens (passwords) as a security measure when licensing a sensor to your CID. See Documentation > Host and Host Group Management > Protecting your CID with installation tokens for more information. Installation Tokens are disabled by default.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.fxfactory.FxFactory": {
    "title": "FxFactory",
    "description": "FxFactory settings",
    "properties": {
      "allowAutomaticUpdates": {
        "title": "Enable automatic updates",
        "description": "Setting this to true, automatic updates will be enabled",
        "type": "boolean"
      },
      "checkForUpdates": {
        "title": "Check for new versions of installed plugins",
        "description": "Setting this to true, FxFactory will check for the latest versions of installed plugins",
        "type": "boolean"
      },
      "warnAboutMissingComponents": {
        "title": "Notify when required components are missing",
        "description": "Setting this to true, FxFactory will send a notification when any components required for normal operation are missing from the system",
        "type": "boolean"
      },
      "warnAboutUnsupportedHost": {
        "title": "Notify when products cannot be loaded by current application",
        "description": "Setting this to true, FxFactory will send a notification if any products cannot be loaded by the current application due to a compatibility issue",
        "type": "boolean"
      },
      "warnAboutUpdates": {
        "title": "Notify when a new version of FxFactory is available",
        "description": "Setting this to true, FxFactory will send a notification when a new version is available, while using any application that loads FxFactory",
        "type": "boolean"
      },
      "warnAboutUpdatesToOtherSoftware": {
        "title": "Notify when critical updates to other software are available",
        "description": "Setting this to true, FxFactory will send a notification when it finds outdated software on your system that may interfere with the operation of its products",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.github.ants-framework": {
    "title": "ANTS Framework",
    "description": "ANTS Framework settings",
    "properties": {
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ad": {
        "title": "Active Directory",
        "description": "Active Directory",
        "type": {
          "dictionary": {
            "cache_file": {
              "title": "Cache File",
              "description": "Absolute path to a cache file of Active Directory results.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "common_ad_connected": {
              "title": "Common AD Connected",
              "description": "A common group that computers are put in when the inventory script actively connects to Active Directory.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "common_group": {
              "title": "Common Group",
              "description": "A common group to put all computers in.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "group_prefix": {
              "title": "Group Prefix",
              "description": "Group prefix used to filter groups from Active Directory.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ldap_host": {
              "title": "LDAP Host",
              "description": "LDAP server to connect to for inventory purposes.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ldap_ou_computers": {
              "title": "LDAP OU Computers",
              "description": "LDAP location of computer objects.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ldap_ou_groups": {
              "title": "LDAP OU Groups",
              "description": "LDAP location of group objects.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ldap_pw": {
              "title": "LDAP Password",
              "description": "Password to use to connect to LDAP.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ldap_user": {
              "title": "LDAP User",
              "description": "User name to use to connect to LDAP.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "main": {
        "title": "General",
        "description": "General",
        "type": {
          "dictionary": {
            "ansible_playbook": {
              "title": "Ansible Playbook",
              "description": "File name of the primary Ansible playbook to run relative to your <Destination> directory.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ansible_pull_exe": {
              "title": "Ansible Pull",
              "description": "Absolute path to a different ansible-pull binary installed on the local machine.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "branch": {
              "title": "Branch",
              "description": "Git branch to check out from your Git repository.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "destination": {
              "title": "Destination",
              "description": "Absolute path on the local machine to check out your Git repository.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "git_repository": {
              "title": "Git Repository",
              "description": "URL of the repository that contains your Ansible playbooks.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "inventory_script": {
              "title": "Inventory Script",
              "description": "Relative or absolute path to an ansible inventory script.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "log_dir": {
              "title": "Log Directory",
              "description": "Absolute path of where to store log files from runs.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "skip_tags": {
              "title": "Skip Tags",
              "description": "Run the Ansible playbook on all tags except the provided comma separated list.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ssh_key": {
              "title": "SSH Key",
              "description": "Absolute path to a SSH key with permission to access your Git repository.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ssh_stricthostkeychecking": {
              "title": "Strict Host Key Checking",
              "description": "Whether or not to use strict host key checking when running Git commands.",
              "type": "boolean"
            },
            "tags": {
              "title": "Tags",
              "description": "Limit the Ansible playbook run to a comma separated list of tags.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "wait_interval": {
              "title": "Wait Interval",
              "description": "The number of seconds to wait in between ansible-pull runs.",
              "type": "integer"
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.github.macadmins.Nudge": {
    "title": "Nudge",
    "description": "Nudge settings",
    "properties": {
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "json-url": {
        "title": "JSON Preference File Location",
        "description": "When configuring Nudge using a JSON-formatted preferences file located outside of the default location, set this key to the custom location using either a remote (https://) or a local (file://) URL, and leave other keys in this payload unset. Leave this key unset when configuring Nudge using the other keys in this payload.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "optionalFeatures": {
        "title": "Optional Features",
        "type": {
          "dictionary": {
            "acceptableApplicationBundleIDs": {
              "title": "Acceptable Application Bundle IDs",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "acceptableAssertionApplicationNames": {
              "title": "Acceptable Assertion Application Names",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "acceptableAssertionUsage": {
              "title": "Acceptable Assertion Usage",
              "type": "boolean"
            },
            "acceptableCameraUsage": {
              "title": "Acceptable Camera Usage",
              "type": "boolean"
            },
            "acceptableScreenSharingUsage": {
              "title": "Acceptable Screen Sharing Usage",
              "type": "boolean"
            },
            "aggressiveUserExperience": {
              "title": "Aggressive User Experience",
              "type": "boolean"
            },
            "aggressiveUserFullScreenExperience": {
              "title": "Aggressive User Full Screen Experience",
              "type": "boolean"
            },
            "asynchronousSoftwareUpdate": {
              "title": "Asynchronous Software Update",
              "type": "boolean"
            },
            "attemptToBlockApplicationLaunches": {
              "title": "Attempt To Block Application Launches",
              "type": "boolean"
            },
            "attemptToFetchMajorUpgrade": {
              "title": "Attempt to Fetch Major Upgrade",
              "type": "boolean"
            },
            "blockedApplicationBundleIDs": {
              "title": "Blocked Application Bundle IDs",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "disableSoftwareUpdateWorkflow": {
              "title": "Disable Software Update Workflow",
              "type": "boolean"
            },
            "enforceMinorUpdates": {
              "title": "Enforce Minor Updates",
              "type": "boolean"
            },
            "terminateApplicationsOnLaunch": {
              "title": "Terminate Applications On Launch",
              "type": "boolean"
            }
          }
        }
      },
      "osVersionRequirements": {
        "title": "OS Version Requirements",
        "description": "The required components necessary to enforce an Operating System version through Nudge.\n\nSpecify one array to enforce a single Operating System version across all machines or specify multiple arrays for specific enforcements.",
        "type": {
          "array": [
            {
              "dictionary": {
                "aboutUpdateURL": {
                  "title": "About Update URL",
                  "description": "A single URL, enabling the More Info button URL path. Ignored when About Update URLs (in plural) is also present.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "aboutUpdateURLs": {
                  "title": "About Update URLs",
                  "type": {
                    "array": [
                      {
                        "dictionary": {
                          "_language": {
                            "title": "_language",
                            "type": {
                              "string": {
                                "rangeList": []
                              }
                            }
                          },
                          "aboutUpdateURL": {
                            "title": "aboutUpdateURL",
                            "type": {
                              "string": {
                                "rangeList": []
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "majorUpgradeAppPath": {
                  "title": "Major macOS Upgrade App Path",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "requiredInstallationDate": {
                  "title": "Required Installation Date",
                  "description": "The required installation date for Nudge to enforce the required operating system version. You must follow a standard date string as YYYY-MM-DDTHH:MM:SSZ - Example: \"2021-01-31T00:00:00Z\"",
                  "type": "date"
                },
                "requiredMinimumOSVersion": {
                  "title": "Required Minimum OS Version",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "targetedOSVersions": {
                  "title": "Targeted OS Versions",
                  "description": "The versions of macOS that require a security update. You can specify single version or multiple versions.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "targetedOSVersionsRule": {
                  "title": "Targeted OS Versions Rule",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "userExperience": {
        "title": "User Experience",
        "type": {
          "dictionary": {
            "allowGracePeriods": {
              "title": "Allow Grace Periods",
              "type": "boolean"
            },
            "allowUserQuitDeferrals": {
              "title": "Allow User Quit Deferrals",
              "type": "boolean"
            },
            "allowedDeferrals": {
              "title": "Allowed Deferrals",
              "type": "integer"
            },
            "allowedDeferralsUntilForcedSecondaryQuitButton": {
              "title": "Allowed Deferrals until Forced Secondary Quit Button",
              "type": "integer"
            },
            "approachingRefreshCycle": {
              "title": "Approaching Refresh Cycle",
              "type": "integer"
            },
            "approachingWindowTime": {
              "title": "Approaching Window Time",
              "type": "integer"
            },
            "elapsedRefreshCycle": {
              "title": "Elapsed Refresh Cycle",
              "type": "integer"
            },
            "gracePeriodInstallDelay": {
              "title": "Grace Period Install Delay",
              "type": "integer"
            },
            "gracePeriodLaunchDelay": {
              "title": "Grace Period Launch Delay",
              "type": "integer"
            },
            "gracePeriodPath": {
              "title": "Grace Period Path",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "imminentRefeshCycle": {
              "title": "Imminent Refresh Cycle",
              "type": "integer"
            },
            "imminentRefreshCycle": {
              "title": "Imminent Refresh Cycle",
              "type": "integer"
            },
            "imminentWindowTime": {
              "title": "Imminent Window Time",
              "type": "integer"
            },
            "initialRefreshCycle": {
              "title": "Initial Refresh Cycle",
              "type": "integer"
            },
            "maxRandomDelayInSeconds": {
              "title": "Max Random Delay",
              "type": "integer"
            },
            "noTimers": {
              "title": "No Timers",
              "type": "boolean"
            },
            "nudgeRefreshCycle": {
              "title": "Nudge Refresh Cycle",
              "type": "integer"
            },
            "randomDelay": {
              "title": "Random Delay",
              "type": "boolean"
            }
          }
        }
      },
      "userInterface": {
        "title": "User Interface",
        "type": {
          "dictionary": {
            "actionButtonPath": {
              "title": "Action Button Path",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "fallbackLanguage": {
              "title": "Fallback Language",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "forceFallbackLanguage": {
              "title": "Force Fallback Language",
              "type": "boolean"
            },
            "forceScreenShotIcon": {
              "title": "Force Screenshot Icon",
              "type": "boolean"
            },
            "iconDarkPath": {
              "title": "Dark Icon Path",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "iconLightPath": {
              "title": "Light Icon Path",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "screenShotDarkPath": {
              "title": "Dark Screenshot Path",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "screenShotLightPath": {
              "title": "Light Screenshot Path",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "showDeferralCount": {
              "title": "Show Deferral Count",
              "type": "boolean"
            },
            "simpleMode": {
              "title": "Simple Mode",
              "type": "boolean"
            },
            "singleQuitButton": {
              "title": "single Quit Button",
              "type": "boolean"
            },
            "updateElements": {
              "title": "Update Elements",
              "description": "A list of dictionaries, enabling further customization to the Nudge UI",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "_language": {
                        "title": "Language",
                        "description": "The targeted language locale for the user interface.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "actionButtonText": {
                        "title": "Action Button Text",
                        "description": "Modifies the actionButton, also known as the 'Update Device' button.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "customDeferralButtonText": {
                        "title": "Custom Deferral Button Text",
                        "description": "Modifies the customDeferralButtonText, also known as the \"Custom\" button.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "customDeferralDropdownText": {
                        "title": "Custom Deferral Dropdown Text",
                        "description": "Modifies the customDeferralDropdownText, also known as the \"Defer\" button.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "informationButtonText": {
                        "title": "Information Button Text",
                        "description": "Modifies the informationButton, also known as the 'More Info' button.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "mainContentHeader": {
                        "title": "Main Content Header",
                        "description": "Modifies the mainContentHeader. This is the 'Your device will restart during this update' text.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "mainContentNote": {
                        "title": "Main Content Note",
                        "description": "Modifies the mainContentNote. This is the 'Important Notes' text.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "mainContentSubHeader": {
                        "title": "Main Content Sub Header",
                        "description": "Modifies the mainContentSubHeader. This is the 'Updates can take around 30 minutes to complete' text.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "mainContentText": {
                        "title": "Main Content Text",
                        "description": "Modifies the mainContentText. This is the 'A fully up-to-date device is required to ensure that IT can your accurately protect your device.\\n\\nIf you do not update your device, you may lose access to some items necessary for your day-to-day tasks.\\n\\nTo begin the update, simply click on the button below and follow the provided steps.' text.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "mainHeader": {
                        "title": "Main Header",
                        "description": "Modifies the mainHeader. This is the 'Your device requires a security update' text.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "oneDayDeferralButtonText": {
                        "title": "One Day Deferral Button Text",
                        "description": "Modifies the oneDayDeferralButtonText, also known as the \"One Day\" button.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "oneHourDeferralButtonText": {
                        "title": "One Hour Deferral Button Text",
                        "description": "Modifies the oneHourDeferralButtonText, also known as the \"One Hour\" button.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "primaryQuitButtonText": {
                        "title": "Primary Quit Button Text",
                        "description": "Modifies the primaryQuitButton, also known as the 'Later' button.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "secondaryQuitButtonText": {
                        "title": "Secondary Quit Button Text",
                        "description": "Modifies the secondaryQuitButton, also known as the 'I understand' button.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "subHeader": {
                        "title": "Sub Header",
                        "description": "Modifies the subHeader. This is the 'A friendly reminder from your local IT team' text.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.github.mpanighetti.install-or-defer": {
    "title": "Install or Defer",
    "description": "Install or Defer settings",
    "properties": {
      "DeferButtonLabel": {
        "title": "Defer Button Label",
        "description": "The label of the defer button.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DeferralPeriod": {
        "title": "Deferral Period",
        "description": "Number of seconds between when the user clicks \"Defer\" and the next prompt appears.",
        "type": "integer"
      },
      "DiagnosticLog": {
        "title": "Enable Diagnostic Log",
        "description": "Whether to write to a persistent log file at /var/log/install-or-defer.log.",
        "type": "boolean"
      },
      "DisablePostInstallAlert": {
        "title": "Disable Post-Install Alert",
        "description": "Whether to suppress the persistent alert to run updates.",
        "type": "boolean"
      },
      "HardRestartDelay": {
        "title": "Hard Restart Delay",
        "description": "Number of seconds to wait between attempting a soft restart and forcing a restart.",
        "type": "integer"
      },
      "InstallButtonLabel": {
        "title": "Install Button Label",
        "description": "The label of the install button.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ManualUpdates": {
        "title": "Manual Updates",
        "description": "Whether to prompt users to run updates manually via System Preferences.",
        "type": "boolean"
      },
      "MaxDeferralTime": {
        "title": "Maximum Deferral Time",
        "description": "Number of seconds between the first script run and the updates being enforced.",
        "type": "integer"
      },
      "MessagingLogo": {
        "title": "Messaging Logo",
        "description": "File path to a logo that will be used in messaging.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PromptTimeout": {
        "title": "Prompt Timeout",
        "description": "Number of seconds to wait before timing out the Install or Defer prompt.",
        "type": "integer"
      },
      "SkipDeferral": {
        "title": "Skip Deferral",
        "description": "Whether to bypass deferral time entirely and skip straight to update enforcement.",
        "type": "boolean"
      },
      "SupportContact": {
        "title": "Support Contact",
        "description": "Contact information for technical support included in messaging alerts.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UpdateDelay": {
        "title": "Update Delay",
        "description": "Number of seconds to wait between displaying the \"install updates\" message and applying updates, then attempting a soft restart.",
        "type": "integer"
      },
      "WorkdayEndHour": {
        "title": "Workday End Hour",
        "description": "The hour that a workday ends in your organization.",
        "type": "integer"
      },
      "WorkdayStartHour": {
        "title": "Workday Start Hour",
        "description": "The hour that a workday starts in your organization.",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.github.salopensource.sal": {
    "title": "Sal",
    "description": "Sal settings",
    "properties": {
      "BasicAuth": {
        "title": "BasicAuth",
        "description": "Whether to use basic authentication on your server.",
        "type": "boolean"
      },
      "CACert": {
        "title": "CACert",
        "description": "Path to your sal certificate. Curl on 10.13 requires this for self-signed certificates or uploading the report data will fail.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "GetGrains": {
        "title": "GetGrains",
        "description": "Collect Salt grains and upload them to Sal.",
        "type": "boolean"
      },
      "GetOhai": {
        "title": "GetOhai",
        "description": "Collect Ohai attributes and upload them to Sal.",
        "type": "boolean"
      },
      "SSLClientCertificate": {
        "title": "SSLClientCertificate",
        "description": "Absolute path to the SSL client certificate to use with mutual TLS when connecting to the sal server in PEM format.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SSLClientKey": {
        "title": "SSLClientKey",
        "description": "Full path to your sal SSL client key file for mutual TLS",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ServerURL": {
        "title": "ServerURL",
        "description": "URL of your Sal server.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SkipFacts": {
        "title": "SkipFacts",
        "description": "It is possible to not upload all the data produced by Facter. You may have facts that are duplicates of other information Sal collects, or you don't wish to upload them for security reasons.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "SyncScripts": {
        "title": "SyncScripts",
        "description": "Download the scripts needed to run for your plugins from the server.",
        "type": "boolean"
      },
      "key": {
        "title": "key",
        "description": "The machine group's key.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.google.Chrome": {
    "title": "Google Chrome",
    "description": "Google Chrome Managed Settings",
    "properties": {
      "AbusiveExperienceInterventionEnforce": {
        "title": "Abusive Experience Intervention Enforce",
        "description": "Allows you to set whether sites with abusive experiences should be prevented from opening new windows or tabs.",
        "type": "boolean"
      },
      "AccessibilityImageLabelsEnabled": {
        "title": "Allow accessibility descriptions for Google images",
        "description": "Enable Get Image Descriptions from Google. Enables visually-impaired screen reader users to get descriptions of unlabeled images on the web.",
        "type": "boolean"
      },
      "AdsSettingForIntrusiveAdsSites": {
        "title": "Ads setting for sites with intrusive ads",
        "description": "Allows you to set whether ads should be blocked on sites with intrusive ads.",
        "type": "integer"
      },
      "AdvancedProtectionAllowed": {
        "title": "Enable Advanced Protection",
        "description": "Enable additional protections for users enrolled in the Advanced Protection program.",
        "type": "boolean"
      },
      "AdvancedProtectionDeepScanningEnabled": {
        "title": "Advanced Protection Deep Scanning",
        "description": "This policy controls whether users enrolled in the Advanced Protection program are allowed to send their downloads to Google for malware scanning. If set to True or not set, enrolled users will be be prompted to send their files to Google for deep scanning. If the user selects 'Scan', their download will be sent to Google. If set to False, users will not be prompted and their downloads will not be sent to Google.",
        "type": "boolean"
      },
      "AllowCrossOriginAuthPrompt": {
        "title": "Cross-origin HTTP Basic Auth prompts",
        "description": "Controls whether third-party sub-content on a page is allowed to pop-up an HTTP Basic Auth dialog box.",
        "type": "boolean"
      },
      "AllowDeletingBrowserHistory": {
        "title": "Enable deleting browser and download history",
        "description": "Enables deleting browser history and download history in Google Chrome and prevents users from changing this setting.",
        "type": "boolean"
      },
      "AllowDinosaurEasterEgg": {
        "title": "Allow Dinosaur Easter Egg Game",
        "description": "Allow users to play dinosaur easter egg game when device is offline.",
        "type": "boolean"
      },
      "AllowFileSelectionDialogs": {
        "title": "Allow invocation of file selection dialogs",
        "description": "Allows access to local files on the machine by allowing Google Chrome to display file selection dialogs.",
        "type": "boolean"
      },
      "AllowOutdatedPlugins": {
        "title": "Allow running plugins that are outdated",
        "description": "If you enable this setting, outdated plugins are used as normal plugins.",
        "type": "boolean"
      },
      "AllowPopupsDuringPageUnload": {
        "title": "Allow a page to show popups during its unloading",
        "description": "This policy allows an admin to specify that a page may show popups during its unloading.",
        "type": "boolean"
      },
      "AllowSyncXHRInPageDismissal": {
        "title": "Allows a page to perform synchronous XHR requests during page dismissal.",
        "description": "This policy allows an admin to specify that a page may send synchronous XHR requests during page dismissal.",
        "type": "boolean"
      },
      "AllowedDomainsForApps": {
        "title": "Define domains allowed to access G Suite",
        "description": "Enables Google Chrome's restricted log in feature in G Suite and prevents users from changing this setting.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AlternateErrorPagesEnabled": {
        "title": "Enable alternate error pages",
        "description": "Enables the use of alternate error pages that are built into Google Chrome (such as 'page not found') and prevents users from changing this setting.",
        "type": "boolean"
      },
      "AlternativeBrowserParameters": {
        "title": "Alternative Browser Parameters",
        "description": "This policy controls command-line parameters to launch to the alternative browser.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AlternativeBrowserPath": {
        "title": "Alternative Browser Path",
        "description": "This policy controls which command to use to open URLs in an alternative browser.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AlwaysOpenPdfExternally": {
        "title": "Always Open PDF files externally",
        "description": "Disables the internal PDF viewer in Google Chrome. Instead it treats it as download and allows the user to open PDF files with the default application.",
        "type": "boolean"
      },
      "AmbientAuthenticationInPrivateModesEnabled": {
        "title": "Ambient Authentication",
        "description": "Configuring this policy will allow/disallow ambient authenticaiton for Incognito and Guest profiles in Google Chrome.",
        "type": "integer"
      },
      "AppCacheForceEnabled": {
        "title": "Force Enable App Cache",
        "description": "Allows the AppCache feature to be re-enabled even if it is off by default.",
        "type": "boolean"
      },
      "AudioCaptureAllowed": {
        "title": "Allow or deny audio capture",
        "description": "If enabled or not configured (default), the user will be prompted for audio capture access except for URLs configured in the AudioCaptureAllowedUrls list which will be granted access without prompting.",
        "type": "boolean"
      },
      "AudioCaptureAllowedUrls": {
        "title": "URLs that will be granted access to audio capture devices without prompt",
        "description": "Patterns in this list will be matched against the security\norigin of the requesting URL.  If a match is found, access to audio\ncapture devices will be granted without prompt.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AudioSandboxEnabled": {
        "title": "Enable the audio sandbox",
        "description": "Allow the audio sandbox to run. If this policy is enabled, the audio process will run sandboxed. If this policy is disabled, the audio process will run unsandboxed and the WebRTC audio-processing module will run in the renderer process. This leaves users open to security risks related to running the audio subsystem unsandboxed.",
        "type": "boolean"
      },
      "AuthNegotiateDelegateAllowlist": {
        "title": "Kerberos delegation server allowlist",
        "description": "Servers that Google Chrome may delegate to.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AuthNegotiateDelegateByKdcPolicy": {
        "title": "Kerberos delegation KDC policy",
        "description": "Use KDC policy to delegate credentials. Controls whether approval by KDC policy is respected to decide whether to delegate Kerberos tickets.",
        "type": "boolean"
      },
      "AuthNegotiateDelegateWhitelist": {
        "title": "Kerberos delegation server whitelist",
        "description": "Servers that Google Chrome may delegate to.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AuthSchemes": {
        "title": "Supported authentication schemes",
        "description": "Specifies which HTTP authentication schemes are supported by Google Chrome. Possible values are 'basic', 'digest', 'ntlm' and 'negotiate'. Separate multiple values with commas.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AuthServerAllowlist": {
        "title": "Authentication server allowlist",
        "description": "Specifies which servers should be allowed for integrated authentication. Integrated authentication is only enabled when Google Chrome receives an authentication challenge from a proxy or from a server which is in this permitted list.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AuthServerWhitelist": {
        "title": "Authentication server whitelist",
        "description": "Specifies which servers should be whitelisted for integrated authentication. Integrated authentication is only enabled when Google Chrome receives an authentication challenge from a proxy or from a server which is in this permitted list.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AutoFillEnabled": {
        "title": "Enable AutoFill",
        "description": "Enable AutoFill. This policy is deprecated in M70, please use AutofillAddressEnabled and AutofillCreditCardEnabled instead.",
        "type": "boolean"
      },
      "AutoLaunchProtocolsFromOrigins": {
        "title": "Allow protocols to auto launch external applications",
        "description": "Define a list of protocols that can launch an external application from listed origins without prompting the user. If this policy is set, a protocol will only be permitted to launch an external application without prompting by policy if the protocol is listed, and the origin of the site trying to launch the protocol matches one of the origin patterns in that protocol's allowed_origins list.",
        "type": {
          "array": [
            {
              "dictionary": {
                "allowed_origins": {
                  "title": "Allowed Origins",
                  "description": "A list of allowed origin patterns for the specified protocol.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "protocol": {
                  "title": "Protocol",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "AutoOpenAllowedForURLs": {
        "title": "Allowed URLs for auto open filetypes",
        "description": "URLs where AutoOpenFileTypes can apply. List of URLs specifying which urls AutoOpenFileTypes will apply to. This policy has no impact on automatically open values set by users.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AutoOpenFileTypes": {
        "title": "Allow file extensions to auto open",
        "description": "List of file types that should be automatically opened on download.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AutoSelectCertificateForUrls": {
        "title": "Automatically select client certificates for these sites",
        "description": "Allows you to specify a list of url patterns that specify sites for which Google Chrome should automatically select a client certificate, if the site requests a certificate.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AutofillAddressEnabled": {
        "title": "Enable AutoFill for addresses",
        "description": "Enables Google Chrome's AutoFill feature and allows users to auto complete address information in web forms using previously stored information.",
        "type": "boolean"
      },
      "AutofillCreditCardEnabled": {
        "title": "Enable AutoFill for credit cards",
        "description": "Enables Google Chrome's AutoFill feature and allows users to auto complete credit card information in web forms using previously stored information.",
        "type": "boolean"
      },
      "AutoplayAllowed": {
        "title": "Allow media autoplay",
        "description": "Allows you to control if videos can play automatically (without user consent) with audio content in Google Chrome.",
        "type": "boolean"
      },
      "AutoplayAllowlist": {
        "title": "Allow media autoplay on an allow list of URL patterns",
        "description": "Controls the allow list of URL patterns that autoplay will always be enabled on.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AutoplayWhitelist": {
        "title": "Allow media autoplay on a whitelist of URL patterns",
        "description": "Controls the whitelist of URL patterns that autoplay will always be enabled on.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "BasicAuthOverHttpEnabled": {
        "title": "Allow Basic authentication for HTTP",
        "description": "Setting the policy to Enabled or leaving it unset will allow Basic authentication challenges received over non-secure HTTP. Setting the policy to Disabled forbids non-secure HTTP requests from using the Basic authentication scheme; only secure HTTPS is allowed.",
        "type": "boolean"
      },
      "BlockExternalExtensions": {
        "title": "Block external extensions",
        "description": "Blocks external extensions from being installed.",
        "type": "boolean"
      },
      "BlockThirdPartyCookies": {
        "title": "Block third party cookies",
        "description": "Enabling this setting prevents cookies from being set by web page elements that are not from the domain that is in the browser's address bar.",
        "type": "boolean"
      },
      "BookmarkBarEnabled": {
        "title": "Enable Bookmark Bar",
        "description": "If you enable this setting, Google Chrome will show a bookmark bar.",
        "type": "boolean"
      },
      "BrowserAddPersonEnabled": {
        "title": "Enable add person in user manager",
        "description": "If this policy is set to true or not configured, Google Chrome will allow Add Person from the user manager.",
        "type": "boolean"
      },
      "BrowserGuestModeEnabled": {
        "title": "Enable guest mode in browser",
        "description": "If this policy is set to true or not configured, Google Chrome will enable guest logins. Guest logins are Google Chrome profiles where all windows are in incognito mode.",
        "type": "boolean"
      },
      "BrowserGuestModeEnforced": {
        "title": "Force guest mode in browser",
        "description": "If this policy is set to enabled, Google Chrome will enforce guest sessions and prevents profile logins. Guest logins are Google Chrome profiles where all windows are in incognito mode.",
        "type": "boolean"
      },
      "BrowserNetworkTimeQueriesEnabled": {
        "title": "Allow queries to a Google time service",
        "description": "Setting this policy to false stops Google Chrome from occasionally sending queries to a Google server to retrieve an accurate timestamp. These queries will be enabled if this policy is set to True or is not set.",
        "type": "boolean"
      },
      "BrowserSignin": {
        "title": "Browser Signin",
        "description": "This policy controls the sign-in behavior of the browser. It allows you to specify if the user can sign in to Google Chrome with their account and use account related services like Chrome sync.",
        "type": "integer"
      },
      "BrowserSwitcherDelay": {
        "title": "Browser Switcher Delay",
        "description": "This policy controls how long to wait before launching an alternative browser, in milliseconds. When this policy is set to a number, Chrome shows a message for that many milliseconds, and then opens the alternative browser.",
        "type": "integer"
      },
      "BrowserSwitcherEnabled": {
        "title": "Browser Switcher Enabled",
        "description": "This policy controls whether to enable Legacy Browser Support. When this policy is set to true, Chrome will attempt to launch some URLs in an alternate browser.",
        "type": "boolean"
      },
      "BrowserSwitcherExternalGreylistUrl": {
        "title": "Browser Switcher External Greylist URL",
        "description": "This policy is a URL, that points to an XML file in the same format as Internet Explorer's SiteList policy. This loads rules from an XML file, without sharing those rules with Internet Explorer.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BrowserSwitcherExternalSitelistUrl": {
        "title": "Browser Switcher External Sitelist URL",
        "description": "This policy is a URL, that points to an XML file in the same format as Internet Explorer's SiteList policy. This loads rules from an XML file, without sharing those rules with Internet Explorer.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BrowserSwitcherKeepLastChromeTab": {
        "title": "Keep Chrome open when the last tab switches to another browser",
        "description": "This policy controls whether to close Chrome completely when the last tab would switch to another browser.",
        "type": "boolean"
      },
      "BrowserSwitcherUrlGreylist": {
        "title": "Browser Switcher URL Greylist",
        "description": "This policy controls the list of websites that will never cause a browser switch.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "BrowserSwitcherUrlList": {
        "title": "Browser Switcher URL List",
        "description": "This policy controls the list of websites to open in an alternative browser.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "BuiltInDnsClientEnabled": {
        "title": "Use built-in DNS client",
        "description": "Controls whether the built-in DNS client is used in Google Chrome.",
        "type": "boolean"
      },
      "BuiltinCertificateVerifierEnabled": {
        "title": "Use built-in certificate verifier",
        "description": "Determines whether the built-in certificate verifier will be used to verify server certificates. When this setting is enabled, Google Chrome will perform verification of server certificates using the built-in certificate verifier. When this setting is disabled, Google Chrome will perform verification of server certificates using the legacy certificate verifier provided by the platform. When this setting is not set, the built-in or the legacy certificate verifier may be used.",
        "type": "boolean"
      },
      "CertificateTransparencyEnforcementDisabledForCas": {
        "title": "Disable Certificate Transparency enforcement for a list of subjectPublicKeyInfo hashes",
        "description": "Disables enforcing Certificate Transparency requirements for a list of subjectPublicKeyInfo hashes.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CertificateTransparencyEnforcementDisabledForLegacyCas": {
        "title": "Disable Certificate Transparency enforcement for a list of Legacy Certificate Authorities",
        "description": "Disables enforcing Certificate Transparency requirements for a list of Legacy Certificate Authorities.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CertificateTransparencyEnforcementDisabledForUrls": {
        "title": "Disable Certificate Transparency enforcement for a list of URLs",
        "description": "Disables enforcing Certificate Transparency requirements to the listed URLs. A URL pattern is formatted according to https://www.chromium.org/administrators/url-blacklist-filter-format.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ChromeVariations": {
        "title": "Google Chrome Variations",
        "description": "Determine the availability of variations.",
        "type": "integer"
      },
      "ClickToCallEnabled": {
        "title": "Enable Click to Call",
        "description": "Enable the Click to Call Feature.",
        "type": "boolean"
      },
      "CloudExtensionRequestEnabled": {
        "title": "Enable Cloud Extension Install Requests",
        "description": "Enables Google Chrome extension installation requests. When the policy CloudReportingEnabled is left unset or set to disabled, this policy will be ignored, extension installation requests are not created or uploaded. When this policy is left unset or set to disabled, extension installation requests are not created or uploaded. When this policy is set to enabled, extension installation requests are created and uploaded to Google Admin console.",
        "type": "boolean"
      },
      "CloudManagementEnrollmentMandatory": {
        "title": "Make cloud managment enrollment mandatory",
        "description": "If this policy is set to True, cloud management enrollment is mandatory and blocks Chrome launch process if failed.",
        "type": "boolean"
      },
      "CloudManagementEnrollmentToken": {
        "title": "Cloud Management Enrollment Token",
        "description": "If this policy is set, Google Chrome will try to register itself and apply associated cloud policy for all profiles.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CloudPolicyOverridesPlatformPolicy": {
        "title": "Cloud Policy Overrides Platform Policy",
        "description": "If the policy is set to true, cloud policy takes precedence if it conflicts with platform policy. If the policy is set to false or not configured, platform policy takes precedence if it conflicts with cloud policy.",
        "type": "boolean"
      },
      "CloudPrintProxyEnabled": {
        "title": "Enable Google Cloud Print proxy",
        "description": "Enables Google Chrome to act as a proxy between Google Cloud Print and legacy printers connected to the machine.",
        "type": "boolean"
      },
      "CloudPrintSubmitEnabled": {
        "title": "Enable submission of documents to Google Cloud Print",
        "description": "Enables Google Chrome to submit documents to Google Cloud Print for printing.  NOTE: This only affects Google Cloud Print support in Google Chrome.  It does not prevent users from submitting print jobs on web sites.",
        "type": "boolean"
      },
      "CloudReportingEnabled": {
        "title": "Enable Cloud Reporting",
        "description": "Enables Google Chrome cloud reporting. When this policy is left unset or set to False, there is no data collected or uploaded. When this policy is set to True, the data is collected and uploaded to Google Admin console.",
        "type": "boolean"
      },
      "CommandLineFlagSecurityWarningsEnabled": {
        "title": "Command Line Flag Security Warnings Enabled",
        "description": "If disabled, prevents security warnings from appearing when Chrome is launched with some potentially dangerous command-line flags.",
        "type": "boolean"
      },
      "ComponentUpdatesEnabled": {
        "title": "Enable component updates in Google Chrome",
        "description": "Enables component updates for all components in Google Chrome when not set or set to True.",
        "type": "boolean"
      },
      "CookiesAllowedForUrls": {
        "title": "Allow cookies on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to set cookies.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CookiesBlockedForUrls": {
        "title": "Block cookies on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to set cookies.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CookiesSessionOnlyForUrls": {
        "title": "Limit cookies from matching URLs to the current session",
        "description": "Cookies set by pages matching these URL patterns will be limited to the current session, i.e. they will be deleted when the browser exits.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CorsLegacyModeEnabled": {
        "title": "Enable Cross-Origin Resource Sharing legacy mode",
        "description": "Use the legacy CORS implementation rather than new CORS.",
        "type": "boolean"
      },
      "CorsMitigationList": {
        "title": "Cross-Origin Resource Sharing mitigation list",
        "description": "Enable CORS check mitigations in the new CORS implementation, allowing Extensions to keep compatible behavior, and allowing Google Chrome to send specified headers without CORS checks.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DNSInterceptionChecksEnabled": {
        "title": "DNS Interception Checks",
        "description": "This policy configures a local switch that can be used to disable DNS interception checks. The checks attempt to discover whether the browser is behind a proxy that redirects unknown host names.",
        "type": "boolean"
      },
      "DefaultBrowserSettingEnabled": {
        "title": "Set Google Chrome as Default Browser",
        "description": "Configures the default browser checks in Google Chrome and prevents users from changing them.",
        "type": "boolean"
      },
      "DefaultCookiesSetting": {
        "title": "Default cookies setting",
        "description": "Allows you to set whether websites are allowed to set local data. Setting local data can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultDownloadDirectory": {
        "title": "Set default download directory",
        "description": "Configures the default directory that Google Chrome will use for downloading files. This policy is not mandatory, so the user will be able to change the directory.\n\nSee https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultGeolocationSetting": {
        "title": "Default geolocation setting",
        "description": "Allows you to set whether websites are allowed to track the users' physical location. Tracking the users' physical location can be allowed by default, denied by default or the user can be asked every time a website requests the physical location.",
        "type": "integer"
      },
      "DefaultImagesSetting": {
        "title": "Default images setting",
        "description": "Allows you to set whether websites are allowed to display images. Displaying images can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultInsecureContentSetting": {
        "title": "Default insecure content setting",
        "description": "Control use of insecure content exceptions. Allows you to set whether users can add exceptions to allow mixed content for specific sites. If this policy is left not set, users will be allowed to add exceptions to allow blockable mixed content and disable autoupgrades for optionally blockable mixed content.",
        "type": "integer"
      },
      "DefaultJavaScriptSetting": {
        "title": "Default JavaScript setting",
        "description": "Allows you to set whether websites are allowed to run JavaScript. Running JavaScript can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultMediaStreamSetting": {
        "title": "Default mediastream setting",
        "description": "Allows you to set whether websites are allowed to get access to media capture devices. Access to media capture devices can be allowed by default, or the user can be asked every time a website wants to get access to media capture devices. - Documentation doesn't indicate when this was deprecated, but AudioCaptureAllowed was added in M25, so making an assumption.",
        "type": "integer"
      },
      "DefaultNotificationsSetting": {
        "title": "Default notification setting",
        "description": "Allows you to set whether websites are allowed to display desktop notifications. Displaying desktop notifications can be allowed by default, denied by default or the user can be asked every time a website wants to show desktop notifications.",
        "type": "integer"
      },
      "DefaultPluginsSetting": {
        "title": "Default Flash setting",
        "description": "Allows you to set whether websites are allowed to automatically run the Flash plugin. Automatically running the Flash plugin can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultPopupsSetting": {
        "title": "Default popups setting",
        "description": "Allows you to set whether websites are allowed to show pop-ups. Showing popups can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultPrinterSelection": {
        "title": "Default printer selection rules",
        "description": "Overrides Google Chrome default printer selection rules.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderAlternateURLs": {
        "title": "List of alternate URLs for the default search provider",
        "description": "Specifies a list of alternate URLs that can be used to extract search terms from the search engine. The URLs should contain the string '{searchTerms}', which will be used to extract the search terms.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DefaultSearchProviderContextMenuAccessAllowed": {
        "title": "Enable default search provider on context menu",
        "description": "Allow default search provider context menu search access.",
        "type": "boolean"
      },
      "DefaultSearchProviderEnabled": {
        "title": "Enable the default search provider",
        "description": "Enables the use of a default search provider.",
        "type": "boolean"
      },
      "DefaultSearchProviderEncodings": {
        "title": "Default search provider encodings",
        "description": "Specifies the character encodings supported by the search provider. Encodings are code page names like UTF-8, GB2312, and ISO-8859-1. They are tried in the order provided.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DefaultSearchProviderIconURL": {
        "title": "Default search provider icon",
        "description": "Specifies the favorite icon URL of the default search provider.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderImageURL": {
        "title": "Parameter providing search-by-image feature for the default search provider",
        "description": "Specifies the URL of the search engine used to provide image search. Search requests will be sent using the GET method. If the DefaultSearchProviderImageURLPostParams policy is set then image search requests will use the POST method instead.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderImageURLPostParams": {
        "title": "Parameters for image URL which uses POST",
        "description": "Specifies the parameters used when doing image search with POST. It consists of comma-separated name/value pairs. If a value is a template parameter, like {imageThumbnail} in above example, it will be replaced with real image thumbnail data.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderKeyword": {
        "title": "Default search provider keyword",
        "description": "Specifies the keyword, which is the shortcut used in the omnibox to trigger the search for this provider.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderName": {
        "title": "Default search provider name",
        "description": "Specifies the name of the default search provider. If left empty or not set, the host name specified by the search URL will be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderNewTabURL": {
        "title": "Default search provider new tab page URL",
        "description": "Specifies the URL that a search engine uses to provide a new tab page.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderSearchURL": {
        "title": "Default search provider search URL",
        "description": "Specifies the URL of the search engine used when doing a default search. The URL should contain the string '{searchTerms}', which will be replaced at query time by the terms the user is searching for.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderSearchURLPostParams": {
        "title": "Parameters for search URL which uses POST",
        "description": "Specifies the parameters used when searching a URL with POST. It consists of comma-separated name/value pairs. If a value is a template parameter, like {searchTerms} in above example, it will be replaced with real search terms data.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderSuggestURL": {
        "title": "Default search provider suggest URL",
        "description": "Specifies the URL of the search engine used to provide search suggestions. The URL should contain the string '{searchTerms}', which will be replaced at query time by the text the user has entered so far.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderSuggestURLPostParams": {
        "title": "Parameters for suggest URL which uses POST",
        "description": "Specifies the parameters used when doing suggestion search with POST. It consists of comma-separated name/value pairs. If a value is a template parameter, like {searchTerms} in above example, it will be replaced with real search terms data.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultThirdPartyStoragePartitioningSetting": {
        "title": "Default Third Party Storage Partitioning Setting",
        "description": "Third-party storage partitioning is on by default for some users as of M113, but can be disabled via Chrome flag. If this policy is set to AllowPartitioning or unset, third-party storage partitioning may be enabled. If this policy is set to BlockPartitioning, third-party storage partitioning cannot be enabled.",
        "type": "integer"
      },
      "DefaultWebBluetoothGuardSetting": {
        "title": "Control use of the Web Bluetooth API",
        "description": "Allows you to set whether websites are allowed to get access to nearby Bluetooth devices. Access can be completely blocked, or the user can be asked every time a website wants to get access to nearby Bluetooth devices.",
        "type": "integer"
      },
      "DefaultWebUsbGuardSetting": {
        "title": "Control use of the WebUSB API",
        "description": "Allows you to set whether websites are allowed to get access to connected USB devices. Access can be completely blocked, or the user can be asked every time a website wants to get access to connected USB devices.",
        "type": "integer"
      },
      "DeveloperToolsAvailability": {
        "title": "Control where Developer Tools can be used",
        "description": "Allows you to control where Developer Tools can be used.",
        "type": "integer"
      },
      "DeveloperToolsDisabled": {
        "title": "Control where Developer Tools can be used",
        "description": "Disables the Developer Tools and the JavaScript console. This policy is deprecated in M68, please use DeveloperToolsAvailability instead.",
        "type": "boolean"
      },
      "Disable3DAPIs": {
        "title": "Disable support for 3D graphics APIs",
        "description": "Enabling this setting prevents web pages from accessing the graphics processing unit (GPU). Specifically, web pages can not access the WebGL API and plugins can not use the Pepper 3D API.",
        "type": "boolean"
      },
      "DisableAuthNegotiateCnameLookup": {
        "title": "Disable CNAME lookup when negotiating Kerberos authentication",
        "description": "Specifies whether the generated Kerberos SPN is based on the canonical DNS name or the original name entered.",
        "type": "boolean"
      },
      "DisablePrintPreview": {
        "title": "Disable Print Preview",
        "description": "Show the system print dialog instead of print preview.",
        "type": "boolean"
      },
      "DisableSafeBrowsingProceedAnyway": {
        "title": "Disable proceeding from the Safe Browsing warning page",
        "description": "The Safe Browsing service shows a warning page when users navigate to sites that are flagged as potentially malicious. Enabling this setting prevents users from proceeding anyway from the warning page to the malicious site.",
        "type": "boolean"
      },
      "DisableScreenshots": {
        "title": "Disable taking screenshots",
        "description": "If enabled, screenshots cannot be taken using keyboard shortcuts or extension APIs.",
        "type": "boolean"
      },
      "DisabledPlugins": {
        "title": "Disabled Plugins",
        "description": "This policy is deprecated. Please use the DefaultPluginsSetting to control the avalability of the Flash plugin and AlwaysOpenPdfExternally to control whether the integrated PDF viewer should be used for opening PDF files.\n\nSpecifies a list of plugins that are disabled in Google Chrome and prevents users from changing this setting.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DisabledPluginsExceptions": {
        "title": "Disabled Plugins Exceptions",
        "description": "This policy is deprecated. Please use the DefaultPluginsSetting to control the avalability of the Flash plugin and AlwaysOpenPdfExternally to control whether the integrated PDF viewer should be used for opening PDF files.\n\nSpecifies a list of plugins that user can enable or disable in Google Chrome.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DisabledSchemes": {
        "title": "Disabled URL Protocol Schemes",
        "description": "This policy is deprecated, please use URLBlocklist instead.\n\nDisables the listed protocol schemes in Google Chrome.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DiskCacheDir": {
        "title": "Set disk cache directory",
        "description": "Configures the directory that Google Chrome will use for storing cached files on the disk. See https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used. To avoid data loss or other unexpected errors this policy should not be set to a volume's root directory or to a directory used for other purposes, because Google Chrome manages its contents",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DiskCacheSize": {
        "title": "Set disk cache size",
        "description": "Configures the cache size that Google Chrome will use for storing cached files on the disk. The value specified in this policy is not a hard boundary but rather a suggestion to the caching system, any value below a few megabytes is too small and will be rounded up to a sane minimum. If the value of this policy is 0, the default cache size will be used but the user will not be able to change it.",
        "type": "integer"
      },
      "DnsOverHttpsMode": {
        "title": "DNS-over-HTTPS mode",
        "description": "Controls the mode of DNS-over-HTTPS",
        "type": {
          "string": {
            "rangeList": [
              [
                "off",
                "Disable DNS-over-HTTPS"
              ],
              [
                "automatic",
                "Enable DNS-over-HTTPS with insecure fallback"
              ],
              [
                "secure",
                "Enable DNS-over-HTTPS without insecure fallback"
              ]
            ]
          }
        }
      },
      "DnsOverHttpsTemplates": {
        "title": "DNS-over-HTTPS mode",
        "description": "Specify URI template of desired DNS-over-HTTPS resolver. To specify multiple DNS-over-HTTPS resolvers, separate the corresponding URI templates with spaces.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DownloadDirectory": {
        "title": "Set download directory",
        "description": "Configures the directory that Google Chrome will use for downloading files. If you set this policy, Google Chrome will use the provided directory regardless whether the user has specified one or enabled the flag to be prompted for download location every time. If this policy is left not set the default download directory will be used and the user will be able to change it.\n\nSee https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DownloadRestrictions": {
        "title": "Download restrictions",
        "description": "Configures the type of downloads that Google Chrome will completely block, without letting users override the security decision.",
        "type": "integer"
      },
      "EditBookmarksEnabled": {
        "title": "Enable or disable bookmark editing",
        "description": "If you enable this setting, bookmarks can be added, removed or modified. This is the default also when this policy is not set.",
        "type": "boolean"
      },
      "EnableAuthNegotiatePort": {
        "title": "Include non-standard port in Kerberos SPN",
        "description": "Specifies whether the generated Kerberos SPN should include a non-standard port.",
        "type": "boolean"
      },
      "EnableDeprecatedWebPlatformFeatures": {
        "title": "Enable deprecated web platform features for a limited time",
        "description": "ExampleDeprecatedFeature_EffectiveUntil20080902 - Enable ExampleDeprecatedFeature API through 2008/09/02\nSpecify a list of deprecated web platform features to re-enable temporarily.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "EnableExperimentalPolicies": {
        "title": "Enable experimental policies",
        "description": "Allows Google Chrome to load experimental policies.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "EnableMediaRouter": {
        "title": "Enable Google Cast",
        "description": "If this policy is set to true or is not set, Google Cast will be enabled, and users will be able to launch it from the app menu, page context menus, media controls on Cast-enabled websites, and (if shown) the Cast toolbar icon.",
        "type": "boolean"
      },
      "EnableOnlineRevocationChecks": {
        "title": "Whether online OCSP/CRL checks are performed",
        "description": "In light of the fact that soft-fail, online revocation checks provide no effective security benefit, they are disabled by default in Google Chrome version 19 and later. By setting this policy to true, the previous behavior is restored and online OCSP/CRL checks will be performed.",
        "type": "boolean"
      },
      "EnabledPlugins": {
        "title": "Enabled Plugins",
        "description": "This policy is deprecated. Please use the DefaultPluginsSetting to control the avalability of the Flash plugin and AlwaysOpenPdfExternally to control whether the integrated PDF viewer should be used for opening PDF files.\n\nSpecifies a list of plugins that are enabled in Google Chrome and prevents users from changing this setting.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "EnterpriseHardwarePlatformAPIEnabled": {
        "title": "Enable Managed Extensions to use the Enterprise Hardware API",
        "description": "When this policy is set to enabled, extensions installed by enterprise policy are allowed to use the Enterprise Hardware Platform API.",
        "type": "boolean"
      },
      "EnterpriseRealTimeUrlCheckMode": {
        "title": "Check Safe Browsing status of URLs in real time",
        "description": "This policy controls checking URLs in real time to identify unsafe URLs. If this policy is left not set or set to ‘Disabled', the consumer Safe Browsing checks will be applied. If this policy is set to ‘Enabled', URLs will be sent to be scanned in real time under enterprise ToS. It will result in Chrome sending URLs to Google Cloud or third parties of your choosing to check them in real time. The consumer version of Safe Browsing real time lookup will be switched off.",
        "type": "integer"
      },
      "ExtensionAllowInsecureUpdates": {
        "title": "Allow insecure extension updates",
        "description": "Allow insecure algorithms in integrity checks on extension updates and installs.",
        "type": "boolean"
      },
      "ExtensionAllowedTypes": {
        "title": "Types of extensions/apps that are allowed to be installed",
        "description": "Controls which app/extension types are allowed to be installed and limits runtime access.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "extension",
                    "Extension"
                  ],
                  [
                    "hosted_app",
                    "Hosted App"
                  ],
                  [
                    "legacy_packaged_app",
                    "Legacy Packaged App"
                  ],
                  [
                    "platform_app",
                    "Platform App"
                  ],
                  [
                    "theme",
                    "Theme"
                  ],
                  [
                    "user_script",
                    "User Script"
                  ]
                ]
              }
            }
          ]
        }
      },
      "ExtensionInstallAllowlist": {
        "title": "Extension ID Allowlist",
        "description": "Allows you to specify which extensions are not subject to the blocklist.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionInstallBlacklist": {
        "title": "Extension ID Blacklist",
        "description": "Allows you to specify which extensions the users can NOT install. Extensions already installed will be disabled if denied, without a way for the user to enable them. Once an extension is disabled due to the blacklist being removed, it will automatically get re-enabled. Enter * to deny all extensions.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionInstallBlocklist": {
        "title": "Extension ID Blocklist",
        "description": "Allows you to specify which extensions the users can NOT install. Extensions already installed will be disabled if denied, without a way for the user to enable them. Once an extension is disabled due to the blocklist being removed, it will automatically get re-enabled. Enter * to deny all extensions.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionInstallForcelist": {
        "title": "Extension/App IDs and update URLs to be silently installed",
        "description": "Specifies a list of apps and extensions that are installed silently, without user interaction, and which cannot be uninstalled nor disabled by the user. All permissions requested by the apps/extensions are granted implicitly, without user interaction, including any additional permissions requested by future versions of the app/extension. Furthermore, permissions are granted for the enterprise.deviceAttributes and enterprise.platformKeys extension APIs. (These two APIs are not available to apps/extensions that are not force-installed.)",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionInstallSources": {
        "title": "URL patterns to allow extension, app, and user script installs from",
        "description": "Allows you to specify which URLs are allowed to install extensions, apps, and themes.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionInstallWhitelist": {
        "title": "Extension ID Whitelist",
        "description": "Allows you to specify which extensions are not subject to the blacklist.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionManifestV2Availability": {
        "title": "ExtensionManifestV2Availability",
        "description": "Control if Manifest v2 extensions can be used by browser.",
        "type": "integer"
      },
      "ExtensionSettings": {
        "title": "Extension management settings",
        "description": "Configures extension management settings for Google Chrome. A default configuration can be set for the special ID \"*\"",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Extension ID",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "{{value}}",
              "description": "",
              "type": {
                "dictionary": {
                  "allowed_types": {
                    "title": "allowed_types",
                    "description": "This setting whitelists the allowed types of extension/apps that can be installed in Google Chrome.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "blocked_install_message": {
                    "title": "blocked_install_message",
                    "description": "This maps to a string specifying the error message to display to users if they're blocked from installing an extension.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "blocked_permissions": {
                    "title": "blocked_permissions",
                    "description": "Maps to a list of strings indicating the blocked API permissions for the extension.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "install_sources": {
                    "title": "install_sources",
                    "description": "Each item in this list is an extension-style match pattern.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "installation_mode": {
                    "title": "installation_mode",
                    "description": "Maps to a string indicating the installation mode for the extension.",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "allowed",
                            "Allowed"
                          ],
                          [
                            "blocked",
                            "Blocked"
                          ],
                          [
                            "force_installed",
                            "Force Installed"
                          ],
                          [
                            "normal_installed",
                            "Normal Installed"
                          ]
                        ]
                      }
                    }
                  },
                  "minimum_version_required": {
                    "title": "minimum_version_required",
                    "description": "Maps to a version string.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "runtime_allowed_hosts": {
                    "title": "runtime_allowed_hosts",
                    "description": "Maps to a list of strings representing hosts that an extension can interact with regardless of whether they are listed in \"runtime_blocked_hosts\".",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "runtime_blocked_hosts": {
                    "title": "runtime_blocked_hosts",
                    "description": "Maps to a list of strings representing hosts whose webpages the extension will be blocked from modifying.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "update_url": {
                    "title": "update_url",
                    "description": "Maps to a string indicating where Chrome can download a force_installed or normal_installed extension.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ExternalProtocolDialogShowAlwaysOpenCheckbox": {
        "title": "Display \"Always open\" checkbox in external protocol dialog",
        "description": "Show an \"Always open\" checkbox in external protocol dialog.",
        "type": "boolean"
      },
      "ForceBrowserSignin": {
        "title": "Enable force sign in for Google Chrome",
        "description": "If this policy is set to true, user has to sign in to Google Chrome with their profile before using the browser. And the default value of BrowserGuestModeEnabled will be set to false. Note that existing unsigned profiles will be locked and inaccessible after enabling this policy. For more information, see help center article. This policy is deprecated, consider using BrowserSignin instead.",
        "type": "boolean"
      },
      "ForceEphemeralProfiles": {
        "title": "Ephemeral profile",
        "description": "If set to enabled this policy forces the profile to be switched to ephemeral mode. If this policy is specified as an OS policy (e.g. GPO on Windows) it will apply to every profile on the system; if the policy is set as a Cloud policy it will apply only to a profile signed in with a managed account.",
        "type": "boolean"
      },
      "ForceGoogleSafeSearch": {
        "title": "Force Google SafeSearch",
        "description": "Forces queries in Google Web Search to be done with SafeSearch set to active and prevents users from changing this setting.",
        "type": "boolean"
      },
      "ForceLegacyDefaultReferrerPolicy": {
        "title": "Force Legacy Default Referrer",
        "description": "This enterprise policy is for short-term adaptation and will be removed in M82.",
        "type": "boolean"
      },
      "ForceSafeSearch": {
        "title": "Force SafeSearch",
        "description": "This policy is deprecated, please use ForceGoogleSafeSearch and ForceYouTubeRestrict instead. This policy is ignored if either the ForceGoogleSafeSearch, the ForceYouTubeRestrict or the (deprecated) ForceYouTubeSafetyMode policies are set.",
        "type": "boolean"
      },
      "ForceYouTubeRestrict": {
        "title": "Force minimum YouTube Restricted Mode",
        "description": "Enforces a minimum Restricted Mode on YouTube and prevents users from picking a less restricted mode.",
        "type": "integer"
      },
      "ForceYouTubeSafetyMode": {
        "title": "Force YouTube Safety Mode",
        "description": "This policy is deprecated. Consider using ForceYouTubeRestrict, which overrides this policy and allows more fine-grained tuning.\n\nForces YouTube Moderate Restricted Mode and prevents users from changing this setting.",
        "type": "boolean"
      },
      "GloballyScopeHTTPAuthCacheEnabled": {
        "title": "Enable globally scoped HTTP auth cache",
        "description": "This policy configures a single global per profile cache with HTTP server authentication credentials.",
        "type": "boolean"
      },
      "HSTSPolicyBypassList": {
        "title": "HSTS Policy Bypass List",
        "description": "List of names that will bypass the HSTS policy check. Hostnames specified in this list will be exempt from the HSTS policy check that could potentially upgrade requests from http to https.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "HardwareAccelerationModeEnabled": {
        "title": "Use hardware acceleration when available",
        "description": "If this policy is set to true or left unset, hardware acceleration will be enabled unless a certain GPU feature is blacklisted.",
        "type": "boolean"
      },
      "HideWebStoreIcon": {
        "title": "Hide the web store from the New Tab Page and app launcher",
        "description": "Hide the Chrome Web Store app and footer link from the New Tab Page and Google Chrome OS app launcher.",
        "type": "boolean"
      },
      "HomepageIsNewTabPage": {
        "title": "Use New Tab Page as homepage",
        "description": "Configures the type of the default home page in Google Chrome and prevents users from changing home page preferences. The home page can either be set to a URL you specify or set to the New Tab Page.",
        "type": "boolean"
      },
      "HomepageLocation": {
        "title": "Home page URL",
        "description": "Configures the default home page URL in Google Chrome and prevents users from changing it.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Http09OnNonDefaultPortsEnabled": {
        "title": "Enable HTTP/0.9 support on non-default ports",
        "description": "This policy enables HTTP/0.9 on ports other than 80 for HTTP and 443 for HTTPS.",
        "type": "boolean"
      },
      "ImagesAllowedForUrls": {
        "title": "Allow images on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to display images.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ImagesBlockedForUrls": {
        "title": "Block images on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to display images.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ImportAutofillFormData": {
        "title": "Import autofill form data from default browser on first run",
        "description": "This policy forces the autofill form data to be imported from the previous default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "ImportBookmarks": {
        "title": "Import bookmarks from default browser on first run",
        "description": "This policy forces bookmarks to be imported from the current default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "ImportHistory": {
        "title": "Import browsing history from default browser on first run",
        "description": "This policy forces the browsing history to be imported from the current default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "ImportHomepage": {
        "title": "Import of homepage from default browser on first run",
        "description": "This policy forces the home page to be imported from the current default browser if enabled.",
        "type": "boolean"
      },
      "ImportSavedPasswords": {
        "title": "Import saved passwords from default browser on first run",
        "description": "This policy forces the saved passwords to be imported from the previous default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "ImportSearchEngine": {
        "title": "Import search engines from default browser on first run",
        "description": "This policy forces search engines to be imported from the current default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "IncognitoEnabled": {
        "title": "Enable Incognito",
        "description": "This policy is deprecated. Please, use IncognitoModeAvailability instead. Enables Incognito mode in Google Chrome.\n\nIf this setting is enabled or not configured, users can open web pages in incognito mode.",
        "type": "boolean"
      },
      "IncognitoModeAvailability": {
        "title": "Incognito mode availability",
        "description": "Specifies whether the user may open pages in Incognito mode in Google Chrome.",
        "type": "integer"
      },
      "InsecureContentAllowedForUrls": {
        "title": "Allow insecure content on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to display blockable (i.e. active) mixed content (i.e. HTTP content on HTTPS sites) and for which optionally blockable mixed content upgrades will be disabled.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "InsecureContentBlockedForUrls": {
        "title": "Block insecure content on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to display blockable (i.e. active) mixed content (i.e. HTTP content on HTTPS sites), and for which optionally blockable (i.e. passive) mixed content will be upgraded.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "IntensiveWakeUpThrottlingEnabled": {
        "title": "Enable Intensive Wake Up Throttling",
        "description": "When enabled, the IntensiveWakeUpThrottling feature causes JavaScript timers in background tabs to be aggressively throttled and coalesced, running no more than once per minute after a page has been backgrounded for 5 minutes or more.",
        "type": "boolean"
      },
      "IsolateOrigins": {
        "title": "Enable Site Isolation for specified origins",
        "description": "If the policy is enabled, each of the named origins in a comma-separated list will run in its own process. This will also isolate origins named by subdomains; e.g. specifying https://example.com/ will also cause https://foo.example.com/ to be isolated as part of the https://example.com/ site. If the policy is disabled, no explicit Site Isolation will happen and field trials of IsolateOrigins and SitePerProcess will be disabled. Users will still be able to enable IsolateOrigins manually. If the policy is not configured, the user will be able to change this setting. On Google Chrome OS, it is recommended to also set the DeviceLoginScreenIsolateOrigins device policy to the same value. If the values specified by the two policies don't match, a delay may be incurred when entering a user session while the value specified by user policy is being applied.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "JavaScriptAllowedForUrls": {
        "title": "Allow JavaScript on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to run JavaScript.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "JavaScriptBlockedForUrls": {
        "title": "Block JavaScript on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to run JavaScript.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "JavascriptEnabled": {
        "title": "Javascript Enabled",
        "description": "This policy is deprecated, please use DefaultJavaScriptSetting instead.\n\nCan be used to disabled JavaScript in Google Chrome.",
        "type": "boolean"
      },
      "LegacySameSiteCookieBehaviorEnabled": {
        "title": "Enable legacy SameSite cookie behavior",
        "description": "Allows you to revert all cookies to legacy SameSite behavior.",
        "type": "integer"
      },
      "LegacySameSiteCookieBehaviorEnabledForDomainList": {
        "title": "Enable legacy SameSite cookie behavior for list of domains",
        "description": "Cookies set for domains matching these patterns will revert to legacy SameSite behavior. For cookies on domains not covered by the patterns specified here, or for all cookies if this policy is not set, the global default value will be used either from the LegacySameSiteCookieBehaviorEnabled policy, if it is set, or the user's personal configuration otherwise.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "LocalDiscoveryEnabled": {
        "title": "Enable chrome://devices",
        "description": "This policy controls access to controllable features in the local discovery UI (chrome://devices) which shows discoverable devices near the user as well as cloud devices registered to them. On all operating systems except for Google Chrome OS, the local discovery UI also allows users to add classic printers connected to their computers to Google Cloud Print.",
        "type": "boolean"
      },
      "LookalikeWarningAllowlistDomains": {
        "title": "Suppress lookalike domain warnings on domains",
        "description": "This policy prevents the display of lookalike URL warnings on the sites listed. These warnings are typically shown on sites that Google Chrome believes might be trying to spoof another site the user is familiar with. If the policy is enabled and set to one or more domains, no lookalike warnings pages will be shown when the user visits pages on that domain. If the policy is disabled, not set, or set to an empty list, warnings may appear on any site the user visits.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "MachineLevelUserCloudPolicyEnrollmentToken": {
        "title": "The enrollment token of cloud policy on desktop",
        "description": "The enrollment token of cloud policy on desktop. This policy is deprecated in M72. Please use CloudManagementEnrollmentToken instead.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ManagedBookmarks": {
        "title": "Managed Bookmarks",
        "description": "Configures a list of managed bookmarks.",
        "type": {
          "array": [
            {
              "dictionary": {
                "name": {
                  "title": "name",
                  "description": "Name of the bookmark.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "url": {
                  "title": "url",
                  "description": "URL for the bookmark.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            },
            {
              "dictionary": {
                "toplevel_name": {
                  "title": "Top Level Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "MaxConnectionsPerProxy": {
        "title": "Maximal number of concurrent connections to the proxy server",
        "description": "Specifies the maximal number of simultaneous connections to the proxy server.",
        "type": "integer"
      },
      "MaxInvalidationFetchDelay": {
        "title": "Maximum fetch delay after a policy invalidation",
        "description": "Specifies the maximum delay in milliseconds between receiving a policy invalidation and fetching the new policy from the device management service.",
        "type": "integer"
      },
      "MediaRecommendationsEnabled": {
        "title": "Enable Media Recommendations",
        "description": "By default the browser will show media recommendations that are personalized to the user. Setting this policy to Disabled will result in these recommendations being hidden from the user. Setting this policy to Enabled or leaving it unset will result in the media recommendations being shown to the user.",
        "type": "boolean"
      },
      "MediaRouterCastAllowAllIPs": {
        "title": "Allow Google Cast to connect to Cast devices on all IP addresses.",
        "description": "If this policy is set to true, Google Cast will connect to Cast devices on all IP addresses, not just RFC1918/RFC4913 private addresses.",
        "type": "boolean"
      },
      "MetricsReportingEnabled": {
        "title": "Enable reporting of usage and crash-related data",
        "description": "Enables anonymous reporting of usage and crash-related data about Google Chrome to Google and prevents users from changing this setting.",
        "type": "boolean"
      },
      "NTPCardsVisible": {
        "title": "Show cards on the New Tab Page",
        "description": "This policy controls the visibility of cards on the New Tab Page. Cards surface entry points to launch common user journeys based on the user's browsing behavior.\n\nIf the policy is set to Enabled, the New Tab Page will show cards if content is available.\n\nIf the policy is set to Disabled, the New Tab Page won't show cards.",
        "type": "boolean"
      },
      "NTPCustomBackgroundEnabled": {
        "title": "Allow New Tab page background customization",
        "description": "Allow users to customize the background on the New Tab page",
        "type": "boolean"
      },
      "NativeMessagingAllowlist": {
        "title": "Native Messaging Host Allowlist",
        "description": "Allows you to specify which native messaging hosts are not subject to the block list. A block list value of * means all native messaging hosts are denied and only native messaging hosts listed in the allow list will be loaded.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NativeMessagingBlacklist": {
        "title": "Native Messaging Host Blacklist",
        "description": "Allows you to specify which native messaging hosts that should not be loaded. A blacklist value of '*' means all native messaging hosts are denied unless they are explicitly listed in the allowlist.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NativeMessagingBlocklist": {
        "title": "Native Messaging Host Blocklist",
        "description": "Allows you to specify which native messaging hosts that should not be loaded. A block list value of '*' means all native messaging hosts are denied unless they are explicitly listed in the allow list.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NativeMessagingUserLevelHosts": {
        "title": "Allow user-level Native Messaging hosts (installed without admin permissions)",
        "description": "Enables user-level installation of Native Messaging hosts.",
        "type": "boolean"
      },
      "NativeMessagingWhitelist": {
        "title": "Native Messaging Host Whitelist",
        "description": "Allows you to specify which native messaging hosts are not subject to the blacklist. A blacklist value of * means all native messaging hosts are denied and only native messaging hosts listed in the whitelist will be loaded.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NetworkPredictionOptions": {
        "title": "Enable network prediction",
        "description": "(Deprecated in 50, removed in 52. After 52, if value 1 is set, it will be treated as 0 - predict network actions on any network connection.)\nEnables network prediction in Google Chrome and prevents users from changing this setting.",
        "type": "integer"
      },
      "NewTabPageLocation": {
        "title": "New Tab page URL",
        "description": "Configures the default New Tab page URL and prevents users from changing it.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "NotificationsAllowedForUrls": {
        "title": "Allow notifications on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to display notifications.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NotificationsBlockedForUrls": {
        "title": "Block notifications on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to display notifications.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NtlmV2Enabled": {
        "title": "Enable NTLMv2 authentication",
        "description": "Controls whether NTLMv2 is enabled.",
        "type": "boolean"
      },
      "OverrideSecurityRestrictionsOnInsecureOrigin": {
        "title": "Origins or hostname patterns to be treated as secure context.",
        "description": "The policy specifies a list of origins (URLs) or hostname patterns (such as \"*.example.com\") to be treated as secure contexts. The intent is to allow organizations to set up a staging server for internal web development, so that their developers can test out features requiring secure contexts without having to deploy TLS on the staging server.\n\nSetting a list of URLs in this policy has the same effect as setting the command-line flag '--unsafely-treat-insecure-origin-as-secure' to a comma-separated list of the same URLs. If the policy is set, it will override the command-line flag.\n\nFor more information on secure contexts, see https://www.w3.org/TR/secure-contexts/",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordLeakDetectionEnabled": {
        "title": "Enable password leak detection",
        "description": "This policy can be used to force enable or force disable credential leak checking in Google Chrome.",
        "type": "boolean"
      },
      "PasswordManagerEnabled": {
        "title": "Enable saving passwords to the password manager",
        "description": "If this setting is enabled, users can have Google Chrome memorize passwords and provide them automatically the next time they log in to a site.",
        "type": "boolean"
      },
      "PasswordProtectionChangePasswordURL": {
        "title": "Configure the change password URL.",
        "description": "Configure the change password URL (HTTP and HTTPS schemes only). Password protection service will send users to this URL to change their password after seeing a warning in the browser.\nIn order for Google Chrome to correctly capture the new password fingerprint on this change password page, please make sure your change password page follows the guidelines on https://www.chromium.org/developers/design-documents/create-amazing-password-forms.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordProtectionLoginURLs": {
        "title": "Configure the list of enterprise login URLs where password protection service should capture fingerprint of password.",
        "description": "Configure the list of enterprise login URLs (HTTP and HTTPS schemes only). Fingerprint of password will be captured on these URLs and used for password reuse detection.\nIn order for Google Chrome to correctly capture password fingerprints, please make sure your login pages follow the guidelines on https://www.chromium.org/developers/design-documents/create-amazing-password-forms.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PasswordProtectionWarningTrigger": {
        "title": "Password protection warning trigger",
        "description": "Allows you to control the triggering of passwore protection warning. Password protection alerts users when they reuse their protected password on potentially suspicious sites.",
        "type": "integer"
      },
      "PaymentMethodQueryEnabled": {
        "title": "Payment Method Query",
        "description": "Allows you to set whether websites are allowed to check if the user has payment methods saved.",
        "type": "boolean"
      },
      "PluginsAllowedForUrls": {
        "title": "Allow the Flash plugin on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to run the Flash plugin.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PluginsBlockedForUrls": {
        "title": "Block the Flash plugin on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to run the Flash plugin.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PolicyAtomicGroupsEnabled": {
        "title": "Enable Policy Atomic Groups",
        "description": "Enables the concept of policy atomic groups.",
        "type": "boolean"
      },
      "PolicyDictionaryMultipleSourceMergeList": {
        "title": "Allow merging dictionary policies from different sources",
        "description": "Allows the selected policies to be merged when they come from different sources, with the same scopes and level. Entered strings must match a Chrome policy / key name that uses a dictionary for its data type.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PolicyListMultipleSourceMergeList": {
        "title": "Allow merging list policies from different sources",
        "description": "Allows the selected policies to be merged when they come from different sources, with the same scopes and level. Entered strings must match a Chrome policy / key name that use an array (list) of strings for its data type.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PolicyRefreshRate": {
        "title": "Policy Refresh Rate",
        "description": "Refresh rate for user policy. Specifies the period in milliseconds at which the device management service is queried for user policy information. Setting this policy overrides the default value of 3 hours. Valid values for this policy are in the range from 1800000 (30 minutes) to 86400000 (1 day).",
        "type": "integer"
      },
      "PopupsAllowedForUrls": {
        "title": "Allow popups on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to open popups.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PopupsBlockedForUrls": {
        "title": "Block popups on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to open popups.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PrintHeaderFooter": {
        "title": "Print Headers & Footers",
        "description": "Force 'headers and footers' to be on or off in the printing dialog.",
        "type": "boolean"
      },
      "PrintPreviewUseSystemDefaultPrinter": {
        "title": "Use System Default Printer as Default",
        "description": "Causes Google Chrome to use the system default printer as the default choice in Print Preview instead of the most recently used printer.",
        "type": "boolean"
      },
      "PrinterPaperSizeDefault": {
        "title": "Default printer paper size",
        "description": "Overrides default printing page size. If 'custom' is provided, custom size width and height keys must also be included.",
        "type": {
          "dictionary": {
            "custom_size": {
              "title": "Custom Size",
              "type": {
                "dictionary": {
                  "height": {
                    "title": "Height",
                    "description": "Height of the page",
                    "type": "integer"
                  },
                  "width": {
                    "title": "Width",
                    "description": "Width of the page",
                    "type": "integer"
                  }
                }
              }
            },
            "name": {
              "title": "Name",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "PrinterTypeDenyList": {
        "title": "Printer Type Deny List",
        "description": "The printers of types placed on the deny list will be disabled from being discovered or having their capabilities fetched.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "privet",
                    "Zeroconf-based (mDNS + DNS-SD) protocol destinations"
                  ],
                  [
                    "extension",
                    "Extension-based destinations"
                  ],
                  [
                    "pdf",
                    "The 'Save as PDF' destination"
                  ],
                  [
                    "local",
                    "Local printer destinations"
                  ],
                  [
                    "cloud",
                    "Google Cloud Print and 'Save to Google Drive' destinations"
                  ]
                ]
              }
            }
          ]
        }
      },
      "PrintingAllowedBackgroundGraphicsModes": {
        "title": "Background graphics printing mode",
        "description": "Restricts background graphics printing mode. Unset policy is treated as no restriction.",
        "type": {
          "string": {
            "rangeList": [
              [
                "any",
                "Allow printing both with and without background graphics"
              ],
              [
                "enabled",
                "Allow printing only with background graphics"
              ],
              [
                "disabled",
                "Allow printing only without background graphics"
              ]
            ]
          }
        }
      },
      "PrintingBackgroundGraphicsDefault": {
        "title": "Default background graphics printing mode",
        "description": "Overrides default background graphics printing mode.",
        "type": {
          "string": {
            "rangeList": [
              [
                "enabled",
                "Enabled"
              ],
              [
                "disabled",
                "Disabled"
              ]
            ]
          }
        }
      },
      "PrintingEnabled": {
        "title": "Enable printing",
        "description": "Enables printing in Google Chrome and prevents users from changing this setting.",
        "type": "boolean"
      },
      "PrivacySandboxAdMeasurementEnabled": {
        "title": "Privacy Sandbox Ad Measurement Enabled",
        "description": "A policy to control whether the Privacy Sandbox Ad measurement setting can be disabled for your users.",
        "type": "boolean"
      },
      "PrivacySandboxAdTopicsEnabled": {
        "title": "Privacy Sandbox Ad Topics Enabled",
        "description": "A policy to control whether the Privacy Sandbox Ad measurement setting can be disabled for your users.",
        "type": "boolean"
      },
      "PrivacySandboxPromptEnabled": {
        "title": "Privacy Sandbox Prompt Enabled",
        "description": "A policy to control whether your users see the Privacy Sandbox prompt.",
        "type": "boolean"
      },
      "PrivacySandboxSiteEnabledAdsEnabled": {
        "title": "Privacy Sandbox Site Enabled Ads Enabled",
        "description": "A policy to control whether the Privacy Sandbox Site-suggested ads setting can be disabled for your users.",
        "type": "boolean"
      },
      "ProfilePickerOnStartupAvailability": {
        "title": "Profile picker availabily on startup",
        "description": "Specifies whether the profile picker is enabled, disabled or forced at the browser startup. By default the profile picker is not shown if the browser starts in guest or incognito mode, a profile directory and/or urls are specified by command line, an app is explicitly requested to open, the browser was launched by a native notification, there is only one profile available or the policy ForceBrowserSignin is set to true.",
        "type": "integer"
      },
      "PromotionalTabsEnabled": {
        "title": "Enable showing full-tab promotional content",
        "description": "Allows you to control the presentation of full-tab promotional and/or educational content in Google Chrome.",
        "type": "boolean"
      },
      "PromptForDownloadLocation": {
        "title": "Ask where to save each file before downloading",
        "description": "If the policy is enabled, the user will be asked where to save each file before downloading.\nIf the policy is disabled, downloads will start immediately, and the user will not be asked where to save the file.\nIf the policy is not configured, the user will be able to change this setting.",
        "type": "boolean"
      },
      "ProxyBypassList": {
        "title": "Comma-separated list of proxy bypass rules",
        "description": "Google Chrome will bypass any proxy for the list of hosts given here.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyMode": {
        "title": "Choose how to specify proxy server settings",
        "description": "Allows you to specify the proxy server used by Google Chrome and prevents users from changing proxy settings.",
        "type": {
          "string": {
            "rangeList": [
              [
                "direct",
                "Never use a proxy"
              ],
              [
                "auto_detect",
                "Auto detect proxy settings"
              ],
              [
                "pac_script",
                "Use a .pac proxy script"
              ],
              [
                "fixed_servers",
                "Use fixed proxy servers"
              ],
              [
                "system",
                "Use system proxy settings"
              ]
            ]
          }
        }
      },
      "ProxyPacUrl": {
        "title": "URL to a proxy .pac file",
        "description": "You can specify a URL to a proxy .pac file here.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyServer": {
        "title": "Address or URL of proxy server",
        "description": "You can specify the URL of the proxy server here.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyServerMode": {
        "title": "Proxy server settings",
        "description": "This policy is deprecated, use ProxyMode instead.\n\nAllows you to specify the proxy server used by Google Chrome and prevents users from changing proxy settings.",
        "type": "integer"
      },
      "ProxySettings": {
        "title": "Proxy Settings",
        "description": "Configures the proxy settings for Google Chrome. These proxy settings will be available for ARC-apps too.\n\nIf you enable this setting, Google Chrome and ARC-apps ignore all proxy-related options specified from the command line.",
        "type": {
          "dictionary": {
            "ProxyBypassList": {
              "title": "Proxy Bypass List",
              "description": "Defines a comma-separated list of hosts for which Google Chrome bypasses any proxy.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ProxyMode": {
              "title": "Proxy Mode",
              "description": "Specifies the proxy server Google Chrome uses and prevents users from changing proxy settings.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "direct",
                      "Never use proxy (ignores other fields)"
                    ],
                    [
                      "system",
                      "System (ignores other fields)"
                    ],
                    [
                      "auto_detect",
                      "Auto Detect (ignores other fields)"
                    ],
                    [
                      "fixed_servers",
                      "Fixed (Uses ProxyServer & ProxyBypassList)"
                    ],
                    [
                      "pac_script",
                      "Pac Script (Uses ProxyPacUrl & ProxyBypassList)"
                    ]
                  ]
                }
              }
            },
            "ProxyPacMandatory": {
              "title": "Proxy PAC Mandatory",
              "description": "Prevents the network stack from falling back to direct connections with invalid or unavailable PAC script.",
              "type": "boolean"
            },
            "ProxyPacUrl": {
              "title": "Proxy PAC URL",
              "description": "Specifies the URL for a proxy auto-config (PAC) file.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ProxyServer": {
              "title": "Proxy Server URL",
              "description": "Specifies the URL of the proxy server",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "QuicAllowed": {
        "title": "Allow QUIC protocol",
        "description": "If this policy is set to true or not set usage of QUIC protocol in Google Chrome is allowed.\nIf this policy is set to false usage of QUIC protocol is disallowed.",
        "type": "boolean"
      },
      "RegisteredProtocolHandlers": {
        "title": "Register protocol handlers",
        "description": "Allows you to register a list of protocol handlers. This can only be a recommended policy. The property |protocol| should be set to the scheme such as 'mailto' and the property |url| should be set to the URL pattern of the application that handles the scheme. The pattern can include a '%s', which if present will be replaced by the handled URL.",
        "type": {
          "array": [
            {
              "dictionary": {
                "default": {
                  "title": "default",
                  "type": "boolean"
                },
                "protocol": {
                  "title": "protocol",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "url": {
                  "title": "url",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "RelaunchNotification": {
        "title": "Notify a user that a browser relaunch is recommended or required",
        "description": "Notify users that Google Chrome must be relaunched to apply a pending update.",
        "type": "integer"
      },
      "RelaunchNotificationPeriod": {
        "title": "Update time period",
        "description": "Allows you to set the time period, in milliseconds, over which users are notified that Google Chrome must be relaunched or that a Google Chrome OS device must be restarted to apply a pending update.",
        "type": "integer"
      },
      "RemoteAccessHostAllowClientPairing": {
        "title": "Enable or disable PIN-less authentication for remote access hosts",
        "description": "If this setting is enabled or not configured, then users can opt to pair clients and hosts at connection time, eliminating the need to enter a PIN every time.",
        "type": "boolean"
      },
      "RemoteAccessHostAllowFileTransfer": {
        "title": "Allow remote access file transfer",
        "description": "Controls the ability of a user connected to a remote access host to transfer files between the client and the host. This does not apply to remote assistance connections, which do not support file transfer.",
        "type": "boolean"
      },
      "RemoteAccessHostAllowGnubbyAuth": {
        "title": "Allow gnubby authentication for remote access hosts",
        "description": "If this setting is enabled, then gnubby authentication requests will be proxied across a remote host connection.",
        "type": "boolean"
      },
      "RemoteAccessHostAllowRelayedConnection": {
        "title": "Enable the use of relay servers by the remote access host",
        "description": "Enables usage of relay servers when remote clients are trying to establish a connection to this machine.",
        "type": "boolean"
      },
      "RemoteAccessHostClientDomain": {
        "title": "Configure the required domain names for remote access clients",
        "description": "Configure the required domain name for remote access clients. This policy is deprecated. Please use RemoteAccessHostClientDomainList instead.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "RemoteAccessHostClientDomainList": {
        "title": "Configure the required domain names for remote access clients",
        "description": "Configures the required client domain names that will be imposed on remote access clients and prevents users from changing it.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "RemoteAccessHostDomain": {
        "title": "Configure the required domain names for remote access hosts",
        "description": "Configure the required domain name for remote access hosts. This policy is deprecated. Please use RemoteAccessHostDomainList instead.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "RemoteAccessHostDomainList": {
        "title": "Configure the required domain names for remote access hosts",
        "description": "Configures the required host domain names that will be imposed on remote access hosts and prevents users from changing it.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "RemoteAccessHostFirewallTraversal": {
        "title": "Enable firewall traversal from remote access host",
        "description": "Enables usage of STUN servers when remote clients are trying to establish a connection to this machine.",
        "type": "boolean"
      },
      "RemoteAccessHostMatchUsername": {
        "title": "Require that the name of the local user and the remote access host owner match",
        "description": "If this setting is enabled, then the remote access host compares the name of the local user (that the host is associated with) and the name of the Google account registered as the host owner (i.e. \"johndoe\" if the host is owned by \"johndoe@example.com\" Google account).  The remote access host will not start if the name of the host owner is different from the name of the local user that the host is associated with.  RemoteAccessHostMatchUsername policy should be used together with RemoteAccessHostDomain to also enforce that the Google account of the host owner is associated with a specific domain (i.e. \"example.com\").",
        "type": "boolean"
      },
      "RemoteAccessHostRequireCurtain": {
        "title": "Enable curtaining of remote access hosts",
        "description": "Enables curtaining of remote access hosts while a connection is in progress.",
        "type": "boolean"
      },
      "RemoteAccessHostTalkGadgetPrefix": {
        "title": "Configure the TalkGadget prefix for remote access hosts",
        "description": "Configures the TalkGadget prefix that will be used by remote access hosts and prevents users from changing it.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RemoteAccessHostTokenUrl": {
        "title": "URL where remote access clients should obtain their authentication token",
        "description": "If this policy is set, the remote access host will require authenticating clients to obtain an authentication token from this URL in order to connect. Must be used in conjunction with RemoteAccessHostTokenValidationUrl.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RemoteAccessHostTokenValidationCertificateIssuer": {
        "title": "Client certificate for connecting to RemoteAccessHostTokenValidationUrl",
        "description": "If this policy is set, the host will use a client certificate with the given issuer CN to authenticate to RemoteAccessHostTokenValidationUrl. Set it to \"*\" to use any available client certificate.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RemoteAccessHostTokenValidationUrl": {
        "title": "URL for validating remote access client authentication token",
        "description": "If this policy is set, the remote access host will use this URL to validate authentication tokens from remote access clients, in order to accept connections. Must be used in conjunction with RemoteAccessHostTokenUrl.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RemoteAccessHostUdpPortRange": {
        "title": "Restrict the UDP port range used by the remote access host",
        "description": "Restricts the UDP port range used by the remote access host in this machine.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ReportSafeBrowsingData": {
        "title": "Report Safe Browsing",
        "description": "Report Safe Browsing information.",
        "type": "boolean"
      },
      "RestoreOnStartup": {
        "title": "Action on startup",
        "description": "Allows you to specify the behavior on startup.",
        "type": "integer"
      },
      "RestoreOnStartupURLs": {
        "title": "URLs to open on startup",
        "description": "If 'Open a list of URLs' is selected as the startup action, this allows you to specify the list of URLs that are opened. If left not set no URL will be opened on start up.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "RestrictSigninToPattern": {
        "title": "Restrict which users are allowed to sign in to Google Chrome",
        "description": "Contains a regular expression which is used to determine which users can sign in to Google Chrome.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RunAllFlashInAllowMode": {
        "title": "Extend Flash content setting to all content",
        "description": "If you enable this setting, all Flash content embedded on websites that have been set to allow Flash in content settings -- either by the user or by enterprise policy -- will be run, including content from other origins or small content.",
        "type": "boolean"
      },
      "SSLErrorOverrideAllowed": {
        "title": "Allow proceeding from the SSL warning page",
        "description": "Chrome shows a warning page when users navigate to sites that have SSL errors. By default or when this policy is set to true, users are allowed to click through these warning pages.\nSetting this policy to false disallows users to click through any warning page.",
        "type": "boolean"
      },
      "SSLVersionMin": {
        "title": "Minimum SSL version enabled",
        "description": "If this policy is not configured then Google Chrome uses a default minimum version which is TLS 1.0.",
        "type": {
          "string": {
            "rangeList": [
              [
                "tls1",
                "TLS 1.0"
              ],
              [
                "tls1.1",
                "TLS 1.1"
              ],
              [
                "tls1.2",
                "TLS 1.2"
              ]
            ]
          }
        }
      },
      "SafeBrowsingAllowlistDomains": {
        "title": "Configure the list of domains on which Safe Browsing will not trigger warnings.",
        "description": "Configure the list of domains which Safe Browsing will trust. This means:\nSafe Browsing will not check for dangerous resources (e.g. phishing, malware, or unwanted software) if their URLs match these domains.\nSafe Browsing's download protection service will not check downloads hosted on these domains.\nSafe Browsing's password protection service will not check for password reuse if the page URL matches these domains.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "SafeBrowsingEnabled": {
        "title": "Enable Safe Browsing",
        "description": "Enables Google Chrome's Safe Browsing feature and prevents users from changing this setting.",
        "type": "boolean"
      },
      "SafeBrowsingExtendedReportingEnabled": {
        "title": "Enable Safe Browsing Extended Reporting",
        "description": "Enables Google Chrome's Safe Browsing Extended Reporting and prevents users from changing this setting.",
        "type": "boolean"
      },
      "SafeBrowsingExtendedReportingOptInAllowed": {
        "title": "Allow users to opt in to Safe Browsing extended reporting",
        "description": "This setting is deprecated, use SafeBrowsingExtendedReportingEnabled instead. Enabling or disabling SafeBrowsingExtendedReportingEnabled is equivalent to setting SafeBrowsingExtendedReportingOptInAllowed to False.",
        "type": "boolean"
      },
      "SafeBrowsingProtectionLevel": {
        "title": "Safe Browsing protection level",
        "description": "Allows you to control whether Google Chrome's Safe Browsing feature is enabled and the mode it operates in. Safe Browsing 'enhanced' mode provides better security, but requires sharing more browsing information with Google.",
        "type": "integer"
      },
      "SafeBrowsingWhitelistDomains": {
        "title": "Configure the list of domains on which Safe Browsing will not trigger warnings.",
        "description": "Configure the list of domains which Safe Browsing will trust. This means:\nSafe Browsing will not check for dangerous resources (e.g. phishing, malware, or unwanted software) if their URLs match these domains.\nSafe Browsing's download protection service will not check downloads hosted on these domains.\nSafe Browsing's password protection service will not check for password reuse if the page URL matches these domains.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "SafeSitesFilterBehavior": {
        "title": "Control SafeSites adult content filtering.",
        "description": "This policy controls the application of the SafeSites URL filter.\nThis filter uses the Google Safe Search API to classify URLs as pornographic or not.",
        "type": "integer"
      },
      "SavingBrowserHistoryDisabled": {
        "title": "Disable saving browser history",
        "description": "Disables saving browser history in Google Chrome and prevents users from changing this setting.",
        "type": "boolean"
      },
      "ScreenCaptureAllowed": {
        "title": "Screen Capture",
        "description": "If enabled or not configured (default), a Web page can use screen-share APIs (e.g., getDisplayMedia() or the Desktop Capture extension API) to prompt the user to select a tab, window or desktop to capture.",
        "type": "boolean"
      },
      "ScrollToTextFragmentEnabled": {
        "title": "Enable scroll to text fragment",
        "description": "This feature allows for hyperlinks and address bar URL navigations to target specific text within a web page, which will be scrolled to once the loading of the web page is complete.",
        "type": "boolean"
      },
      "SearchSuggestEnabled": {
        "title": "Enable search suggestions",
        "description": "Enables search suggestions in Google Chrome's omnibox and prevents users from changing this setting.",
        "type": "boolean"
      },
      "SecurityKeyPermitAttestation": {
        "title": "URLs/domains automatically permitted direct Security Key attestation",
        "description": "Specifies URLs and domains for which no prompt will be shown when attestation certificates from Security Keys are requested. Additionally, a signal will be sent to the Security Key indicating that individual attestation may be used. Without this, users will be prompted in Chrome 65+ when sites request attestation of Security Keys.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "SharedClipboardEnabled": {
        "title": "Enable Shared Clipboard",
        "description": "Enables the Shared Clipboard feature which allows users to send text between Chrome Desktops and an Android device when Sync is enabled and the user is Signed-in.",
        "type": "boolean"
      },
      "ShowAppsShortcutInBookmarkBar": {
        "title": "Show the apps shortcut in the bookmark bar",
        "description": "Enables or disables the apps shortcut in the bookmark bar.",
        "type": "boolean"
      },
      "ShowCastIconInToolbar": {
        "title": "Show the Google Cast toolbar icon",
        "description": "If this policy is set to true, the Cast toolbar icon will always be shown on the toolbar or the overflow menu, and users will not be able to remove it.",
        "type": "boolean"
      },
      "ShowFullUrlsInAddressBar": {
        "title": "Show Full URLs",
        "description": "This feature enables display of the full URL in the address bar. If this policy is set to True, then the full URL will be shown in the address bar, including schemes and subdomains. If this policy is set to False, then the default URL display will apply.",
        "type": "boolean"
      },
      "ShowHomeButton": {
        "title": "Show Home button on toolbar",
        "description": "Shows the Home button on Google Chrome's toolbar.",
        "type": "boolean"
      },
      "SignedHTTPExchangeEnabled": {
        "title": "Enabled Signed HTTP Exchange (SXG) support",
        "description": "Enable support for Signed HTTP Exchange (SXG).",
        "type": "boolean"
      },
      "SigninAllowed": {
        "title": "Allow sign in",
        "description": "This policy is deprecated, consider using BrowserSignin instead.\n\nAllows the user to sign in to Google Chrome.",
        "type": "boolean"
      },
      "SigninInterceptionEnabled": {
        "title": "Enable signin interception",
        "description": "This settings enables or disables signin interception. When this policy not set or is set to True, the signin interception dialog triggers when a Google account is added on the web, and the user may benefit from moving this account to another (new or existing) profile. When this is set to False, the signin interception dialog does not trigger.",
        "type": "boolean"
      },
      "SitePerProcess": {
        "title": "Enable Site Isolation for every site",
        "description": "You might want to look at the IsolateOrigins policy setting to get the best of both worlds, isolation and limited impact for users, by using IsolateOrigins with a list of the sites you want to isolate. This setting, SitePerProcess, isolates all sites. If the policy is enabled, each site will run in its own process. If the policy is disabled, no explicit Site Isolation will happen and field trials of IsolateOrigins and SitePerProcess will be disabled. Users will still be able to enable SitePerProcess manually. If the policy is not configured, the user will be able to change this setting. On Google Chrome OS, it is recommended to also set the DeviceLoginScreenSitePerProcess device policy to the same value. If the values specified by the two policies don't match, a delay may be incurred when entering a user session while the value specified by user policy is being applied.",
        "type": "boolean"
      },
      "SpellCheckServiceEnabled": {
        "title": "Enable or disable spell checking web service",
        "description": "Google Chrome can use a Google web service to help resolve spelling errors. If this setting is enabled, then this service is always used. If this setting is disabled, then this service is never used.",
        "type": "boolean"
      },
      "SpellcheckEnabled": {
        "title": "Enable spellcheck",
        "description": "If this policy is not set or enabled, the user is allowed to use spellcheck.",
        "type": "boolean"
      },
      "StricterMixedContentTreatmentEnabled": {
        "title": "Stricter Mixed Content Treatment",
        "description": "This policy controls the treatment for mixed content (HTTP content in HTTPS sites) in the browser. If the policy is set to true or unset, audio and video mixed content will be autoupgraded to HTTPS (i.e. the URL will be rewritten as HTTPS, without a fallback if the resource is not available over HTTPS) and a 'Not Secure' warning will be shown in the URL bar for image mixed content. If the policy is set to false, autoupgrades will be disabled for audio and video, and no warning will be shown for images. This policy does not affect other types of mixed content other than audio, video, and images. This policy will no longer take effect starting in Google Chrome 84.",
        "type": "boolean"
      },
      "SuppressUnsupportedOSWarning": {
        "title": "Suppress the unsupported OS warning",
        "description": "Suppresses the warning that appears when Google Chrome is running on a computer or operating system that is no longer supported.",
        "type": "boolean"
      },
      "SyncDisabled": {
        "title": "Disable synchronization of data with Google",
        "description": "Disables data synchronization in Google Chrome using Google-hosted synchronization services and prevents users from changing this setting.",
        "type": "boolean"
      },
      "SyncTypesListDisabled": {
        "title": "Sync types to disable",
        "description": "If this policy is set, all specified data types will be excluded from synchronization both for Google Sync as well as for roaming profile synchronization.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "apps",
                    "Apps"
                  ],
                  [
                    "autofill",
                    "Autofill"
                  ],
                  [
                    "bookmarks",
                    "Bookmarks"
                  ],
                  [
                    "extensions",
                    "Extensions"
                  ],
                  [
                    "passwords",
                    "Passwords"
                  ],
                  [
                    "preferences",
                    "Preferences"
                  ],
                  [
                    "tabs",
                    "Tabs"
                  ],
                  [
                    "themes",
                    "Themes"
                  ],
                  [
                    "typedUrls",
                    "Typed URLs"
                  ],
                  [
                    "wifiConfiguration",
                    "Wifi Configuration"
                  ]
                ]
              }
            }
          ]
        }
      },
      "TLS13HardeningForLocalAnchorsEnabled": {
        "title": "Enable TLS 1.3 hardening for local anchors",
        "description": "Enable a TLS 1.3 security feature for local trust anchors. This policy controls a security feature in TLS 1.3 which protects connections against downgrade attacks. It is backwards-compatible and will not affect connections to compliant TLS 1.2 servers or proxies. However, older versions of some TLS-intercepting proxies have an implementation flaw which causes them to be incompatible.",
        "type": "boolean"
      },
      "TargetBlankImpliesNoOpener": {
        "title": "Do not set window.opener for links targeting _blank",
        "description": "Setting the policy to Disabled allows popups targeting _blank to access (via JavaScript) the page that requested to open the popup. Setting the policy to Enabled or leaving it unset causes the window.opener property to be set to null unless the anchor specifies rel=\"opener\".",
        "type": "boolean"
      },
      "TaskManagerEndProcessEnabled": {
        "title": "Enable ending processes in Task Manager",
        "description": "If set to false, the 'End process' button is disabled in the Task Manager.",
        "type": "boolean"
      },
      "ThirdPartyStoragePartitioningBlockedForOrigins": {
        "title": "Third Party Storage Partitioning Blocked For Origins",
        "description": "Allows you to set a list of url patterns that specify top-level (the url in the tab's address bar) origins which block third-party storage partitioning (partitioning of cross-origin iframe storage). If this policy is left not set or a top-level origin doesn't match then the value from DefaultThirdPartyStoragePartitioningSetting will be used.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "TotalMemoryLimitMb": {
        "title": "Total Memory Limit",
        "description": "Configures the amount of memory that a single Google Chrome instance can use before tabs start being discarded (I.E. the memory used by the tab will be freed and the tab will have to be reloaded when switched to) to save memory. The minimum allowed value is 1024.",
        "type": "integer"
      },
      "TranslateEnabled": {
        "title": "Enable Translate",
        "description": "Enables the integrated Google Translate service on Google Chrome.",
        "type": "boolean"
      },
      "URLAllowlist": {
        "title": "Allow access to a list of URLs",
        "description": "Allows access to the listed URLs, as exceptions to the URL block list. A URL pattern is formatted according to https://www.chromium.org/administrators/url-blacklist-filter-format.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "URLBlacklist": {
        "title": "URL Blacklist",
        "description": "This policy prevents the user from loading web pages from blacklisted URLs. The denylist provides a list of URL patterns that specify which URLs will be denied. A URL pattern is formatted according to https://www.chromium.org/administrators/url-blacklist-filter-format.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "URLBlocklist": {
        "title": "URL Blocklist",
        "description": "This policy prevents the user from loading web pages from blocked URLs. The blocklist provides a list of URL patterns that specify which URLs will be denied. A URL pattern is formatted according to https://www.chromium.org/administrators/url-blacklist-filter-format.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "URLWhitelist": {
        "title": "Allow access to a list of URLs",
        "description": "Allows access to the listed URLs, as exceptions to the URL denylist. A URL pattern is formatted according to https://www.chromium.org/administrators/url-blacklist-filter-format.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "UnsafelyTreatInsecureOriginAsSecure": {
        "title": "Origins or hostname patterns for which restrictions on insecure origins should not apply",
        "description": "Deprecated in M69. Use OverrideSecurityRestrictionsOnInsecureOrigin instead.\n\nThe policy specifies a list of origins (URLs) or hostname patterns (such as \"*.example.com\") for which security restrictions on insecure origins will not apply.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "UrlKeyedAnonymizedDataCollectionEnabled": {
        "title": "Enable URL-keyed anonymized data collection",
        "description": "Enable URL-keyed anonymized data collection in Google Chrome and prevents users from changing this setting.",
        "type": "boolean"
      },
      "UserAgentClientHintsEnabled": {
        "title": "Enable user agent client hints",
        "description": "When enabled the User-Agent Client Hints feature sends granular request headers providing information about the user browser and environment.",
        "type": "boolean"
      },
      "UserDataDir": {
        "title": "Set user data directory",
        "description": "Configures the directory that Google Chrome will use for storing user data. See https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UserDataSnapshotRetentionLimit": {
        "title": "User data snapshot retention limit",
        "description": "Limits the number of user data snapshots retained for use in case of emergency rollback. If this policy is not set, the default value of 3 is used. If the policy is set to 0, no snapshots will be taken.",
        "type": "integer"
      },
      "UserFeedbackAllowed": {
        "title": "Allow user feedback",
        "description": "Allow user feedback. If the policy is set to false, users can not send feedback to Google.",
        "type": "boolean"
      },
      "VideoCaptureAllowed": {
        "title": "Allow or deny video capture",
        "description": "If enabled or not configured (default), the user will be prompted for\nvideo capture access except for URLs configured in the\nVideoCaptureAllowedUrls list which will be granted access without prompting.",
        "type": "boolean"
      },
      "VideoCaptureAllowedUrls": {
        "title": "URLs that will be granted access to video capture devices without prompt",
        "description": "Patterns in this list will be matched against the security\norigin of the requesting URL.  If a match is found, access to audio\ncapture devices will be granted without prompt.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "WPADQuickCheckEnabled": {
        "title": "Enable WPAD optimization",
        "description": "Allows to turn off WPAD (Web Proxy Auto-Discovery) optimization in Google Chrome.",
        "type": "boolean"
      },
      "WebAppInstallForceList": {
        "title": "WebApp Force Install List",
        "description": "Specifies a list of websites that are installed silently, without user interaction, and which cannot be uninstalled nor disabled by the user.",
        "type": {
          "array": [
            {
              "dictionary": {
                "create_desktop_shortcut": {
                  "title": "Create Desktop Shortcut",
                  "type": "boolean"
                },
                "custom_icon": {
                  "title": "Custom Icon",
                  "type": {
                    "dictionary": {
                      "hash": {
                        "title": "Custom Icon Hash",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "url": {
                        "title": "Custom Icon URL",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      }
                    }
                  }
                },
                "custom_name": {
                  "title": "Custom Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "default_launch_container": {
                  "title": "Default Launch Container",
                  "type": {
                    "string": {
                      "rangeList": [
                        [
                          "window",
                          "Window"
                        ],
                        [
                          "tab",
                          "Tab"
                        ]
                      ]
                    }
                  }
                },
                "fallback_app_name": {
                  "title": "Fallback App Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "install_as_shortcut": {
                  "title": "Install as Shortcut",
                  "type": "boolean"
                },
                "url": {
                  "title": "URL",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "WebComponentsV0Enabled": {
        "title": "Re-enable Web Components v0 API until M84",
        "description": "The Web Components v0 APIs (Shadow DOM v0, Custom Elements v0, and HTML Imports) were deprecated in 2018, and have been disabled by default starting in M80. This policy allows these features to be selectively re-enabled until M84.",
        "type": "boolean"
      },
      "WebDriverOverridesIncompatiblePolicies": {
        "title": "Allow WebDriver to Override Incompatible Policies",
        "description": "This policy allows users of the WebDriver feature to override policies which can interfere with its operation.",
        "type": "boolean"
      },
      "WebRtcAllowLegacyTLSProtocols": {
        "title": "Allow legacy TLS/DTLS downgrade in WebRTC",
        "description": "f enabled, WebRTC peer connections can downgrade to obsolete versions of the TLS/DTLS (DTLS 1.0, TLS 1.0 and TLS 1.1) protocols. When this policy is disabled or not set, these TLS/DTLS versions are disabled.",
        "type": "boolean"
      },
      "WebRtcEventLogCollectionAllowed": {
        "title": "Allow collection of WebRTC event logs from Google services",
        "description": "If the policy is set to true, Google Chrome is allowed to collect WebRTC event logs from Google services (e.g. Google Meet), and upload those logs to Google.",
        "type": "boolean"
      },
      "WebRtcLocalIpsAllowedUrls": {
        "title": "Allowed WebRTC local IP URLs",
        "description": "Patterns in this list will be matched against the security origin of the requesting URL. If a match is found or chrome://flags/#enable-webrtc-hide-local-ips-with-mdns is Disabled, the local IP addresses are shown in WebRTC ICE candidates. Otherwise, local IP addresses are concealed with mDNS hostnames.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "WebRtcUdpPortRange": {
        "title": "Restrict the range of local UDP ports used by WebRTC",
        "description": "If the policy is set, the UDP port range used by WebRTC is restricted to the specified port interval (endpoints included).",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "WebUsbAllowDevicesForUrls": {
        "title": "Automatically grant permission to these sites to connect to USB devices with the given vendor and product IDs",
        "description": "Allows you to set a list of urls that specify which sites will automatically be granted permission to access a USB device with the given vendor and product IDs.",
        "type": {
          "array": [
            {
              "dictionary": {
                "devices": {
                  "title": "Devices",
                  "type": {
                    "array": [
                      {
                        "dictionary": {
                          "product_id": {
                            "title": "product_id",
                            "type": "integer"
                          },
                          "vendor_id": {
                            "title": "vendor_id",
                            "type": "integer"
                          }
                        }
                      }
                    ]
                  }
                },
                "urls": {
                  "title": "URLs",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "WebUsbAskForUrls": {
        "title": "Allow WebUSB on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to ask the user to grant them access to a USB device.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "WebUsbBlockedForUrls": {
        "title": "Block WebUSB on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are prevented from asking the user to grant them access to a USB device.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.google.Keystone": {
    "title": "Google Software Updates",
    "description": "Google Software Update Settings",
    "properties": {
      "updatePolicies": {
        "title": "updatePolicies",
        "type": {
          "dictionary": {
            "com.google.Chrome": {
              "title": "Chrome Update settings",
              "description": "Configure Chrome update settings",
              "type": {
                "dictionary": {
                  "TargetVersionPrefix": {
                    "title": "Chrome Update Version Pin",
                    "description": "Pin an application to a single version. This stops your devices from updating to versions of the app beyond the number you specify. This should be done only temporarily, such as while testing a new version.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "UpdateDefault": {
                    "title": "Chrome Update",
                    "description": "Enable auto-updates & installs = Turns on auto-updates. Chrome updates are always applied when detected by Google Software Update.\nInstall updates at scheduled update checks = Manual update checks will not install updates.\nTurn off updates = Stops Google Software Update automatically updating all users to the latest stable version of Chrome. Updates are only applied when the user manually checks for updates.\nUpdates never applied = Never update Chrome",
                    "type": "integer"
                  }
                }
              }
            },
            "com.google.GoogleDrive": {
              "title": "Backup & Sync Update settings",
              "description": "Configure Backup & Sync update settings",
              "type": {
                "dictionary": {
                  "TargetVersionPrefix": {
                    "title": "Backup & Sync Update Version Pin",
                    "description": "Pin an application to a single version. This stops your devices from updating to versions of the app beyond the number you specify. This should be done only temporarily, such as while testing a new version.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "UpdateDefault": {
                    "title": "Backup & Sync Update",
                    "description": "Enable auto-updates & installs = Turns on auto-updates. Backup & Sync updates are always applied when detected by Google Software Update.\nInstall updates at scheduled update checks = Manual update checks will not install updates.\nTurn off updates = Stops Google Software Update automatically updating all users to the latest stable version of Backup & Sync. Updates are only applied when the user manually checks for updates.\nUpdates never applied = Never update Backup & Sync",
                    "type": "integer"
                  }
                }
              }
            },
            "com.google.chat": {
              "title": "Chat Update settings",
              "description": "Configure Chat update settings",
              "type": {
                "dictionary": {
                  "TargetVersionPrefix": {
                    "title": "Chat Update Version Pin",
                    "description": "Pin an application to a single version. This stops your devices from updating to versions of the app beyond the number you specify. This should be done only temporarily, such as while testing a new version.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "UpdateDefault": {
                    "title": "Chat Update",
                    "description": "Enable auto-updates & installs = Turns on auto-updates. Chat updates are always applied when detected by Google Software Update.\nInstall updates at scheduled update checks = Manual update checks will not install updates.\nTurn off updates = Stops Google Software Update automatically updating all users to the latest stable version of Chat. Updates are only applied when the user manually checks for updates.\nUpdates never applied = Never update Chat",
                    "type": "integer"
                  }
                }
              }
            },
            "com.google.drivefs": {
              "title": "Drive File Stream Update settings",
              "description": "Configure Drive File Stream update settings",
              "type": {
                "dictionary": {
                  "TargetVersionPrefix": {
                    "title": "Drive File Stream Update Version Pin",
                    "description": "Pin an application to a single version. This stops your devices from updating to versions of the app beyond the number you specify. This should be done only temporarily, such as while testing a new version.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "UpdateDefault": {
                    "title": "Drive File Stream Update",
                    "description": "Enable auto-updates & installs = Turns on auto-updates. FileStream updates are always applied when detected by Google Software Update.\nInstall updates at scheduled update checks = Manual update checks will not install updates.\nTurn off updates = Stops Google Software Update automatically updating all users to the latest stable version of FileStream. Updates are only applied when the user manually checks for updates.\nUpdates never applied = Never update FileStream",
                    "type": "integer"
                  }
                }
              }
            },
            "global": {
              "title": "Global Google Update settings",
              "description": "Configure Global Google update settings",
              "type": {
                "dictionary": {
                  "ComponentUpdatesEnabled": {
                    "title": "Enable Global Component Updates",
                    "description": "Even if you turn off automatic updates for Chrome Browser, browser components won't automatically stop updating, including Adobe Flash, Widevine DRM - for encrypted media -, and the Chrome updater recovery component.",
                    "type": "boolean"
                  },
                  "DownloadPreference": {
                    "title": "Global Download Preference",
                    "description": "This preference is referenced in an example property list in the documentation, but is not discussed. So it exists, but what it manages and the possible string values are not known.",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "cacheable",
                            "Cacheable Downloads"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateDefault": {
                    "title": "Global Google Update",
                    "description": "Enable auto-updates & installs = Turns on auto-updates. Updates are always applied when detected by Google Software Update.\nInstall updates at scheduled update checks = Manual update checks will not install updates.\nTurn off updates = Stops Google Software Update automatically updating all users to the latest stable version of Google apps. Updates are only applied when the user manually checks for updates.\nUpdates never applied = Never update Google apps",
                    "type": "integer"
                  },
                  "UpdatesSupressedDurationMin": {
                    "title": "Global Google Update Schedule - Duration",
                    "description": "The length of time, in minutes, that auto-updates can be made. If you set this value to 0, the system behaves as if no update window is specified.",
                    "type": "integer"
                  },
                  "UpdatesSupressedStartHour": {
                    "title": "Global Google Update Schedule - Start Hour",
                    "description": "The time in 24-hour clock format, that auto-updates start. Use a value between 0 - midnight - and 23.",
                    "type": "integer"
                  },
                  "UpdatesSupressedStartMinute": {
                    "title": "Global Google Update Schedule - Start Minute",
                    "description": "The minute, within the starting hour, that auto-updates start. Use a value between 0 and 59.",
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.google.drivefs.settings": {
    "title": "Google Drive for desktop",
    "description": "Use this section to define settings for Google Drive for desktop",
    "properties": {
      "AllowedAccountsPattern": {
        "title": "Allowed Accounts Pattern",
        "description": "Regular expression indicating accounts that are allowed to sign in on this machine.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AutoStartOnLogin": {
        "title": "Auto Start on Login",
        "description": "Start Drive for desktop automatically on session login.",
        "type": "boolean"
      },
      "BandwidthRxKBPS": {
        "title": "Max Downstream Bandwidth",
        "description": "Maximum downstream kilobytes per second.",
        "type": "integer"
      },
      "BandwidthTxKBPS": {
        "title": "Max Upstream Bandwidth",
        "description": "Maximum upstream kilobytes per second.",
        "type": "integer"
      },
      "ContentCacheMaxKbytes": {
        "title": "Max Content Cache Size",
        "description": "Sets the limit on content cache size in kilobytes. The limit is capped at 20% of the available space on the hard drive regardless of the setting value.",
        "type": "integer"
      },
      "ContentCachePath": {
        "title": "Content Cache Path",
        "description": "Sets the path to the content cache location on a connected APFS or HFS+ file system.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultMountPoint": {
        "title": "Default Mount Point",
        "description": "Set the mounted drive path. You can include tilde (~) or environment variables in the path.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DirectConnection": {
        "title": "Direct Connection",
        "description": "This bypasses proxy configurations. ",
        "type": "boolean"
      },
      "DisableCRLCheck": {
        "title": "Disable CRL Check",
        "description": "This disables checking Certificate Revocation Lists (CRLs) provided by certificate authorities. If not explicitly set, this defaults to true if TrustedRootCertsFile is provided, otherwise false.",
        "type": "boolean"
      },
      "DisableLocalizedVirtualFolders": {
        "title": "Disable Localized Virtual Folders",
        "description": "Disables localized names for My Drive, Shared drives, and Computers. Names remain in en-US instead of being localized to the OS system language.",
        "type": "boolean"
      },
      "DisableMeetOutlookPlugin": {
        "title": "Disable Meet Outlook Plugin",
        "description": "Disables the Microsoft Outlook Meet plugin that's bundled with Drive for desktop.",
        "type": "boolean"
      },
      "DisableOnboardingDialog": {
        "title": "Disable Onboarding Dialog",
        "description": "Disables the welcome window for new users.",
        "type": "boolean"
      },
      "DisableOutlookPlugin": {
        "title": "Disable Outlook Plugin",
        "description": "Disables the Microsoft Outlook Google Drive attachment plugin that's bundled with Drive for desktop.",
        "type": "boolean"
      },
      "DisableRealTimePresence": {
        "title": "Disable Real Time Presence",
        "description": "Disables real-time presence in Microsoft Office (https://support.google.com/drive/answer/7329379#realtime)",
        "type": "boolean"
      },
      "DisableSSLValidation": {
        "title": "Disable SSL Validation",
        "description": "This disables validating SSL traffic. Traffic will still be encrypted, but we will not validate that the SSL certificates of the upstream servers are all valid.",
        "type": "boolean"
      },
      "ForceBrowserAuth": {
        "title": "Force Browser Authentication",
        "description": "Use browser authentication.",
        "type": "boolean"
      },
      "MinFreeDiskSpaceKBytes": {
        "title": "Minimum Free Disk Space",
        "description": "Controls the amount of local space used by Drive for desktop's cache. Stops writing content to the disk when free disk space gets below this threshold, in kilobytes.",
        "type": "integer"
      },
      "OpenOfficeFilesInDocs": {
        "title": "Open Office Files In Docs",
        "description": "When using Copy to clipboard on MS Office files synced by Drive for desktop, create links that open in the respective Google Docs Editor instead of the read only Google Drive web preview.",
        "type": "boolean"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PromptToBackupDevices": {
        "title": "Prompt to back up devices",
        "description": "Enable Prompt me to back up devices setting.",
        "type": "boolean"
      },
      "TrustedRootCertsFile": {
        "title": "Trusted Root Certs File",
        "description": "This is the full path to an alternate file to use for validating host SSL certificates. It must be in Privacy Enhanced Mail (PEM) format. Set this if your users are on networks with decrypting proxies.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.google.santa": {
    "title": "Santa",
    "description": "Santa settings",
    "properties": {
      "AboutText": {
        "title": "About Text",
        "description": "Custom text to display at launch.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AllowedPathRegex": {
        "title": "Allowed Path Regex",
        "description": "Path regexes (ICU format) of binaries to allow. Lower precedent than binary, certificate, and Team ID scopes.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BannedBlockMessage": {
        "title": "Banned Block Message",
        "description": "Custom message when a binary is blocked by a rule.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BlockedPathRegex": {
        "title": "Blocked Path Regex",
        "description": "Path regexes (ICU format) of binaries to block. Lower precedent than binary, certificate, and Team ID scopes.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ClientAuthCertificateCN": {
        "title": "Client Certificate Common Name",
        "description": "The Common Name of a certificate in the System keychain to be used for sync authentication.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ClientAuthCertificateFile": {
        "title": "Client Certificate File Path",
        "description": "Location of a PKCS#12 certificate to be used for sync authentication.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ClientAuthCertificateIssuerCN": {
        "title": "Client Certificate Issuer Common Name",
        "description": "The Issuer Name of a certificate in the System keychain to be used for sync authentication.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ClientAuthCertificatePassword": {
        "title": "Client Certificate Password",
        "description": "",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ClientMode": {
        "title": "Client Mode",
        "description": "",
        "type": "integer"
      },
      "EnableBadSignatureProtection": {
        "title": "Bad Signature Protection",
        "description": "Block binaries with a bad signing chain, unless explicitly allowed.",
        "type": "boolean"
      },
      "EnableMachineIDDecoration": {
        "title": "Enable Machine ID Decoration",
        "description": "Appends the MachineID to the end of each log line if enabled.",
        "type": "boolean"
      },
      "EnablePageZeroProtection": {
        "title": "Enable Page Zero Protection",
        "description": "Block 32-bit binaries missing the __PAGEZERO segment, unless explicitly allowed.",
        "type": "boolean"
      },
      "EnableSysxCache": {
        "title": "Enable Sysx Cache",
        "description": "Enable secondary cache. Improves performance when multiple EndpointSecurity system extensions are installed.",
        "type": "boolean"
      },
      "EventDetailText": {
        "title": "Event Detail Text",
        "description": "The text of the button for Event Detail URL.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EventDetailURL": {
        "title": "Event Detail URL",
        "description": "The URL to open when the user gets a block notification. If unset, the button will not be displayed. Can include the following variables for substitution:\n%file_identifier% - SHA-256 of the file that was blocked\n%bundle_or_file_identifier% - SHA-256 of the file that was blocked or the bundle containing it, if available\n%file_sha% - Deprecated, acts like bundle_or_file_identifier\n%machine_id% - ID of the machine\n%username% - The executing user\n%serial% - System's serial number\n%uuid% - System's UUID\n%hostname% - System's full hostname",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EventLogPath": {
        "title": "Event Log Path",
        "description": "",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EventLogType": {
        "title": "Event Log Type",
        "description": "syslog: Sent to ASL or ULS (if built with the 10.12 SDK or later); filelog: Sent to a file on disk. Use EventLogPath to specify a path.",
        "type": {
          "string": {
            "rangeList": [
              [
                "syslog",
                "System log"
              ],
              [
                "filelog",
                "File"
              ],
              [
                "protobuf",
                "Mail"
              ],
              [
                "",
                "None"
              ]
            ]
          }
        }
      },
      "FailClosed": {
        "title": "Deny on Read Error",
        "description": "Deny execution in LOCKDOWN mode if there is an error reading or processing an executable file.",
        "type": "boolean"
      },
      "FileChangesRegex": {
        "title": "File Changes Regex",
        "description": "Path regexes (ICU format) to monitor for file changes.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MachineID": {
        "title": "Machine ID",
        "description": "",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MachineIDKey": {
        "title": "Machine ID Key",
        "description": "The key to use on Machine ID Plist.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MachineIDPlist": {
        "title": "Machine ID Plist",
        "description": "The path to a plist that contains the MachineOwnerKey / value pair.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MachineOwner": {
        "title": "Machine Owner",
        "description": "",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MachineOwnerKey": {
        "title": "Machine Owner Key",
        "description": "The key to use on Machine Owner Plist.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MachineOwnerPlist": {
        "title": "Machine Owner Plist",
        "description": "The path to a plist that contains the MachineOwnerKey / value pair.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MailDirectory": {
        "title": "Mail Directory",
        "description": "The base directory used to save mail files.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MailDirectoryEventMaxFlushTimeSec": {
        "title": "Mail Max Event Buffer",
        "description": "Maximum time (seconds) events will stay buffered in memory before being flushed to disk.",
        "type": "integer"
      },
      "MailDirectoryFileSizeThresholdKB": {
        "title": "Mail Max File Size",
        "description": "Per-file size limit (KB) for files stored in the event log mail directory.",
        "type": "integer"
      },
      "MailDirectorySizeThresholdMB": {
        "title": "Mail Max Size",
        "description": "Total file size limit (MB) for all files stored in the event log mail directory.",
        "type": "integer"
      },
      "MetricExportInterval": {
        "title": "Metric Export Interval",
        "description": "Time (seconds) between exporting metrics.",
        "type": "integer"
      },
      "MetricExportTimeout": {
        "title": "Metric Export Timeout",
        "description": "Timeout (seconds) for exporting metrics.",
        "type": "integer"
      },
      "MetricFormat": {
        "title": "Metric Format",
        "description": "The key to use on Machine ID Plist.",
        "type": {
          "string": {
            "rangeList": [
              [
                "rawjson",
                "Raw JSON"
              ],
              [
                "monarchjson",
                "Monarch JSON"
              ],
              [
                "",
                "None"
              ]
            ]
          }
        }
      },
      "MetricURL": {
        "title": "Metric URL",
        "description": "URL describing where monitoring metrics should be exported.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ModeNotificationLockdown": {
        "title": "Lockdown Notification Text",
        "description": "Custom message when entering LOCKDOWN mode.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ModeNotificationMonitor": {
        "title": "Monitor Notification Text",
        "description": "Custom message when entering MONITOR mode.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MoreInfoURL": {
        "title": "More Info URL",
        "description": "Optional \"More Info...\" link.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ServerAuthRootsData": {
        "title": "Server Authentication Certificate Roots",
        "description": "X.509 certificate (.pem) for inclusion on device. A valid PEM containing one or more certificates to be used for certificate pinning.",
        "type": "data"
      },
      "ServerAuthRootsFile": {
        "title": "Server Authentication Certificate Roots (Local)",
        "description": "Path to an on-disk X.509 certificate (.pem). A valid PEM containing one or more certificates to be used for certificate pinning.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SyncBaseURL": {
        "title": "Sync Server URL",
        "description": "",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SyncEnableCleanSyncEventUpload": {
        "title": "Enable Upload Clean Syncs",
        "description": "Upload events to the sync server even if a clean sync is requested.",
        "type": "boolean"
      },
      "UnknownBlockMessage": {
        "title": "Unknown Block Message",
        "description": "Custom message when an unknown binary is blocked.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.grahamgilbert.crypt": {
    "title": "Crypt",
    "description": "Crypt settings",
    "properties": {
      "KeyEscrowInterval": {
        "title": "Recovery key re-escrow interval",
        "description": "Time interval in Hours for how often Crypt tries to re-escrow the key to Crypt-Server after the first successful escrow.",
        "type": "integer"
      },
      "OutputPath": {
        "title": "Recovery key plist path",
        "description": "Path where the recovery key plist is written to disk.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PostRunCommand": {
        "title": "Recovery key error command",
        "description": "Command that is run after Crypt has detected an error condition with a stored key that cannot be resolved silently - either it has failed validation or the server has instructed the client to rotate the key. These cannot be resolved silently on APFS volumes, so the user will need to log in again. If you have a tool that can enforce a logout or a reboot, you can run it here.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "RemovePlist": {
        "title": "Leave recovery key plist on disk",
        "description": "By default, the plist at /var/root/crypt_output.plist with the FileVault Key will be removed once it has been escrowed. If this is set to True the key will remain as root read only.",
        "type": "boolean"
      },
      "RotateUsedKey": {
        "title": "Rotate recovery key on each use. (Only HFS-formatted disks)",
        "description": "If the recovery key plist is still present on the disk, rotates the recovery key after the key is used to unlock the disk.",
        "type": "boolean"
      },
      "ServerURL": {
        "title": "ServerURL",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SkipUsers": {
        "title": "Users ignored",
        "description": "Local users that will not be forced to enable FileVault.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ValidateKey": {
        "title": "Validate recovery key",
        "description": "If the recovery key plist is still present on the disk, validates the recovery key. If the key fails validation, the plist is removed so it can be regenerated on next login.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.hjuutilainen.MunkiAdmin": {
    "title": "MunkiAdmin",
    "description": "MunkiAdmin app settings",
    "properties": {
      "CopyPkgsToRepo": {
        "title": "Copy package to repository upon import",
        "type": "boolean"
      },
      "MoveInstallerItemsWithPkginfos": {
        "title": "Move installer items when moving pkginfo files",
        "type": "boolean"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UpdateCatalogsOnSave": {
        "title": "Write changed catalog files to repository on save",
        "description": "When saving, write changed catalog files to repository.",
        "type": "boolean"
      },
      "UpdateManifestsOnSave": {
        "title": "Write changed manifest files to repository on save",
        "description": "When saving, write changed manifest files to repository.",
        "type": "boolean"
      },
      "UpdatePkginfosOnSave": {
        "title": "Write changed pkginfo files to repository on save",
        "description": "When saving, write changed pkginfo files to repository.",
        "type": "boolean"
      },
      "assimilate_autoremove": {
        "title": "Assimilate autoremove on import",
        "type": "boolean"
      },
      "assimilate_blocking_applications": {
        "title": "Assimilate blocking_applications on import",
        "type": "boolean"
      },
      "assimilate_category": {
        "title": "Assimilate category on import",
        "type": "boolean"
      },
      "assimilate_description": {
        "title": "Assimilate description on import",
        "type": "boolean"
      },
      "assimilate_developer": {
        "title": "Assimilate developer on import",
        "type": "boolean"
      },
      "assimilate_display_name": {
        "title": "Assimilate display_name on import",
        "type": "boolean"
      },
      "assimilate_enabled": {
        "title": "Assimilate pkginfo properties on import",
        "type": "boolean"
      },
      "assimilate_icon_hash": {
        "title": "Assimilate icon_hash on import",
        "type": "boolean"
      },
      "assimilate_icon_name": {
        "title": "Assimilate icon_name on import",
        "type": "boolean"
      },
      "assimilate_installable_condition": {
        "title": "Assimilate installable_condition on import",
        "type": "boolean"
      },
      "assimilate_installcheck_script": {
        "title": "Assimilate installcheck_script on import",
        "type": "boolean"
      },
      "assimilate_installer_choices_xml": {
        "title": "Assimilate installer_choices_xml on import",
        "type": "boolean"
      },
      "assimilate_installs_items": {
        "title": "Assimilate installs_items on import",
        "type": "boolean"
      },
      "assimilate_items_to_copy": {
        "title": "Assimilate items_to_copy on import",
        "type": "boolean"
      },
      "assimilate_maximum_os_version": {
        "title": "Assimilate maximum_os_version on import",
        "type": "boolean"
      },
      "assimilate_minimum_munki_version": {
        "title": "Assimilate minimum_munki_version on import",
        "type": "boolean"
      },
      "assimilate_minimum_os_version": {
        "title": "Assimilate minimum_os_version on import",
        "type": "boolean"
      },
      "assimilate_name": {
        "title": "Assimilate name on import",
        "type": "boolean"
      },
      "assimilate_post_scripts": {
        "title": "Assimilate post_scripts on import",
        "type": "boolean"
      },
      "assimilate_postinstall_script": {
        "title": "Assimilate postinstall_script on import",
        "type": "boolean"
      },
      "assimilate_postuninstall_script": {
        "title": "Assimilate postuninstall_script on import",
        "type": "boolean"
      },
      "assimilate_pre_scripts": {
        "title": "Assimilate pre_scripts on import",
        "type": "boolean"
      },
      "assimilate_preinstall_script": {
        "title": "Assimilate preinstall_script on import",
        "type": "boolean"
      },
      "assimilate_preuninstall_script": {
        "title": "Assimilate preuninstall_script on import",
        "type": "boolean"
      },
      "assimilate_receipts": {
        "title": "Assimilate receipts on import",
        "type": "boolean"
      },
      "assimilate_requires": {
        "title": "Assimilate requires on import",
        "type": "boolean"
      },
      "assimilate_supported_architectures": {
        "title": "Assimilate supported_architectures on import",
        "type": "boolean"
      },
      "assimilate_unattended_install": {
        "title": "Assimilate unattended_install on import",
        "type": "boolean"
      },
      "assimilate_unattended_uninstall": {
        "title": "Assimilate unattended_uninstall on import",
        "type": "boolean"
      },
      "assimilate_uninstall_method": {
        "title": "Assimilate uninstall_method on import",
        "type": "boolean"
      },
      "assimilate_uninstall_script": {
        "title": "Assimilate uninstall_script on import",
        "type": "boolean"
      },
      "assimilate_uninstallable": {
        "title": "Assimilate uninstallable on import",
        "type": "boolean"
      },
      "assimilate_uninstallcheck_script": {
        "title": "Assimilate uninstallcheck_script on import",
        "type": "boolean"
      },
      "assimilate_uninstaller_item_location": {
        "title": "Assimilate uninstaller_item_location on import",
        "type": "boolean"
      },
      "assimilate_update_for": {
        "title": "Assimilate update_for on import",
        "type": "boolean"
      },
      "items_to_copyGroup": {
        "title": "Override items_to_copy default group",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "items_to_copyMode": {
        "title": "Override items_to_copy default file mode",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "items_to_copyOwner": {
        "title": "Override items_to_copy default owner",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "items_to_copyUseDefaults": {
        "title": "Override items_to_copy default values",
        "type": "boolean"
      },
      "logLevel": {
        "title": "Log level",
        "type": "integer"
      },
      "logToFile": {
        "title": "Log to file",
        "description": "Send log statements to a file in ~/Library/Logs/MunkiAdmin/",
        "type": "boolean"
      },
      "logToSyslog": {
        "title": "Log to Apple System Log",
        "description": "Send log statements to Apple System Log, so they show up in Console.app.",
        "type": "boolean"
      },
      "makecatalogsForceEnabled": {
        "title": "Disable \"sanity checks\" when running makecatalogs",
        "description": "Adds --force option to makecatalogs command.",
        "type": "boolean"
      },
      "makecatalogsOnlyIfNeeded": {
        "title": "Only run makecatalogs if pkginfo files were changed",
        "type": "boolean"
      },
      "makecatalogsPath": {
        "title": "makecatalogs Path",
        "description": "The path to the makecatalogs binary.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "makecatalogsSkipPkgCheck": {
        "title": "Skip checking of pkg existence when running makecatalogs",
        "description": "Adds --skip-pkg-check option to makecatalogs command.",
        "type": "boolean"
      },
      "makepkginfoPath": {
        "title": "makepkginfo Path",
        "description": "The path to the makepkginfo binary.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "sidebarCategoriesVisible": {
        "title": "Categories Visible in Sidebar",
        "type": "boolean"
      },
      "sidebarDeveloperMinimumNumberOfPackageNames": {
        "title": "Developer Minimum Number of Package Names in Sidebar",
        "description": "The minimum number of package names a developer must have in order to be shown in the sidebar.",
        "type": "integer"
      },
      "sidebarDevelopersVisible": {
        "title": "Developers Visible in Sidebar",
        "type": "boolean"
      },
      "sidebarDirectoriesVisible": {
        "title": "Directories Visible in sidebar",
        "type": "boolean"
      },
      "sidebarInstallerTypesVisible": {
        "title": "Installer Types Visible in Sidebar",
        "type": "boolean"
      },
      "sortFeaturedItemsByTitle": {
        "title": "Keep featured items sorted by name",
        "type": "boolean"
      },
      "sortManagedInstallsByTitle": {
        "title": "Keep managed installs sorted by name",
        "type": "boolean"
      },
      "sortManagedUninstallsByTitle": {
        "title": "Keep managed uninstalls sorted by name",
        "type": "boolean"
      },
      "sortManagedUpdatesByTitle": {
        "title": "Keep managed updates sorted by name",
        "type": "boolean"
      },
      "sortOptionalInstallsByTitle": {
        "title": "Keep optional installs sorted by name",
        "type": "boolean"
      },
      "sortPkginfoCatalogsByTitle": {
        "title": "Keep catalogs sorted by name",
        "type": "boolean"
      },
      "startupWhatToDo": {
        "title": "On Startup",
        "description": "Determines what MunkiAdmin's startup behavior is. Leave unspecified or set to integer 1 for the default behavior, which is \"Prompt to Select a Repository.\"",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.hjuutilainen.bigsurblocker": {
    "title": "Big Sur Blocker",
    "description": "Big Sur Blocker settings",
    "properties": {
      "AlertText": {
        "title": "Alert Text",
        "description": "Custom Big Sur Blocker alert text.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AlertTitle": {
        "title": "Alert Title",
        "description": "Custom Big Sur Blocker alert title.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "bundleIDsToBlock": {
        "title": "Additional Bundle IDs to Block",
        "description": "Add any additional bundle identifiers to have Big Sur Blocker block those items as well.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.jamf.connect.login": {
    "title": "Jamf Connect Login (OIDC)",
    "description": "Jamf Connect Login settings",
    "properties": {
      "BackgroundImage": {
        "title": "BackgroundImage",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CreateAdminUser": {
        "title": "CreateAdminUser",
        "type": "boolean"
      },
      "DemobilizeUsers": {
        "title": "DemobilizeUsers",
        "type": "boolean"
      },
      "DenyLocal": {
        "title": "DenyLocal",
        "description": "Determines if users can bypass network authentication and use the Local Auth button at the loginwindow.",
        "type": "boolean"
      },
      "DenyLocalExcluded": {
        "title": "DenyLocalExcluded",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "EULAPath": {
        "title": "EULA Path",
        "description": "The path to a file storing the end user license agreement record",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EULASubTitle": {
        "title": "EULA Subtitle",
        "description": "Subtitle of the end user license agreement",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EULAText": {
        "title": "EULA Text",
        "description": "Text used for the end user license agreement (use three asterisks to create a line break in the text)",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EULATitle": {
        "title": "EULA Title",
        "description": "Title of the end user license agreement",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EnableFDE": {
        "title": "EnableFDE",
        "type": "boolean"
      },
      "EnableFDERecoveryKey": {
        "title": "EnableFDERecoveryKey",
        "type": "boolean"
      },
      "EnableFDERecoveryKeyPath": {
        "title": "EnableFDERecoveryKeyPath",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HelpURL": {
        "title": "HelpURL",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HelpURLLogo": {
        "title": "HelpURLLogo",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LicenseFile": {
        "title": "LicenseFile",
        "type": "data"
      },
      "LocalHelpFile": {
        "title": "LocalHelpFile",
        "description": "A path to a local file that users can access by clicking the \"Help\" button in the Jamf Connect Login window.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LoginLogo": {
        "title": "LoginLogo",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MessageOTPEntry": {
        "title": "MessageOTPEntry",
        "description": "Text displayed when a user must enter a one time password (OTP).",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Migrate": {
        "title": "Migrate",
        "description": "Allows local accounts to be migrated to network accounts. This is typically used when the user account was already created on the system, but you want the accounts to have the same username and password as the user's Okta identity.",
        "type": "boolean"
      },
      "MigrateUsersHide": {
        "title": "MigrateUsersHide",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "OIDCAdmin": {
        "title": "OIDCAdmin",
        "description": "Determines which roles become an admin at the loginwindow. Users assigned a specified role become an admin at the loginwindow.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "OIDCAdminAttribute": {
        "title": "OIDCAdminAttribute",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCClientID": {
        "title": "OIDCClientID",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCClientSecret": {
        "title": "OIDCClientSecret",
        "description": "The client secret used by Jamf Connect Login and your IdP.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCDiscoveryURL": {
        "title": "OIDCDiscoveryURL",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCIgnoreCookies": {
        "title": "OIDCIgnoreCookies",
        "type": "boolean"
      },
      "OIDCNewPassword": {
        "title": "OIDCNewPassword",
        "description": "If set to true, the user must create a new password on the computer\nIf set to false, the user must validate with their existing IdP password, which will also become the local password.",
        "type": "boolean"
      },
      "OIDCProvider": {
        "title": "OIDCProvider",
        "description": "Specifies the IdP provider integrated with Jamf Connect Login.",
        "type": {
          "string": {
            "rangeList": [
              [
                "Azure",
                "Microsoft Azure AD"
              ],
              [
                "GoogleID",
                "Google Identity"
              ],
              [
                "IBMCI",
                "IBM Cloud Identity"
              ],
              [
                "OneLogin",
                "OneLogin"
              ],
              [
                "PingFederate",
                "PingFederate"
              ],
              [
                "Custom",
                "Custom"
              ]
            ]
          }
        }
      },
      "OIDCROPGID": {
        "title": "OIDCROPGID",
        "description": "The Client ID of the added app in you IdP used for authenticating the user's password via a resource owner password grant (ROPG) workflow. This value should match the OIDCClientID key.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCRedirectURI": {
        "title": "OIDCRedirectURI",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCTenant": {
        "title": "OIDCTenant",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RightsTmpCache": {
        "title": "RightsTmpCache",
        "description": "When using the AuthUI rule, determines if the token cache is set to /tmp/cachedata.",
        "type": "boolean"
      },
      "ScriptArgs": {
        "title": "ScriptArgs",
        "description": "The arguments used with a specified script run by the RunScript mechanism",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ScriptPath": {
        "title": "ScriptPath",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.jamf.connect.shares": {
    "title": "Jamf Connect Shares",
    "description": "Jamf Connect Shares settings",
    "properties": {
      "HomeMount": {
        "title": "Home Mount",
        "description": "This is a dictionary of attributes for scenarios where the user's home profile should be mounted.",
        "type": {
          "dictionary": {
            "Groups": {
              "title": "Groups",
              "description": "Specifies which active directory group members should have their home profile mounted.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "Mount": {
              "title": "Auto Mount Home",
              "description": "Mount the user's home automatically or not.",
              "type": "boolean"
            },
            "Options": {
              "title": "Options",
              "description": "Array of optional mount options. See the Options table in the documentation linked below for more information.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Shares": {
        "title": "Shares",
        "description": "Array of dictionaries of each share and their settings.",
        "type": {
          "array": [
            {
              "dictionary": {
                "AutoMount": {
                  "title": "AutoMount",
                  "description": "If enabled, the share is automatically mounted.",
                  "type": "boolean"
                },
                "ConnectedOnly": {
                  "title": "ConnectedOnly",
                  "description": "If enabled, the share is only mounted when the computer is connected to the active directory domain.",
                  "type": "boolean"
                },
                "Groups": {
                  "title": "Groups",
                  "description": "An array of AD groups allowed to mount the share.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "LocalMount": {
                  "title": "LocalMount",
                  "description": "Optional local mount point.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Name": {
                  "title": "Name",
                  "description": "Name as it will appear in the Jamf Connect menu item.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Options": {
                  "title": "Options",
                  "description": "Array of optional mount options. See the Options table in the documentation linked below for more information.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "URL": {
                  "title": "URL",
                  "description": "The actual URL of the mount point in the form of \"smb://dc1.example.com/Homes\".\n\nFor the URLs, you can use variable substitution to allow for custom mounts without having to create even more XML. Jamf Connect understands <<domain>>, <<fullname>>, <<serial>>, <<shortname>>, <<upn>> and <<email>>",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "Version": {
        "title": "Jamf Connect Shares PLIST Version",
        "description": "Required.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.jamf.connect.sync": {
    "title": "Jamf Connect Sync",
    "description": "Jamf Connect Sync Settings",
    "properties": {
      "ADExpirationShow": {
        "title": "ADExpirationShow",
        "type": "boolean"
      },
      "ActionsUpdateTime": {
        "title": "ActionsUpdateTime",
        "type": "integer"
      },
      "AuthServer": {
        "title": "AuthServer",
        "description": "Specifies your Okta authentication domain.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AutoAuth": {
        "title": "AutoAuth",
        "type": "boolean"
      },
      "CenterSignIn": {
        "title": "CenterSignIn",
        "type": "boolean"
      },
      "ChangePasswordOrder": {
        "title": "ChangePasswordOrder",
        "description": "Determines the order and setting for the password change menu. If unspecified, Okta is used by default for password changes. If Kerberos is enabled, Jamf Connect Sync will use Kerberos to authenticate to your Active Directory domain, and then authenticate to Okta.",
        "type": {
          "array": [
            {
              "dictionary": {
                "{{key}}": {
                  "title": "",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "{{value}}": {
                  "title": "",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "ChangePasswordTimer": {
        "title": "ChangePasswordTimer",
        "description": "Specifies an interval, in minutes, until the user is prompted to sign in again after a password change.",
        "type": "integer"
      },
      "CheckSafariExtension": {
        "title": "CheckSafariExtension",
        "type": "boolean"
      },
      "DontShowWelcome": {
        "title": "DontShowWelcome",
        "type": "boolean"
      },
      "ExpirationWarningDays": {
        "title": "ExpirationWarningDays",
        "type": "integer"
      },
      "ExportableKey": {
        "title": "ExportableKey",
        "type": "boolean"
      },
      "GetCertificateAutomatically": {
        "title": "GetCertificateAutomatically",
        "type": "boolean"
      },
      "GetHelpOptions": {
        "title": "GetHelpOptions",
        "description": "Specifies the URL or path for GetHelpType. <<serial>>, <<fullname>>, <<shortname>> and <<domain>> are supported as substitutions.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "GetHelpType": {
        "title": "GetHelpType",
        "description": "Determines which GetHelp type is used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HideAbout": {
        "title": "HideAbout",
        "type": "boolean"
      },
      "HideActions": {
        "title": "HideActions",
        "type": "boolean"
      },
      "HideChangePassword": {
        "title": "HideChangePassword",
        "type": "boolean"
      },
      "HideGetHelp": {
        "title": "HideGetHelp",
        "type": "boolean"
      },
      "HideGetSoftware": {
        "title": "HideGetSoftware",
        "type": "boolean"
      },
      "HideLockScreen": {
        "title": "HideLockScreen",
        "description": "Hides the Lock Screen menu item.",
        "type": "boolean"
      },
      "HidePreferences": {
        "title": "HidePreferences",
        "type": "boolean"
      },
      "HideQuit": {
        "title": "HideQuit",
        "type": "boolean"
      },
      "HideSignIn": {
        "title": "HideSignIn",
        "type": "boolean"
      },
      "IgnoreDomainReachability": {
        "title": "IgnoreDomainReachability",
        "type": "boolean"
      },
      "KerberosRealm": {
        "title": "KerberosRealm",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "KerberosRenew": {
        "title": "KerberosRenew",
        "type": "boolean"
      },
      "KerberosShortName": {
        "title": "KerberosShortName",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "KerberosShortNameAsk": {
        "title": "KerberosShortNameAsk",
        "type": "boolean"
      },
      "KerberosShortNameAskMessage": {
        "title": "KerberosShortNameAskMessage",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "KeychainItems": {
        "title": "KeychainItems",
        "description": "Determines which keychain items Jamf Connect Sync should synchronize with the local password.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Keychain Item",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Account",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "KeychainItemsDebug": {
        "title": "KeychainItemsDebug",
        "type": "boolean"
      },
      "KeychainItemsInternet": {
        "title": "KeychainItemsInternet",
        "description": "Determines which internet accounts Jamf Connect Sync should synchronize with the local password.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Keychain Item",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Account",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "LDAPServers": {
        "title": "LDAPServers",
        "description": "Specifies domain controllers to use for Active Directory lookups.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "LabelPassword": {
        "title": "LabelPassword",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LabelUsername": {
        "title": "LabelUsername",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LicenseFile": {
        "title": "LicenseFile",
        "description": "The contents of a .jamfconnectlicense file encoded in Base64 data format.",
        "type": "data"
      },
      "LocalPasswordSync": {
        "title": "LocalPasswordSync",
        "type": "boolean"
      },
      "LocalPasswordSyncMessage": {
        "title": "LocalPasswordSyncMessage",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LocalPasswordSyncOnMatchOnly": {
        "title": "LocalPasswordSyncOnMatchOnly",
        "type": "boolean"
      },
      "MenuAbout": {
        "title": "MenuAbout",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuActions": {
        "title": "MenuActions",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuChangePassword": {
        "title": "MenuChangePassword",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuGetHelp": {
        "title": "MenuGetHelp",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuGetSoftware": {
        "title": "MenuGetSoftware",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuIcon": {
        "title": "MenuIcon",
        "description": "Path to the menu bar icon image.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuLockScreen": {
        "title": "MenuLockScreen",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuPreferences": {
        "title": "MenuPreferences",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuSignIn": {
        "title": "MenuSignIn",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MessagePasswordChangePolicy": {
        "title": "MessagePasswordChangePolicy",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MessagePluginDisabled": {
        "title": "MessagePluginDisabled",
        "description": "Text displayed to users when the Safari plugin is not enabled.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_Menu": {
        "title": "PFC_SegmentedControl_Menu",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordChangeCommand": {
        "title": "PasswordChangeCommand",
        "description": "Specifies a script or other binary to be run after the user changes a password.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordCheckUpdateTime": {
        "title": "PasswordCheckUpdateTime",
        "description": "Specifies the interval, in minutes, that Jamf Connect Sync checks the local password for synchronization. If unspecified, Jamf Connect Sync will check every 15 minutes by default.",
        "type": "integer"
      },
      "PasswordExpirationMenu": {
        "title": "PasswordExpirationMenu",
        "description": "Determines if the countdown before password expiration is displayed in the menu bar.",
        "type": "boolean"
      },
      "PasswordExpirationMenuDays": {
        "title": "PasswordExpirationMenuDays",
        "description": "An integer, in days remaining, before the password expiration countdown is displayed in the menu bar.",
        "type": "integer"
      },
      "PasswordPolicy": {
        "title": "PasswordPolicy",
        "type": {
          "dictionary": {
            "minLength": {
              "title": "minLength",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minLowerCase": {
              "title": "minLowerCase",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minMatches": {
              "title": "minMatches",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minNumber": {
              "title": "minNumber",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minSymbol": {
              "title": "minSymbol",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minUpperCase": {
              "title": "minUpperCase",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "PeriodicUpdateTime": {
        "title": "PeriodicUpdateTime",
        "description": "Specifies the interval, in minutes, between background updates.",
        "type": "integer"
      },
      "SelfServicePath": {
        "title": "SelfServicePath",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SignInCommand": {
        "title": "SignInCommand",
        "description": "Specifies a script or other binary to be run after a successful sign in.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SignInLogo": {
        "title": "SignInLogo",
        "description": "Specifies the path to image file used as a logo.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Template": {
        "title": "Template",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TicketsOnSignIn": {
        "title": "TicketsOnSignIn",
        "description": "Determines if Jamf Connect Sync retrieves Kerberos Tickets on sign in.",
        "type": "boolean"
      },
      "TitleSignIn": {
        "title": "TitleSignIn",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UseKeychain": {
        "title": "UseKeychain",
        "type": "boolean"
      },
      "UseKeychainPrompt": {
        "title": "UseKeychainPrompt",
        "description": "Displays the Sign In window on launch.",
        "type": "boolean"
      },
      "UseKeychainPromptExlusions": {
        "title": "UseKeychainPromptExlusions",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "WarnOnPasswordExpiration": {
        "title": "WarnOnPasswordExpiration",
        "description": "Determines whether Jamf Connect Sync should warn the user on sign in if the password is about to expire.",
        "type": "boolean"
      },
      "WifiNetworks": {
        "title": "WifiNetworks",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "X509CA": {
        "title": "X509CA",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.jamf.connect.verify": {
    "title": "Jamf Connect Verify",
    "description": "Jamf Connect Verify settings",
    "properties": {
      "DontShowWelcome": {
        "title": "DontShowWelcome",
        "type": "boolean"
      },
      "FailToolPath": {
        "title": "FailToolPath",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ForceSignInWindow": {
        "title": "ForceSignInWindow",
        "type": "boolean"
      },
      "GetHelpOptions": {
        "title": "GetHelpOptions",
        "description": "Specifies the URL or path for GetHelpType. <<serial>>, <<fullname>>, <<shortname>> and <<domain>> are supported as substitutions.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "GetHelpType": {
        "title": "GetHelpType",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HideAbout": {
        "title": "HideAbout",
        "type": "boolean"
      },
      "HideChangePassword": {
        "title": "HideChangePassword",
        "type": "boolean"
      },
      "HideGetHelp": {
        "title": "HideGetHelp",
        "type": "boolean"
      },
      "HideGetSoftware": {
        "title": "HideGetSoftware",
        "type": "boolean"
      },
      "HideHomeDirectory": {
        "title": "HideHomeDirectory",
        "type": "boolean"
      },
      "HideLastUser": {
        "title": "HideLastUser",
        "type": "boolean"
      },
      "HidePrefs": {
        "title": "HidePrefs",
        "type": "boolean"
      },
      "HideQuit": {
        "title": "HideQuit",
        "type": "boolean"
      },
      "HideResetPassword": {
        "title": "HideResetPassword",
        "type": "boolean"
      },
      "HideShares": {
        "title": "HideShares",
        "type": "boolean"
      },
      "HideSignIn": {
        "title": "HideSignIn",
        "type": "boolean"
      },
      "HideTickets": {
        "title": "HideTickets",
        "type": "boolean"
      },
      "KerberosGetTicketsAutomatically": {
        "title": "KerberosGetTicketsAutomatically",
        "type": "boolean"
      },
      "KerberosRealm": {
        "title": "KerberosRealm",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "KerberosShowCountdown": {
        "title": "KerberosShowCountdown",
        "type": "boolean"
      },
      "KerberosShowCountdownLimit": {
        "title": "KerberosShowCountdownLimit",
        "description": "An integer, in days remaining, before the password expiration countdown is displayed in the menu bar.",
        "type": "integer"
      },
      "KeychainItems": {
        "title": "KeychainItems",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "KeychainItemsCreateSerial": {
        "title": "KeychainItemsCreateSerial",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "KeychainItemsDebug": {
        "title": "KeychainItemsDebug",
        "type": "boolean"
      },
      "KeychainItemsInternet": {
        "title": "KeychainItemsInternet",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "LocalPasswordIgnore": {
        "title": "LocalPasswordIgnore",
        "type": "boolean"
      },
      "LoginLogo": {
        "title": "LoginLogo",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuAbout": {
        "title": "MenuAbout",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuActions": {
        "title": "MenuActions",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuChangePassword": {
        "title": "MenuChangePassword",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuGetHelp": {
        "title": "MenuGetHelp",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuGetSoftware": {
        "title": "MenuGetSoftware",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuHomeDirectory": {
        "title": "MenuHomeDirectory",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuIcon": {
        "title": "Display status icon on the main Action Menu",
        "description": "Determines if the Action menu will display a status icon (green, yellow, or red).",
        "type": "boolean"
      },
      "MenuIconActive": {
        "title": "MenuIconActive",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuIconDark": {
        "title": "MenuIconDark",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuKerberosTickets": {
        "title": "MenuKerberosTickets",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuResetPassword": {
        "title": "MenuResetPassword",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuShares": {
        "title": "MenuShares",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuText": {
        "title": "Display result of command as Action Menu title",
        "description": "Determines if the text of the main action menu will be the result of the command.",
        "type": "boolean"
      },
      "MessageBrowserPasswordChange": {
        "title": "MessageBrowserPasswordChange",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MessageLocalSync": {
        "title": "MessageLocalSync",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MessageNetworkPasswordWrong": {
        "title": "MessageNetworkPasswordWrong",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "NetworkCheckAutomatically": {
        "title": "NetworkCheckAutomatically",
        "description": "Determines if the network password is verified automatically",
        "type": "boolean"
      },
      "OIDCChangePasswordURL": {
        "title": "OIDCChangePasswordURL",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCClientSecret": {
        "title": "OIDCClientSecret",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCLoginURL": {
        "title": "OIDCLoginURL",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCProvider": {
        "title": "OIDCProvider",
        "description": "Specifies the IdP provider integrated with Jamf Connect Verify.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCROPGID": {
        "title": "OIDCROPGID",
        "description": "The Client ID of the added app in your IdP used for authenticating the user's password via a resource owner password grant (ROPG) workflow.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCRedirectURI": {
        "title": "OIDCRedirectURI",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCResetPasswordURL": {
        "title": "OIDCResetPasswordURL",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_1": {
        "title": "PFC_SegmentedControl_1",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SelfServicePath": {
        "title": "SelfServicePath",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TimerKerberosCheck": {
        "title": "TimerKerberosCheck",
        "type": "integer"
      },
      "TimerLocalCheck": {
        "title": "TimerLocalCheck",
        "type": "integer"
      },
      "TimerNetworkCheck": {
        "title": "TimerNetworkCheck",
        "type": "integer"
      },
      "Version": {
        "title": "Version",
        "description": "The numeric version of the preference file. Currently, only \"1\" is supported.",
        "type": "integer"
      },
      "WindowAbout": {
        "title": "WindowAbout",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "WindowSignIn": {
        "title": "WindowSignIn",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.jamf.trust": {
    "title": "Jamf Trust",
    "description": "Jamf Trust settings",
    "properties": {
      "activationProfileUrl": {
        "title": "Shareable Activation URL",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "oktaOrgUrl": {
        "title": "Okta Org ID",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "requiredEndpointAgents": {
        "title": "Required Endpoint Agents",
        "description": "Jamf Trust includes a key that you can enable for additional security. With this key enabled, Jamf Private Access operates on a computer only if your organization's required security software is running. (eg. com.jamf.protect.agent)",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.jelockwood.pinpoint": {
    "title": "Pinpoint",
    "description": "Pinpoint settings",
    "properties": {
      "DEBUG": {
        "title": "Enable Debugging",
        "description": "If enabled logs to /var/log/pinpoint.log",
        "type": "boolean"
      },
      "OPTIMISE": {
        "title": "Enable Optimisation",
        "description": "Optional feature designed to reduce i.e. 'optimise' the use of the Google APIs and therefore reduce the potential bill use of these APIs might result in.",
        "type": "boolean"
      },
      "USE_ALTITUDE": {
        "title": "Enable Altitude",
        "description": "If set to true then pinpoint will also use the Google Elevation API to determine the altitude, if set to false it skips this and records the altitude as zero but saves on an additional API call thereby either preventing you exceeding your quota or reducing the cost.",
        "type": "boolean"
      },
      "USE_GEOCODE": {
        "title": "Enable Geocoding",
        "description": "If set to true then pinpoint will also use the Google Geocode API to look up the street address for the location, if set to false it skips this and records the location as an empty string but saves on an additional API call thereby either preventing you exceeding your quota or reducing the cost.",
        "type": "boolean"
      },
      "YOUR_API_KEY": {
        "title": "API Key",
        "description": "API key for using the Google location service API.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.keepersecurity.passwordmanager": {
    "title": "Keeper Security Password Manager",
    "description": "Keeper supports Enterprise Configuration settings to control the end-user experience.",
    "properties": {
      "DomainName": {
        "title": "Domain Name",
        "description": "Enterprise SSO Domain to pre-populate on app launch.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HideCreateAccount": {
        "title": "Hide Create Account Button",
        "description": "Hides the Create Account button from the start page",
        "type": "boolean"
      },
      "Region": {
        "title": "Region",
        "description": "Region identifier where your Keeper tenant is hosted.",
        "type": {
          "string": {
            "rangeList": [
              [
                "us",
                "United States"
              ],
              [
                "eu",
                "European Union"
              ],
              [
                "au",
                "Australia"
              ],
              [
                "usg",
                "United States Government"
              ]
            ]
          }
        }
      },
      "UseDefaultBrowserForSSO": {
        "title": "Use Default Browser for SSO",
        "description": "Routes the user to their default web browser for SSO authentication instead of using a popup window.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.macpaw.site.theunarchiver": {
    "title": "The Unarchiver (Standalone)",
    "description": "The Unarchiver (Standalone) settings",
    "properties": {
      "SUEnableAutomaticChecks": {
        "title": "Enable Automatic Update Checks",
        "description": "Automatically check for The Unarchiver (Standalone) updates",
        "type": "boolean"
      },
      "userAgreedToNewTOSAndPrivacy": {
        "title": "Suppress Terms of Services and Privacy Prompt",
        "description": "Enable this option to automatically accept the Privacy Policy and Terms of Service for users.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.mcneel.rhinoceros": {
    "title": "Rhinoceros",
    "description": "Use this section to define settings for Rhinoceros 3D",
    "properties": {
      "SUAllowsAutomaticUpdates": {
        "title": "Automatic Update Install Prompt",
        "description": "Controls the automatic update install prompt. When enabled, presents users with the option to allow automatic download and install of available updates. If disabled, disallows automatic updates and requires manual installation every time.",
        "type": "boolean"
      },
      "SUAutomaticallyUpdate": {
        "title": "Enable Automatic Silent Updates",
        "description": "Controls automatic silent updates. If enabled, users will not be informed about updates and updates will be silently installed when the app quits.",
        "type": "boolean"
      },
      "SUEnableAutomaticChecks": {
        "title": "Enable Automatic Update Checks",
        "description": "Controls automatic update checks.",
        "type": "boolean"
      },
      "SUFeedURL": {
        "title": "Sparkle Feed URL",
        "description": "Setting this to a non-existent URL will disable the ability for users to manually check for updates. Useful when you intend to use your own software distribution mechanism to deploy updates.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SUScheduledCheckInterval": {
        "title": "Automatic Update Check Interval",
        "description": "Controls the automatic update check interval. The default is 1 day (86400 seconds). Setting to 0 disables updates.",
        "type": "integer"
      },
      "SUSkippedVersion": {
        "title": "Skipped Version Updates",
        "description": "Controls which update versions should be suppressed upon launching Rhinoceros",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.Edge": {
    "title": "Microsoft Edge",
    "description": "Microsoft Edge Managed Settings",
    "properties": {
      "AdsSettingForIntrusiveAdsSites": {
        "title": "Ads setting for sites with intrusive ads",
        "description": "Allows you to set whether ads should be blocked on sites with intrusive ads.",
        "type": "integer"
      },
      "AllowCrossOriginAuthPrompt": {
        "title": "Cross-origin HTTP Basic Auth prompts",
        "description": "Controls whether third-party sub-content on a page is allowed to pop-up an HTTP Basic Auth dialog box.",
        "type": "boolean"
      },
      "AllowDeletingBrowserHistory": {
        "title": "Enable deleting browser and download history",
        "description": "Enables deleting browser history and download history in Microsoft Edge and prevents users from changing this setting.",
        "type": "boolean"
      },
      "AllowFileSelectionDialogs": {
        "title": "Allow invocation of file selection dialogs",
        "description": "Allows access to local files on the machine by allowing Microsoft Edge to display file selection dialogs.",
        "type": "boolean"
      },
      "AllowPopupsDuringPageUnload": {
        "title": "Allow a page to show popups during its unloading",
        "description": "This policy allows an admin to specify that a page may show popups during its unloading.",
        "type": "boolean"
      },
      "AllowSurfGame": {
        "title": "Allow Surf Game",
        "description": "Enables or disables the built-in surf game. Game accessible via edge://surf.",
        "type": "boolean"
      },
      "AllowSyncXHRInPageDismissal": {
        "title": "Allow pages to send synchronous XHR requests during page dismissal",
        "description": "This policy lets you specify that a page can send synchronous XHR requests during page dismissal.",
        "type": "boolean"
      },
      "AllowTrackingForUrls": {
        "title": "Configure tracking prevention exceptions for specific sites",
        "description": "Configure the list of URL patterns that are excluded from tracking prevention.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AlternateErrorPagesEnabled": {
        "title": "Enable alternate error pages",
        "description": "Enables the use of alternate error pages that are built into Microsoft Edge (such as 'page not found') and prevents users from changing this setting.",
        "type": "boolean"
      },
      "AlwaysOpenPdfExternally": {
        "title": "Always Open PDF files externally",
        "description": "Disables the internal PDF viewer in Microsoft Edge. Instead it treats it as download and allows the user to open PDF files with the default application.",
        "type": "boolean"
      },
      "AppCacheForceEnabled": {
        "title": "Force Enable AppCache",
        "description": "Allows the AppCache feature to be re-enabled, even if it's turned off by default",
        "type": "boolean"
      },
      "ApplicationLocaleValue": {
        "title": "Application locale value",
        "description": "Set application locale",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AudioCaptureAllowed": {
        "title": "Allow or deny audio capture",
        "description": "If enabled or not configured (default), the user will be prompted for audio capture access except for URLs configured in the AudioCaptureAllowedUrls list which will be granted access without prompting.",
        "type": "boolean"
      },
      "AudioCaptureAllowedUrls": {
        "title": "URLs that will be granted access to audio capture devices without prompt",
        "description": "Patterns in this list will be matched against the security\norigin of the requesting URL.  If a match is found, access to audio\ncapture devices will be granted without prompt.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AuthNegotiateDelegateAllowlist": {
        "title": "Kerberos delegation server allowlist",
        "description": "Servers that Microsoft Edge may delegate to.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AuthSchemes": {
        "title": "Supported authentication schemes",
        "description": "Specifies which HTTP authentication schemes are supported by Microsoft Edge. Possible values are 'basic', 'digest', 'ntlm' and 'negotiate'. Separate multiple values with commas.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AuthServerAllowlist": {
        "title": "Authentication server allowlist",
        "description": "Specifies which servers should be allowed for integrated authentication. Integrated authentication is only enabled when Microsoft Edge receives an authentication challenge from a proxy or from a server which is in this permitted list.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AutoImportAtFirstRun": {
        "title": "Automatically import browser data and settings at first run",
        "description": "If you enable this policy, Microsoft Edge automatically imports all supported datatypes and settings from either the default browser or another specified browser. This also forces Microsoft Edge to skip the import section of the first-run experience.",
        "type": "integer"
      },
      "AutoOpenAllowedForURLs": {
        "title": "Allowed URLs for Auto Open",
        "description": "URLs where AutoOpenFileTypes can apply. If you set URLs in this policy, files will only automatically open by policy if the URL is part of this set and the file type is listed in AutoOpenFileTypes. If either condition is false, the download won't automatically open by policy.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AutoOpenFileTypes": {
        "title": "Auto Open File Types",
        "description": "List of file types that should be automatically opened on download. Note: The leading separator should not be included when listing the file type, so list \"txt\" instead of \".txt\".",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AutoSelectCertificateForUrls": {
        "title": "Automatically select client certificates for these sites",
        "description": "Allows you to specify a list of url patterns that specify sites for which Google Chrome should automatically select a client certificate, if the site requests a certificate.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AutofillAddressEnabled": {
        "title": "Enable AutoFill for addresses",
        "description": "Enables Microsoft Edge's AutoFill feature and allows users to auto complete address information in web forms using previously stored information.",
        "type": "boolean"
      },
      "AutofillCreditCardEnabled": {
        "title": "Enable AutoFill for credit cards",
        "description": "Enables Microsoft Edge's AutoFill feature and allows users to auto complete credit card information in web forms using previously stored information.",
        "type": "boolean"
      },
      "AutoplayAllowed": {
        "title": "Allow media autoplay",
        "description": "Allows you to control if videos can play automatically (without user consent) with audio content in Google Chrome.",
        "type": "boolean"
      },
      "BackgroundModeEnabled": {
        "title": "Enable background mode",
        "description": "Continue running background apps after Microsoft Edge closes.",
        "type": "boolean"
      },
      "BackgroundTemplateListUpdatesEnabled": {
        "title": "Enable background updates for templates",
        "description": "If you enable this setting or the setting is unconfigured, the list of available templates will be downloaded in the background from a Microsoft service every 24 hours.",
        "type": "boolean"
      },
      "BingAdsSuppression": {
        "title": "Suppress Bing Ads",
        "description": "Block all ads on Bing search results.",
        "type": "boolean"
      },
      "BlockExternalExtensions": {
        "title": "Block External Extensions",
        "description": "Controls the installation of external extensions.",
        "type": "boolean"
      },
      "BlockThirdPartyCookies": {
        "title": "Block third party cookies",
        "description": "Enabling this setting prevents cookies from being set by web page elements that are not from the domain that is in the browser's address bar.",
        "type": "boolean"
      },
      "BrowserAddProfileEnabled": {
        "title": "Enable add person in user manager",
        "description": "Enable profile creation from the Identity flyout menu or the Settings page",
        "type": "boolean"
      },
      "BrowserGuestModeEnabled": {
        "title": "Enable guest mode in browser",
        "description": "Enable the option to allow the use of guest profiles in Microsoft Edge. In a guest profile, the browser doesn't import browsing data from existing profiles, and it deletes browsing data when all guest profiles are closed.",
        "type": "boolean"
      },
      "BrowserNetworkTimeQueriesEnabled": {
        "title": "Allow queries to a network time service",
        "description": "If set to false, prevents Microsoft Edge from occasionally sending queries to a browser network time service to retrieve an accurate timestamp.",
        "type": "boolean"
      },
      "BrowserSignin": {
        "title": "Browser Signin",
        "description": "Specify whether a user can sign into Microsoft Edge with their account and use account-related services like sync and single sign on.",
        "type": "integer"
      },
      "BuiltInDnsClientEnabled": {
        "title": "Use built-in DNS client",
        "description": "Controls whether to use the built-in DNS client.",
        "type": "boolean"
      },
      "BuiltinCertificateVerifierEnabled": {
        "title": "Use built-in certificate verifier",
        "description": "Determines whether the built-in certificate verifier will be used to verify server certificates.",
        "type": "boolean"
      },
      "CertificateTransparencyEnforcementDisabledForCas": {
        "title": "Disable Certificate Transparency enforcement for a list of subjectPublicKeyInfo hashes",
        "description": "Disables enforcing Certificate Transparency requirements for a list of subjectPublicKeyInfo hashes.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CertificateTransparencyEnforcementDisabledForLegacyCas": {
        "title": "Disable Certificate Transparency enforcement for a list of Legacy Certificate Authorities",
        "description": "Disables enforcing Certificate Transparency requirements for a list of Legacy Certificate Authorities.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CertificateTransparencyEnforcementDisabledForUrls": {
        "title": "Disable Certificate Transparency enforcement for a list of URLs",
        "description": "Disables enforcing Certificate Transparency requirements to the listed URLs. Form your URL pattern according to https://go.microsoft.com/fwlink/?linkid=2095322",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ClearBrowsingDataOnExit": {
        "title": "Clear browsing data when Microsoft Edge closes",
        "description": "If you enable this policy, all browsing data is deleted each time Microsoft Edge closes.",
        "type": "boolean"
      },
      "ClearCachedImagesAndFilesOnExit": {
        "title": "Clear cached images and files when Edge quits",
        "description": "Clear cached images and files when Microsoft Edge closes.",
        "type": "boolean"
      },
      "CollectionsServicesAndExportsBlockList": {
        "title": "Services and Export Collection Blocklist",
        "description": "Block user access to a specified list of services and export targets in Collections. This includes displaying additional data from Bing and exporting collections to Microsoft products or external partners.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CommandLineFlagSecurityWarningsEnabled": {
        "title": "Command Line Flag Security Warnings Enabled",
        "description": "If disabled, prevents security warnings from appearing when Edge is launched with some potentially dangerous command-line flags.",
        "type": "boolean"
      },
      "ComponentUpdatesEnabled": {
        "title": "Edge component updates",
        "description": "Enables component updates for all components in Microsoft Edge when not set or set to True.",
        "type": "boolean"
      },
      "ConfigureDoNotTrack": {
        "title": "Configure Do Not Track",
        "description": "Specify whether to send Do Not Track requests to websites that ask for tracking info.",
        "type": "boolean"
      },
      "ConfigureOnlineTextToSpeech": {
        "title": "Configure Online Text To Speech",
        "description": "If you enable or don't configure this policy, web-based applications that use the SpeechSynthesis API can use Online Text to Speech voice fonts.",
        "type": "boolean"
      },
      "CookiesAllowedForUrls": {
        "title": "Allow cookies on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to set cookies.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CookiesBlockedForUrls": {
        "title": "Block cookies on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to set cookies.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CookiesSessionOnlyForUrls": {
        "title": "Limit cookies from matching URLs to the current session",
        "description": "Cookies set by pages matching these URL patterns will be limited to the current session, i.e. they will be deleted when the browser exits.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CustomHelpLink": {
        "title": "Specify custom help link",
        "description": "Specify a link for the Help menu or the F1 key.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DNSInterceptionChecksEnabled": {
        "title": "DNS interception checks enabled",
        "description": "This policy configures a local switch that can be used to disable DNS interception checks. These checks attempt to discover whether the browser is behind a proxy that redirects unknown host names.",
        "type": "boolean"
      },
      "DefaultBrowserSettingEnabled": {
        "title": "Set Microsoft Edge as Default Browser",
        "description": "Configures the default browser checks in Microsoft Edge and prevents users from changing them. If set to true, Edge will always checks on startup whether it is the default browser and automatically registers itself, if possible.",
        "type": "boolean"
      },
      "DefaultCookiesSetting": {
        "title": "Default cookies setting",
        "description": "Allows you to set whether websites are allowed to set local data. Setting local data can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultGeolocationSetting": {
        "title": "Default geolocation setting",
        "description": "Allows you to set whether websites are allowed to track the users' physical location. Tracking the users' physical location can be allowed by default, denied by default or the user can be asked every time a website requests the physical location.",
        "type": "integer"
      },
      "DefaultImagesSetting": {
        "title": "Default images setting",
        "description": "Allows you to set whether websites are allowed to display images. Displaying images can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultInsecureContentSetting": {
        "title": "Default insecure content setting",
        "description": "Control use of insecure content exceptions",
        "type": "integer"
      },
      "DefaultJavaScriptSetting": {
        "title": "Default JavaScript setting",
        "description": "Allows you to set whether websites are allowed to run JavaScript. Running JavaScript can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultNotificationsSetting": {
        "title": "Default notification setting",
        "description": "Allows you to set whether websites are allowed to display desktop notifications. Displaying desktop notifications can be allowed by default, denied by default or the user can be asked every time a website wants to show desktop notifications.",
        "type": "integer"
      },
      "DefaultPluginsSetting": {
        "title": "Default Flash setting",
        "description": "Allows you to set whether websites are allowed to automatically run the Flash plugin. Automatically running the Flash plugin can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultPopupsSetting": {
        "title": "Default popups setting",
        "description": "Allows you to set whether websites are allowed to show pop-ups. Showing popups can be either allowed for all websites or denied for all websites.",
        "type": "integer"
      },
      "DefaultPrinterSelection": {
        "title": "Default printer selection rules",
        "description": "Overrides Microsoft Edge default printer selection rules.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderContextMenuAccessAllowed": {
        "title": "Allow Default Search Provider on Context Menu",
        "description": "Allow default search provider context menu search access",
        "type": "boolean"
      },
      "DefaultSearchProviderEnabled": {
        "title": "Enable the default search provider",
        "description": "Enables the use of a default search provider.",
        "type": "boolean"
      },
      "DefaultSearchProviderEncodings": {
        "title": "Default search provider encodings",
        "description": "Specifies the character encodings supported by the search provider. Encodings are code page names like UTF-8, GB2312, and ISO-8859-1. They are tried in the order provided.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DefaultSearchProviderImageURL": {
        "title": "Parameter providing search-by-image feature for the default search provider",
        "description": "Specifies the URL of the search engine used to provide image search. Search requests will be sent using the GET method. If the DefaultSearchProviderImageURLPostParams policy is set then image search requests will use the POST method instead.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderImageURLPostParams": {
        "title": "Parameters for image URL which uses POST",
        "description": "Specifies the parameters used when doing image search with POST. It consists of comma-separated name/value pairs. If a value is a template parameter, like {imageThumbnail} in above example, it will be replaced with real image thumbnail data.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderKeyword": {
        "title": "Default search provider keyword",
        "description": "Specifies the keyword, which is the shortcut used in the omnibox to trigger the search for this provider.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderName": {
        "title": "Default search provider name",
        "description": "Specifies the name of the default search provider. If left empty or not set, the host name specified by the search URL will be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderSearchURL": {
        "title": "Default search provider search URL",
        "description": "Specifies the URL of the search engine used when doing a default search. The URL should contain the string '{searchTerms}', which will be replaced at query time by the terms the user is searching for.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSearchProviderSuggestURL": {
        "title": "Default search provider suggest URL",
        "description": "Specifies the URL of the search engine used to provide search suggestions. The URL should contain the string '{searchTerms}', which will be replaced at query time by the text the user has entered so far.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultThirdPartyStoragePartitioningSetting": {
        "title": "Default setting for third-party storage partitioning",
        "description": "Third-party storage partitioning is on by default for some users starting with Microsoft Edge version 115, but it can be disabled with edge://flags.\n\nIf this policy is configured to \"AllowPartitioning\" or not configured, third-party storage partitioning can be enabled.\n\nIf this policy is set to \"BlockPartitioning\", third-party storage partitioning can't be enabled.",
        "type": "integer"
      },
      "DefaultWebBluetoothGuardSetting": {
        "title": "Control use of the Web Bluetooth API",
        "description": "Allows you to set whether websites are allowed to get access to nearby Bluetooth devices. Access can be completely blocked, or the user can be asked every time a website wants to get access to nearby Bluetooth devices.",
        "type": "integer"
      },
      "DefaultWebUsbGuardSetting": {
        "title": "Control use of the WebUSB API",
        "description": "Allows you to set whether websites are allowed to get access to connected USB devices. Access can be completely blocked, or the user can be asked every time a website wants to get access to connected USB devices.",
        "type": "integer"
      },
      "DeveloperToolsAvailability": {
        "title": "Control where Developer Tools can be used",
        "description": "Allows you to control where Developer Tools can be used.",
        "type": "integer"
      },
      "DiagnosticData": {
        "title": "Send Edge Browser Diagnostic Data",
        "description": "Send required and optional diagnostic data about browser usage. 'RequiredData' sends required diagnostic data but turns off optional diagnostic data collection. Microsoft Edge will send required diagnostic data to keep Microsoft Edge secure, up to date and performing as expected. 'OptionalData' sends optional diagnostic data includes data about browser usage, websites that are visited, crash reports sent to Microsoft for product and service improvement.",
        "type": "integer"
      },
      "Disable3DAPIs": {
        "title": "Disable support for 3D graphics APIs",
        "description": "Enabling this setting prevents web pages from accessing the graphics processing unit (GPU). Specifically, web pages can not access the WebGL API and plugins can not use the Pepper 3D API.",
        "type": "boolean"
      },
      "DisableAuthNegotiateCnameLookup": {
        "title": "Disable CNAME lookup when negotiating Kerberos authentication",
        "description": "Specifies whether the generated Kerberos SPN is based on the canonical DNS name or the original name entered.",
        "type": "boolean"
      },
      "DisableScreenshots": {
        "title": "Disable taking screenshots",
        "description": "If enabled, screenshots cannot be taken using keyboard shortcuts or extension APIs.",
        "type": "boolean"
      },
      "DiskCacheDir": {
        "title": "Set disk cache directory",
        "description": "Configures the directory that Microsoft Edge will use for storing cached files on the disk. See https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used. To avoid data loss or other unexpected errors this policy should not be set to a volume's root directory or to a directory used for other purposes, because Edge manages its contents",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DiskCacheSize": {
        "title": "Set disk cache size",
        "description": "Configures the cache size that Microsoft Edge will use for storing cached files on the disk. The value specified in this policy is not a hard boundary but rather a suggestion to the caching system, any value below a few megabytes is too small and will be rounded up to a sane minimum. If the value of this policy is 0, the default cache size will be used but the user will not be able to change it.",
        "type": "integer"
      },
      "DnsOverHttpsMode": {
        "title": "DNS-over-HTTPS mode",
        "description": "Controls the mode of DNS-over-HTTPS",
        "type": {
          "string": {
            "rangeList": [
              [
                "off",
                "Disable DNS-over-HTTPS"
              ],
              [
                "automatic",
                "Enable DNS-over-HTTPS with insecure fallback"
              ],
              [
                "secure",
                "Enable DNS-over-HTTPS without insecure fallback"
              ]
            ]
          }
        }
      },
      "DnsOverHttpsTemplates": {
        "title": "DNS-over-HTTPS Template",
        "description": "Specify URI template of desired DNS-over-HTTPS resolver. To specify multiple DNS-over-HTTPS resolvers, separate the corresponding URI templates with spaces.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DownloadDirectory": {
        "title": "Set download directory",
        "description": "Configures the directory that Microsoft Edge will use for downloading files. If you set this policy, Edge will use the provided directory regardless whether the user has specified one or enabled the flag to be prompted for download location every time. If this policy is left not set the default download directory will be used and the user will be able to change it.\n\nSee https://go.microsoft.com/fwlink/?linkid=2095041 for a list of variables that can be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DownloadRestrictions": {
        "title": "Download restrictions",
        "description": "Configures the type of downloads that Microsoft Edge will completely block, without letting users override the security decision.",
        "type": "integer"
      },
      "EdgeCollectionsEnabled": {
        "title": "Enable the Collections feature",
        "description": "Lets you allow users to access the Collections feature, where they can collect, organize, share, and export content more efficiently and with Office integration.",
        "type": "boolean"
      },
      "EditFavoritesEnabled": {
        "title": "Enable or disable favorites editing",
        "description": "If you enable this setting, favorites can be added, removed or modified. This is the default also when this policy is not set.",
        "type": "boolean"
      },
      "EnableAuthNegotiatePort": {
        "title": "Include non-standard port in Kerberos SPN",
        "description": "Specifies whether the generated Kerberos SPN should include a non-standard port.",
        "type": "boolean"
      },
      "EnableDeprecatedWebPlatformFeatures": {
        "title": "Enable deprecated web platform features for a limited time",
        "description": "ExampleDeprecatedFeature_EffectiveUntil20080902 - Enable ExampleDeprecatedFeature API through 2008/09/02\nSpecify a list of deprecated web platform features to re-enable temporarily.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "EnableDomainActionsDownload": {
        "title": "Enable Domain Actions Download from Microsoft",
        "description": "If you enable this policy, the list of Domain Actions will continue to be downloaded from the Experimentation and Configuration Service.",
        "type": "boolean"
      },
      "EnableMediaRouter": {
        "title": "Enable Google Cast",
        "description": "If this policy is set to true or is not set, Google Cast will be enabled, and users will be able to launch it from the app menu, page context menus, media controls on Cast-enabled websites, and (if shown) the Cast toolbar icon.",
        "type": "boolean"
      },
      "EnableOnlineRevocationChecks": {
        "title": "Whether online OCSP/CRL checks are performed",
        "description": "In light of the fact that soft-fail, online revocation checks provide no effective security benefit, they are disabled by default in Google Chrome version 19 and later. By setting this policy to true, the previous behavior is restored and online OCSP/CRL checks will be performed.",
        "type": "boolean"
      },
      "EnableSha1ForLocalAnchors": {
        "title": "Enable SHA-1 for Local Anchors",
        "description": "Allow certificates signed using SHA-1 when issued by local trust anchors (deprecated).",
        "type": "boolean"
      },
      "EnterpriseHardwarePlatformAPIEnabled": {
        "title": "Enable Managed Extensions to use the Enterprise Hardware API",
        "description": "When this policy is set to enabled, extensions installed by enterprise policy are allowed to use the Enterprise Hardware Platform API.",
        "type": "boolean"
      },
      "ExperimentationAndConfigurationServiceControl": {
        "title": "Control Experimentation and Configuration Service",
        "description": "Control communication with the Experimentation and Configuration Service",
        "type": "integer"
      },
      "ExtensionAllowedTypes": {
        "title": "Types of extensions/apps that are allowed to be installed",
        "description": "Controls which app/extension types are allowed to be installed and limits runtime access.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "extension",
                    "Extension"
                  ],
                  [
                    "hosted_app",
                    "Hosted App"
                  ],
                  [
                    "legacy_packaged_app",
                    "Legacy Packaged App"
                  ],
                  [
                    "platform_app",
                    "Platform App"
                  ],
                  [
                    "theme",
                    "Theme"
                  ],
                  [
                    "user_script",
                    "User Script"
                  ]
                ]
              }
            }
          ]
        }
      },
      "ExtensionInstallAllowlist": {
        "title": "Extension ID Allowlist",
        "description": "Allows you to specify which extensions are not subject to the denylist.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionInstallBlocklist": {
        "title": "Extension IDs the user should be prevented from installing (or * for all)",
        "description": "Allows you to specify which extensions the users can NOT install. Extensions already installed will be disabled if denied, without a way for the user to enable them. Once an extension is disabled due to the denylist being removed, it will automatically get re-enabled.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionInstallForcelist": {
        "title": "Extension/App IDs and update URLs to be silently installed",
        "description": "Specifies a list of apps and extensions that are installed silently, without user interaction, and which cannot be uninstalled nor disabled by the user. All permissions requested by the apps/extensions are granted implicitly, without user interaction, including any additional permissions requested by future versions of the app/extension. Furthermore, permissions are granted for the enterprise.deviceAttributes and enterprise.platformKeys extension APIs. (These two APIs are not available to apps/extensions that are not force-installed.)",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionInstallSources": {
        "title": "URL patterns to allow extension, app, and user script installs from",
        "description": "Allows you to specify which URLs are allowed to install extensions, apps, and themes.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ExtensionSettings": {
        "title": "Extension management settings",
        "description": "Configures extension management settings for Google Chrome. A default configuration can be set for the special ID \"*\"",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Extension ID",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "{{value}}",
              "description": "",
              "type": {
                "dictionary": {
                  "allowed_types": {
                    "title": "allowed_types",
                    "description": "This setting sets the allowed types of extension/apps that can be installed in Google Chrome.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "blocked_install_message": {
                    "title": "blocked_install_message",
                    "description": "This maps to a string specifying the error message to display to users if they're blocked from installing an extension.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "blocked_permissions": {
                    "title": "blocked_permissions",
                    "description": "Maps to a list of strings indicating the blocked API permissions for the extension.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "install_sources": {
                    "title": "install_sources",
                    "description": "Each item in this list is an extension-style match pattern.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "installation_mode": {
                    "title": "installation_mode",
                    "description": "Maps to a string indicating the installation mode for the extension.",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "allowed",
                            "Allowed"
                          ],
                          [
                            "blocked",
                            "Blocked"
                          ],
                          [
                            "force_installed",
                            "Force Installed"
                          ],
                          [
                            "normal_installed",
                            "Normal Installed"
                          ]
                        ]
                      }
                    }
                  },
                  "minimum_version_required": {
                    "title": "minimum_version_required",
                    "description": "Maps to a version string.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "runtime_allowed_hosts": {
                    "title": "runtime_allowed_hosts",
                    "description": "Maps to a list of strings representing hosts that an extension can interact with regardless of whether they are listed in \"runtime_blocked_hosts\".",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "runtime_blocked_hosts": {
                    "title": "runtime_blocked_hosts",
                    "description": "Maps to a list of strings representing hosts whose webpages the extension will be blocked from modifying.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "update_url": {
                    "title": "update_url",
                    "description": "Maps to a string indicating where Chrome can download a force_installed or normal_installed extension.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ExternalProtocolDialogShowAlwaysOpenCheckbox": {
        "title": "Show an \"Always open\" checkbox in external protocol dialog",
        "description": "If you set to True, when an external protocol confirmation prompt is shown, the user can select \"Always open\". The user won't get any future confirmation prompts for this protocol.",
        "type": "boolean"
      },
      "FavoritesBarEnabled": {
        "title": "Enable Bookmark Bar",
        "description": "If you enable this setting, Microsoft Edge will show a bookmark bar.",
        "type": "boolean"
      },
      "ForceBingSafeSearch": {
        "title": "Force Bing SafeSearch",
        "description": "Forces queries in Google Web Search to be done with SafeSearch set to active and prevents users from changing this setting.",
        "type": "integer"
      },
      "ForceCertificatePromptsOnMultipleMatches": {
        "title": "Force Certificate Prompt on Multiple Matches",
        "description": "Configure whether Microsoft Edge should automatically select a certificate when there are multiple certificate matches for a site configured with \"AutoSelectCertificateForUrls\" (https://docs.microsoft.com/en-us/deployedge/microsoft-edge-policies#autoselectcertificateforurls).",
        "type": "boolean"
      },
      "ForceEphemeralProfiles": {
        "title": "Ephemeral profile",
        "description": "If set to enabled this policy forces the profile to be switched to ephemeral mode. If this policy is specified as an OS policy (e.g. GPO on Windows) it will apply to every profile on the system; if the policy is set as a Cloud policy it will apply only to a profile signed in with a managed account.",
        "type": "boolean"
      },
      "ForceGoogleSafeSearch": {
        "title": "Force Google SafeSearch",
        "description": "Forces queries in Google Web Search to be done with SafeSearch set to active and prevents users from changing this setting.",
        "type": "boolean"
      },
      "ForceLegacyDefaultReferrerPolicy": {
        "title": "Force Legacy Default Referrer Policy",
        "description": "Use a default referrer policy of no-referrer-when-downgrade.",
        "type": "boolean"
      },
      "ForceYouTubeRestrict": {
        "title": "Force minimum YouTube Restricted Mode",
        "description": "Enforces a minimum Restricted Mode on YouTube and prevents users from picking a less restricted mode.",
        "type": "integer"
      },
      "FullscreenAllowed": {
        "title": "FullscreenAllowed",
        "description": "Allow full screen mode",
        "type": "boolean"
      },
      "GoToIntranetSiteForSingleWordEntryInAddressBar": {
        "title": "Force direct intranet site navigation instead of searching on single word entries in the Address Bar",
        "description": "If you enable this policy, the top auto-suggest result in the address bar suggestion list will navigate to intranet sites if the text entered in the address bar is a single word without punctuation.",
        "type": "boolean"
      },
      "HSTSPolicyBypassList": {
        "title": "Configure the list of names that will bypass the HSTS policy check",
        "description": "Hostnames specified in this list will be exempt from the HSTS policy check that could potentially upgrade requests from \"http://\" to \"https://\". Only single-label hostnames are allowed in this policy.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "HardwareAccelerationModeEnabled": {
        "title": "Use hardware acceleration when available",
        "description": "If this policy is set to true or left unset, hardware acceleration will be enabled unless a certain GPU feature is on the denylist.",
        "type": "boolean"
      },
      "HideFirstRunExperience": {
        "title": "Hide the First-run experience and splash screen",
        "description": "If you enable this policy, the First-run experience and the splash screen will not be shown to users when they run Microsoft Edge for the first time.",
        "type": "boolean"
      },
      "HomepageIsNewTabPage": {
        "title": "Use New Tab Page as homepage",
        "description": "Configures the type of the default home page in Microsoft Edge and prevents users from changing home page preferences. The home page can either be set to a URL you specify or set to the New Tab Page.",
        "type": "boolean"
      },
      "HomepageLocation": {
        "title": "Home page URL",
        "description": "Configures the default home page URL in Microsoft Edge and prevents users from changing it.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HubsSidebarEnabled": {
        "title": "Show Hubs Sidebar",
        "description": "Show the Sidebar launcher bar.",
        "type": "boolean"
      },
      "ImagesAllowedForUrls": {
        "title": "Allow images on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to display images.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ImagesBlockedForUrls": {
        "title": "Block images on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to display images.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ImportAutofillFormData": {
        "title": "Import autofill form data from default browser on first run",
        "description": "This policy forces the autofill form data to be imported from the previous default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "ImportBrowserSettings": {
        "title": "Allow importing of browser settings",
        "description": "Allows users to import browser settings from another browser into Microsoft Edge.",
        "type": "boolean"
      },
      "ImportCookies": {
        "title": "Allow importing of cookies",
        "description": "Allow importing of cookies.",
        "type": "boolean"
      },
      "ImportExtensions": {
        "title": "Allow importing of extensions",
        "description": "Allow importing of extensions.",
        "type": "boolean"
      },
      "ImportFavorites": {
        "title": "Import Favorites from default browser on first run",
        "description": "This policy forces bookmarks to be imported from the current default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "ImportHistory": {
        "title": "Import browsing history from default browser on first run",
        "description": "This policy forces the browsing history to be imported from the current default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "ImportHomepage": {
        "title": "Import of homepage from default browser on first run",
        "description": "This policy forces the home page to be imported from the current default browser if enabled.",
        "type": "boolean"
      },
      "ImportOpenTabs": {
        "title": "Allow importing of open tabs",
        "description": "Allows users to import open and pinned tabs from another browser into Microsoft Edge.",
        "type": "boolean"
      },
      "ImportPaymentInfo": {
        "title": "Allow importing of payment info",
        "description": "Allows users to import payment info from another browser into Microsoft Edge.",
        "type": "boolean"
      },
      "ImportSavedPasswords": {
        "title": "Import saved passwords from default browser on first run",
        "description": "This policy forces the saved passwords to be imported from the previous default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "ImportSearchEngine": {
        "title": "Import search engines from default browser on first run",
        "description": "This policy forces search engines to be imported from the current default browser if enabled. If enabled, this policy also affects the import dialog.",
        "type": "boolean"
      },
      "ImportShortcuts": {
        "title": "Import shortcuts",
        "description": "Allow importing of shortcuts.",
        "type": "boolean"
      },
      "InPrivateModeAvailability": {
        "title": "Private mode availability",
        "description": "Specifies whether the user may open pages in Private mode in Microsoft Edge.",
        "type": "integer"
      },
      "InsecureContentAllowedForUrls": {
        "title": "InsecureContentAllowedForUrls",
        "description": "List of URLs to allow insecure content",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "InsecureContentBlockedForUrls": {
        "title": "InsecureContentBlockedForUrls",
        "description": "List of URLs to block insecure content",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "IsolateOrigins": {
        "title": "Enable Site Isolation for specified origins",
        "description": "Specify origins to run in isolation, in their own process. This policy also isolates origins named by subdomains - for example, specifying https://contoso.com/ will cause https://foo.contoso.com/ to be isolated as part of the https://contoso.com/ site. If the policy is enabled, each of the named origins in a comma-separated list will run in its own process. If you disable this policy, then both the 'IsolateOrigins' and 'SitePerProcess' features are disabled. Users can still enable 'IsolateOrigins' policy manually, via command line flags. If you don't configure the policy, the user can change this setting.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "JavaScriptAllowedForUrls": {
        "title": "Allow JavaScript on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to run JavaScript.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "JavaScriptBlockedForUrls": {
        "title": "Block JavaScript on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to run JavaScript.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "LegacySameSiteCookieBehaviorEnabled": {
        "title": "Legacy SameSite cookie behavior",
        "description": "Enable default legacy SameSite cookie behavior setting",
        "type": "integer"
      },
      "LegacySameSiteCookieBehaviorEnabledForDomainList": {
        "title": "Legacy SameSite cookie allowed list",
        "description": "Revert to legacy SameSite behavior for cookies on specified sites",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ManagedFavorites": {
        "title": "Managed Favorites",
        "description": "Configures a list of managed bookmarks.",
        "type": {
          "array": [
            {
              "dictionary": {
                "name": {
                  "title": "name",
                  "description": "Name of the favorite.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "url": {
                  "title": "url",
                  "description": "URL for the favorite.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            },
            {
              "dictionary": {
                "toplevel_name": {
                  "title": "Top Level Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "ManagedSearchEngines": {
        "title": "Managed search engines",
        "description": "Manage Search Engines",
        "type": {
          "array": [
            {
              "dictionary": {
                "encoding": {
                  "title": "encoding",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "image_search_url": {
                  "title": "image_search_url",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "is_default": {
                  "title": "Default?",
                  "type": "boolean"
                },
                "keyword": {
                  "title": "keyword",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "name": {
                  "title": "name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "search_url": {
                  "title": "search_url",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "suggest_url": {
                  "title": "suggest_url",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "MaxConnectionsPerProxy": {
        "title": "Maximal number of concurrent connections to the proxy server",
        "description": "Specifies the maximal number of simultaneous connections to the proxy server.",
        "type": "integer"
      },
      "MediaRouterCastAllowAllIPs": {
        "title": "Allow Google Cast to connect to Cast devices on all IP addresses.",
        "description": "If this policy is set to true, Google Cast will connect to Cast devices on all IP addresses, not just RFC1918/RFC4913 private addresses.",
        "type": "boolean"
      },
      "MetricsReportingEnabled": {
        "title": "Enable reporting of usage and crash-related data",
        "description": "Enables anonymous reporting of usage and crash-related data about Microsoft Edge to Microsoft and prevents users from changing this setting.",
        "type": "boolean"
      },
      "MicrosoftEdgeInsiderPromotionEnabled": {
        "title": "Enable Microsoft Edge Insider promotions",
        "description": "Shows content promoting the Microsoft Edge Insider channels on the About Microsoft Edge settings page.",
        "type": "boolean"
      },
      "NativeMessagingAllowlist": {
        "title": "Native Messaging Host Denylist",
        "description": "Allows you to specify which native messaging hosts are not subject to the denylist. A denylist value of * means all native messaging hosts are on the denylist and only native messaging hosts listed in the allowlist will be loaded.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NativeMessagingBlocklist": {
        "title": "Names of the forbidden native messaging hosts (or * for all)",
        "description": "Allows you to specify which native messaging hosts that should not be loaded. A denylist value of '*' means all native messaging hosts are on the denylist unless they are explicitly listed in the allowlist.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NativeMessagingUserLevelHosts": {
        "title": "Allow user-level Native Messaging hosts (installed without admin permissions)",
        "description": "Enables user-level installation of Native Messaging hosts.",
        "type": "boolean"
      },
      "NetworkPredictionOptions": {
        "title": "Enable network prediction",
        "description": "Enables network prediction and prevents users from changing this setting. This controls DNS prefetching, TCP and SSL preconnection, and prerendering of web pages.",
        "type": "integer"
      },
      "NewTabPageAllowedBackgroundTypes": {
        "title": "New Tab Page Allowed Background Types",
        "description": "Configures the background types allowed for the new tab page layout.",
        "type": "integer"
      },
      "NewTabPageCompanyLogo": {
        "title": "New Tab Page Company Logo",
        "description": "Set new tab page company logo. The logo must be in PNG or SVG format, and its file size must not exceed 16 MB. For help with determining the SHA-256 hash, see https://docs.microsoft.com/powershell/module/microsoft.powershell.utility/get-filehash.",
        "type": {
          "array": [
            {
              "dictionary": {
                "default_logo": {
                  "title": "Default Logo",
                  "type": {
                    "dictionary": {
                      "hash": {
                        "title": "hash",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "url": {
                        "title": "url",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      }
                    }
                  }
                },
                "light_logo": {
                  "title": "Light Logo",
                  "type": {
                    "dictionary": {
                      "hash": {
                        "title": "hash",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "url": {
                        "title": "url",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "NewTabPageContentEnabled": {
        "title": "Allow Microsoft News content on the new tab page",
        "description": "Allow Microsoft News content on the new tab page in Microsoft Edge.",
        "type": "boolean"
      },
      "NewTabPageHideDefaultTopSites": {
        "title": "Hide the default top sites from the new tab page",
        "description": "Hides the default top sites from the new tab page in Microsoft Edge.",
        "type": "boolean"
      },
      "NewTabPageLocation": {
        "title": "New Tab page URL",
        "description": "Configures the default New Tab page URL and prevents users from changing it.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "NewTabPageManagedQuickLinks": {
        "title": "New Tab page managed quick links",
        "description": "Set new tab page managed quick links",
        "type": {
          "array": [
            {
              "dictionary": {
                "pinned": {
                  "title": "Pinned",
                  "type": "boolean"
                },
                "title": {
                  "title": "Title",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "url": {
                  "title": "URL",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "NewTabPageSearchBox": {
        "title": "New Tab Page Search Box",
        "description": "Configure the new tab page search box experience. You can configure the new tab page search box to use \"Search box (Recommended)\" or \"Address bar\" to search on new tabs.",
        "type": {
          "string": {
            "rangeList": [
              [
                "bing",
                "Search box"
              ],
              [
                "redirect",
                "Address bar"
              ]
            ]
          }
        }
      },
      "NewTabPageSetFeedType": {
        "title": "New Tab Page Feed Type",
        "description": "Configure the Microsoft Edge new tab page experience",
        "type": "integer"
      },
      "NotificationsAllowedForUrls": {
        "title": "Allow notifications on these sites",
        "description": "Allows you to create a list of url patterns to specify sites that are allowed to display notifications.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NotificationsBlockedForUrls": {
        "title": "Block notifications on these sites",
        "description": "Allows you to create a list of url patterns to specify sites that are not allowed to display notifications.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NtlmV2Enabled": {
        "title": "Enable NTLMv2 authentication",
        "description": "If you don't configure this policy, NTLMv2 is enabled by default.",
        "type": "boolean"
      },
      "OmniboxMSBProviderEnabled": {
        "title": "Enable Microsoft Search for Business provider in omnibox",
        "description": "Enables the display of relevant MSB suggestions in omnibox when user types a search string in the addressbar",
        "type": "boolean"
      },
      "OverrideSecurityRestrictionsOnInsecureOrigin": {
        "title": "Origins or hostname patterns to be treated as secure context",
        "description": "The policy specifies a list of origins (URLs) or hostname patterns (such as \"*.example.com\") to be treated as secure contexts. The intent is to allow organizations to set up a staging server for internal web development, so that their developers can test out features requiring secure contexts without having to deploy TLS on the staging server.\n\nSetting a list of URLs in this policy has the same effect as setting the command-line flag '--unsafely-treat-insecure-origin-as-secure' to a comma-separated list of the same URLs. If the policy is set, it will override the command-line flag.\n\nFor more information on secure contexts, see https://www.w3.org/TR/secure-contexts/",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordManagerEnabled": {
        "title": "Enable saving passwords to the password manager",
        "description": "If this setting is enabled, users can have Microsoft Edge memorize passwords and provide them automatically the next time they log in to a site.",
        "type": "boolean"
      },
      "PasswordMonitorAllowed": {
        "title": "Allow Password Monitor",
        "description": "Allow Microsoft Edge to monitor user passwords.",
        "type": "boolean"
      },
      "PasswordProtectionChangePasswordURL": {
        "title": "Change password URL",
        "description": "Configure the change password URL (HTTP and HTTPS schemes only). Password protection service will send users to this URL to change their password after seeing a warning in the browser.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordProtectionLoginURLs": {
        "title": "Enterprise login URLs",
        "description": "Configure the list of enterprise login URLs (HTTP and HTTPS schemes only) where Microsoft Edge should capture the salted hashes of passwords and use it for password reuse detection.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PasswordProtectionWarningTrigger": {
        "title": "Password protection warning trigger",
        "description": "Allows you to control the triggering of passwore protection warning. Password protection alerts users when they reuse their protected password on potentially suspicious sites.",
        "type": "integer"
      },
      "PaymentMethodQueryEnabled": {
        "title": "Allow websites to query for available payment methods",
        "description": "Allows you to set whether websites can check if the user has payment methods saved.",
        "type": "boolean"
      },
      "PersonalizationReportingEnabled": {
        "title": "Allow personalization of ads, search and news by sending browsing history to Microsoft",
        "description": "This policy prevents Microsoft from collecting a user's Microsoft Edge browsing history to be used for personalizing advertising, search, news and other Microsoft services.",
        "type": "boolean"
      },
      "PluginsAllowedForUrls": {
        "title": "Allow the Flash plugin on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to run the Flash plugin.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PluginsBlockedForUrls": {
        "title": "Block the Flash plugin on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to run the Flash plugin.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PolicyRefreshRate": {
        "title": "Policy Refresh Rate",
        "description": "Refresh rate for user policy. Specifies the period in milliseconds at which the device management service is queried for user policy information. Setting this policy overrides the default value of 3 hours. Valid values for this policy are in the range from 1800000 (30 minutes) to 86400000 (1 day).",
        "type": "integer"
      },
      "PopupsAllowedForUrls": {
        "title": "Allow popups on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to open popups.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PopupsBlockedForUrls": {
        "title": "Block popups on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are not allowed to open popups.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PreventSmartScreenPromptOverride": {
        "title": "Prevent SmartScreen prompt override",
        "description": "Lets you decide whether users can override the Microsoft Defender SmartScreen warnings about potentially malicious websites.",
        "type": "boolean"
      },
      "PreventSmartScreenPromptOverrideForFiles": {
        "title": "Prevent SmartScreen prompt override for files",
        "description": "Lets you determine whether users can override Microsoft Defender SmartScreen warnings about unverified downloads.",
        "type": "boolean"
      },
      "PrintHeaderFooter": {
        "title": "Print Headers & Footers",
        "description": "Force 'headers and footers' to be on or off in the printing dialog.",
        "type": "boolean"
      },
      "PrintPreviewUseSystemDefaultPrinter": {
        "title": "Use System Default Printer as Default",
        "description": "Causes Microsoft Edge to use the system default printer as the default choice in Print Preview instead of the most recently used printer.",
        "type": "boolean"
      },
      "PrintingEnabled": {
        "title": "Enable printing",
        "description": "Enables printing in Microsoft Edge and prevents users from changing this setting.",
        "type": "boolean"
      },
      "ProactiveAuthEnabled": {
        "title": "Enable Proactive Authentication",
        "description": "Lets you configure whether to turn on Proactive Authentication.",
        "type": "boolean"
      },
      "PromotionalTabsEnabled": {
        "title": "Enable showing full-tab promotional content",
        "description": "Allows you to control the presentation of full-tab promotional and/or educational content in Microsoft Edge.",
        "type": "boolean"
      },
      "PromptForDownloadLocation": {
        "title": "Ask where to save each file before downloading",
        "description": "If the policy is enabled, the user will be asked where to save each file before downloading.\nIf the policy is disabled, downloads will start immediately, and the user will not be asked where to save the file.\nIf the policy is not configured, the user will be able to change this setting.",
        "type": "boolean"
      },
      "ProxyBypassList": {
        "title": "Comma-separated list of proxy bypass rules",
        "description": "Microsoft Edge will bypass any proxy for the list of hosts given here.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyMode": {
        "title": "Choose how to specify proxy server settings",
        "description": "Allows you to specify the proxy server used by Microsoft Edge and prevents users from changing proxy settings.",
        "type": {
          "string": {
            "rangeList": [
              [
                "direct",
                "Never use a proxy"
              ],
              [
                "auto_detect",
                "Auto detect proxy settings"
              ],
              [
                "pac_script",
                "Use a .pac proxy script"
              ],
              [
                "fixed_servers",
                "Use fixed proxy servers"
              ],
              [
                "system",
                "Use system proxy settings"
              ]
            ]
          }
        }
      },
      "ProxyPacUrl": {
        "title": "URL to a proxy .pac file",
        "description": "You can specify a URL to a proxy .pac file here.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyServer": {
        "title": "Address or URL of proxy server",
        "description": "You can specify the URL of the proxy server here.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxySettings": {
        "title": "Proxy Settings",
        "description": "Configures the proxy settings for Google Chrome. These proxy settings will be available for ARC-apps too.\n\nIf you enable this setting, Google Chrome and ARC-apps ignore all proxy-related options specified from the command line.",
        "type": {
          "dictionary": {
            "ProxyBypassList": {
              "title": "Proxy Bypass List",
              "description": "Defines a comma-separated list of hosts for which Microsoft Edge bypasses any proxy.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ProxyMode": {
              "title": "Proxy Mode",
              "description": "Specifies the proxy server Microsoft Edge uses and prevents users from changing proxy settings. Microsoft Edge ignores all proxy-related options specified from the command line.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "direct",
                      "Never use proxy (ignores other fields)"
                    ],
                    [
                      "system",
                      "System (ignores other fields)"
                    ],
                    [
                      "auto_detect",
                      "Auto Detect (ignores other fields)"
                    ],
                    [
                      "fixed_servers",
                      "Fixed (Uses ProxyServer & ProxyBypassList)"
                    ],
                    [
                      "pac_script",
                      "Pac Script (Uses ProxyPacUrl & ProxyBypassList)"
                    ]
                  ]
                }
              }
            },
            "ProxyPacMandatory": {
              "title": "Proxy PAC Mandatory",
              "description": "Prevents the network stack from falling back to direct connections with invalid or unavailable PAC script.",
              "type": "boolean"
            },
            "ProxyPacUrl": {
              "title": "Proxy PAC URL",
              "description": "Specifies the URL for a proxy auto-config (PAC) file.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ProxyServer": {
              "title": "Proxy Server URL",
              "description": "Specifies the URL of the proxy server",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "QuicAllowed": {
        "title": "Allow QUIC protocol",
        "description": "QUIC is a transport layer network protocol that can improve performance of web applications that currently use TCP.",
        "type": "boolean"
      },
      "RegisteredProtocolHandlers": {
        "title": "Register protocol handlers",
        "description": "Allows you to register a list of protocol handlers. This can only be a recommended policy. The property |protocol| should be set to the scheme such as 'mailto' and the property |url| should be set to the URL pattern of the application that handles the scheme. The pattern can include a '%s', which if present will be replaced by the handled URL.",
        "type": {
          "array": [
            {
              "dictionary": {
                "default": {
                  "title": "default",
                  "type": "boolean"
                },
                "protocol": {
                  "title": "protocol",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "url": {
                  "title": "url",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "RelaunchNotification": {
        "title": "Notify a user that a browser relaunch is recommended or required",
        "description": "Notify users that Microsoft Edge must be relaunched to apply a pending update.",
        "type": "integer"
      },
      "RelaunchNotificationPeriod": {
        "title": "Update time period",
        "description": "Allows you to set the time period, in milliseconds, over which users are notified that Microsoft Edge must be relaunched to apply a pending update.",
        "type": "integer"
      },
      "ResolveNavigationErrorsUseWebService": {
        "title": "Enable resolution of navigation errors using a web service",
        "description": "Allow Microsoft Edge to issue a dataless connection to a web service to probe networks for connectivity in cases like hotel and airport Wi-Fi.",
        "type": "boolean"
      },
      "RestoreOnStartup": {
        "title": "Action on startup",
        "description": "Allows you to specify the behavior on startup.",
        "type": "integer"
      },
      "RestoreOnStartupURLs": {
        "title": "URLs to open on startup",
        "description": "If 'Open a list of URLs' is selected as the startup action, this allows you to specify the list of URLs that are opened. If left not set no URL will be opened on start up.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "RestrictSigninToPattern": {
        "title": "Restrict which users are allowed to sign in to Google Chrome",
        "description": "Determines which accounts can be set as browser primary accounts in Microsoft Edge (the account that is chosen during the Sync opt-in flow)",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RunAllFlashInAllowMode": {
        "title": "Extend Flash content setting to all content",
        "description": "If you enable this setting, all Flash content embedded on websites that have been set to allow Flash in content settings -- either by the user or by enterprise policy -- will be run, including content from other origins or small content.",
        "type": "boolean"
      },
      "SSLErrorOverrideAllowed": {
        "title": "Allow proceeding from the SSL warning page",
        "description": "Edge shows a warning page when users navigate to sites that have SSL errors. By default or when this policy is set to true, users are allowed to click through these warning pages.\nSetting this policy to false disallows users to click through any warning page.",
        "type": "boolean"
      },
      "SSLVersionMin": {
        "title": "Minimum SSL version enabled",
        "description": "If this policy is not configured then Microsoft Edge uses a default minimum version which is TLS 1.0.",
        "type": {
          "string": {
            "rangeList": [
              [
                "tls1",
                "TLS 1.0"
              ],
              [
                "tls1.1",
                "TLS 1.1"
              ],
              [
                "tls1.2",
                "TLS 1.2"
              ]
            ]
          }
        }
      },
      "SaveCookiesOnExit": {
        "title": "Save Cookies on Exit",
        "description": "Save cookies when Microsoft Edge closes. When this policy is enabled, the specified set of cookies is exempt from deletion when the browser closes.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "SavingBrowserHistoryDisabled": {
        "title": "Disable saving browser history",
        "description": "Disables saving browser history in Microsft Edge and prevents users from changing this setting.",
        "type": "boolean"
      },
      "SearchSuggestEnabled": {
        "title": "Enable search suggestions",
        "description": "Enables search suggestions in Microsoft Edge's omnibox and prevents users from changing this setting.",
        "type": "boolean"
      },
      "SecurityKeyPermitAttestation": {
        "title": "URLs/domains automatically permitted direct Security Key attestation",
        "description": "Specifies URLs and domains for which no prompt will be shown when attestation certificates from Security Keys are requested. Additionally, a signal will be sent to the Security Key indicating that individual attestation may be used. Without this, users will be prompted in Chrome 65+ when sites request attestation of Security Keys.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "SendSiteInfoToImproveServices": {
        "title": "Send site information to improve Microsoft services",
        "description": "This policy enables sending info about websites visited in Microsoft Edge to Microsoft to improve services like search.",
        "type": "boolean"
      },
      "ShowCastIconInToolbar": {
        "title": "Show the Google Cast toolbar icon",
        "description": "If this policy is set to true, the Cast toolbar icon will always be shown on the toolbar or the overflow menu, and users will not be able to remove it.",
        "type": "boolean"
      },
      "ShowHomeButton": {
        "title": "Show Home button on toolbar",
        "description": "Shows the Home button on Microsoft Edge's toolbar.",
        "type": "boolean"
      },
      "ShowOfficeShortcutInFavoritesBar": {
        "title": "Show Microsoft Office shortcut in favorites bar",
        "description": "Specifies whether to include a shortcut to Office.com in the favorites bar. For users signed into Microsoft Edge the shortcut takes users to their Microsoft Office apps and docs.",
        "type": "boolean"
      },
      "SignedHTTPExchangeEnabled": {
        "title": "Enabled Signed HTTP Exchange (SXG) support",
        "description": "Enable support for Signed HTTP Exchange (SXG).",
        "type": "boolean"
      },
      "SitePerProcess": {
        "title": "Enable Site Isolation for every site",
        "description": "You might want to look at the IsolateOrigins policy setting to get the best of both worlds, isolation and limited impact for users, by using IsolateOrigins with a list of the sites you want to isolate. This setting, SitePerProcess, isolates all sites. If the policy is enabled, each site will run in its own process. If the policy is disabled, no explicit Site Isolation will happen and field trials of IsolateOrigins and SitePerProcess will be disabled. Users will still be able to enable SitePerProcess manually. If the policy is not configured, the user will be able to change this setting. On Google Chrome OS, it is recommended to also set the DeviceLoginScreenSitePerProcess device policy to the same value. If the values specified by the two policies don't match, a delay may be incurred when entering a user session while the value specified by user policy is being applied.",
        "type": "boolean"
      },
      "SmartScreenAllowListDomains": {
        "title": "Prevent SmartScreen prompt override for files",
        "description": "Configure the list of domains for which Microsoft Defender SmartScreen won't trigger warnings.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "SmartScreenEnabled": {
        "title": "SmartScreen Enabled",
        "description": "Configure Microsoft Defender SmartScreen",
        "type": "boolean"
      },
      "SmartScreenForTrustedDownloadsEnabled": {
        "title": "Enable SmartScreen Trusted Downloads",
        "description": "Force Microsoft Defender SmartScreen checks on downloads from trusted sources",
        "type": "boolean"
      },
      "SmartScreenPuaEnabled": {
        "title": "Enable SmartScreen potentially unwanted apps",
        "description": "Configure Microsoft Defender SmartScreen to block potentially unwanted apps",
        "type": "boolean"
      },
      "SpellcheckEnabled": {
        "title": "Enable spellcheck",
        "description": "If this policy is not set or enabled, the user is allowed to use spellcheck.",
        "type": "boolean"
      },
      "StricterMixedContentTreatmentEnabled": {
        "title": "Enable stricter mixed content treatment",
        "description": "Enable stricter treatment for mixed content.",
        "type": "boolean"
      },
      "SuppressUnsupportedOSWarning": {
        "title": "Suppress the unsupported OS warning",
        "description": "Suppresses the warning that appears when Microsoft Edge is running on a computer or operating system that is no longer supported.",
        "type": "boolean"
      },
      "SyncDisabled": {
        "title": "Disable synchronization of data with Google",
        "description": "Disables data synchronization in Google Chrome using Google-hosted synchronization services and prevents users from changing this setting.",
        "type": "boolean"
      },
      "SyncTypesListDisabled": {
        "title": "Disable synchronization of selected data types",
        "description": "Configure the list of types that are excluded from synchronization.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "addressesAndMore",
                    "Addresses and more"
                  ],
                  [
                    "collections",
                    "Collections"
                  ],
                  [
                    "extensions",
                    "Extensions"
                  ],
                  [
                    "favorites",
                    "Favorites"
                  ],
                  [
                    "passwords",
                    "Passwords"
                  ],
                  [
                    "settings",
                    "Settings"
                  ]
                ]
              }
            }
          ]
        }
      },
      "TLS13HardeningForLocalAnchorsEnabled": {
        "title": "Enable TLS 1.3 Hardening",
        "description": "Enable a TLS 1.3 security feature for local trust anchors",
        "type": "boolean"
      },
      "TLSCipherSuiteDenyList": {
        "title": "TLS Cipher Suite Deny List",
        "description": "Specify the TLS cipher suites to disable. If you don't configure this policy, the browser will choose which TLS cipher suites to use. This policy does not affect QUIC-based connections.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "0x1303",
                    "TLS_CHACHA20_POLY1305_SHA256"
                  ],
                  [
                    "0xcca9",
                    "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256"
                  ],
                  [
                    "0xcca8",
                    "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
                  ]
                ]
              }
            }
          ]
        }
      },
      "TabFreezingEnabled": {
        "title": "Allow freezing of background tabs",
        "description": "Controls whether Microsoft Edge can freeze tabs that are in the background for at least 5 minutes.",
        "type": "boolean"
      },
      "TaskManagerEndProcessEnabled": {
        "title": "Enable ending processes in Task Manager",
        "description": "If set to false, the 'End process' button is disabled in the Task Manager.",
        "type": "boolean"
      },
      "ThirdPartyStoragePartitioningBlockedForOrigins": {
        "title": "Block third-party storage partitioning for these origins",
        "description": "Lets you set a list of url patterns that specify top-level origins (the url in the tab's address bar) that block third-party (cross-origin iframe) storage partitioning.\n\nIf this policy isn't set or a top-level origin doesn't match, then the value from DefaultThirdPartyStoragePartitioningSetting will be used.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "TotalMemoryLimitMb": {
        "title": "Set limit on megabytes of memory a single Microsoft Edge instance can use.",
        "description": "Configures the amount of memory that a single Microsoft Edge instance can use before tabs start getting discarded to save memory. The memory used by the tab will be freed and the tab will have to be reloaded when switched to.",
        "type": "integer"
      },
      "TrackingPrevention": {
        "title": "Tracking Prevention",
        "description": "Block tracking of users' web-browsing activity",
        "type": "integer"
      },
      "TranslateEnabled": {
        "title": "Enable Translate",
        "description": "Enables the integrated Microsoft translation service on Microsoft Edge.",
        "type": "boolean"
      },
      "TyposquattingCheckerEnabled": {
        "title": "Enable Typosquatting Checker",
        "description": "Enables the integrated Typosquatting Checker on Microsoft Edge.",
        "type": "boolean"
      },
      "URLAllowlist": {
        "title": "Allow access to a list of URLs",
        "description": "Allow access to the listed URLs, as exceptions to the URL denylist. Format the URL pattern according to https://go.microsoft.com/fwlink/?linkid=2095322.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "URLBlocklist": {
        "title": "Block access to a list of URLs",
        "description": "Define a list of sites, based on URL patterns, that are blocked (your users can't load them). Format the URL pattern according to https://go.microsoft.com/fwlink/?linkid=2095322.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "UseSystemPrintDialog": {
        "title": "Print using system print dialog",
        "description": "If you enable this policy, Microsoft Edge opens the system print dialog instead of the built-in print preview when a user prints a page.",
        "type": "boolean"
      },
      "UserAgentClientHintsEnabled": {
        "title": "Enable User-Agent Client Hints",
        "description": "Enable the User-Agent Client Hints feature.",
        "type": "boolean"
      },
      "UserDataDir": {
        "title": "Set user data directory",
        "description": "Configures the directory that Microsoft Edge will use for storing user data. See https://go.microsoft.com/fwlink/?linkid=2095041 for a list of variables that can be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UserFeedbackAllowed": {
        "title": "Allow user feedback",
        "description": "Allow user feedback. If the policy is set to false, users can not send feedback to Microsoft.",
        "type": "boolean"
      },
      "VideoCaptureAllowed": {
        "title": "Allow or deny video capture",
        "description": "If enabled or not configured (default), the user will be prompted for\nvideo capture access except for URLs configured in the VideoCaptureAllowedUrls list which will be granted access without prompting.",
        "type": "boolean"
      },
      "VideoCaptureAllowedUrls": {
        "title": "URLs that will be granted access to video capture devices without prompt",
        "description": "Patterns in this list will be matched against the security\norigin of the requesting URL.  If a match is found, access to audio\ncapture devices will be granted without prompt.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "WPADQuickCheckEnabled": {
        "title": "Enable WPAD optimization",
        "description": "Allows you to turn off WPAD (Web Proxy Auto-Discovery) optimization in Microsoft Edge",
        "type": "boolean"
      },
      "WebAppInstallForceList": {
        "title": "WebApp Force Install List",
        "description": "Specifies a list of websites that are installed silently, without user interaction, and which cannot be uninstalled nor disabled by the user.",
        "type": {
          "array": [
            {
              "dictionary": {
                "create_desktop_shortcut": {
                  "title": "Create Desktop Shortcut",
                  "type": "boolean"
                },
                "custom_icon": {
                  "title": "Custom Icon",
                  "type": {
                    "dictionary": {
                      "hash": {
                        "title": "Custom Icon Hash",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "url": {
                        "title": "Custom Icon URL",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      }
                    }
                  }
                },
                "custom_name": {
                  "title": "Custom Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "default_launch_container": {
                  "title": "Default Launch Container",
                  "type": {
                    "string": {
                      "rangeList": [
                        [
                          "window",
                          "Window"
                        ],
                        [
                          "tab",
                          "Tab"
                        ]
                      ]
                    }
                  }
                },
                "fallback_app_name": {
                  "title": "Fallback App Name",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "install_as_shortcut": {
                  "title": "Install as Shortcut",
                  "type": "boolean"
                },
                "url": {
                  "title": "URL",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "WebComponentsV0Enabled": {
        "title": "WebComponentsV0Enabled",
        "description": "Re-enable Web Components v0 API until M84.",
        "type": "boolean"
      },
      "WebDriverOverridesIncompatiblePolicies": {
        "title": "Allow WebDriver to Override Incompatible Policies",
        "description": "This policy allows users of the WebDriver feature to override policies which can interfere with its operation. This policy is deprecated. It is currently supported but will become obsolete in a future release.",
        "type": "boolean"
      },
      "WebRtcLocalIpsAllowedUrls": {
        "title": "WebRtcLocalIpsAllowedUrls",
        "description": "Manage exposure of local IP addressess by WebRTC",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "WebRtcLocalhostIpHandling": {
        "title": "WebRtcLocalhostIpHandling",
        "description": "Manage exposure of local IP addressess by WebRTC",
        "type": {
          "string": {
            "rangeList": [
              [
                "default",
                "Allow all interfaces"
              ],
              [
                "default_public_and_private_interfaces",
                "Allow public and private interfaces over http default route"
              ],
              [
                "default_public_interface_only",
                "Allow public interface over http default route, but don't expose local IP"
              ],
              [
                "disable_non_proxied_udp",
                "Use TCP unless proxy server supports UDP and don't expose local IP"
              ]
            ]
          }
        }
      },
      "WebRtcUdpPortRange": {
        "title": "Restrict the range of local UDP ports used by WebRTC",
        "description": "If the policy is set, the UDP port range used by WebRTC is restricted to the specified port interval (endpoints included).",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "WebUsbAllowDevicesForUrls": {
        "title": "Automatically grant permission to these sites to connect to USB devices with the given vendor and product IDs",
        "description": "Allows you to set a list of urls that specify which sites will automatically be granted permission to access a USB device with the given vendor and product IDs.",
        "type": {
          "dictionary": {
            "devices": {
              "title": "Devices",
              "type": {
                "dictionary": {
                  "product_id": {
                    "title": "Product ID",
                    "type": "integer"
                  },
                  "vendor_id": {
                    "title": "Vendor ID",
                    "type": "integer"
                  }
                }
              }
            },
            "urls": {
              "title": "URLs",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "WebUsbAskForUrls": {
        "title": "Allow WebUSB on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are allowed to ask the user to grant them access to a USB device.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "WebUsbBlockedForUrls": {
        "title": "Block WebUSB on these sites",
        "description": "Allows you to set a list of url patterns that specify sites which are prevented from asking the user to grant them access to a USB device.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.Excel": {
    "title": "Microsoft Excel",
    "description": "Microsoft Excel settings",
    "properties": {
      "NSRequiresAquaSystemAppearance": {
        "title": "Disable Dark Mode",
        "description": "Disable macOS Dark Mode settings for application.",
        "type": "boolean"
      },
      "PII_And_Intelligent_Services_Preference": {
        "title": "Suppress 'Use Intelligent Services' dialog (2/2)",
        "description": "Suppress the \"Use Intelligent Services?\" pop-up dialog and auto-accept the terms in 16.17 through 16.27.",
        "type": "boolean"
      },
      "SendASmileEnabled": {
        "title": "Send A Smile Enabled",
        "description": "This key when set to false will deactivate the ability for users to use the \"Smile\" feature to send feedback to Microsoft.",
        "type": "boolean"
      },
      "SendAllTelemetryEnabled": {
        "title": "Send Telemetry Data",
        "description": "Set to FALSE to send minimal heartbeat data, no application usage, and no environment details.",
        "type": "boolean"
      },
      "SendCrashReportsEvenWithTelemetryDisabled": {
        "title": "Send Crash Reports even with Telemetry Disabled",
        "description": "Sends crash reports even if telemetry is disabled. Will only be evaluated if 'Send Telemetry Data' is FALSE.",
        "type": "boolean"
      },
      "SignInOptions": {
        "title": "Sign In Options",
        "description": "Prevent users from signing in to any O365 service. This has the added effect of making sure users store no data online via microsoft servers.",
        "type": "integer"
      },
      "TryDefaultPassword": {
        "title": "Try Default Password",
        "description": "Uncheck to prevent Excel from using a default password when attempting to unlock encrypted files.",
        "type": "boolean"
      },
      "kFREEnterpriseTelemetryInfoKey": {
        "title": "Suppress Privacy and Services dialog",
        "description": "Suppresses a temporary Privacy and Services Update dialog in 16.27 ONLY. (Was previously used for a similar purpose in 16.13.1 but the key was recycled.)",
        "type": "boolean"
      },
      "kFREIntelligenceServicesConsentV2Key": {
        "title": "Suppress 'Use Intelligent Services' dialog (1/2)",
        "description": "Suppress the \"Use Intelligent Services?\" pop-up dialog and auto-accept the terms in 16.17 through 16.27.",
        "type": "boolean"
      },
      "kFRETelemetryConsentKey": {
        "title": "Suppress 'Connected Services' dialog",
        "description": "Disable the \"Connected Services\" dialog for MSA-based (personal) accounts.",
        "type": "boolean"
      },
      "kSubUIAppCompletedFirstRunSetup1507": {
        "title": "First Run Setup Completed",
        "description": "Controls the original \"What's New\" dialog and Office 365 activation prompt on first launch. Replaced by 'OfficeAutoSignIn' in the main Office profile starting in version 16.17 and should not be used for Office 2019.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.Office365ServiceV2": {
    "title": "Microsoft Office 365 Service",
    "description": "Microsoft Office 365 Service settings",
    "properties": {
      "SendAllTelemetryEnabled": {
        "title": "SendAllTelemetryEnabled",
        "description": "Set to false to send minimal heartbeat data, no application usage, and no environment details.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.OneDrive": {
    "title": "Microsoft OneDrive",
    "description": "Microsoft OneDrive settings",
    "properties": {
      "AllowTenantList": {
        "title": "Allow Tenant List",
        "description": "This setting prevents the users from uploading files to other organizations by specifying a list of allowed tenant IDs. If you enable this setting, the user gets an error if they attempt to add an account from an organization that isn't in the allowed tenants list.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Tenant ID",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Check to Allow",
              "type": "boolean"
            }
          }
        }
      },
      "AutomaticUploadBandwidthPercentage": {
        "title": "Automatic upload bandwidth percentage",
        "description": "Percentage of local upload bandwidth that the sync client can use.",
        "type": "integer"
      },
      "BlockExternalSync": {
        "title": "Block External Sync",
        "description": "This setting prevents the sync app from syncing libraries and folders shared from other organizations. Set the setting's value to True, to prevent the users from syncing OneDrive, SharePoint libraries, and folders with organizations other than the user's own organization.",
        "type": "boolean"
      },
      "BlockTenantList": {
        "title": "Block Tenant List",
        "description": "This setting prevents the users from uploading files to organizations that are included in the blocked tenant IDs list. If you enable this setting, the users get an error if they attempt to add an account from an organization that is blocked. If a user has already added an account for a blocked organization, the files stop syncing.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "TenantID",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Check to Block",
              "type": "boolean"
            }
          }
        }
      },
      "DefaultFolderLocation": {
        "title": "Default Folder Location",
        "description": "OneDrive folder default location. Specifies the default location of the OneDrive folder for each organization.",
        "type": {
          "array": [
            {
              "dictionary": {
                "DefaultFolderPath": {
                  "title": "Path",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "TenantID": {
                  "title": "Tenant ID",
                  "description": "The TenantID value is a string that determines the tenants to whom the default folder location setting is applicable.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "DefaultToBusinessFRE": {
        "title": "DefaultToBusinessFRE",
        "description": "Default to OneDrive Business",
        "type": "boolean"
      },
      "DisableHydrationToast": {
        "title": "Disable Hydration Toast",
        "description": "This setting prevents toasts from appearing when applications cause file contents to be downloaded.",
        "type": "boolean"
      },
      "DisablePersonalSync": {
        "title": "Disable Personal Accounts",
        "description": "Prevents users from adding or syncing personal accounts.",
        "type": "boolean"
      },
      "DisableTutorial": {
        "title": "Disable Tutorial Screens",
        "description": "Disable tutorial screens during first setup.",
        "type": "boolean"
      },
      "DownloadBandwidthLimited": {
        "title": "Maximum Download Bandwidth",
        "description": "Sets the maximum download throughput rate in kilobytes (KB)/sec for computers running the OneDrive sync client.",
        "type": "integer"
      },
      "EnableAddAccounts": {
        "title": "EnableAddAccounts",
        "description": "Allow users to add accounts to OneDrive",
        "type": "boolean"
      },
      "EnableAllOcsiClients": {
        "title": "Enable All Osci Clients",
        "description": "This setting lets multiple users use the Microsoft 365 Apps for enterprise, Office 2019, or Office 2016 desktop apps to simultaneously edit an Office file stored in OneDrive. It also lets users share files from the Office desktop apps.",
        "type": "boolean"
      },
      "EnableODIgnore": {
        "title": "OneDrive Sync Ignore Rules",
        "description": "This setting lets you enter keywords to prevent the OneDrive sync app from uploading certain files to OneDrive or SharePoint. You can enter complete names, such as \"setup.exe\" or use the asterisk (*) as a wildcard character to represent a series of characters, such as *.pst. Keywords aren't case-sensitive.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "FilesOnDemandEnabled": {
        "title": "Enable Files On-Demand",
        "description": "When set to true, new users who set up the sync app will download online-only files by default. When set to false, Files On-Demand will be disabled and users won't be able to turn it on.",
        "type": "boolean"
      },
      "HideDockIcon": {
        "title": "Hide Dock Icon",
        "description": "Hides the OneDrive dock icon even when the application is running.",
        "type": "boolean"
      },
      "HydrationDisallowedApps": {
        "title": "HydrationDisallowedApps",
        "description": "String in JSON format. AppID can be either the BSD process name or the bundle display name. \nMaxBuildVersion denotes the maximum build version of the application that will be blocked. \nMaxBundleVersion denotes the maximum bundle version of the application that will be blocked.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IsHydrationToastAllowed": {
        "title": "IsHydrationToastAllowed",
        "description": "When set to false, toasts will not appear when applications trigger the download of file contents.",
        "type": "boolean"
      },
      "KFMBlockOptIn": {
        "title": "Block Opt-in",
        "description": "If enabled, will prevent KFM opt-in.",
        "type": "integer"
      },
      "KFMBlockOptOut": {
        "title": "Block KFM Opt-out",
        "description": "If enabled, prevents users from redirecting their known folders to the Mac.",
        "type": "boolean"
      },
      "KFMOptInWithWizard": {
        "title": "Prompt Users to Move Known Folders",
        "description": "",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "KFMSilentOptIn": {
        "title": "Silently Move Known Folders",
        "description": "",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "KFMSilentOptInDesktop": {
        "title": "Silently Opt in Desktop to Known Folders",
        "description": "Enable to silently opt-in the user's Desktop folder.",
        "type": "boolean"
      },
      "KFMSilentOptInDocuments": {
        "title": "Silently Opt in Documents to Known Folders",
        "description": "Enable to silently opt-in the user's Documents folder.",
        "type": "boolean"
      },
      "KFMSilentOptInWithNotification": {
        "title": "Silently Opt in with Notification",
        "description": "If enabled, displays a notification to users after their folders have been redirected.",
        "type": "boolean"
      },
      "OpenAtLogin": {
        "title": "Open at Login",
        "description": "Automatically start OneDrive when the user logs in.",
        "type": "boolean"
      },
      "SharePointOnPremFrontDoorUrl": {
        "title": "SharePoint Server Front Door URL",
        "description": "The URL of the on-premises SharePoint Server.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SharePointOnPremPrioritzationPolicy": {
        "title": "SharePoint OnPrem Prioritization",
        "description": "Determines whether or not the client should set up sync for SharePoint Server or SharePoint Online first during the first-run scenario.",
        "type": "integer"
      },
      "SharePointOnPremTenantName": {
        "title": "SharePoint Server Tenant Name",
        "description": "The name that will be used when creating a folder to sync the on-premises SharePoint Server files.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UploadBandwidthLimited": {
        "title": "Maximum Upload Bandwidth",
        "description": "Upload throughput in KB/sec that the sync client can use.",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.OneDriveUpdater": {
    "title": "Microsoft OneDrive Updater",
    "description": "Microsoft OneDrive Updater settings",
    "properties": {
      "Tier": {
        "title": "Tier (Standalone version only)",
        "description": "Defines the update ring.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.Outlook": {
    "title": "Microsoft Outlook",
    "description": "Microsoft Outlook settings",
    "properties": {
      "AllowedEmailDomains": {
        "title": "Allowed Email Domains",
        "description": "Specify one or more domains users are allowed to add in Outlook. Format strings as regular expressions. Does not remove or disconnect accounts already added in Outlook. Supports regular expressions to allow for catching multiple domains.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AutomaticallyDownloadExternalContent": {
        "title": "Automatically Download External Content",
        "description": "Set when pictures are automatically downloaded from the Internet for email.",
        "type": "integer"
      },
      "CalendarFirstDayOfWeek": {
        "title": "Calendar: First Day of the Week",
        "description": "Set the first day of week in calendar view.",
        "type": "integer"
      },
      "DefaultEmailAddressOrDomain": {
        "title": "Default Email Address or Domain",
        "description": "Set the domain or full email address of Office 365 mailbox to be added on first launch. The full email address or domain specified will be added in Outlook instead of the Office activation email address. For a domain use \"example.com\" formatting (no \"@\") and the alias/username from the activation email address will be combined with the domain entered in this pref key.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultWeatherLocation": {
        "title": "Weather: Default Location",
        "description": "Set default location for weather in calendar view. Use the format returned by the weather location search within Outlook. Example: \"Paris, France\"",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DisableExport": {
        "title": "Disable Export",
        "description": "Prevent users from being able to export archive files (.olm).",
        "type": "boolean"
      },
      "DisableImport": {
        "title": "Disable Import",
        "description": "Prevent users from being able to import archive files (.olm and .pst) and Outlook 2011 for Mac data.",
        "type": "boolean"
      },
      "DisableModernAuth": {
        "title": "Disable Modern Authentication",
        "description": "Disable Modern Authentication connections from Outlook.",
        "type": "boolean"
      },
      "DisablePreviewForSMIME": {
        "title": "Disable Preview for SMIME",
        "description": "Disable preview generation for encrypted email messages.",
        "type": "boolean"
      },
      "DisableSignatures": {
        "title": "Disable Signatures",
        "description": "Prevent users from being able to create, edit, and add client-side signatures.",
        "type": "boolean"
      },
      "DisableSkypeMeeting": {
        "title": "Disable Skype Meetings",
        "description": "Prevent users from adding Skype for Business online meeting details to events.",
        "type": "boolean"
      },
      "DisableTeamsMeeting": {
        "title": "Disable Teams Meetings",
        "description": "Prevent users from adding Teams online meeting details to events.",
        "type": "boolean"
      },
      "EnableNewOutlook": {
        "title": "Enable New Outlook",
        "description": "Lets users on the production channel try out the new Outlook. This key can be used to manage the deployment and default position of the new Outlook switch.",
        "type": "integer"
      },
      "FirstRunExperienceCompletedO15": {
        "title": "First Run Experience Completed",
        "description": "Disable the offer to import mailbox or setup an email account in Outlook 2016.",
        "type": "boolean"
      },
      "HideCanAddOtherAccountTypesTipText": {
        "title": "Hide text about adding non-corporate mailboxes",
        "description": "Hide the \"Did you know? Outlook supports…\" text in the Set Up Your Email success dialog box. Only hides text. Does not impact ability to add non-corporate mailboxes.",
        "type": "boolean"
      },
      "HideFoldersOnMyComputerRootInFolderList": {
        "title": "Hide Local Folders",
        "description": "Prevent users from viewing local On My Computer folders in the sidebar. Found under Outlook > Preferences > General > Sidebar.",
        "type": "boolean"
      },
      "NSRequiresAquaSystemAppearance": {
        "title": "Disable Dark Mode",
        "description": "Disable macOS Dark Mode settings for application.",
        "type": "boolean"
      },
      "OverrideAccountConfigurationWindow": {
        "title": "Suppress Account Configuration Window",
        "description": "Disable account configuration window when the profile is empty.",
        "type": "boolean"
      },
      "PII_And_Intelligent_Services_Preference": {
        "title": "Suppress 'Use Intelligent Services' dialog (2/2)",
        "description": "Suppress the \"Use Intelligent Services?\" pop-up dialog and auto-accept the terms in 16.17 through 16.27.",
        "type": "boolean"
      },
      "SendASmileEnabled": {
        "title": "Send A Smile Enabled",
        "description": "This key when set to false will deactivate the ability for users to use the \"Smile\" feature to send feedback to Microsoft.",
        "type": "boolean"
      },
      "SendAllTelemetryEnabled": {
        "title": "Send Telemetry Data",
        "description": "Set to FALSE to send minimal heartbeat data, no application usage, and no environment details.",
        "type": "boolean"
      },
      "SendCrashReportsEvenWithTelemetryDisabled": {
        "title": "Send Crash Reports even with Telemetry Disabled",
        "description": "Sends crash reports even if telemetry is disabled. Will only be evaluated if 'Send Telemetry Data' is FALSE.",
        "type": "boolean"
      },
      "SignInOptions": {
        "title": "Sign In Options",
        "description": "Prevent users from signing in to any O365 service. This has the added effect of making sure users store no data online via microsoft servers.",
        "type": "integer"
      },
      "TrustO365AutodiscoverRedirect": {
        "title": "Suppress Office 365 Autodiscover Redirect Warning",
        "description": "Suppress the warning when Autodiscover is redirected from HTTP to HTTPS.",
        "type": "boolean"
      },
      "Weather_update_automatically": {
        "title": "Weather: Update Automatically",
        "description": "Prevent users from choosing Update Location Automatically for weather location.",
        "type": "boolean"
      },
      "googlePromoTriggeredPref": {
        "title": "Suppress Google Contacts/Calendar dialog",
        "description": "Disable promotion dialog about adding Google Contacts/Calendar.",
        "type": "boolean"
      },
      "kFREEnterpriseTelemetryInfoKey": {
        "title": "Suppress Privacy and Services dialog",
        "description": "Suppresses a temporary Privacy and Services Update dialog in 16.27 ONLY. (Was previously used for a similar purpose in 16.13.1 but the key was recycled.)",
        "type": "boolean"
      },
      "kFREIntelligenceServicesConsentV2Key": {
        "title": "Suppress 'Use Intelligent Services' dialog (1/2)",
        "description": "Suppress the \"Use Intelligent Services?\" pop-up dialog and auto-accept the terms in 16.17 through 16.27.",
        "type": "boolean"
      },
      "kFRETelemetryConsentKey": {
        "title": "Suppress 'Connected Services' dialog",
        "description": "Disable the \"Connected Services\" dialog for MSA-based (personal) accounts.",
        "type": "boolean"
      },
      "kSubUIAppCompletedFirstRunSetup1507": {
        "title": "First Run Setup Completed",
        "description": "Controls the original \"What's New\" dialog and Office 365 activation prompt on first launch. Replaced by 'OfficeAutoSignIn' in the main Office profile starting in version 16.17 and should not be used for Office 2019.",
        "type": "boolean"
      },
      "o365GroupsOobePromoTriggeredPref": {
        "title": "Suppress Groups Promotion dialog",
        "description": "Disable the \"Introducing groups in Outlook\" dialog.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.Powerpoint": {
    "title": "Microsoft PowerPoint",
    "description": "Microsoft PowerPoint settings",
    "properties": {
      "NSRequiresAquaSystemAppearance": {
        "title": "Disable Dark Mode",
        "description": "Disable macOS Dark Mode settings for application.",
        "type": "boolean"
      },
      "PII_And_Intelligent_Services_Preference": {
        "title": "Suppress 'Use Intelligent Services' dialog (2/2)",
        "description": "Suppress the \"Use Intelligent Services?\" pop-up dialog and auto-accept the terms in 16.17 through 16.27.",
        "type": "boolean"
      },
      "SendASmileEnabled": {
        "title": "Send A Smile Enabled",
        "description": "This key when set to false will deactivate the ability for users to use the \"Smile\" feature to send feedback to Microsoft.",
        "type": "boolean"
      },
      "SendAllTelemetryEnabled": {
        "title": "Send Telemetry Data",
        "description": "Set to FALSE to send minimal heartbeat data, no application usage, and no environment details.",
        "type": "boolean"
      },
      "SendCrashReportsEvenWithTelemetryDisabled": {
        "title": "Send Crash Reports even with Telemetry Disabled",
        "description": "Sends crash reports even if telemetry is disabled. Will only be evaluated if 'Send Telemetry Data' is FALSE.",
        "type": "boolean"
      },
      "SignInOptions": {
        "title": "Sign In Options",
        "description": "Prevent users from signing in to any O365 service. This has the added effect of making sure users store no data online via microsoft servers.",
        "type": "integer"
      },
      "kFREEnterpriseTelemetryInfoKey": {
        "title": "Suppress Privacy and Services dialog",
        "description": "Suppresses a temporary Privacy and Services Update dialog in 16.27 ONLY. (Was previously used for a similar purpose in 16.13.1 but the key was recycled.)",
        "type": "boolean"
      },
      "kFREIntelligenceServicesConsentV2Key": {
        "title": "Suppress 'Use Intelligent Services' dialog (1/2)",
        "description": "Suppress the \"Use Intelligent Services?\" pop-up dialog and auto-accept the terms in 16.17 through 16.27.",
        "type": "boolean"
      },
      "kFRETelemetryConsentKey": {
        "title": "Suppress 'Connected Services' dialog",
        "description": "Disable the \"Connected Services\" dialog for MSA-based (personal) accounts.",
        "type": "boolean"
      },
      "kSubUIAppCompletedFirstRunSetup1507": {
        "title": "First Run Setup Completed",
        "description": "Controls the original \"What's New\" dialog and Office 365 activation prompt on first launch. Replaced by 'OfficeAutoSignIn' in the main Office profile starting in version 16.17 and should not be used for Office 2019.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.SkypeForBusiness": {
    "title": "Skype for Business",
    "description": "Skype for Business settings",
    "properties": {
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "autoAcceptTimeout": {
        "title": "Auto Accept Timeout",
        "description": "Auto-Accept timeout for users without Server-side Conversation History.",
        "type": "integer"
      },
      "autoDetectAutoDicoveryURLs": {
        "title": "Server Discovery Method",
        "description": "Specify how Skype for Business identifies the transport and server to use during sign-in. (The misspelling of Discovery in the key is intentional.)",
        "type": "boolean"
      },
      "externalAutoDiscoveryURL": {
        "title": "External Auto Discovery URL",
        "description": "",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "httpProxyDomain": {
        "title": "HTTP Proxy Domain",
        "description": "",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "httpProxyPassword": {
        "title": "HTTP Proxy Password",
        "description": "",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "httpProxyUserName": {
        "title": "HTTP Proxy Username",
        "description": "",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "internalAutoDiscoveryURL": {
        "title": "Internal Auto Discovery URL",
        "description": "",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "sipAddress": {
        "title": "SIP Address",
        "description": "The SIP address (Email) used to sign-in to Skype for Business.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "trustedDomainList": {
        "title": "Trusted Domain List",
        "description": "List of trusted domains for HTTP redirects.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "userName": {
        "title": "Username",
        "description": "The UPN (UserName) used to sign-in to Skype for Business.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "userNameInAdvancedOnly": {
        "title": "User Name field location",
        "description": "Specify where the User Name field is displayed during sign-in.",
        "type": "boolean"
      },
      "warnWhenUnknownLocationForE911": {
        "title": "Warn Unknown Location for Emergency 911",
        "description": "Warns the user when dialing an emergency number from an unknown location.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.Word": {
    "title": "Microsoft Word",
    "description": "Microsoft Word settings",
    "properties": {
      "DisableResumeAssistant": {
        "title": "Disable Resume Assistant",
        "description": "The icon for Resume Assistant will appear on the Review tab for Office 365 users. Set this preference to TRUE to disable this feature.",
        "type": "boolean"
      },
      "NSRequiresAquaSystemAppearance": {
        "title": "Disable Dark Mode",
        "description": "Disable macOS Dark Mode settings for application.",
        "type": "boolean"
      },
      "PII_And_Intelligent_Services_Preference": {
        "title": "Suppress 'Use Intelligent Services' dialog (2/2)",
        "description": "Suppress the \"Use Intelligent Services?\" pop-up dialog and auto-accept the terms in 16.17 through 16.27.",
        "type": "boolean"
      },
      "SendASmileEnabled": {
        "title": "Send A Smile Enabled",
        "description": "This key when set to false will deactivate the ability for users to use the \"Smile\" feature to send feedback to Microsoft.",
        "type": "boolean"
      },
      "SendAllTelemetryEnabled": {
        "title": "Send Telemetry Data",
        "description": "Set to FALSE to send minimal heartbeat data, no application usage, and no environment details.",
        "type": "boolean"
      },
      "SendCrashReportsEvenWithTelemetryDisabled": {
        "title": "Send Crash Reports even with Telemetry Disabled",
        "description": "Sends crash reports even if telemetry is disabled. Will only be evaluated if 'Send Telemetry Data' is FALSE.",
        "type": "boolean"
      },
      "SignInOptions": {
        "title": "Sign In Options",
        "description": "Prevent users from signing in to any O365 service. This has the added effect of making sure users store no data online via microsoft servers.",
        "type": "integer"
      },
      "kFREEnterpriseTelemetryInfoKey": {
        "title": "Suppress Privacy and Services dialog",
        "description": "Suppresses a temporary Privacy and Services Update dialog in 16.27 ONLY. (Was previously used for a similar purpose in 16.13.1 but the key was recycled.)",
        "type": "boolean"
      },
      "kFREIntelligenceServicesConsentV2Key": {
        "title": "Suppress 'Use Intelligent Services' dialog (1/2)",
        "description": "Suppress the \"Use Intelligent Services?\" pop-up dialog and auto-accept the terms in 16.17 through 16.27.",
        "type": "boolean"
      },
      "kFRETelemetryConsentKey": {
        "title": "Suppress 'Connected Services' dialog",
        "description": "Disable the \"Connected Services\" dialog for MSA-based (personal) accounts.",
        "type": "boolean"
      },
      "kSubUIAppCompletedFirstRunSetup1507": {
        "title": "First Run Setup Completed",
        "description": "Controls the original \"What's New\" dialog and Office 365 activation prompt on first launch. Replaced by 'OfficeAutoSignIn' in the main Office profile starting in version 16.17 and should not be used for Office 2019.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.autoupdate.fba": {
    "title": "Microsoft AutoUpdate FBA",
    "description": "Use this section to define settings for Microsoft AutoUpdate FBA for Mac",
    "properties": {
      "SendAllTelemetryEnabled": {
        "title": "Send Telemetry Data",
        "description": "Controls wether diagnostic data transmission is on or off.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.autoupdate2": {
    "title": "Microsoft AutoUpdate",
    "description": "Microsoft AutoUpdate settings",
    "properties": {
      "AcknowledgedDataCollectionPolicy": {
        "title": "Acknowledged Data Collection Policy",
        "description": "The first time Version 4.12 or later of Microsoft AutoUpdate is launched, users will see a Required Data Notice dialog which provides them with information about what data from MAU is sent to Microsoft. If you don't want your users to see this Required Data Notice dialog for Microsoft AutoUpdate, you can set the following preference. Regardless of which value you set, the dialog won't be shown to your users. If you let your users see this dialog, then when the user chooses OK, the value RequiredDataOnly is used and the dialog is not shown to the user again.",
        "type": {
          "string": {
            "rangeList": [
              [
                "RequiredDataOnly",
                "RequiredDataOnly"
              ],
              [
                "RequiredAndOptionalData",
                "RequiredAndOptionalData"
              ]
            ]
          }
        }
      },
      "Applications": {
        "title": "Applications",
        "description": "Register applications that Microsoft AutoUpdate should update. If this is not managed MAU might have issues finding updates for applications that a user has never opened. Language Code IDs are legacy and always \"1033\".",
        "type": {
          "dictionary": {
            "/Applications/Company Portal.app": {
              "title": "Company Portal",
              "description": "Register /Applications/Company Portal.app.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "LCID": {
                    "title": "Language Code ID",
                    "type": "integer"
                  },
                  "UpdateDeadline.DaysBeforeForcedQuit": {
                    "title": "Update Deadline: Days Before Forced Quit",
                    "description": "Force quit this application and update X number of days after MAU first detects the update on each computer. Can be used in conjunction with the higher level option of the same setting for more restrictive per-application updating.",
                    "type": "integer"
                  }
                }
              }
            },
            "/Applications/Microsoft Defender.app": {
              "title": "Microsoft Defender ATP",
              "description": "Register /Applications/Microsoft Defender.app.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "LCID": {
                    "title": "Language Code ID",
                    "type": "integer"
                  },
                  "UpdateDeadline.DaysBeforeForcedQuit": {
                    "title": "Update Deadline: Days Before Forced Quit",
                    "description": "Force quit this application and update X number of days after MAU first detects the update on each computer. Can be used in conjunction with the higher level option of the same setting for more restrictive per-application updating.",
                    "type": "integer"
                  }
                }
              }
            },
            "/Applications/Microsoft Edge.app": {
              "title": "Microsoft Edge",
              "description": "Register /Applications/Microsoft Edge.app.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "LCID": {
                    "title": "Language Code ID",
                    "type": "integer"
                  },
                  "UpdateDeadline.DaysBeforeForcedQuit": {
                    "title": "Update Deadline: Days Before Forced Quit",
                    "description": "Force quit this application and update X number of days after MAU first detects the update on each computer. Can be used in conjunction with the higher level option of the same setting for more restrictive per-application updating.",
                    "type": "integer"
                  }
                }
              }
            },
            "/Applications/Microsoft Excel.app": {
              "title": "Microsoft Excel",
              "description": "Register /Applications/Microsoft Excel.app.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "XCEL15",
                            "2016 Volume License"
                          ],
                          [
                            "XCEL2019",
                            "2019 Volume License/Office 365"
                          ]
                        ]
                      }
                    }
                  },
                  "LCID": {
                    "title": "Language Code ID",
                    "type": "integer"
                  },
                  "UpdateDeadline.DaysBeforeForcedQuit": {
                    "title": "Update Deadline: Days Before Forced Quit",
                    "description": "Force quit this application and update X number of days after MAU first detects the update on each computer. Can be used in conjunction with the higher level option of the same setting for more restrictive per-application updating.",
                    "type": "integer"
                  }
                }
              }
            },
            "/Applications/Microsoft OneNote.app": {
              "title": "Microsoft OneNote",
              "description": "Register /Applications/Microsoft OneNote.app.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "ONMC15",
                            "2016 Volume License"
                          ],
                          [
                            "ONMC2019",
                            "2019 Volume License/Office 365"
                          ]
                        ]
                      }
                    }
                  },
                  "LCID": {
                    "title": "Language Code ID",
                    "type": "integer"
                  },
                  "UpdateDeadline.DaysBeforeForcedQuit": {
                    "title": "Update Deadline: Days Before Forced Quit",
                    "description": "Force quit this application and update X number of days after MAU first detects the update on each computer. Can be used in conjunction with the higher level option of the same setting for more restrictive per-application updating.",
                    "type": "integer"
                  }
                }
              }
            },
            "/Applications/Microsoft Outlook.app": {
              "title": "Microsoft Outlook",
              "description": "Register /Applications/Microsoft Outlook.app.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "OPIM15",
                            "2016 Volume License"
                          ],
                          [
                            "OPIM2019",
                            "2019 Volume License/Office 365"
                          ]
                        ]
                      }
                    }
                  },
                  "LCID": {
                    "title": "Language Code ID",
                    "type": "integer"
                  },
                  "UpdateDeadline.DaysBeforeForcedQuit": {
                    "title": "Update Deadline: Days Before Forced Quit",
                    "description": "Force quit this application and update X number of days after MAU first detects the update on each computer. Can be used in conjunction with the higher level option of the same setting for more restrictive per-application updating.",
                    "type": "integer"
                  }
                }
              }
            },
            "/Applications/Microsoft PowerPoint.app": {
              "title": "Microsoft PowerPoint",
              "description": "Register /Applications/Microsoft PowerPoint.app.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "PPT315",
                            "2016 Volume License"
                          ],
                          [
                            "PPT32019",
                            "2019 Volume License/Office 365"
                          ]
                        ]
                      }
                    }
                  },
                  "LCID": {
                    "title": "Language Code ID",
                    "type": "integer"
                  },
                  "UpdateDeadline.DaysBeforeForcedQuit": {
                    "title": "Update Deadline: Days Before Forced Quit",
                    "description": "Force quit this application and update X number of days after MAU first detects the update on each computer. Can be used in conjunction with the higher level option of the same setting for more restrictive per-application updating.",
                    "type": "integer"
                  }
                }
              }
            },
            "/Applications/Microsoft Remote Desktop.app": {
              "title": "Microsoft Remote Desktop",
              "description": "Register /Applications/Microsoft Remote Desktop.app.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "LCID": {
                    "title": "Language Code ID",
                    "type": "integer"
                  },
                  "UpdateDeadline.DaysBeforeForcedQuit": {
                    "title": "Update Deadline: Days Before Forced Quit",
                    "description": "Force quit this application and update X number of days after MAU first detects the update on each computer. Can be used in conjunction with the higher level option of the same setting for more restrictive per-application updating.",
                    "type": "integer"
                  }
                }
              }
            },
            "/Applications/Microsoft Teams.app": {
              "title": "Microsoft Teams",
              "description": "Register /Applications/Microsoft Teams.app.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "LCID": {
                    "title": "Language Code ID",
                    "type": "integer"
                  },
                  "UpdateDeadline.DaysBeforeForcedQuit": {
                    "title": "Update Deadline: Days Before Forced Quit",
                    "description": "Force quit this application and update X number of days after MAU first detects the update on each computer. Can be used in conjunction with the higher level option of the same setting for more restrictive per-application updating.",
                    "type": "integer"
                  }
                }
              }
            },
            "/Applications/Microsoft Word.app": {
              "title": "Microsoft Word",
              "description": "Register /Applications/Microsoft Word.app.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "MSWD15",
                            "2016 Volume License"
                          ],
                          [
                            "MSWD2019",
                            "2019 Volume License/Office 365"
                          ]
                        ]
                      }
                    }
                  },
                  "LCID": {
                    "title": "Language Code ID",
                    "type": "integer"
                  },
                  "UpdateDeadline.DaysBeforeForcedQuit": {
                    "title": "Update Deadline: Days Before Forced Quit",
                    "description": "Force quit this application and update X number of days after MAU first detects the update on each computer. Can be used in conjunction with the higher level option of the same setting for more restrictive per-application updating.",
                    "type": "integer"
                  }
                }
              }
            },
            "/Applications/OneDrive.app": {
              "title": "OneDrive",
              "description": "Register /Applications/OneDrive.app.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "LCID": {
                    "title": "Language Code ID",
                    "type": "integer"
                  },
                  "UpdateDeadline.DaysBeforeForcedQuit": {
                    "title": "Update Deadline: Days Before Forced Quit",
                    "description": "Force quit this application and update X number of days after MAU first detects the update on each computer. Can be used in conjunction with the higher level option of the same setting for more restrictive per-application updating.",
                    "type": "integer"
                  }
                }
              }
            },
            "/Applications/Skype for Business.app": {
              "title": "Skype for Business",
              "description": "Register /Applications/Skype for Business.app.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "LCID": {
                    "title": "Language Code ID",
                    "type": "integer"
                  },
                  "UpdateDeadline.DaysBeforeForcedQuit": {
                    "title": "Update Deadline: Days Before Forced Quit",
                    "description": "Force quit this application and update X number of days after MAU first detects the update on each computer. Can be used in conjunction with the higher level option of the same setting for more restrictive per-application updating.",
                    "type": "integer"
                  }
                }
              }
            },
            "/Library/Application Support/Microsoft/MAU2.0/Microsoft AutoUpdate.app": {
              "title": "Microsoft AutoUpdate",
              "description": "Register /Library/Application Support/Microsoft/MAU2.0/Microsoft AutoUpdate.app.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "MSau03",
                            "AutoUpdate <= 4.6"
                          ],
                          [
                            "MSau04",
                            "AutoUpdate => 4.7"
                          ]
                        ]
                      }
                    }
                  },
                  "LCID": {
                    "title": "Language Code ID",
                    "type": "integer"
                  },
                  "UpdateDeadline.DaysBeforeForcedQuit": {
                    "title": "Update Deadline: Days Before Forced Quit",
                    "description": "Force quit this application and update X number of days after MAU first detects the update on each computer. Can be used in conjunction with the higher level option of the same setting for more restrictive per-application updating.",
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "ChannelName": {
        "title": "Channel Name",
        "description": "Set the update channel that is used to check for updates. Click the documentation link for more information about which channel to use.",
        "type": {
          "string": {
            "rangeList": [
              [
                "Production",
                "Production (pre MAU 4.29)"
              ],
              [
                "Current",
                "Current (MAU 4.29+)"
              ],
              [
                "External",
                "Office Insider Slow: \"External\" (pre MAU 4.29)"
              ],
              [
                "Preview",
                "Preview (MAU 4.29+)"
              ],
              [
                "InsiderFast",
                "Office Insider Fast: \"InsiderFast\" (pre MAU 4.29)"
              ],
              [
                "Beta",
                "Beta (MAU 4.29+)"
              ],
              [
                "Custom",
                "Custom"
              ]
            ]
          }
        }
      },
      "DisableInsiderCheckbox": {
        "title": "Disable Insider Checkbox",
        "description": "Set this option to disable the \"Join the Office Insider Program...\" checkbox.",
        "type": "boolean"
      },
      "EnableCheckForUpdatesButton": {
        "title": "Enable Check for Updates Button",
        "description": "Disable this option to make the \"Check for Updates\" button in unavailable.",
        "type": "boolean"
      },
      "ExtendedLogging": {
        "title": "Enable Extended Logging",
        "description": "Enabled extended logging for Microsoft AutoUpdate operations.\nWrites logs to: /Library/Logs/Microsoft/autoupdate.log",
        "type": "boolean"
      },
      "HowToCheck": {
        "title": "How to Check for Updates",
        "description": "Control how updates are checked for and handled.",
        "type": {
          "string": {
            "rangeList": [
              [
                "Manual",
                "No auto updates or checks: \"Manual\""
              ],
              [
                "AutomaticCheck",
                "Automatically check for updates: \"AutomaticCheck\""
              ],
              [
                "AutomaticDownload",
                "Automatically check for and install updates: \"AutomaticDownload\""
              ]
            ]
          }
        }
      },
      "IgnoreUIOpenAfterInstall": {
        "title": "Ignore UI Open After Install",
        "description": "Enable this option to prevent MAU UI from launching after install.",
        "type": "boolean"
      },
      "ManifestServer": {
        "title": "Manifest Server",
        "description": "Force Microsoft AutoUpdate to pull collateral using a custom server. This is good when enterprise wants to have strict control on which version of Office applications get installed. Ensure that a trailing slash is used when specifying the value as this is mandatory. This requires \"ChannelName\" to be set to \"Custom\".",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SendAllTelemetryEnabled": {
        "title": "Send Telemetry Data",
        "description": "Set to false to send minimal heartbeat data, no application usage, and no environment details. Replaced by \"AcknowledgedDataCollectionPolicy\" in MAU 4.12.",
        "type": "boolean"
      },
      "StartDaemonOnAppLaunch": {
        "title": "Start Daemon on App Launch",
        "description": "Enable this option to trigger the MAU Daemon when other Office applications are launched.",
        "type": "boolean"
      },
      "UpdateCache": {
        "title": "Update Cache Server",
        "description": "Force Microsoft AutoUpdate to pull update binaries from a custom server. This is good when internet bandwidth is limited. Ensure that a trailing slash is used when specifying the value as this is mandatory.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UpdateCheckFrequency": {
        "title": "Update Check Frequency",
        "description": "Change how often the Microsoft AutoUpdate daemon will look for updates. The default is 720 minutes (12 hrs). By reducing this value MAU will look for updates sooner.",
        "type": "integer"
      },
      "UpdateDeadline.ApplicationsForcedUpdateSchedule": {
        "title": "Update Deadline: Applications Forced Update Schedule",
        "description": "Configure a deadline for a specific update version at a specific date and time for each application.",
        "type": {
          "dictionary": {
            "/Applications/Company Portal.app": {
              "title": "Company Portal",
              "description": "Schedule an update for Company Portal.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "ForcedUpdateDate": {
                    "title": "Forced Update Date",
                    "description": "The date and time to force the update.",
                    "type": "date"
                  },
                  "ForcedUpdateVersion": {
                    "title": "Forced Update Version",
                    "description": "The version of the update.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "/Applications/Microsoft Defender ATP.app": {
              "title": "Microsoft Defender ATP",
              "description": "Schedule an update for Microsoft Defender ATP.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "ForcedUpdateDate": {
                    "title": "Forced Update Date",
                    "description": "The date and time to force the update.",
                    "type": "date"
                  },
                  "ForcedUpdateVersion": {
                    "title": "Forced Update Version",
                    "description": "The version of the update.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "/Applications/Microsoft Edge.app": {
              "title": "Microsoft Edge",
              "description": "Schedule an update for Microsoft Edge.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "ForcedUpdateDate": {
                    "title": "Forced Update Date",
                    "description": "The date and time to force the update.",
                    "type": "date"
                  },
                  "ForcedUpdateVersion": {
                    "title": "Forced Update Version",
                    "description": "The version of the update.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "/Applications/Microsoft Excel.app": {
              "title": "Microsoft Excel",
              "description": "Schedule an update for Microsoft Excel.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "XCEL15",
                            "2016 Volume License"
                          ],
                          [
                            "XCEL2019",
                            "2019 Volume License/Office 365"
                          ]
                        ]
                      }
                    }
                  },
                  "ForcedUpdateDate": {
                    "title": "Forced Update Date",
                    "description": "The date and time to force the update.",
                    "type": "date"
                  },
                  "ForcedUpdateVersion": {
                    "title": "Forced Update Version",
                    "description": "The version of the update.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "/Applications/Microsoft OneNote.app": {
              "title": "Microsoft OneNote",
              "description": "Schedule an update for Microsoft OneNote.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "ONMC15",
                            "2016 Volume License"
                          ],
                          [
                            "ONMC2019",
                            "2019 Volume License/Office 365"
                          ]
                        ]
                      }
                    }
                  },
                  "ForcedUpdateDate": {
                    "title": "Forced Update Date",
                    "description": "The date and time to force the update.",
                    "type": "date"
                  },
                  "ForcedUpdateVersion": {
                    "title": "Forced Update Version",
                    "description": "The version of the update.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "/Applications/Microsoft Outlook.app": {
              "title": "Microsoft Outlook",
              "description": "Schedule an update for Microsoft Outlook.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "OPIM15",
                            "2016 Volume License"
                          ],
                          [
                            "OPIM2019",
                            "2019 Volume License/Office 365"
                          ]
                        ]
                      }
                    }
                  },
                  "ForcedUpdateDate": {
                    "title": "Forced Update Date",
                    "description": "The date and time to force the update.",
                    "type": "date"
                  },
                  "ForcedUpdateVersion": {
                    "title": "Forced Update Version",
                    "description": "The version of the update.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "/Applications/Microsoft PowerPoint.app": {
              "title": "Microsoft PowerPoint",
              "description": "Schedule an update for Microsoft PowerPoint.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "PPT315",
                            "2016 Volume License"
                          ],
                          [
                            "PPT32019",
                            "2019 Volume License/Office 365"
                          ]
                        ]
                      }
                    }
                  },
                  "ForcedUpdateDate": {
                    "title": "Forced Update Date",
                    "description": "The date and time to force the update.",
                    "type": "date"
                  },
                  "ForcedUpdateVersion": {
                    "title": "Forced Update Version",
                    "description": "The version of the update.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "/Applications/Microsoft Remote Desktop.app": {
              "title": "Microsoft Remote Desktop",
              "description": "Schedule an update for Microsoft Remote Desktop.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "ForcedUpdateDate": {
                    "title": "Forced Update Date",
                    "description": "The date and time to force the update.",
                    "type": "date"
                  },
                  "ForcedUpdateVersion": {
                    "title": "Forced Update Version",
                    "description": "The version of the update.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "/Applications/Microsoft Teams.app": {
              "title": "Microsoft Teams",
              "description": "Schedule an update for Microsoft Teams.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "ForcedUpdateDate": {
                    "title": "Forced Update Date",
                    "description": "The date and time to force the update.",
                    "type": "date"
                  },
                  "ForcedUpdateVersion": {
                    "title": "Forced Update Version",
                    "description": "The version of the update.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "/Applications/Microsoft Word.app": {
              "title": "Microsoft Word",
              "description": "Schedule an update for Microsoft Word.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "MSWD15",
                            "2016 Volume License"
                          ],
                          [
                            "MSWD2019",
                            "2019 Volume License/Office 365"
                          ]
                        ]
                      }
                    }
                  },
                  "ForcedUpdateDate": {
                    "title": "Forced Update Date",
                    "description": "The date and time to force the update.",
                    "type": "date"
                  },
                  "ForcedUpdateVersion": {
                    "title": "Forced Update Version",
                    "description": "The version of the update.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "/Applications/OneDrive.app": {
              "title": "OneDrive",
              "description": "Schedule an update for OneDrive.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "ForcedUpdateDate": {
                    "title": "Forced Update Date",
                    "description": "The date and time to force the update.",
                    "type": "date"
                  },
                  "ForcedUpdateVersion": {
                    "title": "Forced Update Version",
                    "description": "The version of the update.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "/Applications/Skype for Business.app": {
              "title": "Skype for Business",
              "description": "Schedule an update for Skype for Business.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "ForcedUpdateDate": {
                    "title": "Forced Update Date",
                    "description": "The date and time to force the update.",
                    "type": "date"
                  },
                  "ForcedUpdateVersion": {
                    "title": "Forced Update Version",
                    "description": "The version of the update.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "/Library/Application Support/Microsoft/MAU2.0/Microsoft AutoUpdate.app": {
              "title": "Microsoft AutoUpdate",
              "description": "Schedule an update for Microsoft AutoUpdate.",
              "type": {
                "dictionary": {
                  "Application ID": {
                    "title": "Application ID",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "MSau03",
                            "AutoUpdate <= 4.6"
                          ],
                          [
                            "MSau04",
                            "AutoUpdate => 4.7"
                          ]
                        ]
                      }
                    }
                  },
                  "ForcedUpdateDate": {
                    "title": "Forced Update Date",
                    "description": "The date and time to force the update.",
                    "type": "date"
                  },
                  "ForcedUpdateVersion": {
                    "title": "Forced Update Version",
                    "description": "The version of the update.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UpdateDeadline.DaysBeforeForcedQuit": {
        "title": "Update Deadline: Days Before Forced Quit",
        "description": "Force quit applications and update X number of days after MAU first detects the update on each computer.",
        "type": "integer"
      },
      "UpdateDeadline.FinalCountDown": {
        "title": "Update Deadline: Final Countdown Timer",
        "description": "How many minutes is the final countdown timer once the update deadline is reached.",
        "type": "integer"
      },
      "UpdateDeadline.StartAutomaticUpdates": {
        "title": "Update Deadline: Start Automatic Updates",
        "description": "How many days in advance of the deadline that Automatic Download and Install mode begins. Temporarily overrides \"HowToCheck\" with \"AutomaticDownload\" until all updates are applied.",
        "type": "integer"
      },
      "UpdaterOptimization": {
        "title": "Updater Optimization",
        "description": "If you have a security agent like CrowdStrike installed and updates cause beachballs; Set UpdaterOptimization preference to \"CPU\" to prefer file-based delta updates (instead of binary deltas). The trade-off will be larger monthly updates.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.errorreporting": {
    "title": "Microsoft Error Reporting",
    "description": "Microsoft Error Reporting settings",
    "properties": {
      "IsAttachedEnabled": {
        "title": "IsAttachedEnabled",
        "description": "Disable attaching the file that caused the crash in the crash report. If you are working in a sensitive business it is recommended to set this to false.",
        "type": "boolean"
      },
      "IsStoreLastCrashEnabled": {
        "title": "IsStoreLastCrashEnabled",
        "description": "Will store the last crash report in the following path: ~/Library/Group Containers/UBF8T346G9.ms/MerpTempItems",
        "type": "boolean"
      },
      "SendCrashReportsEvenWithTelemetryDisabled": {
        "title": "SendCrashReportsEvenWithTelemetryDisabled",
        "description": "Disable upload of telemetry data in Crash Reports.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.office": {
    "title": "Microsoft Office",
    "description": "Microsoft Office settings",
    "properties": {
      "AllowVisualBasicToBindToSystem": {
        "title": "Allow Visual Basic to Bind to System",
        "description": "Determines if macros are allowed to use a DECLARE to bind to the system() OS API. This API allows macros to execute arbitrary external processes and pass them arbitrary data on the command line.",
        "type": "boolean"
      },
      "ConnectedOfficeExperiencesPreference": {
        "title": "Connected Experiences, Most",
        "description": "You can use this preference to control whether most connected experiences are available to your users.",
        "type": "boolean"
      },
      "DefaultsToLocalOpenSave": {
        "title": "'On My Mac' as default open and save location",
        "description": "When set to true will force the open/save panel to ‘On My Mac' instead of 'Online Locations'.",
        "type": "boolean"
      },
      "DiagnosticDataTypePreference": {
        "title": "Diagnostic Data",
        "description": "Diagnostic data is used to keep Office secure and up-to-date, detect, diagnose and remediate problems, and also make product improvements.",
        "type": {
          "string": {
            "rangeList": [
              [
                "BasicDiagnosticData",
                "Required Data Only"
              ],
              [
                "FullDiagnosticData",
                "Required and Optional Data"
              ],
              [
                "ZeroDiagnosticData",
                "Zero Diagnostic Data"
              ]
            ]
          }
        }
      },
      "DisableVisualBasicExternalDylibs": {
        "title": "Disable Visual Basic External Dylibs",
        "description": "Controls the ability for 3rd party vendors to use a DECLARE statement to bind a Visual Basic symbol name to an external procedure in the local OS.",
        "type": "boolean"
      },
      "DisableVisualBasicMacScript": {
        "title": "Disable macros from invoking the MacScript() Visual Basic API.",
        "description": "The DisableVisualBasicMacScript setting determines if macros are allowed to invoke the MacScript() Visual Basic API. This API allows macros to execute arbitrary processes via AppleScript by including \"do shell script ...\" in the AppleScript code.",
        "type": "boolean"
      },
      "DisableVisualBasicToBindToPopen": {
        "title": "Disable Visual Basic to Bind to Popen",
        "description": "Determines if macros are allowed to use a DECLARE to bind to the popen() OS API. This API allows macros to execute arbitrary external processes and pass them arbitrary data on the command line.",
        "type": "boolean"
      },
      "HasUserSeenEnterpriseFREDialog": {
        "title": "Has User Seen First Run Experience",
        "description": "Setting this option to TRUE will suppress the 'Your privacy options' dialog for Volume License users only.",
        "type": "boolean"
      },
      "InstallAutoUpdate": {
        "title": "Install AutoUpdate (MAU)",
        "description": "Uncheck (FALSE) to prevent the Office suite installer from installing AutoUpdate. (Not needed if you want to use default value of TRUE.)",
        "type": "boolean"
      },
      "InstallDefender": {
        "title": "Install Defender",
        "description": "Uncheck (FALSE) to prevent the Office suite installer from installing Defender. (Not needed if you want to use default value of TRUE.)",
        "type": "boolean"
      },
      "InstallExcel": {
        "title": "Install Excel",
        "description": "Uncheck (FALSE) to prevent the Office suite installer from installing Excel. (Not needed if you want to use default value of TRUE.)",
        "type": "boolean"
      },
      "InstallOneDrive": {
        "title": "Install OneDrive",
        "description": "Uncheck (FALSE) to prevent the Office suite installer from installing OneDrive. (Not needed if you want to use default value of TRUE.)",
        "type": "boolean"
      },
      "InstallOneNote": {
        "title": "Install OneNote",
        "description": "Uncheck (FALSE) to prevent the Office suite installer from installing OneNote. (Not needed if you want to use default value of TRUE.)",
        "type": "boolean"
      },
      "InstallOutlook": {
        "title": "Install Outlook",
        "description": "Uncheck (FALSE) to prevent the Office suite installer from installing Outlook. (Not needed if you want to use default value of TRUE.)",
        "type": "boolean"
      },
      "InstallPowerPoint": {
        "title": "Install PowerPoint",
        "description": "Uncheck (FALSE) to prevent the Office suite installer from installing PowerPoint. (Not needed if you want to use default value of TRUE.)",
        "type": "boolean"
      },
      "InstallTeams": {
        "title": "Install Teams",
        "description": "Uncheck (FALSE) to prevent the Office suite installer from installing Teams. (Not needed if you want to use default value of TRUE.)",
        "type": "boolean"
      },
      "InstallWord": {
        "title": "Install Word",
        "description": "Uncheck (FALSE) to prevent the Office suite installer from installing Word. (Not needed if you want to use default value of TRUE.)",
        "type": "boolean"
      },
      "OfficeActivationEmailAddress": {
        "title": "Activation Account",
        "description": "This value pre-fills the account authentication field for O365 users and sets the 'Belongs to' field in the About Box for both O365 and VL users.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OfficeAutoSignIn": {
        "title": "Auto Sign In",
        "description": "Automatically configure Office 365 mailbox on first launch for Outlook. Will suppress first run dialogs for Word, Excel, PowerPoint and OneNote. For new installations from the Mac App Store, will bypass the first run dialogs that ask users if they wish to purchase a new Office 365 subscription.",
        "type": "boolean"
      },
      "OfficeExperiencesAnalyzingContentPreference": {
        "title": "Connected Experiences: Analyzing Content",
        "description": "Connected experiences that analyze your content are experiences that use your Office content to provide you with design recommendations, editing suggestions, data insights, and similar features. For example, PowerPoint Designer or Researcher in Word.",
        "type": "boolean"
      },
      "OfficeExperiencesDownloadingContentPreference": {
        "title": "Connected Experiences: Downloading Content",
        "description": "Connected experiences that download online content are experiences that allow you to search and download online content including templates, images, 3D models, videos, and reference materials to enhance your documents. For example, Office templates or PowerPoint QuickStarter.",
        "type": "boolean"
      },
      "OptionalConnectedExperiencesPreference": {
        "title": "Connected Experiences, Optional",
        "description": "In addition to the connected experiences above, there are some optional connected experiences that you may choose to allow your users to access. For example, the LinkedIn features of the Resume Assistant in Word or the Weather Bar in Outlook, which uses MSN Weather.",
        "type": "boolean"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SendAllTelemetryEnabled": {
        "title": "Send Telemetry Data",
        "description": "Controls wether diagnostic data transmission is on or off.",
        "type": "boolean"
      },
      "ShowDocStageOnLaunch": {
        "title": "Show Document Selector",
        "description": "Show or Hide the Document gallery selector when office applications are launched.",
        "type": "boolean"
      },
      "ShowWhatsNewOnLaunch": {
        "title": "Show 'What's New' dialogs",
        "description": "A setting of FALSE supresses all \"What's new\" messages for all suite apps: Word, PowerPoint, Excel, Outlook and OneNote.",
        "type": "boolean"
      },
      "TermsAccepted1809": {
        "title": "Accept Office 2019 Use Terms",
        "description": "If you don't want your users to see the Office 2019 Use Terms dialog, and instead accept the terms on their behalf, set this value to TRUE.",
        "type": "boolean"
      },
      "VBAObjectModelIsTrusted": {
        "title": "VBA Object Model is Trusted",
        "description": "Controls the ability for Office to write to the VB project through the VBA object model.",
        "type": "boolean"
      },
      "VisualBasicEntirelyDisabled": {
        "title": "VisualBasic Entirely Disabled",
        "description": "If enabled, completely disables VBA.",
        "type": "boolean"
      },
      "VisualBasicMacroExecutionState": {
        "title": "VisualBasic macro security level",
        "description": "The VisualBasicMacroExecutionState1 setting controls whether macros are ever allowed to execute, and what the user experience is when opening\na file that contains a macro. By default, macros will only run after the user is presented with an alert when opening a file that contains a macro. The\nuser must make a choice whether to allow or deny macros for each individual file, each time that file is opened.",
        "type": {
          "string": {
            "rangeList": [
              [
                "DisabledWithoutWarnings",
                "Disabled: Without Warnings"
              ],
              [
                "DisabledWithWarnings",
                "Disabled: With Warnings"
              ],
              [
                "EnabledWithoutWarnings",
                "Enabled: Without Warnings"
              ]
            ]
          }
        }
      },
      "kCUIThemePreferencesThemeKeyPath": {
        "title": "Theme",
        "description": "Set the theme used by Microsoft Office.",
        "type": "integer"
      },
      "msoridDefaultMinimumSeverity": {
        "title": "Minimum severity for authentication requests logging",
        "description": "Set value to 200 if 'logging for authentication requests' (msoridEnableLogging) is enabled.",
        "type": "integer"
      },
      "msoridEnableLogging": {
        "title": "Enable logging for authentication requests",
        "description": "Increase logging levels for authentication requests. Enable Minimum Severity (msoridDefaultMinimumSeverity) option if this key is enabled.",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.onenote.mac": {
    "title": "Microsoft OneNote",
    "description": "Microsoft OneNote settings",
    "properties": {
      "PII_And_Intelligent_Services_Preference": {
        "title": "Suppress 'Use Intelligent Services' dialog (2/2)",
        "description": "Suppress the \"Use Intelligent Services?\" pop-up dialog and auto-accept the terms in 16.17 through 16.27.",
        "type": "boolean"
      },
      "SendASmileEnabled": {
        "title": "Send A Smile Enabled",
        "description": "This key when set to false will deactivate the ability for users to use the \"Smile\" feature to send feedback to Microsoft.",
        "type": "boolean"
      },
      "SendAllTelemetryEnabled": {
        "title": "Send Telemetry Data",
        "description": "Set to FALSE to send minimal heartbeat data, no application usage, and no environment details.",
        "type": "boolean"
      },
      "SendCrashReportsEvenWithTelemetryDisabled": {
        "title": "Send Crash Reports even with Telemetry Disabled",
        "description": "Sends crash reports even if telemetry is disabled. Will only be evaluated if 'Send Telemetry Data' is FALSE.",
        "type": "boolean"
      },
      "SignInOptions": {
        "title": "Sign In Options",
        "description": "Prevent users from signing in to any O365 service. This has the added effect of making sure users store no data online via microsoft servers.",
        "type": "integer"
      },
      "kFREEnterpriseTelemetryInfoKey": {
        "title": "Suppress Privacy and Services dialog",
        "description": "Suppresses a temporary Privacy and Services Update dialog in 16.27 ONLY. (Was previously used for a similar purpose in 16.13.1 but the key was recycled.)",
        "type": "boolean"
      },
      "kFREIntelligenceServicesConsentV2Key": {
        "title": "Suppress 'Use Intelligent Services' dialog (1/2)",
        "description": "Suppress the \"Use Intelligent Services?\" pop-up dialog and auto-accept the terms in 16.17 through 16.27.",
        "type": "boolean"
      },
      "kFRETelemetryConsentKey": {
        "title": "Suppress 'Connected Services' dialog",
        "description": "Disable the \"Connected Services\" dialog for MSA-based (personal) accounts.",
        "type": "boolean"
      },
      "kSubUIAppCompletedFirstRunSetup1507": {
        "title": "First Run Setup Completed",
        "description": "Controls the original \"What's New\" dialog and Office 365 activation prompt on first launch. Replaced by 'OfficeAutoSignIn' in the main Office profile starting in version 16.17 and should not be used for Office 2019.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.rdc.macos": {
    "title": "Microsoft Remote Desktop",
    "description": "Microsoft Remote Desktop settings",
    "properties": {
      "ClientSettings.DisableTelemetryUpload": {
        "title": "Disable Telemetry Upload",
        "description": "Disable upload of telemetry data.",
        "type": "boolean"
      },
      "ClientSettings.EnforceCredSSPSupport": {
        "title": "Enforce Cred SSP Support",
        "description": "Support for all possible values of the \"EnableCredSspSupport\" and \"Authentication Level\" RDP file settings if this key is set to 0.",
        "type": {
          "string": {
            "rangeList": [
              [
                "0",
                "0"
              ]
            ]
          }
        }
      },
      "ClientSettings.FirstRunExperienceLaunchedVersion": {
        "title": "Disable First Run Dialog",
        "description": "Disable the first run dialog \"Help us make your experience better\".",
        "type": {
          "string": {
            "rangeList": [
              [
                "1",
                "Disable"
              ]
            ]
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.microsoft.wdav": {
    "title": "Microsoft Defender for Endpoint",
    "description": "Microsoft Defender for Endpoint settings",
    "properties": {
      "antivirusEngine": {
        "title": "Antivirus engine preferences",
        "description": "Manages the preferences of the antivirus component of Microsoft Defender for Endpoint.",
        "type": {
          "dictionary": {
            "allowedThreats": {
              "title": "Allowed threats",
              "description": "Specify threats by name that are not blocked by Defender for Endpoint on Mac. These threats will be allowed to run.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "disallowedThreatActions": {
              "title": "Disallowed threat actions",
              "description": "Restricts the actions that the local user of a device can take when threats are detected. The actions included in this list are not displayed in the user interface.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": [
                        [
                          "allow",
                          "Allow Threats (restricts users from allowing threats)"
                        ],
                        [
                          "restore",
                          "Restore Threats (restricts users from restoring threats from the quarantine)"
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "enableFileHashComputation": {
              "title": "Configure file hash computation feature",
              "description": "When this feature is enabled, Defender for Endpoint will compute hashes for files it scans.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "disabled",
                      "Disabled"
                    ],
                    [
                      "enabled",
                      "Enabled"
                    ]
                  ]
                }
              }
            },
            "enforcementLevel": {
              "title": "Enforcement level for antivirus engine",
              "description": "Enforcement level of antivirus engine. On-demand: Files are scanned only on demand; Passive: Same as on-demand, but also security intelligence updates are enabled, and the status menu icon is hidden; Real-time: Scan files as they are accessed.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "on_demand",
                      "On-demand"
                    ],
                    [
                      "passive",
                      "Passive"
                    ],
                    [
                      "real_time",
                      "Real-time"
                    ]
                  ]
                }
              }
            },
            "exclusions": {
              "title": "Scan exclusions",
              "description": "Specify entities excluded from being scanned.",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "$type": {
                        "title": "Type",
                        "description": "Specify content excluded from being scanned by type.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "excludedPath",
                                "Path"
                              ],
                              [
                                "excludedFileExtension",
                                "File Extension"
                              ],
                              [
                                "excludedFileName",
                                "Filename"
                              ]
                            ]
                          }
                        }
                      },
                      "extension": {
                        "title": "File Extension",
                        "description": "Specify content excluded from being scanned by file extension.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "isDirectory": {
                        "title": "Directory",
                        "description": "Indicate if the path property refers to a file or directory.",
                        "type": "boolean"
                      },
                      "name": {
                        "title": "Process",
                        "description": "Specify a process for which all file activity is excluded from scanning. The process can be specified either by its name (e.g. cat) or full path (e.g. /bin/cat).",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "path": {
                        "title": "Path",
                        "description": "Specify content excluded from being scanned by full file path.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "exclusionsMergePolicy": {
              "title": "Exclusion merge policy",
              "description": "This setting can be used to restrict local users from defining their own exclusions.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "merge",
                      "Merge"
                    ],
                    [
                      "admin_only",
                      "Admin Only"
                    ]
                  ]
                }
              }
            },
            "maximumOnDemandScanThreads": {
              "title": "Degree of parallelism for on-demand scans",
              "description": "The number of threads used to perform the scan.",
              "type": "integer"
            },
            "scanAfterDefinitionUpdate": {
              "title": "Run a scan after definitions are updated",
              "description": "Specifies whether to start a process scan after new security intelligence updates are downloaded on the device.",
              "type": "boolean"
            },
            "scanArchives": {
              "title": "Scan archives (on-demand antivirus scans only)",
              "description": "Specifies whether to scan archives during on-demand antivirus scans.",
              "type": "boolean"
            },
            "scanHistoryMaximumItems": {
              "title": "Maximum number of items in the antivirus scan history",
              "description": "The maximum number of entries to keep in the scan history.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "scanResultsRetentionDays": {
              "title": "Antivirus scan history retention",
              "description": "The number of days (1-180) that results are retained in the scan history on the device.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "threatTypeSettings": {
              "title": "Threat type settings",
              "description": "Specify how certain threat types are handled.",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "key": {
                        "title": "Threat Type",
                        "description": "Specify threat types.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "potentially_unwanted_application",
                                "Potentially Unwanted Application"
                              ],
                              [
                                "archive_bomb",
                                "Archive Bomb"
                              ]
                            ]
                          }
                        }
                      },
                      "value": {
                        "title": "Action",
                        "description": "Specify what action to take when a threat of the type specified in the preceding section is detected. Choose from the following options:\nAudit: your device is not protected against this type of threat, but an entry about the threat is logged.\nBlock: your device is protected against this type of threat and you are notified in the user interface and the security console.\nOff: your device is not protected against this type of threat and nothing is logged.",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "audit",
                                "Audit"
                              ],
                              [
                                "block",
                                "Block"
                              ],
                              [
                                "off",
                                "Off"
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "threatTypeSettingsMergePolicy": {
              "title": "Threat type settings merge policy",
              "description": "Specify the merge policy for threat type settings. This can be a combination of administrator-defined and user-defined settings (merge) or only administrator-defined settings (admin_only). This setting can be used to restrict local users from defining their own settings for different threat types.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "merge",
                      "Merge"
                    ],
                    [
                      "admin_only",
                      "Admin Only"
                    ]
                  ]
                }
              }
            }
          }
        }
      },
      "cloudService": {
        "title": "Cloud-delivered protection preferences",
        "description": "Configure the cloud-driven protection features of Microsoft Defender for Endpoint.",
        "type": {
          "dictionary": {
            "automaticDefinitionUpdateEnabled": {
              "title": "Enable / disable automatic security intelligence updates",
              "description": "Determines whether security intelligence updates are installed automatically.",
              "type": "boolean"
            },
            "automaticSampleSubmission": {
              "title": "Enable / disable automatic sample submissions",
              "description": "Determines whether suspicious samples are sent to Microsoft.",
              "type": "boolean"
            },
            "cloudBlockLevel": {
              "title": "Configure cloud block level",
              "description": "Determines how aggressive Defender for Endpoint will be in blocking and scanning suspicious files.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "normal",
                      "Normal: The default blocking level"
                    ],
                    [
                      "moderate",
                      "Moderate: Delivers verdict only for high confidence detections"
                    ],
                    [
                      "high",
                      "High: Aggressively blocks unknown files while optimizing for performance (greater chance of blocking non-harmful files)"
                    ],
                    [
                      "high_plus",
                      "High Plus: Aggressively blocks unknown files and applies additional protection measures (might impact client device performance)"
                    ],
                    [
                      "zero_tolerance",
                      "Zero Tolerance: Blocks all unknown programs"
                    ]
                  ]
                }
              }
            },
            "diagnosticLevel": {
              "title": "Diagnostic collection level",
              "description": "Determines the level of diagnostics sent by Microsoft Defender for Endpoint to Microsoft.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "optional",
                      "Optional"
                    ],
                    [
                      "required",
                      "Required"
                    ]
                  ]
                }
              }
            },
            "enabled": {
              "title": "Enable / disable cloud-delivered protection",
              "description": "Specify whether to enable cloud-delivered protection on the device or not.",
              "type": "boolean"
            }
          }
        }
      },
      "deviceControl": {
        "title": "Device control policy",
        "description": "Device control can be used to customize the URL target for notifications raised by device control, and allow or block removable devices.",
        "type": {
          "dictionary": {
            "navigationTarget": {
              "title": "Customize URL target for notifications raised by device control",
              "description": "Configure the URL that is opened when end users click the notification shown when a device control policy is enforced.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "removableMediaPolicy": {
              "title": "Allow or block removable devices",
              "description": "Restrict access to removable media.",
              "type": {
                "dictionary": {
                  "enforcementLevel": {
                    "title": "Policy enforcement level",
                    "description": "Set the removable media enforcement level.",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "audit",
                            "Audit: A notification is displayed to the user, however the device can still be used."
                          ],
                          [
                            "block",
                            "Block: A notification is displayed to the user, and the device cannot be used."
                          ]
                        ]
                      }
                    }
                  },
                  "permission": {
                    "title": "Default permission level",
                    "description": "The default permission level for devices that do not match anything else in the policy.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": [
                              [
                                "none",
                                "None"
                              ],
                              [
                                "read",
                                "Read"
                              ],
                              [
                                "write",
                                "Write"
                              ],
                              [
                                "execute",
                                "Execute"
                              ]
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "vendors": {
                    "title": "Vendors",
                    "description": "Restrict removable media by vendor.",
                    "type": {
                      "dictionary": {
                        "{{key}}": {
                          "title": "Vendor ID",
                          "type": {
                            "string": {
                              "rangeList": []
                            }
                          }
                        },
                        "{{value}}": {
                          "title": "Vendor Details",
                          "type": {
                            "dictionary": {
                              "permission": {
                                "title": "Permission level",
                                "type": {
                                  "array": [
                                    {
                                      "string": {
                                        "rangeList": [
                                          [
                                            "none",
                                            "None"
                                          ],
                                          [
                                            "read",
                                            "Read"
                                          ],
                                          [
                                            "write",
                                            "Write"
                                          ],
                                          [
                                            "execute",
                                            "Execute"
                                          ]
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "products": {
                                "title": "Products",
                                "type": {
                                  "dictionary": {
                                    "{{key}}": {
                                      "title": "Product ID",
                                      "type": {
                                        "string": {
                                          "rangeList": []
                                        }
                                      }
                                    },
                                    "{{value}}": {
                                      "title": "Product Details",
                                      "type": {
                                        "dictionary": {
                                          "permission": {
                                            "title": "Permission level",
                                            "type": {
                                              "array": [
                                                {
                                                  "string": {
                                                    "rangeList": [
                                                      [
                                                        "none",
                                                        "None"
                                                      ],
                                                      [
                                                        "read",
                                                        "Read"
                                                      ],
                                                      [
                                                        "write",
                                                        "Write"
                                                      ],
                                                      [
                                                        "execute",
                                                        "Execute"
                                                      ]
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "serialNumbers": {
                                            "title": "Serial Numbers",
                                            "type": {
                                              "dictionary": {
                                                "{{key}}": {
                                                  "title": "Serial Number",
                                                  "type": {
                                                    "string": {
                                                      "rangeList": []
                                                    }
                                                  }
                                                },
                                                "{{value}}": {
                                                  "title": "Serial Number Details",
                                                  "type": {
                                                    "array": [
                                                      {
                                                        "string": {
                                                          "rangeList": [
                                                            [
                                                              "none",
                                                              "None"
                                                            ],
                                                            [
                                                              "read",
                                                              "Read"
                                                            ],
                                                            [
                                                              "write",
                                                              "Write"
                                                            ],
                                                            [
                                                              "execute",
                                                              "Execute"
                                                            ]
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "edr": {
        "title": "Endpoint detection and response preferences",
        "description": "Manage the preferences of the endpoint detection and response (EDR) component.",
        "type": {
          "dictionary": {
            "tags": {
              "title": "Device tags",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "key": {
                        "title": "Type",
                        "description": "Specifies the type of tag",
                        "type": {
                          "string": {
                            "rangeList": [
                              [
                                "GROUP",
                                "Group"
                              ]
                            ]
                          }
                        }
                      },
                      "value": {
                        "title": "Value",
                        "description": "Specifies the value of tag",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "tamperProtection": {
        "title": "Tamper protection",
        "description": "Tamper protection helps prevent unauthorized removal of Microsoft Defender for Endpoint.",
        "type": {
          "dictionary": {
            "enforcementLevel": {
              "title": "Enfocement level",
              "description": "Specify the enforcement level for tamper protection.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "disabled",
                      "Disabled: Tamper protection is completely off"
                    ],
                    [
                      "audit",
                      "Audit: Tampering operations are logged, but not blocked"
                    ],
                    [
                      "block",
                      "Block: Tamper protection is on, tampering operations are blocked"
                    ]
                  ]
                }
              }
            }
          }
        }
      },
      "userInterface": {
        "title": "User interface preferences",
        "description": "Manage the preferences for the user interface.",
        "type": {
          "dictionary": {
            "consumerExperience": {
              "title": "Control sign-in to consumer version of Microsoft Defender",
              "description": "Specify whether users can sign into the consumer version of Microsoft Defender.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "enabled",
                      "Enabled"
                    ],
                    [
                      "disabled",
                      "Disabled"
                    ]
                  ]
                }
              }
            },
            "hideStatusMenuIcon": {
              "title": "Hide status menu icon",
              "description": "Specify whether to hide the status menu icon in the top-right corner of the screen.",
              "type": "boolean"
            },
            "userInitiatedFeedback": {
              "title": "Show option to send feedback",
              "description": "Specify whether users can submit feedback to Microsoft by going to Help > Send Feedback.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "enabled",
                      "Enabled"
                    ],
                    [
                      "disabled",
                      "Disabled"
                    ]
                  ]
                }
              }
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.papercut.printdeploy.client": {
    "title": "PaperCut Print Deploy",
    "description": "PaperCut Print Deploy Settings",
    "properties": {
      "server_host": {
        "title": "Server Host",
        "description": "FQDN taken from inside the square brackets in the file name of the client .dmg.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "server_port": {
        "title": "Server Port",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "server_scheme": {
        "title": "Server Scheme",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "skip_dpm": {
        "title": "Skip Direct Print Monitor Tool",
        "type": "boolean"
      },
      "strict_ssl": {
        "title": "Strict SSL",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.pratikkumar.airserver-mac": {
    "title": "AirServer",
    "description": "AirServer settings",
    "properties": {
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SUAllowsAutomaticUpdates": {
        "title": "Automatic Update Install Prompt",
        "description": "Controls the automatic update install prompt. When enabled, presents users with the option to allow automatic download and install of available updates. If disabled, disallows automatic updates and requires manual installation every time.",
        "type": "boolean"
      },
      "SUAutomaticallyUpdate": {
        "title": "Enable Automatic Silent Updates",
        "description": "Controls automatic silent updates. If enabled, users will not be informed about updates and updates will be silently installed when the app quits.",
        "type": "boolean"
      },
      "SUEnableAutomaticChecks": {
        "title": "Enable Automatic Update Checks",
        "description": "Controls automatic update checks.",
        "type": "boolean"
      },
      "SUFeedURL": {
        "title": "Sparkle Feed URL",
        "description": "Setting this to a non-existent URL will disable the ability for users to manually check for updates. Useful when you intend to use your own software distribution mechanism to deploy updates.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SUScheduledCheckInterval": {
        "title": "Automatic Update Check Interval",
        "description": "Controls the automatic update check interval. The default is 1 day (86400 seconds). Setting to 0 disables updates.",
        "type": "integer"
      },
      "SUSendProfileInfo": {
        "title": "SUSendProfileInfo",
        "description": "When running software update checks, submit anonymous computer profile data to AirServer.",
        "type": "boolean"
      },
      "UseLionStyleFullscreen": {
        "title": "UseLionStyleFullscreen",
        "description": "Enable this setting if you want to use the native macOS fullscreen mode - slower.",
        "type": "boolean"
      },
      "UserDeviceName": {
        "title": "UserDeviceName",
        "description": "Use this field to override the name of the computer that appears on the AirPlay network.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UserLosslessAudioReceiverName": {
        "title": "UserLosslessAudioReceiverName",
        "description": "Only enable this preference when you wish to set a custom name for the device running AirServer in the AirPlay device list.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "autoLaunch": {
        "title": "autoLaunch",
        "description": "Have AirServer launch on system startup.",
        "type": "boolean"
      },
      "com.airserverapp.PasswordType": {
        "title": "com.airserverapp.PasswordType",
        "description": "Choose authentication method when connecting to AirServer. While a Fixed Password is an available setting, it's not possible to define this password via profile.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "com.airserverapp.SoftwareDecoderOnly": {
        "title": "com.airserverapp.SoftwareDecoderOnly",
        "description": "Enable this setting if your AirPlay device regularly freezes or if you notice green artifacts when using AirPlay mirroring. This is common on older Macs that do not properly support hardware-accelerated video encoding.",
        "type": "boolean"
      },
      "com.airserverapp.alwaysOnTop": {
        "title": "com.airserverapp.alwaysOnTop",
        "description": "Enable this setting if you want AirServer windows to be on top of all other windows.",
        "type": "boolean"
      },
      "com.airserverapp.audioBufferSize2": {
        "title": "com.airserverapp.audioBufferSize2",
        "description": "Use this setting to tweak multi-room audio sync when streaming music from iTunes.",
        "type": "real"
      },
      "com.airserverapp.dualAirplay": {
        "title": "Enable Dual-Airplay Device",
        "description": "This option creates a second AirPort Expresss-like audio receiver suffixed with an Ex. Streaming music to this endpoint will force the iOS device to stream your music in lossless quality. Enabling this setting can also allow you to watch a video on your iOS device and send only the audiostream to the AirServer.",
        "type": "boolean"
      },
      "com.airserverapp.linkMasterVolume": {
        "title": "com.airserverapp.linkMasterVolume",
        "description": "If enabled, changing the volume on your iOS device will change the volume of your preferred output sound device; otherwise AirServer will lower the streaming music volume.",
        "type": "boolean"
      },
      "com.airserverapp.mirroringOptimizedFor2": {
        "title": "com.airserverapp.mirroringOptimizedFor2",
        "description": "Here you can set the mirroring resolution AirServer provides to your iOS device. 'Retina' is recommended for all users, but if you are having connection problems, try the 1080p option. Do not enable this preference if you wish use the default 'Retina - High Quality' resolution setting.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "com.airserverapp.slowNetwork": {
        "title": "com.airserverapp.slowNetwork",
        "description": "Enabling this setting will lower the mirroring quality by half but uses four times less bandwidth.",
        "type": "boolean"
      },
      "showInDock": {
        "title": "showInDock",
        "description": "Use this setting to toggle between running AirServer in the Dock and in the menu bar.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.profilecreator.developer.PopUpButton": {
    "title": "Developer: PopUpButton",
    "description": "Developer: PopUpButton settings",
    "properties": {
      "PopUpButton01": {
        "title": "PopUpButton 01: Standard PopUpButton",
        "description": "PopUpButton.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PopUpButton02": {
        "title": "PopUpButton 02: ComboBox",
        "description": "Both TextField and PopUpButton.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.profilecreator.developer.TextFieldFloat": {
    "title": "Developer: TextField Float",
    "description": "Developer: TextField Float settings",
    "properties": {
      "TextFieldFloat01": {
        "title": "TextFieldFloat 01: Standard Float",
        "description": "TextField Float.",
        "type": "float"
      },
      "TextFieldFloat02": {
        "title": "TextFieldFloat 02: Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Title",
        "description": "TextField Float with a long title.",
        "type": "float"
      },
      "TextFieldFloat03": {
        "title": "TextFieldFloat 03: Long Description",
        "description": "TextFieldFloat with a long long long long long long long long long long long long long long long long long long long long long long long long long description.",
        "type": "float"
      },
      "TextFieldFloat04": {
        "title": "TextFieldFloat 04: Placeholder Value",
        "description": "TextFieldFloat with a placeholder value.",
        "type": "float"
      },
      "TextFieldFloat05": {
        "title": "TextFieldFloat 05: Default Value",
        "description": "TextFieldFloat with a default value.",
        "type": "float"
      },
      "TextFieldFloat06": {
        "title": "TextFieldFloat06",
        "description": "TextFieldFloat with no title.",
        "type": "float"
      },
      "TextFieldFloat07": {
        "title": "",
        "description": "TextFieldFloat with an empty title.",
        "type": "float"
      },
      "TextFieldFloat08": {
        "title": "TextFieldFloat 08: No Description",
        "type": "float"
      },
      "TextFieldFloat09": {
        "title": "TextFieldFloat 09: Empty Description",
        "description": "",
        "type": "float"
      },
      "TextFieldFloat10": {
        "title": "TextFieldFloat 10: Max Value",
        "description": "TextFieldFloat with a max value of: 99",
        "type": "float"
      },
      "TextFieldFloat11": {
        "title": "TextFieldFloat 11: Min Value",
        "description": "TextFieldFloat with a min value of: 1",
        "type": "float"
      },
      "TextFieldFloat12": {
        "title": "TextFieldFloat 12: Min and Max Value",
        "description": "TextFieldFloat with a min value of: 1 and max value of: 99",
        "type": "float"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.profilecreator.developer.TextFieldInteger": {
    "title": "Developer: TextField Integer",
    "description": "Developer: TextField Integer settings",
    "properties": {
      "TextFieldInteger01": {
        "title": "TextFieldInteger 01: Standard Integer",
        "description": "TextField Integer.",
        "type": "integer"
      },
      "TextFieldInteger02": {
        "title": "TextFieldInteger 02: Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Title",
        "description": "TextField Integer with a long title.",
        "type": "integer"
      },
      "TextFieldInteger03": {
        "title": "TextFieldInteger 03: Long Description",
        "description": "TextFieldInteger with a long long long long long long long long long long long long long long long long long long long long long long long long long description.",
        "type": "integer"
      },
      "TextFieldInteger04": {
        "title": "TextFieldInteger 04: Placeholder Value",
        "description": "TextFieldInteger with a placeholder value.",
        "type": "integer"
      },
      "TextFieldInteger05": {
        "title": "TextFieldInteger 05: Default Value",
        "description": "TextFieldInteger with a default value.",
        "type": "integer"
      },
      "TextFieldInteger06": {
        "title": "TextFieldInteger06",
        "description": "TextFieldInteger with no title.",
        "type": "integer"
      },
      "TextFieldInteger07": {
        "title": "",
        "description": "TextFieldInteger with an empty title.",
        "type": "integer"
      },
      "TextFieldInteger08": {
        "title": "TextFieldInteger 08: No Description",
        "type": "integer"
      },
      "TextFieldInteger09": {
        "title": "TextFieldInteger 09: Empty Description",
        "description": "",
        "type": "integer"
      },
      "TextFieldInteger10": {
        "title": "TextFieldInteger 10: Max Value",
        "description": "TextFieldInteger with a max value of: 99",
        "type": "integer"
      },
      "TextFieldInteger11": {
        "title": "TextFieldInteger 11: Min Value",
        "description": "TextFieldInteger with a min value of: 1",
        "type": "integer"
      },
      "TextFieldInteger12": {
        "title": "TextFieldInteger 12: Min and Max Value",
        "description": "TextFieldInteger with a min value of: 1 and max value of: 99",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.profilecreator.developer.deprecated": {
    "title": "Developer: Deprecated",
    "description": "Developer: Deprecated settings",
    "properties": {
      "Deprecated01": {
        "title": "Deprecated 01: Standard",
        "description": "Standard TextField.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Deprecated02": {
        "title": "Deprecated 02: Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Title",
        "description": "TextField with a long title.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.profilecreator.developer.exclude": {
    "title": "Developer: Exclude",
    "description": "Developer: Exclude settings",
    "properties": {
      "Exclude00": {
        "title": "Exclude 00: Settings",
        "description": "Exclude condition target.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Exclude01": {
        "title": "Exclude 01: Always if Item01 is selected.",
        "description": "Exclude always if Item01 is selected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Exclude02": {
        "title": "Exclude 02: Always if Item02 or Item03 is selected.",
        "description": "Exclude always if Item02 or Item03 is selected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Exclude03": {
        "title": "Exclude 03: Always if Item04 is NOT selected.",
        "description": "Exclude always if Item04 is NOT selected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Exclude04": {
        "title": "Exclude 04: Always if Item05 or Item06 is NOT selected.",
        "description": "Exclude always if Item05 or Item06 is NOT selected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.profilecreator.developer.note": {
    "title": "Developer: Note",
    "description": "Developer: Note settings",
    "properties": {
      "Note01": {
        "title": "Note 01: TextField",
        "description": "TextField Note.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.profilecreator.developer.require": {
    "title": "Developer: Require",
    "description": "Developer: Require settings",
    "properties": {
      "Require00": {
        "title": "Require 00: Settings",
        "description": "Require condition target.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Require01": {
        "title": "Require 01: Always",
        "description": "Require always.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Require02": {
        "title": "Require 02: Always If Item01 is selected",
        "description": "Require always if Item01 is selected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Require03": {
        "title": "Require 03: Always If Item02 or Item03 is selected",
        "description": "Require always if Item02 or Item03 is selected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Require04": {
        "title": "Require 04: Always If Item04 is NOT selected",
        "description": "Require always if Item04 is NOT selected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Require05": {
        "title": "Require 05: Always If Item05 or Item06 is NOT selected",
        "description": "Require always if Item05 or Item06 is NOT selected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Require06": {
        "title": "Require 06: Push",
        "description": "Require push.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Require07": {
        "title": "Require 07: Push If Item01 is selected",
        "description": "Require push if Item01 is selected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Require08": {
        "title": "Require 08: Push If Item02 or Item03 is selected",
        "description": "Require push if Item02 or Item03 is selected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Require09": {
        "title": "Require 09: Push If Item04 is NOT selected",
        "description": "Require push if Item04 is NOT selected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Require10": {
        "title": "Require 10: Push If Item05 or Item06 is NOT selected",
        "description": "Require push if Item05 or Item06 is NOT selected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.profilecreator.developer.slider": {
    "title": "Developer: Slider",
    "description": "Developer: Slider settings",
    "properties": {
      "Slider01": {
        "title": "Slider 01: Range List 2 Items",
        "description": "Slider with a range list of two items: [5.0, 10.0].",
        "type": "float"
      },
      "Slider02": {
        "title": "Slider 02: Range List 3 Items and Titles",
        "description": "Slider with a range list of three items: [5.0, 10.0, 15.0] and titles.",
        "type": "float"
      },
      "Slider03": {
        "title": "Slider 03: Range List 4 Items",
        "description": "Slider with a range list of four items: [5.0, 6.0, 17.0003212, 20.0].",
        "type": "float"
      },
      "Slider04": {
        "title": "Slider 04: Range List 5 Items and Mixed Titles",
        "description": "Slider with a range list of five items: [0.01, 0.02, 0.13, 0.23, 0.92] and mixed titles.",
        "type": "float"
      },
      "Slider05": {
        "title": "Slider 05: Range List 20 Items",
        "description": "Slider with a range list of twenty items: [1.0...1.19].",
        "type": "float"
      },
      "Slider06": {
        "title": "Slider 06: Range List 20 Items and Short Titles",
        "description": "Slider with a range list of twenty items: [1.0...1.19] with short titles.",
        "type": "float"
      },
      "Slider07": {
        "title": "Slider 07: Range List 20 Items and Medium Titles",
        "description": "Slider with a range list of twenty items: [1.0...1.19] with medium titles.",
        "type": "float"
      },
      "Slider08": {
        "title": "Slider 08: Range List 20 Items and Long Titles",
        "description": "Slider with a range list of twenty items: [1.0...1.19] with long titles.",
        "type": "float"
      },
      "Slider09": {
        "title": "Slider 09: Range List 20 Items and Too Long Titles",
        "description": "Slider with a range list of twenty items: [1.0...1.19] with too long titles.",
        "type": "float"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.profilecreator.developer.substitution_variables": {
    "title": "Developer: Substitution Variables",
    "description": "Developer: Substitution Variables settings",
    "properties": {
      "SubstitutionVariables01": {
        "title": "Substitution Variables 01: TextField",
        "description": "TextField with substitution variables: <<serial>>",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.profilecreator.developer.tableview": {
    "title": "Developer: TableView",
    "description": "Developer: TableView settings",
    "properties": {
      "TableView01": {
        "title": "TableView 01: Array of Strings",
        "description": "TableView representing an array of strings.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "TableView02": {
        "title": "TableView 02: Array of Strings with a title",
        "description": "TableView representing an array of strings with a title.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "TableView03": {
        "title": "TableView 03: Array of Strings with a title",
        "description": "TableView representing an array of integers with a title.",
        "type": {
          "array": [
            "integer"
          ]
        }
      },
      "TableView04": {
        "title": "TableView 04: Array of Strings with a title",
        "description": "TableView representing an array of strings as PopUp Buttons.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "TableView05": {
        "title": "TableView 05: Array of Strings with a title",
        "description": "TableView representing an array of strings as ComboBoxes.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "TableView06": {
        "title": "TableView 06: Array of Booleans",
        "description": "TableView representing an array of booleans.",
        "type": {
          "array": [
            "boolean"
          ]
        }
      },
      "TableView07": {
        "title": "TableView 07: Array of Dictionaries with included array",
        "description": "TableView representing an array of dictionaries which in turn has an array.",
        "type": {
          "array": [
            {
              "dictionary": {
                "ArrayPopUp": {
                  "title": "ArrayPopUp",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "ArrayString": {
                  "title": "ArrayString",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "Title": {
                  "title": "Title",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.profilecreator.developer.textfield": {
    "title": "Developer: TextField",
    "description": "Developer: TextField settings",
    "properties": {
      "TextField01": {
        "title": "TextField 01: Standard",
        "description": "Standard TextField.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TextField02": {
        "title": "TextField 02: Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Long Title",
        "description": "TextField with a long title.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TextField03": {
        "title": "TextField 03: Long Description",
        "description": "TextField with a long long long long long long long long long long long long long long long long long long long long long long long long long description.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TextField04": {
        "title": "TextField 04: Placeholder Value",
        "description": "TextField with a placeholder value.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TextField05": {
        "title": "TextField 05: Default Value",
        "description": "TextField with a default value.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TextField06": {
        "title": "TextField06",
        "description": "TextField with no title.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TextField07": {
        "title": "",
        "description": "TextField with an empty title.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TextField08": {
        "title": "TextField 08: No Description",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TextField09": {
        "title": "TextField 09: Empty Description",
        "description": "",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TextField10": {
        "title": "TextField 10: Format",
        "description": "TextField with a required format of a MAC address: ^([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})$",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TextField11": {
        "title": "TextField 11: Unit Definition",
        "description": "TextField with a unit",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.secondsonconsulting.baseline": {
    "title": "Baseline by Second Son Consulting",
    "description": "Baseline by Second Son Consulting Configuration",
    "properties": {
      "BailOutFile": {
        "title": "Bail Out File",
        "description": "Define a file path. If this file exists at any point while Baseline is running, Baseline will exit and will not process additional items.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BlurScreen": {
        "title": "Blur Screen",
        "description": "This setting controls whether Baseline uses the SwiftDialog --blurscreen feature. Default is true. If you set to false, consider using --ontop in your DialogListOptions key",
        "type": "boolean"
      },
      "Button1Enabled": {
        "title": "Button 1 Enabled",
        "description": "This setting enables SwiftDialog \"Button 1\" (the OK button) on the Baseline List View. This allows users to dismiss the list view and continue working while Baseline runs. By default this button is disabled.",
        "type": "boolean"
      },
      "CleanupAfterUse": {
        "title": "Cleanup After Use",
        "description": "This setting controls whether Baseline deletes it's install directory after use: /usr/local/Baseline.",
        "type": "boolean"
      },
      "DialogFailureOptions": {
        "title": "Dialog Failure Window Options",
        "description": "SwiftDialog options for the Failure Dialog window.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DialogListOptions": {
        "title": "Dialog List Window Options",
        "description": "SwiftDialog options for the primary Baseline progress list window.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DialogSuccessOptions": {
        "title": "Dialog Success Window Options",
        "description": "SwiftDialog options for the Success Dialog window.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExitCondition": {
        "title": "Exit Condition",
        "description": "Define a file or folder path. If this file or folder exists, Baseline will exit quietly without processing any items.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IgnoreDefaultInstallomatorOptions": {
        "title": "Ignore Default Installomator Options",
        "description": "By default, Baseline uses \"NOTIFY=silent\" and \"BLOCKING_PROCESS_ACTION=kill\" Installomator options. Setting this to True means Baseline will not use those options.",
        "type": "boolean"
      },
      "InitialScripts": {
        "title": "InitialScripts",
        "description": "Define scripts that are run immediately as the user logs in.",
        "type": {
          "array": [
            {
              "dictionary": {
                "Arguments": {
                  "title": "Arguments",
                  "description": "Arguments you want to pass to the script when it is run.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "DisplayName": {
                  "title": "Display Name",
                  "description": "The name you want to appear in the SwiftDialog menu as this script is run.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "MD5": {
                  "title": "MD5",
                  "description": "The expected MD5 of the script being run.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "ScriptPath": {
                  "title": "Script Path",
                  "description": "A path to the script you want to run. Can be a local file path or a URL.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "Installomator": {
        "title": "Installomator Labels",
        "description": "Define Installomator labels to be run by Baseline.",
        "type": {
          "array": [
            {
              "dictionary": {
                "Arguments": {
                  "title": "Arguments",
                  "description": "Arguments you want to pass to the Installomator command for this label.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "DisplayName": {
                  "title": "Display Name",
                  "description": "The name you want to appear in the SwiftDialog menu as this Installomator label is processed.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Icon": {
                  "title": "Icon",
                  "description": "The icon you want to appear in the SwiftDialog menu as this Installomator label is processed. Can be a URL or local file path.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Label": {
                  "title": "Label",
                  "description": "The Installomator label.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Subtitle": {
                  "title": "Subtitle",
                  "description": "The subtitle text to appear on this line item.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "InstallomatorSwiftDialogIntegration": {
        "title": "Use Installomator SwiftDialog Integration",
        "description": "Tell Installomator to use it's built in SwiftDialog integration for the List View.",
        "type": "boolean"
      },
      "LogOut": {
        "title": "Force Log Out",
        "description": "This setting controls whether Baseline forces a restart after completion.",
        "type": "boolean"
      },
      "Packages": {
        "title": "Packages",
        "description": "Define Packages to be run by Baseline",
        "type": {
          "array": [
            {
              "dictionary": {
                "Arguments": {
                  "title": "Arguments",
                  "description": "Arguments you want to pass to the installer command for this package.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "DisplayName": {
                  "title": "Display Name",
                  "description": "The name you want to appear in the SwiftDialog menu as this package is installed.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Icon": {
                  "title": "Icon",
                  "description": "The icon you want to appear in the SwiftDialog menu as this package is installed. Can be a URL or local file path.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "MD5": {
                  "title": "MD5",
                  "description": "The expected MD5 of the package being installed.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "PackagePath": {
                  "title": "Package Path",
                  "description": "A path to the package you want to install. Can be a local file path or a URL.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Subtitle": {
                  "title": "Subtitle",
                  "description": "The subtitle text to appear on this line item.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "TeamID": {
                  "title": "TeamID",
                  "description": "The expected TeamID of the package being installed.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "ProgressBar": {
        "title": "Show Progress Bar",
        "description": "This setting controls whether Baseline displays a progress bar.",
        "type": "boolean"
      },
      "ProgressBarDisplayNames": {
        "title": "Show Display Names on Progress Bar",
        "description": "This setting controls whether Baseline displays the current item being processed under the progress bar.",
        "type": "boolean"
      },
      "ReinstallDialog": {
        "title": "Reinstall SwiftDialog",
        "description": "This setting controls whether Baseline will reinstall SwiftDialog as the final step before completion. Default behavior if this key is omitted will reinstall SwiftDialog if a custom PNG is found in /Library/Application Support/Dialog/Dialog.png.",
        "type": "boolean"
      },
      "Restart": {
        "title": "Force Restart",
        "description": "This setting controls whether Baseline forces a restart after completion.",
        "type": "boolean"
      },
      "Scripts": {
        "title": "Scripts",
        "description": "Define Scripts to be run by Baseline",
        "type": {
          "array": [
            {
              "dictionary": {
                "Arguments": {
                  "title": "Arguments",
                  "description": "Arguments you want to pass to the script when it is run.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "DisplayName": {
                  "title": "Display Name",
                  "description": "The name you want to appear in the SwiftDialog menu as this script is run.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Icon": {
                  "title": "Icon",
                  "description": "The icon you want to appear in the SwiftDialog menu as this script is run. Can be a URL or local file path.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "MD5": {
                  "title": "MD5",
                  "description": "The expected MD5 of the script being run.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "ScriptPath": {
                  "title": "Script Path",
                  "description": "A path to the script you want to run. Can be a local file path or a URL.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Subtitle": {
                  "title": "Subtitle",
                  "description": "The subtitle text to appear on this line item.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.secondsonconsulting.renew": {
    "title": "Renew - Second Son Consulting",
    "description": "Renew Configuration",
    "properties": {
      "OptionalArguments": {
        "title": "Optional Arguments",
        "description": "There are a number of optional arguments to change Renew to look and act how you want.",
        "type": {
          "dictionary": {
            "AdditionalAggressiveOptions": {
              "title": "Additional Aggressive Mode Options",
              "description": "Use this key to pass additional options you want for only Aggressive Mode dialog events. See SwiftDialog documentation for advanced options.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "AdditionalDialogOptions": {
              "title": "Additional Dialog Options",
              "description": "Use this key to pass additional options you want for all dialog events. See SwiftDialog documentation for advanced options.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "AdditionalNormalOptions": {
              "title": "Additional Normal Options",
              "description": "Use this key to pass additional options you want for only Normal Mode dialog events. See SwiftDialog documentation for advanced options.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "AdditionalNotificationOptions": {
              "title": "Additional Notification Options",
              "description": "Use this key to pass additional options you want for only Notification Mode dialog events. See SwiftDialog documentation for advanced options.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "AggroMessage": {
              "title": "Aggressive Message",
              "description": "The message body you want in your Aggressive Mode dialog windows. Maps to SwiftDialog option: --message",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "BannerImage": {
              "title": "Banner Image",
              "description": "Use this key to designate a file path to a Banner Image for your Normal and Aggressive Mode dialog windows. Maps to SwiftDialog option: --bannerimage",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "BannerImageDarkMode": {
              "title": "Banner Image Dark Mode",
              "description": "Use this key to designate a file path to a Banner Image for your Normal and Aggressive Mode dialog windows.  Use this key if you have to differentiate between light and dark mode banners. Maps to SwiftDialog option: --bannerimage",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Deadline": {
              "title": "Deadline",
              "description": "Use this option to enable \"Deadline\" mode. If a device's uptime exceeds the \"Deadline\" value in days, Renew will enter Aggressive Mode regardless of the remaining deferrals.",
              "type": "integer"
            },
            "DeferralButtonText": {
              "title": "Deferral Button Text",
              "description": "What do you want your deferral button to say? Maps to SwiftDialog option: --button1text",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "MessageIcon": {
              "title": "Message Icon",
              "description": "The icon used in your Normal and Aggressive Mode dialogs. Use \"none\" to disable.  This can be a path to an image file, an app, or an SF symbol by using \"SF=symbol.name\". This maps to SwiftDialog option: --icon",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "MessageIconDarkMode": {
              "title": "Message Icon Dark Mode",
              "description": "The icon used in your Normal and Aggressive Mode dialogs. Use this key if you have to differentiate between light and dark mode icons.This can be a path to an image file, an app, or an SF symbol by using \"SF=symbol.name\". This maps to SwiftDialog option: --icon",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "NoDeferralsRemainingButtonText": {
              "title": "\"No Deferrals Remaining\" Button Text",
              "description": "What do you want your deferral button to say when it's greyed out in Aggressive Mode? Maps to SwiftDialog option: --button1text",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "NormalMessage": {
              "title": "Normal Message",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "NotificationIcon": {
              "title": "Notification Icon",
              "description": "This is the icon included on the right side of the Dialog Notification. Can be an app or a file path. Maps to SwiftDialog option: --icon",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "NotificationIconDarkMode": {
              "title": "Notification Icon Dark Mode",
              "description": "This is the icon included on the right side of the Dialog Notification. Can be an app or a file path. Use this key if you have to differentiate between light and dark mode icons. Maps to SwiftDialog option: --icon",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "NotificationMessage": {
              "title": "Notification Message",
              "description": "The message body you want in your Notification Center alerts. Maps to SwiftDialog option: --message",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "NotificationSubtitle": {
              "title": "Notification Subtitle",
              "description": "The subtitle field of your notifications. Maps to SwiftDialog option: --subtitle",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "RestartButtonText": {
              "title": "Restart Button Text",
              "description": "What do you want your \"Restart Now\" button to say? Maps to SwiftDialog option: --infobuttontext",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "SecretQuitKey": {
              "title": "Secret Quit Key",
              "description": "This key in combination with the \"Command\" key will allow you to quit a dialog window without restarting. Cannot be set to Q! Omit this to leave the default combination (Cmd+]. Maps to SwiftDialog option --quitkey",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ShowDeferralCount": {
              "title": "Show Deferral Count",
              "description": "If true, an additional sentence is added to your Normal Mode dialog windows indicating how many deferrals the user has remaining. Omit this key if you don't want the extra information.",
              "type": "boolean"
            },
            "Title": {
              "title": "Title",
              "description": "The title of your dialog windows and notifications. Maps to the swiftDialog option: --title",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "RequiredArguments": {
        "title": "Required Arguments",
        "description": "There are four required arguments to make a valid Renew configuration.",
        "type": {
          "dictionary": {
            "DeferralDuration": {
              "title": "Deferral Duration",
              "description": "The minimum number of hours between when a user is notified that they need to restart.",
              "type": "integer"
            },
            "MaximumDeferrals": {
              "title": "Maximum number of deferrals",
              "description": "This is the maximum number of deferrals a user receives before Renew enters \"Aggressive\" mode. Set to '-1' to disable deferrals.",
              "type": "integer"
            },
            "NotificationThreshold": {
              "title": "Notification Threshold",
              "description": "The number of times the user will get a macOS Notification Center event prior to the full Swift Dialog experience. Set to '-1' to configure an infinite threshold.",
              "type": "integer"
            },
            "UptimeThreshold": {
              "title": "Uptime Threshold",
              "description": "The number of days which a device is online prior to the Renew experience starting.",
              "type": "integer"
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.skype.skype": {
    "title": "Skype",
    "description": "Skype settings",
    "properties": {
      "SKAllowStealthUpgrade": {
        "title": "SKAllowStealthUpgrade",
        "description": "Supress installation prompt for Privilege Helper Tool.",
        "type": "boolean"
      },
      "SKSilentUpgradeNoticeShown": {
        "title": "SKSilentUpgradeNoticeShown",
        "description": "Surpress Upgrade Notification.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.sqwarq.DetectX-Swift": {
    "title": "DetectX Swift",
    "description": "DetectX Swift settings",
    "properties": {
      "BrandedText": {
        "title": "BrandedText",
        "description": "Display organizational branding. Maximum of 25 characters in length - including spaces and punctuation. Requires DetectX Swift to be registered.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FobWhitelist": {
        "title": "Fob Allowlist",
        "description": "Array of strings of key words to be ignored by Folder Observer.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ObserverButton": {
        "title": "ObserverButton",
        "description": "Custom button text for the Folder Observer alert. Requires DetectX Swift to be registered.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ObserverIcon": {
        "title": "ObserverIcon",
        "description": "Path to custom image for the Folder Observer alert. By default, shows the DetectX Swift icon. Requires DetectX Swift to be registered.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ObserverMessage": {
        "title": "ObserverMessage",
        "description": "Custom message for the Folder Observer alert. Requires DetectX Swift to be registered.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ObserverTitle": {
        "title": "ObserverTitle",
        "description": "Custom title for the Folder Observer alert. Requires DetectX Swift to be registered.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SUAllowsAutomaticUpdates": {
        "title": "Automatic Update Install Prompt",
        "description": "Controls the automatic update install prompt. When enabled, presents users with the option to allow automatic download and install of available updates. If disabled, disallows automatic updates and requires manual installation every time.",
        "type": "boolean"
      },
      "SUAutomaticallyUpdate": {
        "title": "Enable Automatic Silent Updates",
        "description": "Controls automatic silent updates. If enabled, users will not be informed about updates and updates will be silently installed when the app quits.",
        "type": "boolean"
      },
      "SUEnableAutomaticChecks": {
        "title": "Enable Automatic Update Checks",
        "description": "Controls automatic update checks.",
        "type": "boolean"
      },
      "SUFeedURL": {
        "title": "Sparkle Feed URL",
        "description": "Setting this to a non-existent URL will disable the ability for users to manually check for updates. Useful when you intend to use your own software distribution mechanism to deploy updates.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SUScheduledCheckInterval": {
        "title": "Automatic Update Check Interval",
        "description": "Controls the automatic update check interval. The default is 1 day (86400 seconds). Setting to 0 disables updates.",
        "type": "integer"
      },
      "VisualUpdates": {
        "title": "VisualUpdates",
        "description": "In the DetectX Swift GUI, display a visual button to indicate software updates are available.",
        "type": "integer"
      },
      "folderObserver": {
        "title": "folderObserver",
        "description": "Folder Observer notifies users when changes are made to the LaunchDaemons and LaunchAgents folders.",
        "type": "integer"
      },
      "ignoreKeywords": {
        "title": "ignoreKeywords",
        "description": "Registered users can specify key words to be ignored by the Folder Observer action when changes are made to the LaunchDaemons and LaunchAgents folders. This allows you to stop the alert from being thrown when items whose file name contains the key word is added or removed from one of the Launch folders.",
        "type": "boolean"
      },
      "whitelist": {
        "title": "Allowlist",
        "description": "Allowlist of file paths that produce false positives in DetectX Swift. Can be full path or in users' home folders.",
        "type": {
          "array": [
            {
              "dictionary": {
                "path": {
                  "title": "path",
                  "description": "Paths of files to whitelist:\nex. /Library/Scripts/script.sh\nex. ~/Library/Preferences/preference.plist",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.tinyspeck.slackmacgap": {
    "title": "Slack",
    "description": "Slack Client Management",
    "properties": {
      "AutoUpdate": {
        "title": "Auto Update",
        "description": "Enable or disable auto updates.",
        "type": "boolean"
      },
      "ClientEnvironment": {
        "title": "Client Environment",
        "description": "Configures the client to run in either commercial mode or government compliance mode (GovSlack).",
        "type": "integer"
      },
      "DefaultSignInTeam": {
        "title": "Default Team / Workspace",
        "description": "Sets the default team/workspace for Slack sign-ins.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Defaults": {
        "title": "Defaults",
        "description": "List of default values.",
        "type": {
          "dictionary": {
            "ClientEnvironment": {
              "title": "Client Environment (Default)",
              "description": "Configures the client to run in either commercial mode or government compliance mode (GovSlack) by default. The user can still change this setting.",
              "type": "integer"
            },
            "DownloadPath": {
              "title": "Download Path (Default)",
              "description": "Defines the download location for documents from Slack. This must be a valid user accesible path. The user can still change this setting.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "HardwareAcceleration": {
              "title": "Hardware Acceleration (Default)",
              "description": "Enables or disable hardware accelerated rendering via GPU. The user can still change this setting.",
              "type": "boolean"
            },
            "ReleaseChannel": {
              "title": "Release Channel (Default)",
              "description": "Configure the client to receive updates from either the production or beta channel. The user can still change this setting.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "prod",
                      "Production"
                    ],
                    [
                      "beta",
                      "Beta"
                    ]
                  ]
                }
              }
            }
          }
        }
      },
      "DownloadPath": {
        "title": "Download Path",
        "description": "Defines the download location for documents from Slack. This must be a valid user accessible path.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HardwareAcceleration": {
        "title": "Hardware Acceleration",
        "description": "Enable or disable hardware accelerated rendering via GPU.",
        "type": "boolean"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ReleaseChannel": {
        "title": "Release Channel",
        "description": "Configure the client to receive updates from either the production or beta channel.",
        "type": {
          "string": {
            "rangeList": [
              [
                "prod",
                "Production"
              ],
              [
                "beta",
                "Beta"
              ]
            ]
          }
        }
      },
      "SlackDefaultSignInWorkspace": {
        "title": "Default Workspace",
        "description": "Sets the default workspace for Slack sign-ins.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SlackNoAutoUpdates": {
        "title": "Disable Automatic Updates",
        "description": "When true, disables Slack's built-in automatic update mechanism. Useful if you update Slack using a tool like Munki.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.trusourcelabs.NoMAD": {
    "title": "NoMAD",
    "description": "NoMAD settings",
    "properties": {
      "ADDomain": {
        "title": "ADDomain",
        "description": "Defines the AD domain you're working with.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AutoConfigure": {
        "title": "Auto Configuration Scheme",
        "description": "Keyword to determine what auto configuration scheme to use.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AutoRenewCert": {
        "title": "Automatic Certificate Renewal",
        "description": "Number of days until the certificate expires before automatically renewing it.",
        "type": "integer"
      },
      "CaribouTime": {
        "title": "Carrie the Caribou Icons",
        "description": "Changes the icon set to Carrie the Caribou.",
        "type": "boolean"
      },
      "ChangePasswordCommand": {
        "title": "Change Password Command",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ChangePasswordOptions": {
        "title": "Change Password Options",
        "description": "Task, URL or App path for ChangePasswordType. (<<serial>>, <<fullname>>, <<shortname>> and <<domain>> are currently supported as substitutions)",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ChangePasswordType": {
        "title": "Change Password Type",
        "description": "Type of the ChangePassword function.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CleanCerts": {
        "title": "Automatic Certificate Cleaning",
        "description": "Automatically remove extra certificates from the user's keychain. This will leave the 2 newest and the 2 oldest certificates.",
        "type": "boolean"
      },
      "ConfigureChrome": {
        "title": "Configure Chrome",
        "type": "boolean"
      },
      "ConfigureChromeDomain": {
        "title": "Configure Chrome Domain",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CustomLDAPAttributes": {
        "title": "Custom LDAP Attributes",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DontMatchKerbPrefs": {
        "title": "Don't Match Kerberos Preferences",
        "type": "boolean"
      },
      "DontShowWelcome": {
        "title": "Don't Show NoMAD Welcome Window",
        "description": "Hides the Welcome window on first launch.",
        "type": "boolean"
      },
      "DontShowWelcomeDefaultOn": {
        "title": "Don't Show Again Welcome Window Checkbox",
        "description": "Shows the Welcome Screen, but checks the \"Don't show again\" box by default. Useful for when you want to show the Welcome screen only once.",
        "type": "boolean"
      },
      "ExportableKey": {
        "title": "Exportable Private Key",
        "description": "Allows the private key from any NoMAD generated certificate to be exported.",
        "type": "boolean"
      },
      "GetCertificateAutomatically": {
        "title": "Get Certificates Automatically",
        "description": "Automatically request a certificate for a user when they don't have a valid certificate in the keychain.",
        "type": "boolean"
      },
      "GetHelpOptions": {
        "title": "Get Help Options",
        "description": "URL or Path for GetHelpType (<<serial>>, <<fullname>>, <<shortname>> and <<domain>> are currently supported as substitutions)",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "GetHelpType": {
        "title": "Get Help Type",
        "description": "Determines type of GetHelp function.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HicFix": {
        "title": "Enable High Sierra Fix",
        "type": "boolean"
      },
      "HideAbout": {
        "title": "Hide 'About' Menu Item",
        "description": "Hides the About menu item.",
        "type": "boolean"
      },
      "HideExpiration": {
        "title": "Hide Password Expiration",
        "type": "boolean"
      },
      "HideExpirationMessage": {
        "title": "Hide Password Expiration Message",
        "description": "Message text to show in the menu bar when the password countdown has been suppressed.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HideGetSoftware": {
        "title": "Hide 'Get Software' Menu Item",
        "description": "Hides the Get Software menu item.",
        "type": "boolean"
      },
      "HideHelp": {
        "title": "Hide 'Help' Menu Item",
        "description": "Hides the Get Help menu item.",
        "type": "boolean"
      },
      "HideLockScreen": {
        "title": "Hide 'Lock Screen' Menu Item",
        "description": "Hides the Lock Screen menu item.",
        "type": "boolean"
      },
      "HidePrefs": {
        "title": "Hide 'Preferences' Menu Item",
        "description": "Disables the Preferences menu item.",
        "type": "boolean"
      },
      "HideQuit": {
        "title": "Hide 'Quit' Menu Item",
        "description": "Hides the Quit menu item.",
        "type": "boolean"
      },
      "HideRenew": {
        "title": "Hide 'Renew Tickets' Menu Item",
        "description": "Hides the Renew Tickets menu item.",
        "type": "boolean"
      },
      "HideSignOut": {
        "title": "Hide 'Sign Out' Menu Item",
        "description": "Hides the Sign Out menu item.",
        "type": "boolean"
      },
      "HomeAppendDomain": {
        "title": "Append Domain to User Home",
        "type": "boolean"
      },
      "IconOff": {
        "title": "NoMAD Disconnected Icon",
        "description": "Path to a 16x16 pixel image to use as the icon in the menu bar when NoMAD is not connected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IconOffDark": {
        "title": "NoMAD Disconnected Dark Icon",
        "description": "Path to a 16x16 pixel image to use as the icon in the menu bar when NoMAD is not connected in dark mode.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IconOn": {
        "title": "NoMAD Connected Icon",
        "description": "Path to a 16x16 pixel image to use as the icon in the menu bar when NoMAD is connected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IconOnDark": {
        "title": "NoMAD Connected Dark Icon",
        "description": "Path to a 16x16 pixel image to use as the icon in the menu bar when NoMAD is connected in dark mode.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "KerberosRealm": {
        "title": "Kerberos Realm",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "KeychainItems": {
        "title": "Keychain Items",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Keychain Item",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Account",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "KeychainItemsDebug": {
        "title": "Enable Keychain Items Debugging",
        "type": "boolean"
      },
      "LDAPAnonymous": {
        "title": "Anonymous LDAP",
        "type": "boolean"
      },
      "LDAPOnly": {
        "title": "LDAP Only",
        "type": "boolean"
      },
      "LDAPOverSSL": {
        "title": "LDAP Over SSL",
        "type": "boolean"
      },
      "LDAPServerList": {
        "title": "LDAP Server List",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LDAPType": {
        "title": "LDAP Type",
        "type": {
          "string": {
            "rangeList": [
              [
                "OD",
                "Open Directory"
              ]
            ]
          }
        }
      },
      "LightsOutIKnowWhatImDoing": {
        "title": "Hide NoMAD Menubar Icon",
        "description": "Removes the icon from the menu bar. Note that NoMAD still is in the menu bar, just with no icon and taking up less space.",
        "type": "boolean"
      },
      "LocalPasswordSync": {
        "title": "Local Password Sync",
        "type": "boolean"
      },
      "LocalPasswordSyncDontSyncLocalUsers": {
        "title": "Local Users to Not Sync Password",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "LocalPasswordSyncDontSyncNetworkUsers": {
        "title": "Network Users to Not Sync Password",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "LocalPasswordSyncOnMatchOnly": {
        "title": "Only Sync Local Password on Match",
        "type": "boolean"
      },
      "LoginItem": {
        "title": "NoMAD Login Item",
        "description": "Adds NoMAD to the user's start up items.",
        "type": "boolean"
      },
      "MenuAbout": {
        "title": "'About' Menu Item Text",
        "description": "Menu item text for the About item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuChangePassword": {
        "title": "'Change Password' Menu Item Text",
        "description": "Menu item text for the Change Password item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuFileServers": {
        "title": "'File Servers' Menu Item Text",
        "description": "Menu item text for the File Servers item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuGetCertificate": {
        "title": "'Get Certificate' Menu Item Text",
        "description": "Menu item text for the Get Certificate item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuGetHelp": {
        "title": "'Get Help' Menu Item Text",
        "description": "Menu item text for the Get Help item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuGetSoftware": {
        "title": "'Get Software' Menu Item Text",
        "description": "Menu item text for the Get Software item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuHomeDirectory": {
        "title": "'Home Directory' Menu Item Text",
        "description": "Menu item text for the Home Directory item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuPasswordExpires": {
        "title": "Password Expiration Menu Item Text",
        "description": "Menu item text for the password expiration item before a user logs in.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuRenewTickets": {
        "title": "'Renew Tickets' Menu Item Text",
        "description": "Menu item text for the Renew Tickets item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuUserName": {
        "title": "Username Menu Item Text",
        "description": "Menu item text for the user name item before a user logs in.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuWelcome": {
        "title": "Custom Welcome Window Path",
        "description": "Path to a folder containing an index.html file and associated resources for displaying as a Welcome window.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MessageLocalSync": {
        "title": "Local Password Sync Message",
        "description": "Message text for when a user is asked for their local password to sync their network password to their local account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MessageNotConnected": {
        "title": "Not Connected to Domain Message",
        "description": "Message text to show in the menu bar when NoMAD is not connected to the AD domain.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MessagePasswordChangePolicy": {
        "title": "Password Change Policy Message",
        "description": "Message text to display in the password change dialog to help the user understand how complex they need to be.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MessageUPCAlert": {
        "title": "Unannounced Password Changes Message",
        "description": "Message to be shown in an UPCAlert notification.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MountSharesWithFinder": {
        "title": "Mount Shares with Finder",
        "description": "Use the Finder instead of the API for automounted file shares.",
        "type": "boolean"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_General": {
        "title": "PFC_SegmentedControl_General",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_Menu": {
        "title": "PFC_SegmentedControl_Menu",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_Password": {
        "title": "PFC_SegmentedControl_Password",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordExpireAlertTime": {
        "title": "Password Expiration Alert Time",
        "description": "Number of seconds before a user's password expiration that an alert is shown. (Set to 0 to never be bothered. Defaults to 15 days or 1,296,000 seconds.)",
        "type": "integer"
      },
      "PasswordExpireCustomAlert": {
        "title": "Password Expiration Custom Alert",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordExpireCustomAlertTime": {
        "title": "Password Expiration Custom Alert Time",
        "description": "Number of days remaining before the custom alert is shown, and in red.",
        "type": "integer"
      },
      "PasswordExpireCustomWarnTime": {
        "title": "Password Expiration Custom Warning Time",
        "description": "Number of days remaining before the custom alert is shown, and in yellow.",
        "type": "integer"
      },
      "PasswordPolicy": {
        "title": "Password Policy",
        "description": "Complexity policy for changing the password via Kerberos.",
        "type": {
          "dictionary": {
            "minLength": {
              "title": "Minimum Password Length",
              "description": "Minimum password length",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minLowerCase": {
              "title": "Minimum Lowercase Letters",
              "description": "Minimum # of lowercase letters required in password",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minMatches": {
              "title": "Minimum Password Policy Matches",
              "description": "Minimum # of password policies that must be met (not including length)",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minNumber": {
              "title": "Minimum Numbers",
              "description": "Minimum # of numbers required in password",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minSymbol": {
              "title": "Minimum Symbols",
              "description": "Minimum # of symbols required in password",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minUpperCase": {
              "title": "Minimum Uppercase Letters",
              "description": "Minimum # of uppercase letters required in password",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "PersistExpiration": {
        "title": "Persist Password Expiration Countdown",
        "description": "Shows the password expiration countdown even when the user is not logged into the domain.",
        "type": "boolean"
      },
      "RecursiveGroupLookup": {
        "title": "Recursive Group Lookup",
        "type": "boolean"
      },
      "RenewTickets": {
        "title": "Renew Kerberos Tickets",
        "type": "boolean"
      },
      "SecondsToRenew": {
        "title": "Seconds To Renew Kerberos Tickets",
        "type": "integer"
      },
      "SelfServicePath": {
        "title": "Self Service Path",
        "description": "File path for a Self Service application not found automatically.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ShowHome": {
        "title": "Show 'Home' Menu Item",
        "description": "Shows the Home Directory share menu item.",
        "type": "boolean"
      },
      "SignInCommand": {
        "title": "Post Sign In Command",
        "description": "Path to a script or command to be run after a successful sign in.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SignInWindowAlert": {
        "title": "Force Sign In Window on Top",
        "description": "Makes the Sign In window the foremost window when a user is not signed in.",
        "type": "boolean"
      },
      "SignInWindowAlertTime": {
        "title": "Force Sign In Window on Top Timer",
        "description": "Time in seconds between the SignInWindowAlert making the Sign In window the foremost window.",
        "type": "integer"
      },
      "SignInWindowOnLaunch": {
        "title": "Show Sign In Window on Launch",
        "description": "Shows the Sign In window on launch.",
        "type": "boolean"
      },
      "SignInWindowOnLaunchExclusions": {
        "title": "Sign In Window User Exclusions",
        "description": "Local users that will not be shown the Sign In window automatically.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "SignOutCommand": {
        "title": "Post Sign Out Command",
        "description": "Path to a script or other binary to be run on sign out.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "StateChangeAction": {
        "title": "Network Change Action",
        "description": "Path to a script that will be launched on network changes.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Template": {
        "title": "Windows Certificate Authority Template",
        "description": "Certificate template to request when using the Windows CA.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TitleSignIn": {
        "title": "Sign In Window Title",
        "description": "Title of the Sign In window.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UPCAlert": {
        "title": "Unannounced Password Changes Alert",
        "description": "Alerts the user to Unannounced Password Changes, typically when the password was changed in AD and not from the user's system.",
        "type": "boolean"
      },
      "UPCAlertAction": {
        "title": "Unannounced Password Changes Action",
        "description": "Path to a script or other binary to execute when a UPC Alert occurs.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UseKeychain": {
        "title": "Use Keychain",
        "type": "boolean"
      },
      "UseKeychainPrompt": {
        "title": "Sign In Window Keychain",
        "description": "Shows the Sign In window on launch unless the user has a password in the keychain.",
        "type": "boolean"
      },
      "UserSwitch": {
        "title": "Use Active User",
        "type": "boolean"
      },
      "Verbose": {
        "title": "Verbose Logging",
        "description": "Enables verbose logging.",
        "type": "boolean"
      },
      "WifiNetworks": {
        "title": "Wi-Fi Networks",
        "description": "A list of wireless networks that the certificate created by NoMAD should be associated with.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "X509CA": {
        "title": "Windows Certificate Authority",
        "description": "FQDN of the Windows web CA for NoMAD to use for certificates.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.twingate.macos": {
    "title": "Twingate",
    "description": "Twingate macOS Client Settings",
    "properties": {
      "PresentedDataPrivacy": {
        "title": "Suppress Data Privacy Screen",
        "description": "Suppresses the first run Data Privacy screen",
        "type": "boolean"
      },
      "PresentedEducation": {
        "title": "Suppress Education Screens",
        "description": "Suppresses the first run Education screens",
        "type": "boolean"
      },
      "network": {
        "title": "Network Subdomain",
        "description": "A pre-configured Twingate network subdomain (eg. autoco from autoco.twingate.com). This avoids users needing to enter your Twingate network address on first run.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "startAtLogin": {
        "title": "Start At Login",
        "description": "Starts the Twingate Client upon user login",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.twocanoes.xcreds": {
    "title": "XCreds",
    "description": "XCreds 4.1 (6375) OAuth Settings",
    "properties": {
      "ADDomain": {
        "title": "ADDomain",
        "description": "The desired AD domain",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CreateAdminIfGroupMember": {
        "title": "Create Admin If Group Member",
        "description": "List of groups that should have members be given local administrator status. Local administrator status can be given on first authentication when account created, or on later sign in of existing user when a group member. Administrator status not removed if group membership later revoked. Set as an Array of Strings of the group identifier.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CreateAdminUser": {
        "title": "Create User as Admin",
        "description": "When set to true and the user account is created, the user will be a local admin.",
        "type": "boolean"
      },
      "EnableFDE": {
        "title": "Enable Full Disk Encryption (FDE)",
        "description": "Enabled FDE enabled at first login on APFS disks.",
        "type": "boolean"
      },
      "EnableFDERecoveryKey": {
        "title": "Save PRK",
        "description": "Save the Personal Recovery Key (PRK) to disk for the MDM Escrow Service to collect.",
        "type": "boolean"
      },
      "EnableFDERecoveryKeyPath": {
        "title": "FDE Recovery Key Path",
        "description": "Specify a custom path for the recovery key.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EnableFDERekey": {
        "title": "Enable FDE Rekey",
        "description": "Rotate the Personal Recovery Key (PRK).",
        "type": "boolean"
      },
      "HomeAppendDomain": {
        "title": "Home Append Domain",
        "description": "Append the domain name to the share defined in the profile.",
        "type": "boolean"
      },
      "HomeMountEnabled": {
        "title": "Home Mount Enabled",
        "description": "Show and mount home directory from AD profile if defined.",
        "type": "boolean"
      },
      "KeychainReset": {
        "title": "Keychain Reset",
        "description": "Reset the keychain without prompting if the login password doesn't match the local password.",
        "type": "boolean"
      },
      "PasswordOverwriteSilent": {
        "title": "Overwrite Password Silently",
        "description": "Update the password silently to the new one. Used with the KeychainReset if the user has a secure token.",
        "type": "boolean"
      },
      "Shares": {
        "title": "Shares",
        "description": "Add menu item and mount/automount shares",
        "type": {
          "array": [
            {
              "dictionary": {
                "AutoMount": {
                  "title": "AutoMount",
                  "description": "Automatically mount when XCreds starts",
                  "type": "boolean"
                },
                "ConnectedOnly": {
                  "title": "ConnectedOnly",
                  "description": "Allow mounting only if network connection is detected",
                  "type": "boolean"
                },
                "Groups": {
                  "title": "Groups",
                  "description": "",
                  "type": {
                    "array": []
                  }
                },
                "Name": {
                  "title": "Name",
                  "description": "Name of share to show in menu",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "URL": {
                  "title": "URL",
                  "description": "URL for share (eg smb://server.example.com/share)",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "aliasName": {
        "title": "Alias Name",
        "description": "Name of OIDC claim that contains an alias to add to a user account. Usually this is the \"upn\" (eg syd@twocanoes.com) so the user can log in at the standard login window the same as the IdP login window. Adds the value to record name of the user account as an alias.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "allowUsersClaim": {
        "title": "Allow Users Claim",
        "description": "The claim that contains the value to check for in the allowedUsersArray. Both must be defined.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "allowedUsersArray": {
        "title": "Allowed Users",
        "description": "List of users that are allowed to log in. An empty array or undefined array means any user can log in as long their cloud credentials are valid. The preference allowUsersClaim must be defined to a claim in the idToken that identifies the users. For example, if the allowUsersClaim is set to upn and the allowedUsersArray is set to an array that contains fred@twocanoes.com and the upn of a logging in user is fred@twocanoes.com, they would be allowed to log in. barney@twocanoes.com would not.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "autoRefreshLoginTimer": {
        "title": "Automatically Refresh Login Window (seconds)",
        "description": "Timer for automatically refreshing login screen in seconds. If set to 0, does not automatically refresh.",
        "type": "integer"
      },
      "claimsToAddToLocalUserAccount": {
        "title": "Claims To Add To Local User Account",
        "description": "List of claims that should be added to the user local account. Will be prefixed with _xcreds_oidc_. Set as an Array of Strings of the claim.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "clientID": {
        "title": "Client ID",
        "description": "The OIDC client id public identifier for the app.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "clientSecret": {
        "title": "Client Secret",
        "description": "Client Secret sometimes required by identity provider.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "cloudLoginText": {
        "title": "Cloud Login Text",
        "description": "Text for return to cloud login on Mac login screen",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "discoveryURL": {
        "title": "Discovery URL",
        "description": "The discovery URL provided by your OIDC / Cloud provider. For Google it is typically https://accounts.google.com/.well-known/openid-configuration and for Azure it is typically https://login.microsoftonline.com/common/.well-known/openid-configuration.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "hideIfPathExists": {
        "title": "Hide If Path Exists",
        "description": "Don't show the UI if this key is defined and a file or folder exists at this path.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "idpHostName": {
        "title": "idpHostName",
        "description": "Hostname of the page that has the password field. When the user submits the form, XCreds will use idpHostName to identify a page it needs to look for the password field. The password value is identified by an HTML id defined by passwordElementID. If this value is not defined. XCreds will look for login.microsoftonline.com and accounts.google.com. This value is commonly set for other IdP’s and for Azure environments that use ADFS.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "idpHostNames": {
        "title": "idpHostNames",
        "description": "array of hostnames of the page that has the password field.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "loadPageInfo": {
        "title": "LoadPage Info",
        "description": "When no network connection or a profile is not defined, this text is shown in an HTML view to the user when cloud login is configured.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "loadPageTitle": {
        "title": "LoadPage Title",
        "description": "When no network connection or a profile is not defined, this title is shown in an HTML view to the user when cloud login is configured.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "localAdminPassword": {
        "title": "Local Admin Password",
        "description": "Password of local admin user. DO NOT SET THIS IN PREFERENCES. It is recommended to set this with the settingsOverrideScriptPath script. This user is used to reset the keychain if the user forgets their local password and to setup a secure token for newly created users.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "localAdminUserName": {
        "title": "Local Admin User Name",
        "description": "Username of local admin user. DO NOT SET THIS IN PREFERENCES. It is recommended to set this with the settingsOverrideScriptPath script. This user is used to reset the keychain if the user forgets their local password and to setup a secure token for newly created users.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "loginWindowBackgroundImageURL": {
        "title": "Login Window Background Image URL",
        "description": "URL to an image to show in the background while logging in. Default value: file:///System/Library/Desktop Pictures/Monterey Graphic.heic.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "loginWindowHeight": {
        "title": "Login Window Height",
        "description": "Login Window webview height (Integer). If this is not defined, it will be full height. Minimum value of 150.",
        "type": "integer"
      },
      "loginWindowWidth": {
        "title": "Login Window Width",
        "description": "Login Window webview width (Integer). If this is not defined, it will be full width. Minimum value of 150.",
        "type": "integer"
      },
      "mapKerberosPrincipalName": {
        "title": "Map Kerberos Principal Name",
        "description": "The OIDC claim that has the kerberos principal name. This is used when logging in with OIDC and ADDomain is defined. During login, the claim that contains the kerberos principal name will be read and the local account will set dsAttrTypeNative:_xcreds_activedirectory_kerberosPrincipal to the kerberos principal name. The menu item will then use this value and the password to get a kerberos ticket.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "map_firstname": {
        "title": "First Name OIDC Mapping",
        "description": "Local DS to OIDC Mapping for First Name. Default value: “given_name”. map_firstname should be set to an OIDC claim for first name.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "map_fullname": {
        "title": "Full Name OIDC Mapping",
        "description": "Local DS to OIDC Mapping for Full Name. Default value: “name”. map_fullname should be set to an OIDC claim for full name.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "map_lastname": {
        "title": "Last Name OIDC Mapping",
        "description": "Local DS to OIDC Mapping for Last Name. Default value: “family_name”. map_lastname should be set to an OIDC claim for last name.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "map_username": {
        "title": "Username OIDC Mapping",
        "description": "Local DS to OIDC Mapping for Name. Default value: “name”. map_username should be set to an OIDC claim for name.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "menuItemWindowBackgroundImageURL": {
        "title": "Menu Item Window BackgroundImageURL",
        "description": "URL to an image to show in the background of the window that appears when logged in and prompting for Active Directory username and password.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "menuItems": {
        "title": "Menu Items",
        "description": "Menu Items",
        "type": {
          "array": [
            {
              "dictionary": {
                "linkOrAppPath": {
                  "title": "Web page URL or local path to app",
                  "description": "Link or App Path",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "menuItemName": {
                  "title": "Menu Item Name",
                  "description": "Menu Item",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "separatorAfter": {
                  "title": "Separator After",
                  "description": "Separator line after menu item",
                  "type": "boolean"
                },
                "separatorBefore": {
                  "title": "Separator Before",
                  "description": "Separator line before menu item",
                  "type": "boolean"
                }
              }
            }
          ]
        }
      },
      "passwordChangeURL": {
        "title": "Password Change URL for Menu",
        "description": "Add a menu item for changing the password that will open this URL when the menu item is selected.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "passwordElementID": {
        "title": "passwordElementID",
        "description": "Password element id of the html element that has the password. It is read by using JavaScript to get the value (for example, for Azure, the JavaScript document.getElementById('i0118').value is sent. If this default is not set, standard values for Azure and Google Cloud will be used. To find out this value, use a browser to inspect the source of the page that has the password on it. Find the id of the textfield that has the password. Fill in the password and then open the JavaScript console. Run:\n\ndocument.getElementById('passwordID').value\n\nchanging “passwordID” to the correct element ID. If the value you typed into the textfield is returned, this is the correct ID.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "passwordPlaceholder": {
        "title": "Password Placeholder Text",
        "description": "Placeholder text in local / AD login window for password",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "redirectURI": {
        "title": "Redirect URI",
        "description": "The URI passed back to the webview after successful authentication. Default value: xcreds://auth/",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "refreshRateHours": {
        "title": "Password Change Check Rate Hours",
        "description": "The number of hours between checks. Default value: 3. Minimum value: 0. Max value: 168.",
        "type": "integer"
      },
      "refreshRateMinutes": {
        "title": "Password Change Check Rate Minutes",
        "description": "The number of minutes between checks. Default value: 0. Minimum value: 0. Max value: 59. This value is added to refreshRateHours. If refreshRateHours is 0, minimum for refreshRateMinutes becomes 5.",
        "type": "integer"
      },
      "ropgClientID": {
        "title": "ROPG Client ID",
        "description": "(Deprecated in v4.0) ROPG Client ID for use when checking password.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ropgClientSecret": {
        "title": "ROPG Client Secret",
        "description": "(Deprecated in v4.0) ROPG Client Secret for use when checking password.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "scopes": {
        "title": "Scopes",
        "description": "Scopes tell the identify provider what information to return. Note that the values are provided with a single space between them.\n\nProvide the following values the follow IdPs:\n\nGoogle: profile openid email\nAzure: profile openid offline_access\n\nNote that Google does not support the offline_access scope so instead use the preference shouldSetGoogleAccessTypeToOffline. Azure provides unique_name which is mapped to the local user account by using the prefix before “@” in unique_name and matching to the short name of a user account. Google provides “email” and is matched in the same way.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "settingsOverrideScriptPath": {
        "title": "Override Script Path",
        "description": "Script to override defaults. Must return valid property list with specified defaults. Script must exist at path, be owned by _securityagent and writable and executable only by _securityagent.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "shareMenuItemName": {
        "title": "Share Menu Item Name",
        "description": "Name for Shares menu item. Default: \"Shares\".",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "shouldAllowKeyComboForMacLoginWindow": {
        "title": "Should Allow Key Combo For Mac Login Window",
        "description": "Allow key combo (control-option return) to switch logon window. Use command-option-control-return for Mac Login Window. ",
        "type": "boolean"
      },
      "shouldDetectNetworkToDetermineLoginWindow": {
        "title": "Should Detect Network To Determine Login Window",
        "description": "Check if network is up. If not, select username and password login window.",
        "type": "boolean"
      },
      "shouldLoginWindowBackgroundImageFillScreen": {
        "title": "Login Window Background Image Fill Screen",
        "description": "Set the background image to Fill Screen rather than Fit to Screen",
        "type": "boolean"
      },
      "shouldPreferLocalLoginInsteadOfCloudLogin": {
        "title": "Prefer Local Login over Cloud Login",
        "description": "Favor using XCreds' local login screen over the cloud login UI.",
        "type": "boolean"
      },
      "shouldPromptForADPasswordChange": {
        "title": "Should Prompt For AD Password Change",
        "description": "If the domain controller returns back that the password is expired or needs to be changed, prompt the user. If this is set to false, login will fail and an error message will be shown.",
        "type": "boolean"
      },
      "shouldPromptForMigration": {
        "title": "Should Prompt for Migration",
        "description": "Prompt for local account username and password if no account was mapped and there are standard users already on the system.",
        "type": "boolean"
      },
      "shouldSetGoogleAccessTypeToOffline": {
        "title": "Request Google Refresh Token",
        "description": "When using Google IdP, a refresh token may need be requested in a non-standard way.",
        "type": "boolean"
      },
      "shouldShowAboutMenu": {
        "title": "Show About Menu",
        "description": "Show the About Menu item menu. Default value: true",
        "type": "boolean"
      },
      "shouldShowCloudLoginByDefault": {
        "title": "Show Cloud Login By Default",
        "description": "Determine if the Mac login window or the cloud login window is shown by default.  When not set or set to true, show cloud login. If false, shows Mac login.",
        "type": "boolean"
      },
      "shouldShowConfigureWifiButton": {
        "title": "Show Configure WiFi",
        "description": "Show Configure WiFi button in XCreds Login.",
        "type": "boolean"
      },
      "shouldShowLocalOnlyCheckbox": {
        "title": "Show Local Only Checkbox",
        "description": "Show the local only checkbox on the local login page ",
        "type": "boolean"
      },
      "shouldShowMacLoginButton": {
        "title": "Show Mac Login Window button",
        "description": "Show the Mac Login Window button in XCreds Login.",
        "type": "boolean"
      },
      "shouldShowPreferencesOnStart": {
        "title": "Show Preferences on Startup",
        "description": "Show Settings on start if none are defined. Default value: false",
        "type": "boolean"
      },
      "shouldShowQuitMenu": {
        "title": "Show Quit Menu Item",
        "description": "Show Quit in the menu item menu. Default value: true",
        "type": "boolean"
      },
      "shouldShowRefreshBanner": {
        "title": "Show Refresh Banner",
        "description": "Show text at the top of the prompt window when tokens expire.",
        "type": "boolean"
      },
      "shouldShowSignInMenuItem": {
        "title": "Show Sign In Menu Item",
        "description": "Determine if the Sign In menu item is shown in the XCreds menu. When not set or set to true, show Sign In. If false, the Sign In menu item is hidden.",
        "type": "boolean"
      },
      "shouldShowSupportStatus": {
        "title": "Show Support Status Message",
        "description": "Show message in XCreds Login reminding people to buy support.",
        "type": "boolean"
      },
      "shouldShowVersionInfo": {
        "title": "Show Version and Build Number",
        "description": "Show the version number and build number in the lower left corner of XCreds Login.",
        "type": "boolean"
      },
      "shouldSwitchToLoginWindowWhenLocked": {
        "title": "Should Switch To Login Window When Locked",
        "description": "When set to true and the user locks the current session, XCreds will tell the system to switch to Login Window. The current session will stay active but the user will login with the XCreds Login Window to resume the session.",
        "type": "boolean"
      },
      "shouldUseROPGForLoginWindowLogin": {
        "title": "Use ROPG when logging in at login window",
        "description": "When verifying password in the login window, use ROPG.",
        "type": "boolean"
      },
      "shouldUseROPGForMenuLogin": {
        "title": "Use ROPG For Menu Login",
        "description": "When verifying password in the menu app, use ROPG.",
        "type": "boolean"
      },
      "shouldUseROPGForPasswordChangeChecking": {
        "title": "Should Use ROPG For Password Change Checking",
        "description": "When verifying local password matches cloud password in the background, use ROPG. If set to false, the refresh token will be used to verify password change.",
        "type": "boolean"
      },
      "shouldVerifyPasswordWithRopg": {
        "title": "Use ROPG when testing password",
        "description": "(Deprecated in v4.0) When verifying password in the menu app, use ROPG.",
        "type": "boolean"
      },
      "showDebug": {
        "title": "Show Debug Message",
        "description": "Show push notifications for authentication progress. Default value: false",
        "type": "boolean"
      },
      "username": {
        "title": "Local Username",
        "description": "When a user uses cloud login, XCreds will try and figure out the local username based on the email or other data returned for the IdP. Use this value to force the local username for any cloud login. Provide only the shortname.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "usernamePlaceholder": {
        "title": "Username Placeholder Text",
        "description": "Placeholder text in local / AD login window for username",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "verifyPassword": {
        "title": "Verify Cloud Password",
        "description": "When cloud password is changed and the local keychain password and local user account needs to be changed, a verification dialog can be shown to verify the password. Default value: true",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": false
  },
  "com.unity3d.UnityEditor5.x": {
    "title": "Unity Editor",
    "description": "Use this section to define settings for Unity Editor",
    "properties": {
      "EditorUpdateShowAtStartup": {
        "title": "Show Unity Editor updater at launch",
        "description": "Check to show the Unity Editor updater at launch",
        "type": "boolean"
      },
      "ReopenLastUsedProjectOnStartup": {
        "title": "Open previously opened project at launch",
        "description": "Check to open the previously opened project at launch",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "com.vpntracker.365mac": {
    "title": "VPN Tracker",
    "description": "Manage settings in VPN Tracker for Mac, iPhone or iPad – the multi protocol VPN client for enterprise teams. Visit vpntracker.com/goto/profile to learn more.",
    "properties": {
      "Managed_Onboarding_Email": {
        "title": "Email address",
        "description": "You can optionally set the email address the user will use to sign in to VPN Tracker, when deploying a personalized profile.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Managed_Onboarding_EmailDomains": {
        "title": "Allowed email domains",
        "description": "A comma-separated list of email domains that users are allowed to use when joining your team.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Managed_Onboarding_FamilyName": {
        "title": "Surname",
        "description": "Used in the onboarding greeting and during VPN Tracker account registration for new users.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Managed_Onboarding_FullName": {
        "title": "Full name",
        "description": "Full name of the user displayed during onboarding. If given name and family name are set, this value is ignored.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Managed_Onboarding_GivenName": {
        "title": "Given name",
        "description": "Used in the onboarding greeting and during VPN Tracker account registration for new users.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Managed_Onboarding_Greeting": {
        "title": "Greeting text",
        "description": "Greeting text to show instead of the default \"Welcome, {name}\".",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Managed_Onboarding_TeamAPIToken": {
        "title": "Team API Token",
        "description": "The team's API Token – find it at my.vpntracker.com/teamprofile.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Managed_Onboarding_TeamUUID": {
        "title": "Team UUID",
        "description": "Have new users automatically join your organization's VPN Tracker team and automatically receive their VPN connection. Find yours at my.vpntracker.com/teamprofile.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "corp.sap.privileges": {
    "title": "SAP Privileges",
    "description": "Use this section to define settings for the SAP Privileges app",
    "properties": {
      "DockToggleMaxTimeout": {
        "title": "Dock Toggle Max Timeout",
        "description": "Set a maximum timeout for the Dock tile's Toggle Privileges command. This generally works the same way as the DockToggleTimeout but allows the user to choose every timeout value up to the one specified. If set to 20 min. for example, the user may decide to set it to a value below 20 instead of being forced to use the 20 minute timeout.",
        "type": "integer"
      },
      "DockToggleTimeout": {
        "title": "Dock Toggle Timeout",
        "description": "Sets a fixed timeout for the Dock tile's Toggle Privileges command. After this time, the admin rights are removed and set back to standard user rights. A value of 0 disables the timeout and allows the user to permanently toggle privileges.",
        "type": "integer"
      },
      "EnforcePrivileges": {
        "title": "Enforce Privileges",
        "description": "Enforces certain privileges. Whenever Privileges.app or the PrivilegesCLI command line tool are launched, the corresponding privileges are set.",
        "type": {
          "string": {
            "rangeList": [
              [
                "admin",
                "Admin"
              ],
              [
                "user",
                "User"
              ],
              [
                "none",
                "None"
              ]
            ]
          }
        }
      },
      "LimitToGroup": {
        "title": "Limit to Group",
        "description": "Limits the usage of Privileges.app to the given user group.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LimitToUser": {
        "title": "Limit to User",
        "description": "Limits the usage of Privileges.app to the given user account.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ReasonMinLength": {
        "title": "Reason Minimum Length",
        "description": "Specifies the minimum number of characters the user has to enter as the reason for becoming an admin.",
        "type": "integer"
      },
      "ReasonRequired": {
        "title": "Reason Required",
        "description": "If ReasonRequired is set to true, the user must provide a reason for needing admin rights.",
        "type": "boolean"
      },
      "RemoteLogging": {
        "title": "Remote Logging Settings",
        "description": "Remote logging settings",
        "type": {
          "dictionary": {
            "EnableTCP": {
              "title": "Enable TCP",
              "description": "If set to true, the log messages are sent via TCP instead of UDP. By default, messages are sent via UDP.",
              "type": "boolean"
            },
            "ServerAddress": {
              "title": "Server Address",
              "description": "This will usually be an IP address, unless the syslog server is set up to respond using a DNS hostname.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "ServerPort": {
              "title": "Server Port",
              "description": "The port of the logging server.",
              "type": "integer"
            },
            "ServerType": {
              "title": "Server Type",
              "description": "",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "syslog",
                      "Syslog"
                    ]
                  ]
                }
              }
            },
            "SyslogOptions": {
              "title": "Syslog Options",
              "description": "Syslog-specific options",
              "type": {
                "dictionary": {
                  "LogFacility": {
                    "title": "Log Facility",
                    "description": "Configure syslog facility.",
                    "type": "integer"
                  },
                  "LogSeverity": {
                    "title": "Log Severity",
                    "description": "Configure syslog severity.",
                    "type": "integer"
                  },
                  "MaximumMessageSize": {
                    "title": "Maximum Message Size",
                    "description": "Specify the maximum size of the syslog message (header + event message). If the syslog message is larger than the specified maximum, the message will be truncated at the end.",
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "RequireAuthentication": {
        "title": "Require User Authentication",
        "description": "Requires authentication before using Privileges.app. If set to true, the logged-in user is prompted to authenticate via Touch ID or by entering their account password.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "cx.c3.theunarchiver": {
    "title": "The Unarchiver (MAS)",
    "description": "The Unarchiver settings",
    "properties": {
      "OnboardingUserViewedWelcomeSlide": {
        "title": "Suppress Welcome Screen",
        "description": "Suppress \"Welcome to The Unarchiver!\" slide.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "de.fau.rrze.NetworkShareMounter": {
    "title": "Network Share Mounter",
    "description": "Network Share Mounter settings",
    "properties": {
      "autostart": {
        "title": "Enable Autostart",
        "description": "Optional. If set to true, the app will be launched on user-login.",
        "type": "boolean"
      },
      "canChangeAutostart": {
        "title": "Can Change Autostart",
        "description": "Optional. If set to false, the user can not change the Autostart option.",
        "type": "boolean"
      },
      "canQuit": {
        "title": "Allow to Quit App",
        "description": "Optional. If set to true, the user can quit the app",
        "type": "boolean"
      },
      "helpURL": {
        "title": "Help URL",
        "description": "Configure a help URL to help users interact with the application.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "managedNetworkShares": {
        "title": "Managed network shares",
        "description": "Array with managed network shares.",
        "type": {
          "array": [
            {
              "dictionary": {
                "authType": {
                  "title": "Authentication type",
                  "description": "Authentication type for the share, it can be either through Kerberos (krb) or using a username/password (auth). Default: Kerberos.",
                  "type": {
                    "string": {
                      "rangeList": [
                        [
                          "krb",
                          "Kerberos"
                        ],
                        [
                          "password",
                          "Password"
                        ]
                      ]
                    }
                  }
                },
                "mountPoint": {
                  "title": "Mount point name (Optional)",
                  "description": "Optional: Change the mount point name for the network share. Leave blank for the default value (recommended)",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "networkShare": {
                  "title": "Server and share",
                  "description": "Example: smb://filer.your.domain.tld/share. Note: %USERNAME% will be replaced with the current user's login name.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "username": {
                  "title": "Username (Optional)",
                  "description": "Optional: Predefine a username for authentication using username/password",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "networkShares": {
        "title": "Network shares",
        "description": "Array with all network shares. Example: smb://filer.your.domain/share. Note: %USERNAME% will be replaced with the login name of the current user.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "unmountOnExit": {
        "title": "Unmount Shares on Exit",
        "description": "Configure a help URL to help users interact with the application.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "edu.ncsu.confboard": {
    "title": "ConfBoard",
    "description": "ConfBoard Settings",
    "properties": {
      "baseURL": {
        "title": "URL",
        "description": "The base URL to the folder containing the images.txt file or JSON information. Do NOT include trailing backslash.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "groupLabel": {
        "title": "Group Label",
        "description": "String to be added after the baseURL.  Using images.txt this adds after the baseURL and before images.txt.  Using JSON this adds after the baseURL. Can be used to specify a folder on web server with different images.txt or as ? parameter string for JSON feed. ",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "reloadContentTimer": {
        "title": "Reload Image List Time",
        "description": "Time between reloading the list of image links",
        "type": "integer"
      },
      "rotateImageTimer": {
        "title": "Image Rotation Time",
        "description": "Time each image will stay on screen.",
        "type": "integer"
      },
      "shouldDisplayName": {
        "title": "Display Device Name",
        "description": "Show name of device on screen",
        "type": "boolean"
      },
      "shouldUseJSON": {
        "title": "Use ConfBoard JSON data file",
        "description": "Base URL is a JSON file or feed not text list of URIs.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "edu.psu.macoslaps": {
    "title": "macOS LAPS",
    "description": "macOS LAPS settings",
    "properties": {
      "DaysTillExpiration": {
        "title": "Days Till Password Expiration",
        "type": "integer"
      },
      "ExclusionSets": {
        "title": "Exclusion Sets",
        "description": "Exclude any character set you'd like from the randomly generated password.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "letters",
                    "Letters"
                  ],
                  [
                    "numbers",
                    "Numbers"
                  ],
                  [
                    "symbols",
                    "Symbols"
                  ]
                ]
              }
            }
          ]
        }
      },
      "FirstPass": {
        "title": "First Password",
        "description": "Use this key if your LAPS Admin is a FileVault user. The script will read this key in if there isn't a keyhcain entry in System keychain for macOSLAPS. Once this has been completed, the keychain entry will then be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LocalAdminAccount": {
        "title": "Local Admin Account Username",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Method": {
        "title": "Method",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordGrouping": {
        "title": "Password Grouping",
        "type": "integer"
      },
      "PasswordLength": {
        "title": "Password Length",
        "type": "integer"
      },
      "PasswordRequirements": {
        "title": "Password Requirements",
        "description": "Specifies the password requirements.",
        "type": {
          "dictionary": {
            "Lowercase": {
              "title": "Minimum Lowercase Letters",
              "description": "The minimum number of lowercase letters in a generated password.",
              "type": "integer"
            },
            "Number": {
              "title": "Minimum Numeric Characters",
              "description": "The minimum number of numeric characters in a generated password.",
              "type": "integer"
            },
            "Symbol": {
              "title": "Minimum Symbols",
              "description": "The minimum number of non-alphanumeric characters in a generated password.",
              "type": "integer"
            },
            "Uppercase": {
              "title": "Minimum Uppercase Letters",
              "description": "The minimum number of uppercase letters in a generated password.",
              "type": "integer"
            }
          }
        }
      },
      "PasswordSeparator": {
        "title": "Password Separator",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PreferredDC": {
        "title": "Preferred Domain Controller",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RemoveKeyChain": {
        "title": "Remove Keychain",
        "type": "boolean"
      },
      "RemovePassChars": {
        "title": "Password Characters to Exclude",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "fr.handbrake.HandBrake": {
    "title": "Handbrake",
    "description": "Use this section to define settings for the Handbrake video transcoder",
    "properties": {
      "SUAllowsAutomaticUpdates": {
        "title": "Automatic Update Install Prompt",
        "description": "Controls the automatic update install prompt. When enabled, presents users with the option to allow automatic download and install of available updates. If disabled, disallows automatic updates and requires manual installation every time.",
        "type": "boolean"
      },
      "SUAutomaticallyUpdate": {
        "title": "Enable Automatic Silent Updates",
        "description": "Controls automatic silent updates. If enabled, users will not be informed about updates and updates will be silently installed when the app quits.",
        "type": "boolean"
      },
      "SUEnableAutomaticChecks": {
        "title": "Enable Automatic Update Checks",
        "description": "Controls automatic update checks.",
        "type": "boolean"
      },
      "SUFeedURL": {
        "title": "Sparkle Feed URL",
        "description": "Setting this to a non-existent URL will disable the ability for users to manually check for updates. Useful when you intend to use your own software distribution mechanism to deploy updates.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SUScheduledCheckInterval": {
        "title": "Automatic Update Check Interval",
        "description": "Controls the automatic update check interval. The default is 1 day (86400 seconds). Setting to 0 disables updates.",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "io.tailscale.ipn.macos": {
    "title": "Tailscale (MAS)",
    "description": "Configure settings for the Mac App Store variant of the Tailscale client.",
    "properties": {
      "AllowIncomingConnections": {
        "title": "Allow incoming connections",
        "description": "Determines whether Tailscale should allow incoming connections to the device.",
        "type": {
          "string": {
            "rangeList": [
              [
                "always",
                "Always"
              ],
              [
                "never",
                "Never"
              ],
              [
                "user-decides",
                "User Decides"
              ]
            ]
          }
        }
      },
      "ExitNodeAllowLANAccess": {
        "title": "Allow Local Network Access when an exit node is in use",
        "description": "Allow Local Network Access determines whether users can still access devices on the local network while using an exit node.",
        "type": {
          "string": {
            "rangeList": [
              [
                "always",
                "Always"
              ],
              [
                "never",
                "Never"
              ],
              [
                "user-decides",
                "User Decides"
              ]
            ]
          }
        }
      },
      "ExitNodeID": {
        "title": "Forced Exit Node ID",
        "description": "Forces the Tailscale client to always use the given exit node. This can be useful if you wish to route all Internet traffic through a node for inspection or logging purposes. Users won't be able to disable or choose another exit node when this policy is active. A message will be displayed in the client UI informing users about this restriction. The value for this key should be the ID of an exit node device. You can find the ID for any device in your tailnet by looking at the Machines page of the admin console, or by using the Tailscale API. Note that if a forced exit node goes offline, Internet connectivity will be unavailable on client devices until the exit node comes back online.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExitNodesPicker": {
        "title": "Show/hide exit nodes picker",
        "description": "Shows or hides all UI items to choose an exit node in the Tailscale client.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "ForceEnabled": {
        "title": "Force Tailscale to always be running",
        "description": "When set to true, this boolean instructs Tailscale to always be connected and actively monitor the tunnel state for disconnections. The Disconnect toggle will be disabled, to prevent users from disabling the VPN themselves. An attempt to disconnect will present a banner informing the user the organization’s policy prevents Tailscale from being disconnected. If the client detects the VPN tunnel is down because the Tailscale VPN process was terminated, Tailscale will automatically restart it and reconnect. You might want to use this policy together with an always-on VPN configuration profile.",
        "type": "boolean"
      },
      "HiddenNetworkDevices": {
        "title": "Hide categories of network devices",
        "description": "Can be used to hide one or more categories of network devices normally displayed in the Tailscale client. Administrators can choose to hide: devices owned by the current user; devices owned by other users; tagged devices. If all three options are chosen, the \"Network Devices\" menu item disappears entirely and users aren’t able to see any device on the tailnet.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "current-user",
                    "Devices belonging to the current user"
                  ],
                  [
                    "other-users",
                    "Devices belonging to other users"
                  ],
                  [
                    "tagged-devices",
                    "Tagged devices"
                  ]
                ]
              }
            }
          ]
        }
      },
      "IPAddressCopiedAlertSuppressed": {
        "title": "Suppress IP Address Copied notifications",
        "description": "When you use the Tailscale menu bar item to copy to the Clipboard the IP address of a device, a notification displaying the IP address is presented. Use this to suppress this Copied IP address to clipboard notification.",
        "type": "boolean"
      },
      "KeyExpirationNotice": {
        "title": "Key Expiration Notice Interval",
        "description": "The KeyExpirationNotice policy controls how long before key expiry should a notice be displayed. The default is 24 hours (\"24h\"). Use a Go-style Duration for this policy value, for instance \"24h\" or \"5h25m30s\".",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LoginURL": {
        "title": "Custom control server URL",
        "description": "The LoginURL policy can be used to specify a custom control server URL. This should not be changed unless you are not using the standard Tailscale server. Use this policy if you’re deploying your own server, such as Headscale.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ManageTailnetLock": {
        "title": "Show/hide tailnet lock settings",
        "description": "Shows or hides the \"Manage Tailnet lock\" menu item.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "ManagedByCaption": {
        "title": "Organization Details: Caption",
        "description": "Specifies a caption to be displayed in the Managed By view in the Tailscale client. Use this string value to provide your users with information on how to reach support resources for Tailscale in your organization.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ManagedByOrganizationName": {
        "title": "Organization Details: Name",
        "description": "Specifies the name of the organization managing Tailscale, for instance “XYZ Corp, Inc.”. The value will be displayed in the Tailscale client, so that users can easily reach your internal support resources.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ManagedByURL": {
        "title": "Organization Details: Support URL",
        "description": "Specifies a URL pointing to a help desk webpage, or other helpful resources for users in the organization. Clicking the Support button in the Tailscale UI will open this webpage.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PostureChecking": {
        "title": "Gather device posture data",
        "description": "Enables gathering of device posture data.",
        "type": {
          "string": {
            "rangeList": [
              [
                "always",
                "Always"
              ],
              [
                "never",
                "Never"
              ],
              [
                "user-decides",
                "User Decides"
              ]
            ]
          }
        }
      },
      "ResetToDefaults": {
        "title": "Show/hide the \"Reset to Defaults\" menu item",
        "description": "Shows or hides the \"Reset to Defaults\" menu item.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "RunExitNode": {
        "title": "Show/hide \"Run as Exit Node\" menu item",
        "description": "Shows or hides the \"Run as Exit Node\" menu item, controlling the user's ability to toggle this option.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "StartOnLoginMenuItem": {
        "title": "Show/hide \"Start on Login\" menu item",
        "description": "Shows or hides the \"Start on Login\" menu item, controlling the user's ability to toggle this option.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "Tailnet": {
        "title": "Suggested or required tailnet name",
        "description": "Specify a tailnet, and its identity provider will be used on the login page. If the policy value is prefixed with \"required:\"\", Tailscale will force that identity provider to be used and won’t allow logging in with anything else.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TailscaleOnboardingSeen": {
        "title": "Suppress the first launch onboarding flow",
        "description": "When you start Tailscale on your Mac for the first time, an onboarding flow is presented. It explains the Tailscale privacy policy, and guides the user in setting up the VPN configuration on their Mac. You might want to disable this onboarding flow if you are going to automatically set up the VPN configuration on the system by using a configuration profile. In order to do so, this boolean suppresses the onboarding flow when Tailscale launches for the first time and the value is set to true.",
        "type": "boolean"
      },
      "TailscaleStartOnLogin": {
        "title": "Automatically start Tailscale when the user logs in",
        "description": "The first time the application is opened on a Mac, Tailscale installs a macOS login helper. This allows Tailscale to start automatically when the user logs into their account. This boolean controls whether the login helper should start Tailscale at login time.",
        "type": "boolean"
      },
      "TestMenu": {
        "title": "Show/hide Debug menu",
        "description": "Shows or hides the debug menu in the Tailscale client. On macOS, this system policy will also hide any information displayed when holding down the Option key while clicking on the Tailscale menubar item.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "UpdateMenu": {
        "title": "Show/hide \"Update Available\" menu item",
        "description": "Shows or hides the \"Update Available\" menu item which appears when a newer version of Tailscale is available.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "UseTailscaleDNSSettings": {
        "title": "Use Tailscale DNS Settings",
        "description": "Determines whether to apply the DNS configuration provided by the coordination server when the tunnel is connected.",
        "type": {
          "string": {
            "rangeList": [
              [
                "always",
                "Always"
              ],
              [
                "never",
                "Never"
              ],
              [
                "user-decides",
                "User Decides"
              ]
            ]
          }
        }
      },
      "UseTailscaleSubnets": {
        "title": "Use Tailscale Subnets",
        "description": "Determines whether the client accepts subnets advertised by other nodes in your tailnet.",
        "type": {
          "string": {
            "rangeList": [
              [
                "always",
                "Always"
              ],
              [
                "never",
                "Never"
              ],
              [
                "user-decides",
                "User Decides"
              ]
            ]
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "io.tailscale.ipn.macsys": {
    "title": "Tailscale (Standalone)",
    "description": "Configure settings for the Standalone variant of the Tailscale client.",
    "properties": {
      "AllowIncomingConnections": {
        "title": "Allow incoming connections",
        "description": "Determines whether Tailscale should allow incoming connections to the device.",
        "type": {
          "string": {
            "rangeList": [
              [
                "always",
                "Always"
              ],
              [
                "never",
                "Never"
              ],
              [
                "user-decides",
                "User Decides"
              ]
            ]
          }
        }
      },
      "ApplyUpdates": {
        "title": "Show/hide the automatic updates settings UI",
        "description": "Use this if you do not want to allow the user to turn the automatic installation of updates on or off. When set to hide, the \"Automatically install updates\" menu item won’t be shown to the user, and the user won’t be able to configure automatic updates.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "ExitNodeAllowLANAccess": {
        "title": "Allow Local Network Access when an exit node is in use",
        "description": "Allow Local Network Access determines whether users can still access devices on the local network while using an exit node.",
        "type": {
          "string": {
            "rangeList": [
              [
                "always",
                "Always"
              ],
              [
                "never",
                "Never"
              ],
              [
                "user-decides",
                "User Decides"
              ]
            ]
          }
        }
      },
      "ExitNodeID": {
        "title": "Forced Exit Node ID",
        "description": "Forces the Tailscale client to always use the given exit node. This can be useful if you wish to route all Internet traffic through a node for inspection or logging purposes. Users won't be able to disable or choose another exit node when this policy is active. A message will be displayed in the client UI informing users about this restriction. The value for this key should be the ID of an exit node device. You can find the ID for any device in your tailnet by looking at the Machines page of the admin console, or by using the Tailscale API. Note that if a forced exit node goes offline, Internet connectivity will be unavailable on client devices until the exit node comes back online.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExitNodesPicker": {
        "title": "Show/hide exit nodes picker",
        "description": "Shows or hides all UI items to choose an exit node in the Tailscale client.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "ForceEnabled": {
        "title": "Force Tailscale to always be running",
        "description": "When set to true, this boolean instructs Tailscale to always be connected and actively monitor the tunnel state for disconnections. The Disconnect toggle will be disabled, to prevent users from disabling the VPN themselves. An attempt to disconnect will present a banner informing the user the organization’s policy prevents Tailscale from being disconnected. If the client detects the VPN tunnel is down because the Tailscale VPN process was terminated, Tailscale will automatically restart it and reconnect. You might want to use this policy together with an always-on VPN configuration profile.",
        "type": "boolean"
      },
      "HiddenNetworkDevices": {
        "title": "Hide categories of network devices",
        "description": "Can be used to hide one or more categories of network devices normally displayed in the Tailscale client. Administrators can choose to hide: devices owned by the current user; devices owned by other users; tagged devices. If all three options are chosen, the \"Network Devices\" menu item disappears entirely and users aren’t able to see any device on the tailnet.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "current-user",
                    "Devices belonging to the current user"
                  ],
                  [
                    "other-users",
                    "Devices belonging to other users"
                  ],
                  [
                    "tagged-devices",
                    "Tagged devices"
                  ]
                ]
              }
            }
          ]
        }
      },
      "IPAddressCopiedAlertSuppressed": {
        "title": "Suppress IP Address Copied notifications",
        "description": "When you use the Tailscale menu bar item to copy to the Clipboard the IP address of a device, a notification displaying the IP address is presented. Use this to suppress this Copied IP address to clipboard notification.",
        "type": "boolean"
      },
      "KeyExpirationNotice": {
        "title": "Key Expiration Notice Interval",
        "description": "The KeyExpirationNotice policy controls how long before key expiry should a notice be displayed. The default is 24 hours (\"24h\"). Use a Go-style Duration for this policy value, for instance \"24h\" or \"5h25m30s\".",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LoginURL": {
        "title": "Custom control server URL",
        "description": "The LoginURL policy can be used to specify a custom control server URL. This should not be changed unless you are not using the standard Tailscale server. Use this policy if you’re deploying your own server, such as Headscale.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ManageTailnetLock": {
        "title": "Show/hide tailnet lock settings",
        "description": "Shows or hides the \"Manage Tailnet lock\" menu item.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "ManagedByCaption": {
        "title": "Organization Details: Caption",
        "description": "Specifies a caption to be displayed in the Managed By view in the Tailscale client. Use this string value to provide your users with information on how to reach support resources for Tailscale in your organization.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ManagedByOrganizationName": {
        "title": "Organization Details: Name",
        "description": "Specifies the name of the organization managing Tailscale, for instance “XYZ Corp, Inc.”. The value will be displayed in the Tailscale client, so that users can easily reach your internal support resources.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ManagedByURL": {
        "title": "Organization Details: Support URL",
        "description": "Specifies a URL pointing to a help desk webpage, or other helpful resources for users in the organization. Clicking the Support button in the Tailscale UI will open this webpage.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PostureChecking": {
        "title": "Gather device posture data",
        "description": "Enables gathering of device posture data.",
        "type": {
          "string": {
            "rangeList": [
              [
                "always",
                "Always"
              ],
              [
                "never",
                "Never"
              ],
              [
                "user-decides",
                "User Decides"
              ]
            ]
          }
        }
      },
      "ResetToDefaults": {
        "title": "Show/hide the \"Reset to Defaults\" menu item",
        "description": "Shows or hides the \"Reset to Defaults\" menu item.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "RunExitNode": {
        "title": "Show/hide \"Run as Exit Node\" menu item",
        "description": "Shows or hides the \"Run as Exit Node\" menu item, controlling the user's ability to toggle this option.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "SUAutomaticallyUpdate": {
        "title": "Install updates automatically",
        "description": "If you are using the Standalone version of Tailscale for macOS, the client can also install updates automatically. This feature also relies on the Sparkle framework. We recommend that you always turn this feature on, in order to ensure your users receive any security updates in a timely manner. However, if you manually manage updates, or prefer your users to be notified but to manually update, you can disable the automatic installation. When set to false, the standalone variant of Tailscale for macOS will require user input before updates are installed.",
        "type": "boolean"
      },
      "SUEnableAutomaticChecks": {
        "title": "Check for updates automatically",
        "description": "If you are using the Standalone version of Tailscale for macOS, the client will periodically check for updates automatically and notify the user that a new version is available, using the Sparkle framework. We recommend that you leave this feature on, in order to ensure your users receive any security updates in a timely manner. However, you might prefer to manually deploy updates and disable notifications of new available versions. Set this value to false to disable automatically checking for updates.",
        "type": "boolean"
      },
      "StartOnLoginMenuItem": {
        "title": "Show/hide \"Start on Login\" menu item",
        "description": "Shows or hides the \"Start on Login\" menu item, controlling the user's ability to toggle this option.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "Tailnet": {
        "title": "Suggested or required tailnet name",
        "description": "Specify a tailnet, and its identity provider will be used on the login page. If the policy value is prefixed with \"required:\"\", Tailscale will force that identity provider to be used and won’t allow logging in with anything else.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TailscaleOnboardingSeen": {
        "title": "Suppress the first launch onboarding flow",
        "description": "When you start Tailscale on your Mac for the first time, an onboarding flow is presented. It explains the Tailscale privacy policy, and guides the user in setting up the VPN configuration on their Mac. You might want to disable this onboarding flow if you are going to automatically set up the VPN configuration on the system by using a configuration profile. In order to do so, this boolean suppresses the onboarding flow when Tailscale launches for the first time and the value is set to true.",
        "type": "boolean"
      },
      "TailscaleStartOnLogin": {
        "title": "Automatically start Tailscale when the user logs in",
        "description": "The first time the application is opened on a Mac, Tailscale installs a macOS login helper. This allows Tailscale to start automatically when the user logs into their account. This boolean controls whether the login helper should start Tailscale at login time.",
        "type": "boolean"
      },
      "TestMenu": {
        "title": "Show/hide Debug menu",
        "description": "Shows or hides the debug menu in the Tailscale client. On macOS, this system policy will also hide any information displayed when holding down the Option key while clicking on the Tailscale menubar item.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "UnstableUpdates": {
        "title": "Allow updating to unstable builds",
        "description": "Setting UnstableUpdates to \"never\" means that your users won’t be able to update to unstable versions of the client from the in-app UI. You can deploy this policy to prevent non-tech-savvy users from enrolling in pre-release builds of the client, which might be more prone to issues.",
        "type": {
          "string": {
            "rangeList": [
              [
                "always",
                "Always"
              ],
              [
                "never",
                "Never"
              ],
              [
                "user-decides",
                "User Decides"
              ]
            ]
          }
        }
      },
      "UpdateMenu": {
        "title": "Show/hide \"Update Available\" menu item",
        "description": "Shows or hides the \"Update Available\" menu item which appears when a newer version of Tailscale is available.",
        "type": {
          "string": {
            "rangeList": [
              [
                "show",
                "Show"
              ],
              [
                "hide",
                "Hide"
              ]
            ]
          }
        }
      },
      "UseTailscaleDNSSettings": {
        "title": "Use Tailscale DNS Settings",
        "description": "Determines whether to apply the DNS configuration provided by the coordination server when the tunnel is connected.",
        "type": {
          "string": {
            "rangeList": [
              [
                "always",
                "Always"
              ],
              [
                "never",
                "Never"
              ],
              [
                "user-decides",
                "User Decides"
              ]
            ]
          }
        }
      },
      "UseTailscaleSubnets": {
        "title": "Use Tailscale Subnets",
        "description": "Determines whether the client accepts subnets advertised by other nodes in your tailnet.",
        "type": {
          "string": {
            "rangeList": [
              [
                "always",
                "Always"
              ],
              [
                "never",
                "Never"
              ],
              [
                "user-decides",
                "User Decides"
              ]
            ]
          }
        }
      }
    },
    "supervised": false,
    "unique": false
  },
  "loginwindow": {
    "title": "Login Window: Login Items",
    "description": "Login Window: Login Items settings",
    "properties": {
      "AutoLaunchedApplicationDictionary-managed": {
        "title": "Launch network home share point at login",
        "description": "Automatically launch the users network home share point when logging in.",
        "type": {
          "array": [
            {
              "dictionary": {
                "AuthenticateAsLoginUserShortName": {
                  "title": "Authenticate with short name.",
                  "description": "Authenticate to the URL with the current users short name. Required if URL is specified, but not for Path",
                  "type": "boolean"
                },
                "Hide": {
                  "title": "Hide",
                  "description": "Hide application at launch.",
                  "type": "boolean"
                },
                "MCX-NetworkHomeDirectoryItem": {
                  "title": "Mount network home",
                  "description": "Mount network home.",
                  "type": "boolean"
                }
              }
            }
          ]
        }
      },
      "DisableLoginItemsSuppression": {
        "title": "Disable shift to suppress login items",
        "description": "Prevent users from disabling login items launching using the Shift key.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "menu.nomad.NoMADPro": {
    "title": "NoMAD Pro",
    "description": "NoMAD Pro settings",
    "properties": {
      "ADExpirationShow": {
        "title": "ADExpirationShow",
        "description": "Shows a menu item beneath the current user's name showing the user's password expiration as determined by AD.",
        "type": "boolean"
      },
      "ActionsUpdateTime": {
        "title": "ActionsUpdateTime",
        "description": "Number of minutes between updating the Actions Menu.",
        "type": "integer"
      },
      "AuthServer": {
        "title": "AuthServer",
        "description": "URL for the Okta server, note no preceding https: is required.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AutoAuth": {
        "title": "AutoAuth",
        "description": "Determines if web extensions automatically authenticate via the NoMAD Pro UI.",
        "type": "boolean"
      },
      "ChangePasswordOrder": {
        "title": "ChangePasswordOrder",
        "description": "Determines the order and setting for the password change menu. NOT IMPLEMENTED YET, THERE IS NO DOCUMENTATION ON THIS KEY.",
        "type": {
          "array": [
            "plist"
          ]
        }
      },
      "ChangePasswordTimer": {
        "title": "ChangePasswordTimer",
        "description": "Time in minutes until the user is prompted to sign in again after a Password Change.",
        "type": "integer"
      },
      "CheckSafariExtension": {
        "title": "CheckSafariExtension",
        "description": "Determines if the user is warned that the NoMAD Pro extension has not been enabled in Safari.",
        "type": "boolean"
      },
      "DontShowWelcome": {
        "title": "DontShowWelcome",
        "description": "Disables the showing of the welcome splash screen on launch.",
        "type": "boolean"
      },
      "ExpirationWarningDays": {
        "title": "ExpirationWarningDays",
        "description": "Number of days remaining before sending notifications via the Notification Center.",
        "type": "integer"
      },
      "ExportableKey": {
        "title": "ExportableKey",
        "description": "Allows the private key of the user certificate to be exported.",
        "type": "boolean"
      },
      "GetHelpOptions": {
        "title": "GetHelpOptions",
        "description": "URL or Path for GetHelpType (<<serial>>, <<fullname>>, <<shortname>> and <<domain>> are currently supported as substitutions)",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "GetHelpType": {
        "title": "GetHelpType",
        "description": "Determines type of GetHelp function",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HideAbout": {
        "title": "HideAbout",
        "description": "Hides the About menu item.",
        "type": "boolean"
      },
      "HideActions": {
        "title": "HideActions",
        "description": "Hides the Actions menu item.",
        "type": "boolean"
      },
      "HideChangePassword": {
        "title": "HideChangePassword",
        "description": "Hides the Change Password menu item.",
        "type": "boolean"
      },
      "HideGetHelp": {
        "title": "HideGetHelp",
        "description": "Hides the Get Help menu item.",
        "type": "boolean"
      },
      "HideGetSoftware": {
        "title": "HideGetSoftware",
        "description": "Hides the Get Software menu item.",
        "type": "boolean"
      },
      "HideLockScreen": {
        "title": "HideLockScreen",
        "description": "Hides the Lock Screen menu item.",
        "type": "boolean"
      },
      "HidePreferences": {
        "title": "HidePreferences",
        "description": "Hides the Preferences menu item.",
        "type": "boolean"
      },
      "HideQuit": {
        "title": "HideQuit",
        "description": "Hides the Quit menu item.",
        "type": "boolean"
      },
      "HideSignIn": {
        "title": "HideSignIn",
        "description": "Hides the Sign In menu item.",
        "type": "boolean"
      },
      "IgnoreDomainReachability": {
        "title": "IgnoreDomainReachability",
        "description": "Determines if SRV record lookups are used to determine if the AD domain is reachable.",
        "type": "boolean"
      },
      "KerberosRealm": {
        "title": "KerberosRealm",
        "description": "Kerberos realm to use to get Kerberos tickets as a side effect of authentication.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "KerberosRenew": {
        "title": "KerberosRenew",
        "description": "Determines if the Kerberos tickets should be renewed or not.",
        "type": "boolean"
      },
      "KerberosShortName": {
        "title": "KerberosShortName",
        "description": "The shortname to use for Kerberos tickets. If unset the sign in name is used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "KerberosShortNameAsk": {
        "title": "KerberosShortNameAsk",
        "description": "Determines if the user is asked to enter their Kerberos short name on first sign in.",
        "type": "boolean"
      },
      "KerberosShortNameAskMessage": {
        "title": "KerberosShortNameAskMessage",
        "description": "The message text when asking the user for their Kerberos short name.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "KeychainItems": {
        "title": "KeychainItems",
        "description": "Items to update when the user's local password is updated as well.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Keychain Item",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Account",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "KeychainItemsDebug": {
        "title": "KeychainItemsDebug",
        "description": "Updates keychain items on every sign in. Used for debugging.",
        "type": "boolean"
      },
      "LDAPServers": {
        "title": "LDAPServers",
        "description": "Specific Domain Controllers to use for AD lookups.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "LabelPassword": {
        "title": "LabelPassword",
        "description": "The text label for the password field in the Sign In window.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LabelUsername": {
        "title": "LabelUsername",
        "description": "The text label for the username field in the Sign In window.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LicenseFile": {
        "title": "LicenseFile",
        "description": "The contents of a .nomadlicense file encoded as Base64 data.",
        "type": "data"
      },
      "LocalPasswordSync": {
        "title": "LocalPasswordSync",
        "description": "Determines if the Okta password is synchronized with the local account.",
        "type": "boolean"
      },
      "LocalPasswordSyncMessage": {
        "title": "LocalPasswordSyncMessage",
        "description": "The alert dialog text that the user is presented with when asked to enter in his or her local password.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LocalPasswordSyncOnMatchOnly": {
        "title": "LocalPasswordSyncOnMatchOnly",
        "description": "Only sync the password if the Okta account name is the same as the local account name.",
        "type": "boolean"
      },
      "MenuAbout": {
        "title": "MenuAbout",
        "description": "Menu item text for the About item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuActions": {
        "title": "MenuActions",
        "description": "Menu item text for the Actions item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuChangePassword": {
        "title": "MenuChangePassword",
        "description": "Menu item text for the Change Password item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuGetHelp": {
        "title": "MenuGetHelp",
        "description": "Menu item text for the Get Help item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuGetSoftware": {
        "title": "MenuGetSoftware",
        "description": "Menu item text for the Get Software item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuIcon": {
        "title": "MenuIcon",
        "description": "Path to a 16x16 pixel image to use as the icon in the menu bar.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuLockScreen": {
        "title": "MenuLockScreen",
        "description": "Menu item text for the Lock Screen item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuPreferences": {
        "title": "MenuPreferences",
        "description": "Menu item text for the Preferences item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MenuSignIn": {
        "title": "MenuSignIn",
        "description": "Menu item text for the Sign In item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MessagePasswordChangePolicy": {
        "title": "MessagePasswordChangePolicy",
        "description": "Message text when changing password via Kerberos for the AD complexity policy.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MessagePluginDisabled": {
        "title": "MessagePluginDisabled",
        "description": "Text to show when alerting the user that the Safari plugin has not been enabled.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_General": {
        "title": "PFC_SegmentedControl_General",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_Menu": {
        "title": "PFC_SegmentedControl_Menu",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_Password": {
        "title": "PFC_SegmentedControl_Password",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordChangeCommand": {
        "title": "PasswordChangeCommand",
        "description": "Script or other binary to run when a password is successfully changed.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordExpirationMenu": {
        "title": "PasswordExpirationMenu",
        "description": "Determines if the countdown before password expiration is shown in the menu.",
        "type": "boolean"
      },
      "PasswordExpirationMenuDays": {
        "title": "PasswordExpirationMenuDays",
        "description": "Number of days remaining before the password expiration countdown is shown in the menu bar.",
        "type": "integer"
      },
      "PasswordPolicy": {
        "title": "PasswordPolicy",
        "description": "Complexity policy for changing the password via Kerberos.",
        "type": {
          "dictionary": {
            "minLength": {
              "title": "minLength",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minLowerCase": {
              "title": "minLowerCase",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minMatches": {
              "title": "minMatches",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minNumber": {
              "title": "minNumber",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minSymbol": {
              "title": "minSymbol",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "minUpperCase": {
              "title": "minUpperCase",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "PeriodicUpdateTime": {
        "title": "PeriodicUpdateTime",
        "description": "Time in minutes between periodic background updates.",
        "type": "integer"
      },
      "SelfServicePath": {
        "title": "SelfServicePath",
        "description": "File path for a Self Service application not found automatically.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SignInCommand": {
        "title": "SignInCommand",
        "description": "Path to a script or other binary to be run after a successful sign in.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SignInLogo": {
        "title": "SignInLogo",
        "description": "Path to a logo file. The space is 342x90 pixels.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Template": {
        "title": "Template",
        "description": "Certificate template to request when using the Windows CA.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "TicketsOnSignIn": {
        "title": "TicketsOnSignIn",
        "description": "Causes NoMAD Pro to get Kerberos Tickets.",
        "type": "boolean"
      },
      "TitleSignIn": {
        "title": "TitleSignIn",
        "description": "Title of the Sign In window.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UseKeychain": {
        "title": "UseKeychain",
        "description": "Determines if the Okta password is stored in the user's keychain.",
        "type": "boolean"
      },
      "UseKeychainPrompt": {
        "title": "UseKeychainPrompt",
        "description": "Shows the Sign In window on launch unless the user has a password in the keychain.",
        "type": "boolean"
      },
      "UseKeychainPromptExlusions": {
        "title": "UseKeychainPromptExlusions",
        "description": "List of users that can ignore the keychain prompt.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "WarnOnPasswordExpiration": {
        "title": "WarnOnPasswordExpiration",
        "description": "Determines whether NoMAD Pro should warn the user on sign in if the password is about to expire.",
        "type": "boolean"
      },
      "WifiNetworks": {
        "title": "WifiNetworks",
        "description": "A list of wireless networks that the certificate created by NoMAD Pro should be associated with.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "X509CA": {
        "title": "X509CA",
        "description": "FQDN of the Windows web CA for NoMAD Pro to use for certificates.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "menu.nomad.login.ad": {
    "title": "NoMAD Login",
    "description": "NoMAD Login settings",
    "properties": {
      "ADDomain": {
        "title": "Active Directory Domain",
        "description": "Defines the AD domain you're working with.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AdditionalADDomainList": {
        "title": "Domain Dropdown List",
        "description": "List of LDAP servers to display in the pulldown menu in the Login Window. Users can select a domain from the menu and then only enter the shortname in the text field.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AdditionalADDomains": {
        "title": "Additional Active Directory Domains",
        "description": "List of domains to append at the loginwindow. If not set, the standard Managed Domain policy will apply.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AliasNTName": {
        "title": "Alias NT Name",
        "type": "boolean"
      },
      "AliasUPN": {
        "title": "Alias User Principal Name",
        "type": "boolean"
      },
      "AllowNetworkSelection": {
        "title": "Show Network Selection",
        "description": "If enabled, the network selection button is shown",
        "type": "boolean"
      },
      "BackgroundImage": {
        "title": "Login Window Background Image",
        "description": "Path to the background image to be used.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BackgroundImageAlpha": {
        "title": "Login Window Background Image Alpha",
        "description": "Alpha value of the background image.",
        "type": "integer"
      },
      "BackgroundImageData": {
        "title": "Background Image Data",
        "description": "Background to display on the login screen.",
        "type": "data"
      },
      "CreateAdminIfGroupMember": {
        "title": "Group Membership to Create Admin Users",
        "description": "List of groups that should have its members created as local administrators.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "CreateAdminUser": {
        "title": "Create Admin Users",
        "description": "Will place any local user created at login by NoMAD Login in the local admin group.",
        "type": "boolean"
      },
      "CustomNoMADLocation": {
        "title": "Custom NoMAD Location",
        "description": "If defined it specifies the custom location of the application to be given access to the keychain item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultSystemInformation": {
        "title": "Default System Information",
        "description": "Defines which system information should be showed on login window, by default",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DemobilizeForcePasswordCheck": {
        "title": "Demobilize Force Password Check",
        "description": "If true, a password input at the NoMAD login window will be required to demobilize",
        "type": "boolean"
      },
      "DemobilizeSaveAltSecurityIdentities": {
        "title": "Demobilize Preserve AllSecurityIdentities",
        "description": "If true, the AltSecurityIdentities user record attribute should be preserved, useful when moving from mobile accounts with smart card mapping implemented.",
        "type": "boolean"
      },
      "DemobilizeUsers": {
        "title": "Demobilize Users",
        "description": "Will convert a previously cached mobile account from AD into a regular local user account on login.",
        "type": "boolean"
      },
      "DenyLocal": {
        "title": "Deny Local Users",
        "type": "boolean"
      },
      "DenyLocalExcluded": {
        "title": "Deny Local User Exclusions",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "DenyLoginUnlessGroupMember": {
        "title": "Allowed Group Membership User Logins",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "EULAPath": {
        "title": "End User License Agreement Save Path",
        "description": "Path to save acceptance records to.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EULASubTitle": {
        "title": "End User License Agreement Subtitle",
        "description": "Text for a subtitle in the EULA window.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EULAText": {
        "title": "End User License Agreement Text",
        "description": "Text to present in the EULA window.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EULATitle": {
        "title": "End User License Agreement Title",
        "description": "Text for the large title in the EULA window.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EnableFDE": {
        "title": "Enable FileVault on APFS",
        "description": "On systems using the APFS filesystem, this key will enable FileVault encryption as the user is signing in for the first time.",
        "type": "boolean"
      },
      "EnableFDERecoveryKey": {
        "title": "Enable FileVault Recovery Key",
        "description": "Write the output of the fdesetup command to /var/db/.NoMADFDESetup",
        "type": "boolean"
      },
      "EnableFDERecoveryKeyPath": {
        "title": "FileVault Recovery Key Path",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EnableFDERekey": {
        "title": "FileVault Personal Recovery Key Rotation",
        "type": "boolean"
      },
      "GUIDTool": {
        "title": "GUID Tool",
        "description": "String to determine the path of an executable that is run when a new user is created. It is expected to return the GUID that the user should be created with. It passes in the new users username as the first argument, default is to use the built in functionality",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "GuestUser": {
        "title": "Allow Guest User Login",
        "description": "Allows guest users login",
        "type": "boolean"
      },
      "GuestUserAccountPasswordPath": {
        "title": "Guest User Password Path",
        "description": "The path to write out the guest users randomly generated password",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "GuestUserAccounts": {
        "title": "Guest User Accounts",
        "description": "List of names that can be entered into the username field to trigger a guest user creation",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "GuestUserFirst": {
        "title": "Guest User First Name",
        "description": "Defines the first name of the guest user account",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "GuestUserLast": {
        "title": "Guest User Last Name",
        "description": "Defines the last name of the guest user account",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "IgnoreSites": {
        "title": "Ignore Sites",
        "type": "boolean"
      },
      "KeychainAddNoMAD": {
        "title": "Add NoMAD to Keychain",
        "description": "Add a NoMAD entry into the keychain.",
        "type": "boolean"
      },
      "KeychainCreate": {
        "title": "Create Keychain",
        "description": "Create keychain if it does not exist.",
        "type": "boolean"
      },
      "KeychainReset": {
        "title": "Reset Keychain if Password Doesn't Match",
        "description": "Reset keychain if login password doesn't match.",
        "type": "boolean"
      },
      "LDAPOverSSL": {
        "title": "LDAP Over SSL",
        "description": "Determines if NoMAD Login uses LDAP over SSL.",
        "type": "boolean"
      },
      "LDAPServers": {
        "title": "LDAPServers",
        "description": "List of LDAP servers that you would like to use for AD authentication instead of using SRV record lookup.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "LastUser": {
        "title": "Last User Shortname",
        "description": "Shortname of the last user to login. This allows NoMAD to login on first launch.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LocalFallback": {
        "title": "Local Fallback",
        "type": "boolean"
      },
      "LoginLogo": {
        "title": "Login Logo",
        "description": "Path to the logo to display on the login screen. If set to NONE, no logo will be shown.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LoginLogoAlpha": {
        "title": "Login Logo Alpha",
        "description": "Alpha value of the logo image.",
        "type": "integer"
      },
      "LoginLogoData": {
        "title": "Login Logo Data",
        "description": "Logo to display on the login screen.",
        "type": "data"
      },
      "LoginScreen": {
        "title": "macOS Style Login Window",
        "description": "If set to yes, a macOS-style loginscreen will be presented instead of the NoMAD Login loginwindow style.",
        "type": "boolean"
      },
      "ManageSecureTokens": {
        "title": "Enable Secure Token Management",
        "description": "This key will enable SecureToken management capabilites in NomadLogin 1.4. This utilizes a service account which can be modified from default using the below optional preferences.",
        "type": "boolean"
      },
      "MessagePasswordSync": {
        "title": "Password Sync Message",
        "description": "Message to show when the password needs to sync",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Migrate": {
        "title": "Migrate",
        "description": "If yes, migrate users",
        "type": "boolean"
      },
      "MigrateUsersHide": {
        "title": "Hidden Migration User",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NTtoADDomainMappings": {
        "title": "NTtoADDomainMappings",
        "description": "Maps NT to AD Domains. e.g. NOMAD: nomad.menu, would allow a user to sign in as \"NOMAD\\user\" and that would be converted to \"user@nomad.menu\" before authenticating to AD.",
        "type": {
          "dictionary": {
            "TextFields": {
              "title": "NT to AD Domain Mappings",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "addomain": {
                        "title": "AD Domain",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "ntname": {
                        "title": "NT Name",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "NotifyLogStyle": {
        "title": "Add Notify to Management Log File",
        "description": "Adds the appropriate log file to the the Notify mechanism.",
        "type": {
          "string": {
            "rangeList": [
              [
                "none",
                "None"
              ],
              [
                "jamf",
                "Jamf"
              ],
              [
                "filewave",
                "Filewave"
              ],
              [
                "munki",
                "Munki"
              ]
            ]
          }
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordOverwriteOptional": {
        "title": "Password Overwrite Optional",
        "type": "boolean"
      },
      "PasswordOverwriteSilent": {
        "title": "Password Overwrite Silent",
        "type": "boolean"
      },
      "PowerControlDisabled": {
        "title": "Hide Shutdown and Restart",
        "description": "If set to yes, hides the shutdown and restart buttons",
        "type": "boolean"
      },
      "RecursiveGroupLookup": {
        "title": "Recursive Group Lookup",
        "description": "If set to yes, group membership lookups should be done recursively",
        "type": "boolean"
      },
      "ScriptArgs": {
        "title": "Script Arguments",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ScriptPath": {
        "title": "Script Path",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecureTokenManagementEnableOnlyAdminUsers": {
        "title": "Enable Only Admin User",
        "description": "If enabled, the SecureToken service account will only enable administrative users created with NoMAD Login.",
        "type": "boolean"
      },
      "SecureTokenManagementFullName": {
        "title": "Service Account Full Name",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecureTokenManagementIconPath": {
        "title": "Secure Token Icon Path",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecureTokenManagementOnlyEnableFirstUser": {
        "title": "Only Enable First User",
        "description": "If enabled, NoMAD Login will only enable the first user that is eligable for a SecureToken, and delete the service account afterwards.",
        "type": "boolean"
      },
      "SecureTokenManagementPasswordLength": {
        "title": "Service Account Password Length",
        "description": "Defines a custom SecureToken service account password length.",
        "type": "integer"
      },
      "SecureTokenManagementPasswordLocation": {
        "title": "Service Account Password Storage Path",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecureTokenManagementUID": {
        "title": "Service Account UID",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecureTokenManagementUsername": {
        "title": "Service Account User Name",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UIDTool": {
        "title": "UID Tool",
        "description": "String to determine the path of an executable that is run when a new user is created. It is expected to return the UID that the user should be created with. It passes in the new users username as the first argument, default is to use the built in functionality",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UseCNForFullName": {
        "title": "Use User Common Name for Full Name",
        "description": "Use the the user's CN from AD instead of attempting to create the user name from the first and last name attributes of the user's AD record.",
        "type": "boolean"
      },
      "UseCNForFullNameFallback": {
        "title": "Use User Common Name for Full Name Fallback",
        "description": "Uses the CN as the fullname on the account when the givenName and sn fields are blank",
        "type": "boolean"
      },
      "UserInputLogo": {
        "title": "User Input Logo",
        "description": "Path to a logo file to use for the UserInput mechanism.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UserInputMainText": {
        "title": "User Input Text",
        "description": "Text for the UserInput mechanism.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UserInputOutputPath": {
        "title": "User Input / Output Path",
        "description": "Path where the userinfo.plist will be written.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UserInputTitle": {
        "title": "User Input Title",
        "description": "Title for the UserInput mechanism.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UserInputUI": {
        "title": "UserInputUI",
        "description": "UI elements shown during the UserInput mechanism.",
        "type": {
          "dictionary": {
            "Button": {
              "title": "Button",
              "type": {
                "dictionary": {
                  "enabled": {
                    "title": "Button Enabled",
                    "type": "boolean"
                  },
                  "title": {
                    "title": "Button",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  }
                }
              }
            },
            "PopUps": {
              "title": "User Input Pop Ups",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "items": {
                        "title": "Items",
                        "type": {
                          "array": [
                            {
                              "string": {
                                "rangeList": []
                              }
                            }
                          ]
                        }
                      },
                      "title": {
                        "title": "Title",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "TextFields": {
              "title": "User Input Text Fields",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "placeholder": {
                        "title": "Placeholder",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "title": {
                        "title": "Title",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "UserProfileImage": {
        "title": "User Profile Image",
        "description": "Path to an image to set as the user profile image.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UsernameFieldPlaceholder": {
        "title": "Username Field Placeholder",
        "description": "Placeholder text to show in the username textfield.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "menu.nomad.login.okta": {
    "title": "NoMAD Login+",
    "description": "NoMAD Login+ settings",
    "properties": {
      "AuthServer": {
        "title": "AuthServer",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BackgroundImage": {
        "title": "BackgroundImage",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CreateAdminUser": {
        "title": "CreateAdminUser",
        "type": "boolean"
      },
      "DemobilizeUsers": {
        "title": "DemobilizeUsers",
        "type": "boolean"
      },
      "DenyLocal": {
        "title": "DenyLocal",
        "type": "boolean"
      },
      "DenyLocalExcluded": {
        "title": "DenyLocalExcluded",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "EnableFDE": {
        "title": "EnableFDE",
        "type": "boolean"
      },
      "EnableFDERecoveryKey": {
        "title": "EnableFDERecoveryKey",
        "type": "boolean"
      },
      "EnableFDERecoveryKeyPath": {
        "title": "EnableFDERecoveryKeyPath",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HelpURL": {
        "title": "HelpURL",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LAPSUser": {
        "title": "LAPSUser",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LocalFallback": {
        "title": "LocalFallback",
        "type": "boolean"
      },
      "LoginLogo": {
        "title": "LoginLogo",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Migrate": {
        "title": "Migrate",
        "type": "boolean"
      },
      "MigrateUsersHide": {
        "title": "MigrateUsersHide",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "OIDCAccessClientID": {
        "title": "OIDCAccessClientID",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCAdminClientID": {
        "title": "OIDCAdminClientID",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCAuthServer": {
        "title": "OIDCAuthServer",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCRedirectURI": {
        "title": "OIDCRedirectURI",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OIDCSecondaryLoginClientID": {
        "title": "OIDCSecondaryLoginClientID",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ScriptArgs": {
        "title": "ScriptArgs",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "ScriptPath": {
        "title": "ScriptPath",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "menu.nomad.shares": {
    "title": "NoMAD Shares",
    "description": "NoMAD Shares settings",
    "properties": {
      "HomeMount": {
        "title": "HomeMount",
        "description": "This is a dictionary of attributes for scenarios where the user's home profile should be mounted.",
        "type": {
          "dictionary": {
            "Groups": {
              "title": "Groups",
              "description": "Only mount the home for members of these AD groups. Enter 'All' to allow all users and groups to mount their home.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "Mount": {
              "title": "Auto Mount Home",
              "description": "Mount the user's home automatically or not.",
              "type": "boolean"
            },
            "Options": {
              "title": "Options",
              "description": "Array of optional mount options. Refer to documentation for more information.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "IgnoreShareNames": {
        "title": "Ignored Shares",
        "description": "Specify a list of shares you'd like to ignore. (Time Machine is now ignored by default.)",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Shares": {
        "title": "Shares",
        "description": "Array of dictionaries of each share and their settings.",
        "type": {
          "array": [
            {
              "dictionary": {
                "AutoMount": {
                  "title": "AutoMount",
                  "description": "If enabled, will auto mount share.",
                  "type": "boolean"
                },
                "ConnectedOnly": {
                  "title": "ConnectedOnly",
                  "description": "If enabled, will only mount on domain.",
                  "type": "boolean"
                },
                "Groups": {
                  "title": "Groups",
                  "description": "An array of AD groups allowed to mount the share.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "LocalMount": {
                  "title": "LocalMount",
                  "description": "Optional local mount point.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Name": {
                  "title": "Name",
                  "description": "Name as it will appear in the NoMAD menu item.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Options": {
                  "title": "Options",
                  "description": "Array of optional mount options. Refer to documentation for more information.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "URL": {
                  "title": "URL",
                  "description": "The actual URL of the mount point in the form of \"smb://dc1.nomad.test/Homes\".\n\nFor the URLs, you can use variable substitution to allow for custom mounts without having to create even more XML. NoMAD understands <<domain>>, <<fullname>>, <<serial>>, <<shortname>>, <<upn>> and <<email>>",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "Version": {
        "title": "Configuration Version",
        "description": "This is the version number of the configuration specification.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "net.glencode.Particulars": {
    "title": "Particulars",
    "description": "Particulars settings",
    "properties": {
      "allNetworkInterfaces": {
        "title": "Show All Active Network Interfaces",
        "description": "When enabled in the detail level, Particulars displays information about the primary active network interface. This setting expands that to include information about all active network interfaces.",
        "type": "boolean"
      },
      "appStoreVersionCheck": {
        "title": "Checking for new version in the Mac App Store",
        "description": "Particulars checks for new Particulars versions in the Mac App Store. This check can be disabled.",
        "type": "boolean"
      },
      "coreCount": {
        "title": "CPU Core Count",
        "description": "Adds a count of CPU cores to the CPU particular. Changing this setting requires a restart of the application to take effect.",
        "type": "boolean"
      },
      "desktopBottomMargin": {
        "title": "Desktop Bottom Margin",
        "description": "Overrides desktopMargin for the bottom desktop margin",
        "type": "integer"
      },
      "desktopLeftMargin": {
        "title": "Desktop Left Margin",
        "description": "Overrides desktopMargin for the left desktop margin",
        "type": "integer"
      },
      "desktopMargin": {
        "title": "Desktop Margin",
        "description": "When displaying system information on the desktop, Particulars uses all available screen size, inset by a default margin of 21pt. Margins can be adjusted.",
        "type": "integer"
      },
      "desktopPosition": {
        "title": "Desktop Position",
        "description": "Sets the relative position of desktop system information.",
        "type": "integer"
      },
      "desktopRightMargin": {
        "title": "Desktop Right Margin",
        "description": "Overrides desktopMargin for the right desktop margin",
        "type": "integer"
      },
      "desktopTopMargin": {
        "title": "Desktop Top Margin",
        "description": "Overrides desktopMargin for the top desktop margin",
        "type": "integer"
      },
      "detailLevel": {
        "title": "Detail Level",
        "description": "Adjust detail level options. See documentation URL for instructions.",
        "type": "integer"
      },
      "dhcpLeaseRemaining": {
        "title": "Show DHCP Lease Time Remaining",
        "description": "In the default network information, Particulars shows the DHCP server address and the length of the DHCP lease. This setting adds the remaining lease time.",
        "type": "boolean"
      },
      "diskFreeSpace": {
        "title": "Disk Free Space Format",
        "description": "Free/available disk space can be displayed in multiple ways. See documentation URL for options.",
        "type": "integer"
      },
      "diskFreeSpaceNonBootVolumes": {
        "title": "Show Disk Free Space for Non-Boot Volumes",
        "description": "By default, Particulars only shows disk space for the boot disk. Enable this setting to show disk space for other disks.",
        "type": "boolean"
      },
      "dropShadow": {
        "title": "Drop Shadow",
        "description": "Determines whether the desktop system information has a drop shadow behind it.",
        "type": "boolean"
      },
      "explicitNoNetworkConfiguration": {
        "title": "Explicit No Networks Detected message",
        "description": "Displays an error message if no active network interfaces are found (assuming network is enabled in 'detailLevel').",
        "type": "boolean"
      },
      "firstRunDone": {
        "title": "Skip the First Run Experience",
        "description": "On first run, Particulars displays a welcome window that describes how it runs on the desktop and then hides all other apps and opens the settings window. To skip this first run experience, enable this setting. (Enabling labMode implies this setting.)",
        "type": "boolean"
      },
      "footerText": {
        "title": "Footer",
        "description": "Footer text is displayed in a separate paragraph below all particulars. Any leading or trailing whitespace is removed when displayed.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "headerText": {
        "title": "Header",
        "description": "Header text is displayed in a separate paragraph above all particulars. Any leading or trailing whitespace is removed when displayed.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "hideDockIcon": {
        "title": "Hide Dock Icon",
        "description": "Enabling this setting removes Particulars from the macOS Dock. Changing this setting while Particulars is running will automatically restart Particulars and open the Settings window.",
        "type": "boolean"
      },
      "ignoreHiding": {
        "title": "Ignore Hiding",
        "description": "When Particulars is running with the Dock icon shown, it will be hidden along with all other apps when you select Hide Others from another application's menu. This preference allows you to keep Particulars visible.",
        "type": "boolean"
      },
      "labMode": {
        "title": "Lab Mode",
        "description": "Lab Mode eases the deployment of Particulars in a computer lab or other mass deployment. See the documentation for more information.",
        "type": "boolean"
      },
      "labelCase": {
        "title": "Label Case",
        "description": "Sets the letter case of the labels. Each case option has a corresponding number.",
        "type": "integer"
      },
      "lightDarkText": {
        "title": "Light or Dark Text",
        "description": "Particulars has 3 options for the shade of the desktop system information: automatic, light text, or dark text. The automatic setting scans the current desktop picture to determine what setting to use. If battery life or performance is a concern, use light or dark.",
        "type": "integer"
      },
      "macAddressFormat": {
        "title": "MAC Address Format",
        "description": "By default, MAC (Media Access Control) addresses are formatted with colon separators and in lowercase. Use this setting to select another MAC address format.",
        "type": "integer"
      },
      "menuBarWidgetAppearance": {
        "title": "Menu Bar Widget Appearance",
        "description": "Sets the appearance of the menu bar widget.",
        "type": "integer"
      },
      "menuBarWidgetTextSize": {
        "title": "Menu Bar Widget Text Size",
        "description": "Sets the preferred text size in the menu bar widget in points. The default is 12. Values below 9 and above 24 are ignored. (Value may be scaled down to fit.)",
        "type": "integer"
      },
      "networkDetailLevel": {
        "title": "Network Detail Level",
        "description": "By default, all network information is displayed except the Wi-Fi SSID. It is possible to construct a custom set of network information. Use this preference to create a custom network detail level. See documentation URL for instructions.",
        "type": "integer"
      },
      "networkNotifications": {
        "title": "Network Notifications",
        "description": "When enabled, Particulars will post system notifications when it detects a change in the primary IPv4 address or the public IP address. Notifications are also governed by settings in the Notifications pane of System Settings.",
        "type": "boolean"
      },
      "operatingSystemVersionName": {
        "title": "Operating System Version Name",
        "description": "This setting adds the operating system version's marketing name (e.g., Big Sur, Catalina, etc) to the Operating System particular.",
        "type": "boolean"
      },
      "preferredDisplay": {
        "title": "Preferred Display",
        "description": "Sets the display (or monitor) on which Particulars will show desktop system information. If the display is later unavailable, Particulars will default back to the primary display. The value is an integer, taking 2 for the 2nd display, for example.",
        "type": "integer"
      },
      "showMenuBarExtra": {
        "title": "Show Particulars in the Menu Bar",
        "description": "Adds an item to the macOS menu bar that allows quick access to system information. Secondary-clicking on the menu bar item shows a menu with settings, copying, and other functions.",
        "type": "boolean"
      },
      "showOnDesktop": {
        "title": "Show Particulars on the Desktop",
        "description": "The default mode of Particulars is to present system information on the desktop. This can be disabled, usually in favor of showing Particulars in the menu bar.",
        "type": "boolean"
      },
      "subnetMaskCIDRNotation": {
        "title": "Use CIDR Notation for Subnet Mask",
        "description": "This setting displays subnet masks in the short CIDR (Classless Inter-domain Routing) notation. For example, 255.255.254.0 will show as /23.",
        "type": "boolean"
      },
      "textSize": {
        "title": "Text Size",
        "description": "Sets the preferred text size for the desktop system information in points. The default is 18. Values between 12 and 24 are typical. (Value may be scaled down to fit.)",
        "type": "integer"
      },
      "textTheme": {
        "title": "Text Theme",
        "description": "Sets the theme of desktop system information. Each theme has a corresponding number.",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "net.glencode.Particulars.Widget": {
    "title": "Particulars Today Extension (Widget)",
    "description": "Particulars Today Extension (Widget) settings",
    "properties": {
      "coreCount": {
        "title": "Show CPU Core Count",
        "description": "Adds a count of CPU cores to the CPU item. Changing this preference requires a restart of the application/widget to take effect.",
        "type": "boolean"
      },
      "detailLevel": {
        "title": "Detail Level",
        "description": "Adjust detail level options. See documentation URL for instructions.",
        "type": "integer"
      },
      "dhcpLeaseRemaining": {
        "title": "Show DHCP Lease Time Remaining",
        "description": "Particulars shows the DHCP server address and the length of the DHCP lease. Setting this preference will also show the remaining lease time.",
        "type": "boolean"
      },
      "diskFreeSpace": {
        "title": "Show Disk Free Space",
        "description": "Free/available disk space can be displayed in multiple ways. See documentation URL for options.",
        "type": "integer"
      },
      "labMode": {
        "title": "Lab Mode",
        "description": "Lab Mode eases deployment of Particulars in a computer lab or data center.",
        "type": "boolean"
      },
      "labelCase": {
        "title": "Label Case",
        "description": "Sets the letter case of the labels. Each case option has a corresponding number.",
        "type": "integer"
      },
      "macAddressFormat": {
        "title": "MAC Address Format",
        "description": "By default, MAC (Media Access Control) addresses are formatted with colon separators and in lowercase. Use this preference to select another MAC address format.",
        "type": "integer"
      },
      "networkDetailLevel": {
        "title": "Network Detail Level",
        "description": "By default, all network information is displayed. It is possible to construct a custom set of network information. Use this preference to create a custom network detail level. See documentation URL for instructions.",
        "type": "integer"
      },
      "subnetMaskCIDRNotation": {
        "title": "Subnet Mask CIDR Notation",
        "description": "Use this preference to have Particulars display subnet masks in the short CIDR (Classless Inter-domain Routing) notation. For example, 255.255.254.0 will show as /23.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "nl.root3.support": {
    "title": "SupportApp by Root3",
    "description": "SupportApp by Root3 settings",
    "properties": {
      "CustomColor": {
        "title": "macOS Accent Color",
        "description": "Custom color in HEX for all symbols. Leave empty to use macOS Accent Color.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "CustomColorDarkMode": {
        "title": "macOS Dark Mode Accent Color",
        "description": "Custom color in HEX for all symbols in Dark Mode. Leave empty to use macOS Accent Color or CustomColor if specified.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ErrorMessage": {
        "title": "Error Message",
        "description": "Shown when clicking an action that results in an error.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExtensionLinkA": {
        "title": "Support App Extension A: Link",
        "description": "The Bundle Identifier of the App, URL or command to open.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExtensionLinkB": {
        "title": "Support App Extension B: Link",
        "description": "The Bundle Identifier of the App, URL or command to open.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExtensionSymbolA": {
        "title": "Support App Extension A: Symbol",
        "description": "The SF Symbol shown in extension A.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExtensionSymbolB": {
        "title": "Support App Extension B: Symbol",
        "description": "The SF Symbol shown in extension B.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExtensionTitleA": {
        "title": "Support App Extension A: Title",
        "description": "The title shown in extension A.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExtensionTitleB": {
        "title": "Support App Extension B: Title",
        "description": "The title shown in extension B.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ExtensionTypeA": {
        "title": "Support App Extension A: Type",
        "description": "Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.",
        "type": {
          "string": {
            "rangeList": [
              [
                "App",
                "App"
              ],
              [
                "Command",
                "Command or Script (Run as user)"
              ],
              [
                "DistributedNotification",
                "Command or Script (Run with elevated privileges)"
              ],
              [
                "URL",
                "URL"
              ]
            ]
          }
        }
      },
      "ExtensionTypeB": {
        "title": "Support App Extension B: Type",
        "description": "Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.",
        "type": {
          "string": {
            "rangeList": [
              [
                "App",
                "App"
              ],
              [
                "Command",
                "Command or Script (Run as user)"
              ],
              [
                "DistributedNotification",
                "Command or Script (Run with elevated privileges)"
              ],
              [
                "URL",
                "URL"
              ]
            ]
          }
        }
      },
      "FirstRowLinkLeft": {
        "title": "First Row Left Link",
        "description": "The Bundle Identifier of the App or URL that should be opened, command or script to be run.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FirstRowLinkMiddle": {
        "title": "First Row Middle Link",
        "description": "The Bundle Identifier of the App or URL that should be opened, command or script to be run.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FirstRowLinkRight": {
        "title": "First Row Right Link",
        "description": "The Bundle Identifier of the App or URL that should be opened, command or script to be run.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FirstRowSubtitleLeft": {
        "title": "First Row Left Subtitle",
        "description": "Subtitle text will appear under title when the user hovers over the button. Ignored if left empty.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FirstRowSubtitleMiddle": {
        "title": "First Row Middle Subtitle",
        "description": "Subtitle text will appear under title when the user hovers over the button. Ignored if left empty.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FirstRowSubtitleRight": {
        "title": "First Row Right Subtitle",
        "description": "Subtitle text will appear under title when the user hovers over the button. Ignored if left empty.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FirstRowSymbolLeft": {
        "title": "First Row Left Symbol",
        "description": "The SF Symbol shown in the button.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FirstRowSymbolMiddle": {
        "title": "First Row Middle Symbol",
        "description": "The SF Symbol shown in the button.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FirstRowSymbolRight": {
        "title": "First Row Right Symbol",
        "description": "The SF Symbol shown in the button.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FirstRowTitleLeft": {
        "title": "First Row Left Title",
        "description": "The text shown in the button label.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FirstRowTitleMiddle": {
        "title": "First Row Middle Title",
        "description": "The text shown in the button label.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FirstRowTitleRight": {
        "title": "First Row Right Title",
        "description": "The text shown in the button label.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FirstRowTypeLeft": {
        "title": "First Row Left Link Type",
        "description": "Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.",
        "type": {
          "string": {
            "rangeList": [
              [
                "App",
                "App"
              ],
              [
                "Command",
                "Command or Script (Run as user)"
              ],
              [
                "DistributedNotification",
                "Command or Script (Run with elevated privileges)"
              ],
              [
                "URL",
                "URL"
              ]
            ]
          }
        }
      },
      "FirstRowTypeMiddle": {
        "title": "First Row Middle Link Type",
        "description": "Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.",
        "type": {
          "string": {
            "rangeList": [
              [
                "App",
                "App"
              ],
              [
                "Command",
                "Command or Script (Run as user)"
              ],
              [
                "DistributedNotification",
                "Command or Script (Run with elevated privileges)"
              ],
              [
                "URL",
                "URL"
              ]
            ]
          }
        }
      },
      "FirstRowTypeRight": {
        "title": "First Row Right Link Type",
        "description": "Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.",
        "type": {
          "string": {
            "rangeList": [
              [
                "App",
                "App"
              ],
              [
                "Command",
                "Command or Script (Run as user)"
              ],
              [
                "DistributedNotification",
                "Command or Script (Run with elevated privileges)"
              ],
              [
                "URL",
                "URL"
              ]
            ]
          }
        }
      },
      "FooterText": {
        "title": "Footer Text",
        "description": "Text shown at the bottom as footnote",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "HideFirstRow": {
        "title": "Hide First Row",
        "description": "Hides the first row of configurable items.",
        "type": "boolean"
      },
      "HideMajorUpdates": {
        "title": "Hide Major macOS Updates / Upgrades",
        "description": "Ignore macOS major updates. This will prevent the menu bar icon and the macOS version info item from showing an available major update.",
        "type": "boolean"
      },
      "HideSecondRow": {
        "title": "Hide Second Row",
        "description": "Hides the second row of configurable items.",
        "type": "boolean"
      },
      "InfoItemFive": {
        "title": "Info Item 5",
        "description": "Info item shown in the third row left.",
        "type": {
          "string": {
            "rangeList": [
              [
                "ComputerName",
                "Computer Name"
              ],
              [
                "MacOSVersion",
                "macOS Version"
              ],
              [
                "Network",
                "Network"
              ],
              [
                "Password",
                "Password"
              ],
              [
                "Storage",
                "Storage"
              ],
              [
                "Uptime",
                "Uptime"
              ]
            ]
          }
        }
      },
      "InfoItemFour": {
        "title": "Info Item 4",
        "description": "Info item shown in the second row right.",
        "type": {
          "string": {
            "rangeList": [
              [
                "ComputerName",
                "Computer Name"
              ],
              [
                "MacOSVersion",
                "macOS Version"
              ],
              [
                "Network",
                "Network"
              ],
              [
                "Password",
                "Password"
              ],
              [
                "Storage",
                "Storage"
              ],
              [
                "Uptime",
                "Uptime"
              ]
            ]
          }
        }
      },
      "InfoItemOne": {
        "title": "Info Item 1",
        "description": "Info item shown in the upper left corner.",
        "type": {
          "string": {
            "rangeList": [
              [
                "ComputerName",
                "Computer Name"
              ],
              [
                "MacOSVersion",
                "macOS Version"
              ],
              [
                "Network",
                "Network"
              ],
              [
                "Password",
                "Password"
              ],
              [
                "Storage",
                "Storage"
              ],
              [
                "Uptime",
                "Uptime"
              ]
            ]
          }
        }
      },
      "InfoItemSix": {
        "title": "Info Item 6",
        "description": "Info item shown in the third row right.",
        "type": {
          "string": {
            "rangeList": [
              [
                "ComputerName",
                "Computer Name"
              ],
              [
                "MacOSVersion",
                "macOS Version"
              ],
              [
                "Network",
                "Network"
              ],
              [
                "Password",
                "Password"
              ],
              [
                "Storage",
                "Storage"
              ],
              [
                "Uptime",
                "Uptime"
              ]
            ]
          }
        }
      },
      "InfoItemThree": {
        "title": "Info Item 3",
        "description": "Info item shown in the second row left.",
        "type": {
          "string": {
            "rangeList": [
              [
                "ComputerName",
                "Computer Name"
              ],
              [
                "MacOSVersion",
                "macOS Version"
              ],
              [
                "Network",
                "Network"
              ],
              [
                "Password",
                "Password"
              ],
              [
                "Storage",
                "Storage"
              ],
              [
                "Uptime",
                "Uptime"
              ]
            ]
          }
        }
      },
      "InfoItemTwo": {
        "title": "Info Item 2",
        "description": "Info item shown in the upper right corner.",
        "type": {
          "string": {
            "rangeList": [
              [
                "ComputerName",
                "Computer Name"
              ],
              [
                "MacOSVersion",
                "macOS Version"
              ],
              [
                "Network",
                "Network"
              ],
              [
                "Password",
                "Password"
              ],
              [
                "Storage",
                "Storage"
              ],
              [
                "Uptime",
                "Uptime"
              ]
            ]
          }
        }
      },
      "Logo": {
        "title": "Light Mode Logo",
        "description": "Path to the logo shown in the top right corner when the app opens. Scales to 48 points maximum height.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "LogoDarkMode": {
        "title": "Dark Mode Logo",
        "description": "Path to the logo shown in the top right corner when the app opens for Dark Mode. Scales to 48 points maximum height.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "NotificationIcon": {
        "title": "Notification Icon",
        "description": "Path to a custom square image to be shown in alerts and the about window.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OpenAtLogin": {
        "title": "Open At Login",
        "description": "Launch Support automatically at login and keep it open (macOS 13 and higher). This setting is ignored if a legacy LaunchAgent is installed/active. Disable this if you don't want to open Support at login or use your own LaunchAgent",
        "type": "boolean"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordExpiryLimit": {
        "title": "Password Expiration Limit",
        "description": "Days until password expiry after which a notification badge is shown, disabled by default",
        "type": "integer"
      },
      "PasswordLabel": {
        "title": "Password Label",
        "description": "Alternative text label shown in the Password info item.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecondRowLinkLeft": {
        "title": "Second Row Left Link",
        "description": "The Bundle Identifier of the App or URL that should be opened, command or script to be run.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecondRowLinkMiddle": {
        "title": "Second Row Middle Link",
        "description": "The Bundle Identifier of the App or URL that should be opened, command or script to be run.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecondRowLinkRight": {
        "title": "Second Row Right Link",
        "description": "The Bundle Identifier of the App or URL that should be opened, command or script to be run.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecondRowSubtitleLeft": {
        "title": "Second Row Left Subtitle",
        "description": "Subtitle text will appear under title when the user hovers over the button. Ignored if left empty.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecondRowSubtitleMiddle": {
        "title": "Second Row Middle Subtitle",
        "description": "Subtitle text will appear under title when the user hovers over the button. Ignored if left empty.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecondRowSubtitleRight": {
        "title": "Second Row Right Subtitle",
        "description": "Subtitle text will appear under title when the user hovers over the button. Ignored if left empty.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecondRowSymbolLeft": {
        "title": "Second Row Left Symbol",
        "description": "The SF Symbol shown in the button.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecondRowSymbolMiddle": {
        "title": "Second Row Middle Symbol",
        "description": "The SF Symbol shown in the button.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecondRowSymbolRight": {
        "title": "Second Row Right Symbol",
        "description": "The SF Symbol shown in the button.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecondRowTitleLeft": {
        "title": "Second Row Left Title",
        "description": "The text shown in the button label.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecondRowTitleMiddle": {
        "title": "Second Row Middle Title",
        "description": "The text shown in the button label.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecondRowTitleRight": {
        "title": "Second Row Right Title",
        "description": "The text shown in the button label.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SecondRowTypeLeft": {
        "title": "Second Row Left Link Type",
        "description": "Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.",
        "type": {
          "string": {
            "rangeList": [
              [
                "App",
                "App"
              ],
              [
                "Command",
                "Command or Script (Run as user)"
              ],
              [
                "DistributedNotification",
                "Command or Script (Run with elevated privileges)"
              ],
              [
                "URL",
                "URL"
              ]
            ]
          }
        }
      },
      "SecondRowTypeMiddle": {
        "title": "Second Row Middle Link Type",
        "description": "Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.",
        "type": {
          "string": {
            "rangeList": [
              [
                "App",
                "App"
              ],
              [
                "Command",
                "Command or Script (Run as user)"
              ],
              [
                "DistributedNotification",
                "Command or Script (Run with elevated privileges)"
              ],
              [
                "URL",
                "URL"
              ]
            ]
          }
        }
      },
      "SecondRowTypeRight": {
        "title": "Second Row Right Link Type",
        "description": "Type of link the item should open. Can be anything like screen sharing tools, company stores, file servers or core applications in your organization.",
        "type": {
          "string": {
            "rangeList": [
              [
                "App",
                "App"
              ],
              [
                "Command",
                "Command or Script (Run as user)"
              ],
              [
                "DistributedNotification",
                "Command or Script (Run with elevated privileges)"
              ],
              [
                "URL",
                "URL"
              ]
            ]
          }
        }
      },
      "ShowWelcomeScreen": {
        "title": "Show Welcome Screen",
        "description": "Shows the welcome screen when the Support App is opened for the first time.",
        "type": "boolean"
      },
      "StatusBarIcon": {
        "title": "Status Bar Icon",
        "description": "Path to the status bar icon shown in the menu bar. Recommended: PNG, 16x16 points",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "StatusBarIconNotifierEnabled": {
        "title": "Enable Status Bar Software Update Notifier",
        "description": "Shows a small notification badge in the Status Bar icon when there is an Apple Software Update available.",
        "type": "boolean"
      },
      "StatusBarIconSFSymbol": {
        "title": "Status Bar SF Symbol Icon",
        "description": "Custom status bar icon using an SF Symbol. Ignored when StatusBarIcon is also set.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "StorageLimit": {
        "title": "Storage Limit",
        "description": "Percentage of storage used after which a notification badge is shown, disabled by default.",
        "type": "integer"
      },
      "Title": {
        "title": "Title",
        "description": "Text shown in the top left corner when the app opens.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "UptimeDaysLimit": {
        "title": "Computer Uptime Limit",
        "description": "Days of uptime after which a notification badge is shown, disabled by default",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "org.mozilla.firefox": {
    "title": "Firefox",
    "description": "Configures Firefox settings. Firefox 78 is the last major release with support for macOS versions 10.9, 10.10 and 10.11.",
    "properties": {
      "3rdparty": {
        "title": "3rd Party Configuration",
        "description": "Configure third party components.",
        "type": {
          "dictionary": {
            "Extensions": {
              "title": "3rd Party Extension Configuration",
              "description": "Configure third party extensions. Keys in this dictionary specify IDs of extensions to configure, and values are dictionaries containing each third party extension configuration.",
              "type": {
                "dictionary": {
                  "{{key}}": {
                    "title": "Extension ID",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "{{value}}": {
                    "title": "Extension Configuration",
                    "type": "plist"
                  }
                }
              }
            }
          }
        }
      },
      "AllowedDomainsForApps": {
        "title": "Allowed Domains for Apps",
        "description": "Comma-separated list of domains allowed to access Google Workspace. This policy is based on the Chrome policy of the same name. If this policy is enabled, users can only access Google Workspace using accounts from the specified domains. If you want to allow Gmail, you can add 'consumer_accounts' to the list.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AppAutoUpdate": {
        "title": "Firefox Auto Update",
        "description": "Enable or disable automatic application update.",
        "type": "boolean"
      },
      "AppUpdateURL": {
        "title": "Application Update URL",
        "description": "Change the URL for application update.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Authentication": {
        "title": "Authentication",
        "description": "Configure sites that support integrated authentication.",
        "type": {
          "dictionary": {
            "AllowNonFQDN": {
              "title": "Allow Non-FQDN",
              "description": "If this preference is enabled, you can always allow SPNEGO or NTLM on non FQDNs (fully qualified domain names). If this preference is disabled or not configured, NTLM and SPNEGO are not enabled on non FQDNs.",
              "type": {
                "dictionary": {
                  "NTLM": {
                    "title": "NTLM",
                    "type": "boolean"
                  },
                  "SPNEGO": {
                    "title": "SPNEGO",
                    "type": "boolean"
                  }
                }
              }
            },
            "AllowProxies": {
              "title": "Allow Proxies",
              "description": "If this preference is enabled, you can always allow SPNEGO or NTLM on non FQDNs (fully qualified domain names). If this preference is disabled or not configured, NTLM and SPNEGO are not enabled on non FQDNs.",
              "type": {
                "dictionary": {
                  "NTLM": {
                    "title": "NTLM",
                    "type": "boolean"
                  },
                  "SPNEGO": {
                    "title": "SPNEGO",
                    "type": "boolean"
                  }
                }
              }
            },
            "Delegated": {
              "title": "Delegated",
              "description": "If this preference is enabled, the browser may delegate user authorization to the server for the specified websites. Entries in the list are formatted as mydomain.com or https://myotherdomain.com.\n\nIf this preference is disabled or not configured, the browser will not delegate user authorization to the server for any websites.\n\nFor more information, see https://developer.mozilla.org/en-US/docs/Mozilla/Integrated_authentication",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "Locked": {
              "title": "Locked (Authentication)",
              "type": "boolean"
            },
            "NTLM": {
              "title": "Microsoft Challenge/Response (NTLM)",
              "description": "If this preference is enabled, the specified websites are trusted to use NTLM authentification. Entries in the list are formatted as mydomain.com or https://myotherdomain.com.\n\nIf this policy is disabled or not configured, no websites are trusted to use NTLM authentification.\n\nFor more information, see https://developer.mozilla.org/en-US/docs/Mozilla/Integrated_authentication.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "PrivateBrowsing": {
              "title": "Private Browsing",
              "description": "Enables integrated authentication in prviate browsing",
              "type": "boolean"
            },
            "SPNEGO": {
              "title": "SPNEGO",
              "description": "If this preference is enabled, the specified websites are permitted to engage in SPNEGO authentication with the browser. Entries in the list are formatted as mydomain.com or https://myotherdomain.com.\n\nIf this preference is disabled or not configured, no websites are permitted to engage in SPNEGO authentication with the browser.\n\nFor more information, see https://developer.mozilla.org/en-US/docs/Mozilla/Integrated_authentication.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "AutoLaunchProtocolsFromOrigins": {
        "title": "Auto Launch Protocols from Origins",
        "description": "Comma-separated list of domains allowed to access Google Workspace. This policy is based on the Chrome policy of the same name. If this policy is enabled, users can only access Google Workspace using accounts from the specified domains. If you want to allow Gmail, you can add 'consumer_accounts' to the list.",
        "type": {
          "array": [
            {
              "dictionary": {
                "allowed_origins": {
                  "title": "Allowed Origins",
                  "description": "The protocol to allow for specified URLs.",
                  "type": {
                    "array": [
                      {
                        "string": {
                          "rangeList": []
                        }
                      }
                    ]
                  }
                },
                "protocol": {
                  "title": "Protocol",
                  "description": "The protocol to allow for specified URLs.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "BackgroundAppUpdate": {
        "title": "Background App Update",
        "description": "Enable or disable automatic application update in the background, when the application is not running. If set to true, application updates may be installed (without user approval) in the background, even when the application is not running. The operating system might still require approval.",
        "type": "boolean"
      },
      "BlockAboutAddons": {
        "title": "Block about:addons page",
        "description": "Block access to the Add-ons Manager (about:addons).",
        "type": "boolean"
      },
      "BlockAboutConfig": {
        "title": "Block about:config page",
        "description": "Block access to about:config.",
        "type": "boolean"
      },
      "BlockAboutProfiles": {
        "title": "Block about:profiles page",
        "description": "Block access to About Profiles (about:profiles).",
        "type": "boolean"
      },
      "BlockAboutSupport": {
        "title": "Block about:support page",
        "description": "Block access to Troubleshooting Information (about:support).",
        "type": "boolean"
      },
      "Bookmarks": {
        "title": "Bookmarks",
        "description": "Add bookmarks in either the bookmarks toolbar or menu.",
        "type": {
          "array": [
            {
              "dictionary": {
                "Favicon": {
                  "title": "Favicon",
                  "description": "URL to icon file to display on bookmark (e.g. https://www.example.org/favicon.ico)",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Folder": {
                  "title": "Folder",
                  "description": "Folder to place bookmark in. If a folder is specified, it is automatically created and bookmarks with the same folder name are grouped together. You cannot nest folders.",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "Placement": {
                  "title": "Placement",
                  "description": "Place bookmark in either the Bookmark menu or Bookmark Toolbar.",
                  "type": {
                    "string": {
                      "rangeList": [
                        [
                          "toolbar",
                          "toolbar"
                        ],
                        [
                          "menu",
                          "menu"
                        ]
                      ]
                    }
                  }
                },
                "Title": {
                  "title": "Title",
                  "description": "Bookmark Title",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                },
                "URL": {
                  "title": "URL",
                  "description": "Full URL to be bookmarked (e.g. https://www.example.org/)",
                  "type": {
                    "string": {
                      "rangeList": []
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "CaptivePortal": {
        "title": "Captive Portal",
        "description": "Enable or disable the detection of captive portals.",
        "type": "boolean"
      },
      "Certificates": {
        "title": "Certificates",
        "description": "Trust certificates that have been added to the operating system certificate store by a user or administrator in the macOS Keychain.",
        "type": {
          "dictionary": {
            "ImportEnterpriseRoots": {
              "title": "ImportEnterpriseRoots",
              "description": "If this preference is enabled, Firefox will read certificates from the macOS keychain. If this preference is disabled or not configured, Firefox will not read certificates from the macOS keychain.",
              "type": "boolean"
            },
            "Install": {
              "title": "Install",
              "description": "If this preference is enabled, Firefox will install the listed certificates. It will look in /Library/Application Support/Mozilla/Certificates and ~/Library/Application Support/Mozilla/Certificates.\n\nIf this preference is disabled or not configured, Firefox will not install additional certificates.\n\nStarting in Firefox 65, you can specify a fully qualified path (e.g. /Library/Company/cer1.der). If Firefox does not find something at your fully qualified path, it will search the default directories.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "Cookies": {
        "title": "Cookies",
        "description": "Configure cookie preferences.",
        "type": {
          "dictionary": {
            "AcceptThirdParty": {
              "title": "AcceptThirdParty",
              "description": "This sets the default value for \"Accept third-party cookies\".",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "always",
                      "always"
                    ],
                    [
                      "never",
                      "never"
                    ],
                    [
                      "from-visited",
                      "from-visited"
                    ]
                  ]
                }
              }
            },
            "Allow": {
              "title": "Allow",
              "description": "A list of origins (not domains) where cookies are always allowed.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "AllowSession": {
              "title": "Allow Session",
              "description": "A list of origins (not domains) where cookies are only allowed for the current session.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "Behavior": {
              "title": "Behavior",
              "description": "This has been added replacing the existing options Default, AcceptThirdParty, and RejectTracker.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "BehaviorPrivateBrowsing": {
              "title": "Behavior: Private Browsing",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Block": {
              "title": "Block",
              "description": "A list of origins (not domains) where cookies are always blocked.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "Default": {
              "title": "Default",
              "description": "This sets the default value for \"Accept cookies from websites\".",
              "type": "boolean"
            },
            "ExpireAtSessionEnd": {
              "title": "ExpireAtSessionEnd",
              "description": "This determines when cookies expire.",
              "type": "boolean"
            },
            "Locked": {
              "title": "Locked",
              "description": "If this is true, cookies preferences cannot be changed.",
              "type": "boolean"
            },
            "RejectTracker": {
              "title": "RejectTracker",
              "description": "Only reject trackers.",
              "type": "boolean"
            }
          }
        }
      },
      "DNSOverHTTPS": {
        "title": "DNS over HTTPS",
        "description": "Configure DNS over HTTPS.",
        "type": {
          "dictionary": {
            "Enabled": {
              "title": "Enabled",
              "description": "Enable DNS over HTTPS.",
              "type": "boolean"
            },
            "ExcludedDomains": {
              "title": "Excluded Domains",
              "description": "List of excluded domains from DNS over HTTPS.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "Locked": {
              "title": "Locked",
              "description": "If this is true, DNS over HTTPS preferences cannot be changed.",
              "type": "boolean"
            },
            "ProviderURL": {
              "title": "Provider URL",
              "description": "URL to an alternative DNS over HTTPS provider.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "DefaultDownloadDirectory": {
        "title": "Default Download Directory",
        "description": "Set the default download directory.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DisableAppUpdate": {
        "title": "Disable Application Update",
        "description": "Turn off application updates.",
        "type": "boolean"
      },
      "DisableBuiltinPDFViewer": {
        "title": "Disable Built-in PDF Viewer",
        "description": "Disable the built in PDF viewer. PDF files are downloaded and sent externally.",
        "type": "boolean"
      },
      "DisableDeveloperTools": {
        "title": "Disable Developer Tools",
        "description": "Remove access to all developer tools.",
        "type": "boolean"
      },
      "DisableFeedbackCommands": {
        "title": "Disable Feedback Commands",
        "description": "Disable the menus for reporting sites (Submit Feedback, Report Deceptive Site).",
        "type": "boolean"
      },
      "DisableFirefoxAccounts": {
        "title": "Disable Firefox Accounts / Sync",
        "description": "Disable Firefox Accounts integration (Sync).",
        "type": "boolean"
      },
      "DisableFirefoxScreenshots": {
        "title": "Disable Firefox Screenshots",
        "description": "Remove access to Firefox Screenshots.",
        "type": "boolean"
      },
      "DisableFirefoxStudies": {
        "title": "Disable Firefox Studies (Shield)",
        "description": "Disable Firefox studies (Shield).",
        "type": "boolean"
      },
      "DisableForgetButton": {
        "title": "Disable Forget Button",
        "description": "Disable the \"Forget\" button.",
        "type": "boolean"
      },
      "DisableFormHistory": {
        "title": "Disable Form History",
        "description": "Turn off saving information on web forms and the search bar.",
        "type": "boolean"
      },
      "DisableMasterPasswordCreation": {
        "title": "Disable Master Password Creation",
        "description": "Remove the master password functionality. If this preference is set to true, the master password functionality is removed.",
        "type": "boolean"
      },
      "DisablePasswordReveal": {
        "title": "Disable Password Reveal",
        "description": "Do not allow passwords to be shown in saved logins",
        "type": "boolean"
      },
      "DisablePocket": {
        "title": "Disable Pocket",
        "description": "Remove Pocket in the Firefox UI.",
        "type": "boolean"
      },
      "DisablePrivateBrowsing": {
        "title": "Disable Private Browsing",
        "description": "Remove access to private browsing.",
        "type": "boolean"
      },
      "DisableProfileImport": {
        "title": "Disable Profile Import",
        "description": "Disables the \"Import data from another browser\" option in the bookmarks window.",
        "type": "boolean"
      },
      "DisableProfileRefresh": {
        "title": "Disable Profile Refresh",
        "description": "Disable the Refresh Firefox button on about:support and support.mozilla.org, as well as the prompt that displays offering to refresh Firefox when you haven't used it in a while.",
        "type": "boolean"
      },
      "DisableSafeMode": {
        "title": "Disable Safe Mode",
        "description": "Disable safe mode within the browser.",
        "type": "boolean"
      },
      "DisableSecurityBypass": {
        "title": "Disable Security Bypass",
        "description": "Prevent the user from bypassing security in certain cases.",
        "type": {
          "dictionary": {
            "InvalidCertificate": {
              "title": "InvalidCertificate",
              "description": "Prevents adding an exception when an invalid certificate is shown. If this preference is enabled, the \"Add Exception\" button is not available when a certificate is invalid. This prevents the user from overriding the certificate error. If this preference is disabled or not configured, certificate errors can be overridden.",
              "type": "boolean"
            },
            "SafeBrowsing": {
              "title": "SafeBrowsing",
              "description": "Prevents selecting \"ignore the risk\" and visiting a harmful site anyway. If this preference is enabled, a user cannot bypass the warning and visit a harmful site. If this preference is disabled or not configured, a user can choose to visit a harmful site.",
              "type": "boolean"
            }
          }
        }
      },
      "DisableSetDesktopBackground": {
        "title": "Disable Set Desktop Background",
        "description": "This preference removes the \"Set As Desktop Background...\" menu item when right clicking on an image.",
        "type": "boolean"
      },
      "DisableSystemAddonUpdate": {
        "title": "Disable System Add-on Update",
        "description": "Prevent system add-ons from being installed or update.",
        "type": "boolean"
      },
      "DisableTelemetry": {
        "title": "Disable Telemetry",
        "description": "Prevent the upload of telemetry data.",
        "type": "boolean"
      },
      "DisabledCiphers": {
        "title": "Disabled Ciphers",
        "description": "Disable specific cryptographic ciphers. This policy was updated in Firefox 78 to allow enabling ciphers as well. Setting the value to true disables the cipher, setting the value to false enables the cipher. Previously setting the value to true or false disabled the cipher.",
        "type": {
          "dictionary": {
            "TLS_DHE_RSA_WITH_AES_128_CBC_SHA": {
              "title": "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
              "type": "boolean"
            },
            "TLS_DHE_RSA_WITH_AES_256_CBC_SHA": {
              "title": "TLS_DHE_RSA_WITH_AES_256_CBC_SHA",
              "type": "boolean"
            },
            "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256": {
              "title": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
              "type": "boolean"
            },
            "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA": {
              "title": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
              "type": "boolean"
            },
            "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256": {
              "title": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
              "type": "boolean"
            },
            "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA": {
              "title": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
              "type": "boolean"
            },
            "TLS_RSA_WITH_3DES_EDE_CBC_SHA": {
              "title": "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
              "type": "boolean"
            },
            "TLS_RSA_WITH_AES_128_CBC_SHA": {
              "title": "TLS_RSA_WITH_AES_128_CBC_SHA",
              "type": "boolean"
            },
            "TLS_RSA_WITH_AES_128_GCM_SHA256": {
              "title": "TLS_RSA_WITH_AES_128_GCM_SHA256",
              "type": "boolean"
            },
            "TLS_RSA_WITH_AES_256_CBC_SHA": {
              "title": "TLS_RSA_WITH_AES_256_CBC_SHA",
              "type": "boolean"
            },
            "TLS_RSA_WITH_AES_256_GCM_SHA384": {
              "title": "TLS_RSA_WITH_AES_256_GCM_SHA384",
              "type": "boolean"
            }
          }
        }
      },
      "DisplayBookmarksToolbar": {
        "title": "Display Bookmarks Toolbar",
        "description": "Set the initial state of the bookmarks toolbar. A user can still hide it and it will stay hidden.",
        "type": "boolean"
      },
      "DisplayMenuBar": {
        "title": "Display Menu Bar",
        "description": "Set the initial state of the menubar. A user can still hide it and it will stay hidden.",
        "type": "boolean"
      },
      "DontCheckDefaultBrowser": {
        "title": "Do Not Check Default Browser",
        "description": "Don't check if Firefox is the default browser at startup.",
        "type": "boolean"
      },
      "DownloadDirectory": {
        "title": "Download Directory",
        "description": "Set and lock the download directory.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EnableTrackingProtection": {
        "title": "Enable Tracking Protection",
        "description": "Configure tracking protection. If this policy is not configured, tracking protection is not enabled by default in the browser, but it is enabled by default in private browsing and the user can change it.",
        "type": {
          "dictionary": {
            "Cryptomining": {
              "title": "Cryptomining",
              "description": "If Cryptomining is set to true, cryptomining scripts on websites are blocked.",
              "type": "boolean"
            },
            "Fingerprinting": {
              "title": "Fingerprinting",
              "description": "If Fingerprinting is set to true, fingerprinting scripts on websites are blocked.",
              "type": "boolean"
            },
            "Locked": {
              "title": "Locked",
              "description": "If this is true, Tracking Protection preferences cannot be changed.",
              "type": "boolean"
            },
            "Value": {
              "title": "Value",
              "description": "If Value is set to false, tracking protection is disabled and locked in both the regular browser and private browsing. If Value is set to true, tracking protection is enabled by default in both the regular browser and private browsing.",
              "type": "boolean"
            }
          }
        }
      },
      "EncryptedMediaExtensions": {
        "title": "Encrypted Media Extensions",
        "description": "Enable or disable Encrypted Media Extensions and optionally lock it.",
        "type": {
          "dictionary": {
            "Enabled": {
              "title": "Enabled",
              "description": "If Enabled is set to false, encrypted media extensions (like Widevine) are not downloaded by Firefox unless the user consents to installing them.",
              "type": "boolean"
            },
            "Locked": {
              "title": "Locked",
              "description": "If Locked is set to true and Enabled is set to false, Firefox will not download encrypted media extensions (like Widevine) or ask the user to install them.",
              "type": "boolean"
            }
          }
        }
      },
      "EnterprisePoliciesEnabled": {
        "title": "Enable Enterprise Policies",
        "description": "Enable policy support on macOS.",
        "type": "boolean"
      },
      "ExtensionSettings": {
        "title": "ExtensionSettings",
        "description": "Manage all aspects of extensions. A default configuration can be set for the special ID \"*\", which will apply to all extensions that don't have a custom configuration set in this policy.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Extension ID",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "{{value}}",
              "type": {
                "dictionary": {
                  "allowed_types": {
                    "title": "Allowed Types",
                    "description": "This setting allowlists the allowed types of extension/apps that can be installed in Firefox.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "blocked_install_message": {
                    "title": "",
                    "description": "This maps to a string specifying the error message to display to users if they're blocked from installing an extension.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "install_sources": {
                    "title": "Install Sources",
                    "description": "Each item in this list is an extension-style match pattern.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "install_url": {
                    "title": "Install URL",
                    "description": "Maps to a string indicating where Firefox can download a force_installed or normal_installed extension. If installing from the addons.mozilla.org, use the following URL (substituting SHORT_NAME from the URL on AMO), https://addons.mozilla.org/firefox/downloads/latest/SHORT_NAME/latest.xpi. If installing from the local file system, use a file:/// URL. Languages packs are available from https://releases.mozilla.org/pub/firefox/releases/VERSION/PLATFORM/xpi/LANGUAGE.xpi.",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "installation_mode": {
                    "title": "Installation Mode",
                    "description": "Maps to a string indicating the installation mode for the extension.",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "allowed",
                            "Allowed (default behavior)"
                          ],
                          [
                            "blocked",
                            "Blocked"
                          ],
                          [
                            "force_installed",
                            "Force Installed"
                          ],
                          [
                            "normal_installed",
                            "Normal Installed"
                          ]
                        ]
                      }
                    }
                  },
                  "restricted_domains": {
                    "title": "Restricted Domains",
                    "description": "An array of domains on which content scripts can't be run.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "updates_disabled": {
                    "title": "Disable Updates",
                    "description": "Indicates whether or not to disable automatic updates for an individual extension.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "ExtensionUpdate": {
        "title": "Extension Update",
        "type": "boolean"
      },
      "Extensions": {
        "title": "Extensions",
        "description": "Control the installation, uninstallation and locking of extensions. Locked extensions cannot be disabled or uninstalled. For Install, you specify a list of URLs or paths. For Uninstall and Locked, you specify extension IDs.",
        "type": {
          "dictionary": {
            "Install": {
              "title": "Install",
              "description": "A list of URLs or native paths for extensions to be installed.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "Locked": {
              "title": "Locked",
              "description": "A list of extension IDs that the user cannot disable or uninstall.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "Uninstall": {
              "title": "Uninstall",
              "description": "A list of extension IDs that should be uninstalled if found.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "FirefoxHome": {
        "title": "FirefoxHome",
        "description": "Customize the Firefox Home page.",
        "type": {
          "dictionary": {
            "Highlights": {
              "title": "Highlights",
              "type": "boolean"
            },
            "Locked": {
              "title": "Locked",
              "type": "boolean"
            },
            "Pocket": {
              "title": "Pocket",
              "type": "boolean"
            },
            "Search": {
              "title": "Search",
              "type": "boolean"
            },
            "Snippets": {
              "title": "Snippets",
              "type": "boolean"
            },
            "SponsoredPocket": {
              "title": "Sponsored Pocket",
              "type": "boolean"
            },
            "SponsoredTopSites": {
              "title": "Sponsored Top Sites",
              "type": "boolean"
            },
            "TopSites": {
              "title": "TopSites",
              "type": "boolean"
            }
          }
        }
      },
      "FlashPlugin": {
        "title": "Flash Plugin Permissions",
        "description": "Configure the default Flash plugin policy as well as origins for which Flash is allowed.",
        "type": {
          "dictionary": {
            "Allow": {
              "title": "Allowed Domains",
              "description": "If this preference is enabled, sites on the allow list do not override Flash being completely disabled. Flash is activated by default for the domains indicated unless Flash is completely disabled. If a top level domain is specified (http://example.org), Flash is allowed for all subdomains as well.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "Block": {
              "title": "Blocked Domains",
              "description": "If this preference is enabled, Flash is blocked for the domains indicated. If a top level domain is specified (http://example.org), Flash is blocked from all subdomains as well.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "Default": {
              "title": "Default",
              "description": "If this is true, Flash preferences cannot be changed. If this is false, Flash is never activated on websites even if they are in the specified in the Allow list.",
              "type": "boolean"
            },
            "Locked": {
              "title": "Locked",
              "description": "If this is true, Flash preferences cannot be changed.",
              "type": "boolean"
            }
          }
        }
      },
      "General_SegmentedControl": {
        "title": "General_SegmentedControl",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Handlers": {
        "title": "Handlers",
        "description": "Configure default application handlers. This policy is based on the internal format of handlers.json. You can configure handlers based on a mime type (mimeTypes), a file's extension (extensions), or a protocol (schemes).",
        "type": {
          "dictionary": {
            "extensions": {
              "title": "Extensions",
              "type": {
                "dictionary": {
                  "action": {
                    "title": "Action",
                    "description": "Can be either saveToDisk, useHelperApp, useSystemDefault.",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "saveToDisk",
                            "Save to Disk"
                          ],
                          [
                            "useHelperApp",
                            "Use Helper App"
                          ],
                          [
                            "useSystemDefault",
                            "Use System Default"
                          ]
                        ]
                      }
                    }
                  },
                  "ask": {
                    "title": "Ask",
                    "description": "If true, the user is asked if what they want to do with the file. If false, the action is taken without user intervention.",
                    "type": "boolean"
                  },
                  "handlers": {
                    "title": "Handlers",
                    "description": "An array of handlers with the first one being the default. If you don't want to have a default handler, use an empty object for the first handler. Choose between path or uriTemplate.",
                    "type": {
                      "array": [
                        {
                          "dictionary": {
                            "name": {
                              "title": "Name",
                              "description": "The display name of the handler (might not be used).",
                              "type": {
                                "string": {
                                  "rangeList": []
                                }
                              }
                            },
                            "path": {
                              "title": "Path",
                              "description": "The native path to the executable to be used.",
                              "type": {
                                "string": {
                                  "rangeList": []
                                }
                              }
                            },
                            "uriTemplate": {
                              "title": "URI Template",
                              "description": "A url to a web based application handler. The URL must be https and contain a %s to be used for substitution.",
                              "type": {
                                "string": {
                                  "rangeList": []
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "mimeTypes": {
              "title": "MIME Types",
              "description": "Specify MIME types. More info here: https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types",
              "type": {
                "dictionary": {
                  "{{key}}": {
                    "title": "MIME Type",
                    "description": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types",
                    "type": {
                      "string": {
                        "rangeList": []
                      }
                    }
                  },
                  "{{value}}": {
                    "title": "{{value}}",
                    "type": {
                      "dictionary": {
                        "action": {
                          "title": "Action",
                          "description": "Can be either saveToDisk, useHelperApp, useSystemDefault.",
                          "type": {
                            "string": {
                              "rangeList": [
                                [
                                  "saveToDisk",
                                  "Save to Disk"
                                ],
                                [
                                  "useHelperApp",
                                  "Use Helper App"
                                ],
                                [
                                  "useSystemDefault",
                                  "Use System Default"
                                ]
                              ]
                            }
                          }
                        },
                        "ask": {
                          "title": "Ask",
                          "description": "If true, the user is asked if what they want to do with the file. If false, the action is taken without user intervention.",
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            },
            "schemes": {
              "title": "Schemes",
              "type": {
                "dictionary": {
                  "action": {
                    "title": "Action",
                    "description": "Can be either saveToDisk, useHelperApp, useSystemDefault.",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "saveToDisk",
                            "Save to Disk"
                          ],
                          [
                            "useHelperApp",
                            "Use Helper App"
                          ],
                          [
                            "useSystemDefault",
                            "Use System Default"
                          ]
                        ]
                      }
                    }
                  },
                  "ask": {
                    "title": "Ask",
                    "description": "If true, the user is asked if what they want to do with the file. If false, the action is taken without user intervention.",
                    "type": "boolean"
                  },
                  "handlers": {
                    "title": "Handlers",
                    "description": "An array of handlers with the first one being the default. If you don't want to have a default handler, use an empty object for the first handler. Choose between path or uriTemplate.",
                    "type": {
                      "array": [
                        {
                          "dictionary": {
                            "name": {
                              "title": "Name",
                              "description": "The display name of the handler (might not be used).",
                              "type": {
                                "string": {
                                  "rangeList": []
                                }
                              }
                            },
                            "path": {
                              "title": "Path",
                              "description": "The native path to the executable to be used.",
                              "type": {
                                "string": {
                                  "rangeList": []
                                }
                              }
                            },
                            "uriTemplate": {
                              "title": "URI Template",
                              "description": "A url to a web based application handler. The URL must be https and contain a %s to be used for substitution.",
                              "type": {
                                "string": {
                                  "rangeList": []
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "HardwareAcceleration": {
        "title": "Hardware Acceleration",
        "description": "Control hardware acceleration.",
        "type": "boolean"
      },
      "Homepage": {
        "title": "Homepage",
        "description": "Configure the default homepage and how Firefox starts.",
        "type": {
          "dictionary": {
            "Additional": {
              "title": "Additional Homepages",
              "description": "Optional. Set additional homepages.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "Locked": {
              "title": "Locked",
              "description": "If true, prevents the user from changing homepage preferences.",
              "type": "boolean"
            },
            "StartPage": {
              "title": "Start Page",
              "description": "Optional. This preference sets what displays when Firefox starts. It can be the homepage, the previous session, or a blank page.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "none",
                      "None"
                    ],
                    [
                      "homepage",
                      "Homepage"
                    ],
                    [
                      "homepage-locked",
                      "Homepage (Locked)"
                    ],
                    [
                      "previous-session",
                      "Previous Session"
                    ]
                  ]
                }
              }
            },
            "URL": {
              "title": "URL",
              "description": "Optional. Set the default home page.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "InstallAddonsPermission": {
        "title": "Install Add-ons Permissions",
        "description": "Configure the default extension install policy as well as origins for extension installs are allowed.",
        "type": {
          "dictionary": {
            "Allow": {
              "title": "Allowed Domains",
              "description": "If this preference is enabled, add-ons are always allowed for the domains indicated unless add-on install is disabled. If a top level domain is specified (http://example.org), add-ons are allowed for all subdomains as well.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "Default": {
              "title": "Default",
              "description": "If this is set to false, add-ons cannot be installed by the user.",
              "type": "boolean"
            }
          }
        }
      },
      "LegacySameSiteCookieBehaviorEnabled": {
        "title": "Legacy SameSite Cookie Behavior Enabled",
        "description": "Enable default legacy SameSite cookie behavior setting.",
        "type": "boolean"
      },
      "LegacySameSiteCookieBehaviorEnabledForDomainList": {
        "title": "Legacy SameSite Cookie Behavior Enabled for Domain List",
        "description": "Revert to legacy SameSite behavior for cookies on specified sites.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "LocalFileLinks": {
        "title": "Local File Links",
        "description": "Enable linking to local files by origin",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "NetworkPrediction": {
        "title": "Network Prediction",
        "description": "Enable or disable network prediction (DNS prefetching).",
        "type": "boolean"
      },
      "NewTabPage": {
        "title": "New Tab Page",
        "description": "Enable or disable the New Tab page.",
        "type": "boolean"
      },
      "NoDefaultBookmarks": {
        "title": "No Default Bookmarks",
        "description": "Disable the creation of default bookmarks.",
        "type": "boolean"
      },
      "OfferToSaveLogins": {
        "title": "Offer To Save Logins",
        "description": "Control whether or not Firefox offers to save passwords.",
        "type": "boolean"
      },
      "OfferToSaveLoginsDefault": {
        "title": "Offer To Save Logins Default",
        "description": "Sets the default value of signon.rememberSignons without locking it.",
        "type": "boolean"
      },
      "OverrideFirstRunPage": {
        "title": "Override First Run Page",
        "description": "Override the first run page. If the value is blank, no first run page is displayed. Starting with Firefox 83, Firefox ESR 78.5, you can also specify multiple URLS separated by a vertical bar (|).",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OverridePostUpdatePage": {
        "title": "Override Post Update Page",
        "description": "Override the upgrade page. If the value is blank, no upgrade page is displayed.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PDFjs": {
        "title": "PDF.js",
        "description": "Disable or configure PDF.js, the built-in PDF viewer.",
        "type": {
          "dictionary": {
            "EnablePermissions": {
              "title": "EnablePermissions",
              "description": "If EnablePermissions is set to true, the built-in PDF viewer will honor document permissions like preventing the copying of text.",
              "type": "boolean"
            },
            "Enabled": {
              "title": "Enabled",
              "description": "If Enabled is set to false, the built-in PDF viewer is disabled.",
              "type": "boolean"
            }
          }
        }
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PasswordManagerEnabled": {
        "title": "Enable Password Manager",
        "description": "Remove access to the password manager via preferences and blocks about:logins on Firefox 70.",
        "type": "boolean"
      },
      "Permissions": {
        "title": "Permissions",
        "description": "Set permissions associated with camera, microphone, location, notifications, and autoplay.",
        "type": {
          "dictionary": {
            "Autoplay": {
              "title": "Autoplay Permissions",
              "description": "This preference allows you to change the autoplay permissions.",
              "type": {
                "dictionary": {
                  "Allow": {
                    "title": "Allow",
                    "description": "If this preference is enabled, autoplay can always be enabled for the domains indicated. If this preference is disabled or not configured, the default autoplay preference is followed.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "Block": {
                    "title": "Block",
                    "description": "If this preference is enabled, autoplay are always blocked for the domains indicated. If this preference is disabled or not configured, autoplay is not blocked by default.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "Default": {
                    "title": "Default Autoplay Behavior",
                    "description": "Configures the default Autoplay behavior.",
                    "type": {
                      "string": {
                        "rangeList": [
                          [
                            "allow-audio-video",
                            "Allow Audio & Video"
                          ],
                          [
                            "block-audio",
                            "Block Audio"
                          ],
                          [
                            "block-audio-video",
                            "Block Audio & Video"
                          ]
                        ]
                      }
                    }
                  },
                  "Locked": {
                    "title": "Locked",
                    "description": "If this preference is enabled, autoplay preferences cannot be changed by the user. If this preference is disabled or not configured, the user can change their autoplay preferences.",
                    "type": "boolean"
                  }
                }
              }
            },
            "Camera": {
              "title": "Camera Permissions",
              "description": "This preference allows you to change the camera permissions.",
              "type": {
                "dictionary": {
                  "Allow": {
                    "title": "Allow",
                    "description": "If this preference is enabled, access to the camera is always allowed for the domains indicated. If this preference is disabled or not configured, the default camera preference is followed.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "Block": {
                    "title": "Block",
                    "description": "If this preference is enabled, access to the camera is blocked for the domains indicated. If this preference is disabled or not configured, access to the camera is not blocked by default.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "BlockNewRequests": {
                    "title": "Block New Requests",
                    "description": "If this preference is enabled, sites that are not in the Allow preference will not be allowed to ask permission to access the camera. If this preference is disabled or not configured, any site that is not in the Block preference can ask permission to access the camera.",
                    "type": "boolean"
                  },
                  "Locked": {
                    "title": "Locked",
                    "description": "If this preference is enabled, camera preferences cannot be changed by the user. If this preference is disabled or not configured, the user can change their camera preferences.",
                    "type": "boolean"
                  }
                }
              }
            },
            "Location": {
              "title": "Location Permissions",
              "description": "This preference allows you to change the location permissions.",
              "type": {
                "dictionary": {
                  "Allow": {
                    "title": "Allow",
                    "description": "If this preference is enabled, access to location is always allowed for the domains indicated. If this preference is disabled or not configured, the default location preference is followed.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "Block": {
                    "title": "Block",
                    "description": "If this preference is enabled, access to location is blocked for the domains indicated. If this preference is disabled or not configured, access to location is not blocked by default.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "BlockNewRequests": {
                    "title": "Block New Requests",
                    "description": "If this preference is enabled, sites that are not in the Allow preference will not be allowed to ask permission to access location. If this preference is disabled or not configured, any site that is not in the Block preference can ask permission to access the location.",
                    "type": "boolean"
                  },
                  "Locked": {
                    "title": "Locked",
                    "description": "If this preference is enabled, location preferences cannot be changed by the user. If this preference is disabled or not configured, the user can change their location preferences.",
                    "type": "boolean"
                  }
                }
              }
            },
            "Microphone": {
              "title": "Microphone Permissions",
              "description": "This preference allows you to change the microphone permissions.",
              "type": {
                "dictionary": {
                  "Allow": {
                    "title": "Allow",
                    "description": "If this preference is enabled, access to the microphone is always allowed for the domains indicated. If this preference is disabled or not configured, the default microphone preference is followed.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "Block": {
                    "title": "Block",
                    "description": "If this preference is enabled, access to the microphone is blocked for the domains indicated. If this preference is disabled or not configured, access to the microphone is not blocked by default.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "BlockNewRequests": {
                    "title": "Block New Requests",
                    "description": "If this preference is enabled, sites that are not in the Allow preference will not be allowed to ask permission to access the microphone. If this preference is disabled or not configured, any site that is not in the Block preference can ask permission to access the microphone.",
                    "type": "boolean"
                  },
                  "Locked": {
                    "title": "Locked",
                    "description": "If this preference is enabled, microphone preferences cannot be changed by the user. If this preference is disabled or not configured, the user can change their microphone preferences.",
                    "type": "boolean"
                  }
                }
              }
            },
            "Notifications": {
              "title": "Notifications Permissions",
              "description": "This preference allows you to change the notifications permissions.",
              "type": {
                "dictionary": {
                  "Allow": {
                    "title": "Allow",
                    "description": "If this preference is enabled, notifications can always be sent for the domains indicated. If this preference is disabled or not configured, the default nofication preference is followed.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "Block": {
                    "title": "Block",
                    "description": "If this preference is enabled, notifications are always blocked for the domains indicated. If this preference is disabled or not configured, notifications are not blocked by default.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "BlockNewRequests": {
                    "title": "Block New Requests",
                    "description": "If this preference is enabled, sites that are not in the Allow preference will not be allowed to ask permission to send notifications. If this preference is disabled or not configured, any site that is not in the Block preference can ask permission to send notifications.",
                    "type": "boolean"
                  },
                  "Locked": {
                    "title": "Locked",
                    "description": "If this preference is enabled, notification preferences cannot be changed by the user. If this preference is disabled or not configured, the user can change their notification preferences.",
                    "type": "boolean"
                  }
                }
              }
            },
            "VirtualReality": {
              "title": "Virutal Reality Permissions",
              "description": "This preference allows you to change the virtual reality permissions.",
              "type": {
                "dictionary": {
                  "Allow": {
                    "title": "Allow",
                    "description": "If this preference is enabled, access to virtual reality is always allowed for the domains indicated. If this preference is disabled or not configured, the default virtual reality preference is followed.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "Block": {
                    "title": "Block",
                    "description": "If this preference is enabled, access to virtual reality is blocked for the domains indicated. If this preference is disabled or not configured, access to the virtual reality is not blocked by default.",
                    "type": {
                      "array": [
                        {
                          "string": {
                            "rangeList": []
                          }
                        }
                      ]
                    }
                  },
                  "BlockNewRequests": {
                    "title": "Block New Requests",
                    "description": "If this preference is enabled, sites that are not in the Allow preference will not be allowed to ask permission to access virtual reality. If this preference is disabled or not configured, any site that is not in the Block preference can ask permission to access virtual reality.",
                    "type": "boolean"
                  },
                  "Locked": {
                    "title": "Locked",
                    "description": "If this preference is enabled, virtual reality preferences cannot be changed by the user. If this preference is disabled or not configured, the user can change their virtual reality preferences.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "PictureInPicture": {
        "title": "Picture-in-Picture",
        "description": "Enable or disable Picture-in-Picture.",
        "type": {
          "dictionary": {
            "Enabled": {
              "title": "Enabled",
              "type": "boolean"
            },
            "Locked": {
              "title": "Locked",
              "type": "boolean"
            }
          }
        }
      },
      "PopupBlocking": {
        "title": "Popup Blocking",
        "description": "Configure the default pop-up window policy as well as origins for which pop-up windows are allowed.",
        "type": {
          "dictionary": {
            "Allow": {
              "title": "Allowed Domains",
              "description": "Specify the domains for which pop-up windows are always allowed. If a top level domain is specified (http://example.org), pop-up windows are allowed for all subdomains as well.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "Default": {
              "title": "Default",
              "description": "If this is false, pop-up windows are allowed by default.",
              "type": "boolean"
            },
            "Locked": {
              "title": "Locked",
              "description": "If this is true, pop-up blocking preferences cannot be changed.",
              "type": "boolean"
            }
          }
        }
      },
      "Preferences": {
        "title": "Preferences",
        "description": "Set and lock certain preferences.",
        "type": {
          "dictionary": {
            "accessibility.force_disabled": {
              "title": "accessibility.force_disabled",
              "description": "If set to 1, platform accessibility is disabled.",
              "type": "integer"
            },
            "app.update.auto": {
              "title": "app.update.auto",
              "description": "If false, Firefox doesn't automatically install update.",
              "type": "boolean"
            },
            "browser.bookmarks.autoExportHTML": {
              "title": "browser.bookmarks.autoExportHTML",
              "description": "If true, bookmarks are exported on shutdown.",
              "type": "boolean"
            },
            "browser.bookmarks.file": {
              "title": "browser.bookmarks.file",
              "description": " If set, the name of the file where bookmarks are exported and imported.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "browser.bookmarks.restore_default_bookmarks": {
              "title": "browser.bookmarks.restore_default_bookmarks",
              "description": "If true, bookmarks are restored to their defaults.",
              "type": "boolean"
            },
            "browser.cache.disk.enable": {
              "title": "browser.cache.disk.enable",
              "description": "If false, don't store cache on the hard drive.",
              "type": "boolean"
            },
            "browser.cache.disk.parent_directory": {
              "title": "browser.cache.disk.parent_directory",
              "description": "If set, changes the location of the disk cache.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "browser.fixup.dns_first_for_single_words": {
              "title": "browser.fixup.dns_first_for_single_words",
              "description": "If true, single words are sent to DNS, not directly to search.",
              "type": "boolean"
            },
            "browser.newtabpage.activity-stream.default.sites": {
              "title": "browser.newtabpage.activity-stream.default.sites",
              "description": "If set, a list of URLs to use as the default top sites on the new tab page.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "browser.places.importBookmarksHTML": {
              "title": "browser.places.importBookmarksHTML",
              "description": "If true, bookmarks are always imported on startup.",
              "type": "boolean"
            },
            "browser.safebrowsing.malware.enabled": {
              "title": "browser.safebrowsing.malware.enabled",
              "description": "If false, malware protection is not enabled (Not recommended)",
              "type": "boolean"
            },
            "browser.safebrowsing.phishing.enabled": {
              "title": "browser.safebrowsing.phishing.enabled",
              "description": "If false, phishing protection is not enabled (Not recommended)",
              "type": "boolean"
            },
            "browser.search.update": {
              "title": "browser.search.update",
              "description": "If false, updates for search engines are not checked.",
              "type": "boolean"
            },
            "browser.slowStartup.notificationDisabled": {
              "title": "browser.slowStartup.notificationDisabled",
              "description": " If true, a notification isn't shown if startup is slow.",
              "type": "boolean"
            },
            "browser.tabs.warnOnClose": {
              "title": "browser.tabs.warnOnClose",
              "description": "If false, there is no warning when the browser is closed.",
              "type": "boolean"
            },
            "browser.taskbar.previews.enable": {
              "title": "browser.taskbar.previews.enable",
              "description": "If true, tab previews are shown in the Windows taskbar.",
              "type": "boolean"
            },
            "browser.urlbar.suggest.bookmark": {
              "title": "browser.urlbar.suggest.bookmark",
              "description": "If false, bookmarks aren't suggested when typing in the URL bar.",
              "type": "boolean"
            },
            "browser.urlbar.suggest.history": {
              "title": "browser.urlbar.suggest.history",
              "description": "If false, history isn't suggested when typing in the URL bar.",
              "type": "boolean"
            },
            "browser.urlbar.suggest.openpage": {
              "title": "browser.urlbar.suggest.openpage",
              "description": "If false, open tabs aren't suggested when typing in the URL bar.",
              "type": "boolean"
            },
            "datareporting.policy.dataSubmissionPolicyBypassNotification": {
              "title": "datareporting.policy.dataSubmissionPolicyBypassNotification",
              "description": "If true, don't show the privacy policy tab on first run.",
              "type": "boolean"
            },
            "dom.allow_scripts_to_close_windows": {
              "title": "dom.allow_scripts_to_close_windows",
              "description": "If false, web page can close windows.",
              "type": "boolean"
            },
            "dom.disable_window_flip": {
              "title": "dom.disable_window_flip",
              "description": "If false, web pages can focus and activate windows.",
              "type": "boolean"
            },
            "dom.disable_window_move_resize": {
              "title": "dom.disable_window_move_resize",
              "description": "If true, web pages can't move or resize windows.",
              "type": "boolean"
            },
            "dom.event.contextmenu.enabled": {
              "title": "dom.event.contextmenu.enabled",
              "description": "If false, web pages can't override context menus.",
              "type": "boolean"
            },
            "dom.keyboardevent.keypress.hack.dispatch_non_printable_keys.addl": {
              "title": "dom.keyboardevent.keypress.hack.dispatch_non_printable_keys.addl",
              "description": "See https://support.mozilla.org/en-US/kb/dom-events-changes-introduced-firefox-66",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "dom.keyboardevent.keypress.hack.use_legacy_keycode_and_charcode.addl": {
              "title": "dom.keyboardevent.keypress.hack.use_legacy_keycode_and_charcode.addl",
              "description": "See https://support.mozilla.org/en-US/kb/dom-events-changes-introduced-firefox-66",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "extensions.blocklist.enabled": {
              "title": "extensions.blocklist.enabled",
              "description": "If false, the extensions blocklist is not used (Not recommended)",
              "type": "boolean"
            },
            "extensions.getAddons.showPane": {
              "title": "extensions.getAddons.showPane",
              "description": "If false, the Recommendations tab is not displayed in the Add-ons Manager.",
              "type": "boolean"
            },
            "extensions.htmlaboutaddons.recommendations.enabled": {
              "title": "extensions.htmlaboutaddons.recommendations.enabled",
              "description": "If false, recommendations are not shown on the Extensions tab in the Add-ons Manager.",
              "type": "boolean"
            },
            "geo.enabled": {
              "title": "geo.enabled",
              "description": "If false, the geolocation API is disabled.",
              "type": "boolean"
            },
            "intl.accept_languages": {
              "title": "intl.accept_languages",
              "description": "If set, preferred language for web pages.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "media.eme.enabled": {
              "title": "media.eme.enabled",
              "description": "If false, Encrypted Media Extensions are not enabled.",
              "type": "boolean"
            },
            "media.gmp-gmpopenh264.enabled": {
              "title": "media.gmp-gmpopenh264.enabled",
              "description": "If false, the OpenH264 plugin is not downloaded.",
              "type": "boolean"
            },
            "media.gmp-widevinecdm.enabled": {
              "title": "media.gmp-widevinecdm.enabled",
              "description": "If false, the Widevine plugin is not downloaded.",
              "type": "boolean"
            },
            "media.peerconnection.enabled": {
              "title": "media.peerconnection.enabled",
              "description": "If false, WebRTC is disabled",
              "type": "boolean"
            },
            "media.peerconnection.ice.obfuscate_host_addresses.blocklist": {
              "title": "media.peerconnection.ice.obfuscate_host_addresses.blocklist",
              "description": "If set, a list of domains for which mDNS hostname obfuscation is disabled.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "network.IDN_show_punycode": {
              "title": "network.IDN_show_punycode",
              "description": "If true, display the punycode version of internationalized domain names.",
              "type": "boolean"
            },
            "network.dns.disableIPv6": {
              "title": "network.dns.disableIPv6",
              "description": "If true, IPv6 DNS lokoups are disabled.",
              "type": "boolean"
            },
            "places.history.enabled": {
              "title": "places.history.enabled",
              "description": "If false, history is not enabled.",
              "type": "boolean"
            },
            "print.save_print_settings": {
              "title": "print.save_print_settings",
              "description": "If false, print settings are not saved between jobs.",
              "type": "boolean"
            },
            "security.default_personal_cert": {
              "title": "security.default_personal_cert",
              "description": "If set to \"Select Automatically\", Firefox automatically chooses the default personal certificate. Other possible option is \"Ask Every Time\".",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "security.mixed_content.block_active_content": {
              "title": "security.mixed_content.block_active_content",
              "description": "If false, mixed active content (HTTP and HTTPS) is not blocked.",
              "type": "boolean"
            },
            "security.osclientcerts.autoload": {
              "title": "security.osclientcerts.autoload",
              "description": "If true, client certificates are loaded from the operating system certificate store.",
              "type": "boolean"
            },
            "security.ssl.errorReporting.enabled": {
              "title": "security.ssl.errorReporting.enabled",
              "description": "If false, SSL errors cannot be sent to Mozilla.",
              "type": "boolean"
            },
            "security.tls.enable_0rtt_data": {
              "title": "security.tls.enable_0rtt_data",
              "description": "If false, TLS early data is turned off.",
              "type": "boolean"
            },
            "security.tls.hello_downgrade_check": {
              "title": "security.tls.hello_downgrade_check",
              "description": "If false, the TLS 1.3 downgrade check is disabled.",
              "type": "boolean"
            },
            "security.tls.version.enable-deprecated": {
              "title": "security.tls.version.enable-deprecated",
              "description": "If true, browser will accept TLS 1.0. and TLS 1.1.",
              "type": "boolean"
            },
            "widget.content.gtk-theme-override": {
              "title": "widget.content.gtk-theme-override",
              "description": "If set, overrides the GTK theme for widgets.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "PrimaryPassword": {
        "title": "Enable Primary Password",
        "description": "Require or prevent using a primary (formerly master) password. If this value is true, a primary password is required.",
        "type": "boolean"
      },
      "Privacy_SegmentedControl": {
        "title": "Privacy_SegmentedControl",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PromptForDownloadLocation": {
        "title": "Prompt for Download Location",
        "description": "Ask where to save each file before downloading.",
        "type": "boolean"
      },
      "Proxy": {
        "title": "Proxy",
        "description": "Configure proxy settings. These settings correspond to the connection settings in Firefox preferences. To specify ports, append them to the hostnames with a colon (:).",
        "type": {
          "dictionary": {
            "AutoConfigURL": {
              "title": "Automatic Proxy Configuration URL",
              "description": "Proxy bypass URLs.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "AutoLogin": {
              "title": "AutoLogin",
              "description": "If this preference is enabled, do not prompt for authentication if password is saved.",
              "type": "boolean"
            },
            "FTPProxy": {
              "title": "FTP Proxy",
              "description": "FTP Proxy URL.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "HTTPProxy": {
              "title": "HTTP Proxy",
              "description": "HTTP Proxy URL.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Locked": {
              "title": "Locked",
              "description": "If this preference is enabled, Proxy preferences cannot be changed.",
              "type": "boolean"
            },
            "Mode": {
              "title": "Mode",
              "description": "If this preference is enabled, you will be setting the proxy mode.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "none",
                      "No Proxy"
                    ],
                    [
                      "system",
                      "Use system proxy settings"
                    ],
                    [
                      "manual",
                      "Manual proxy configuration"
                    ],
                    [
                      "autoDetect",
                      "Auto-detect proxy settings"
                    ],
                    [
                      "autoConfig",
                      "Automatic proxy configuration"
                    ]
                  ]
                }
              }
            },
            "Passthrough": {
              "title": "No Proxy For",
              "description": "Proxy bypass URLs.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "SOCKSProxy": {
              "title": "SOCKS Proxy",
              "description": "SOCKS Proxy URL.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "SOCKSVersion": {
              "title": "SOCKS Version",
              "description": "Select SOCKS Version.",
              "type": {
                "string": {
                  "rangeList": [
                    [
                      "4",
                      "4"
                    ],
                    [
                      "5",
                      "5"
                    ]
                  ]
                }
              }
            },
            "SSLProxy": {
              "title": "SSL Proxy",
              "description": "SSL Proxy URL.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "UseHTTPProxyForAllProtocols": {
              "title": "UseHTTPProxyForAllProtocols",
              "description": "If this preference is enabled, use the HTTP proxy server for all protocols.",
              "type": "boolean"
            },
            "UseProxyForDNS": {
              "title": "UseProxyForDNS",
              "description": "If this preference is enabled, you will use Proxy DNS when using SOCKS v5.",
              "type": "boolean"
            }
          }
        }
      },
      "RequestedLocales": {
        "title": "Requested Locales",
        "description": "Set the the list of requested locales for the application in order of preference. It will cause the corresponding language pack to become active.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": [
                  [
                    "ach",
                    "Acholi"
                  ],
                  [
                    "af",
                    "Afrikaans"
                  ],
                  [
                    "sq",
                    "Albanian"
                  ],
                  [
                    "ar",
                    "Arabic"
                  ],
                  [
                    "an",
                    "Aragonese"
                  ],
                  [
                    "hy-AM",
                    "Armenian"
                  ],
                  [
                    "as",
                    "Assamese"
                  ],
                  [
                    "ast",
                    "Asturian"
                  ],
                  [
                    "az",
                    "Azerbaijani"
                  ],
                  [
                    "eu",
                    "Basque"
                  ],
                  [
                    "be",
                    "Belarusian"
                  ],
                  [
                    "bn-BD",
                    "Bengali (Bangladesh)"
                  ],
                  [
                    "bn-IN",
                    "Bengali (India)"
                  ],
                  [
                    "bs",
                    "Bosnian"
                  ],
                  [
                    "br",
                    "Breton"
                  ],
                  [
                    "bg",
                    "Bulgarian"
                  ],
                  [
                    "my",
                    "Burmese"
                  ],
                  [
                    "ca",
                    "Catalan"
                  ],
                  [
                    "zh-CN",
                    "Chinese (Simplified)"
                  ],
                  [
                    "zh-TW",
                    "Chinese (Traditional)"
                  ],
                  [
                    "hr",
                    "Croatian"
                  ],
                  [
                    "cs",
                    "Czech"
                  ],
                  [
                    "da",
                    "Danish"
                  ],
                  [
                    "nl",
                    "Dutch"
                  ],
                  [
                    "en-GB",
                    "English (British)"
                  ],
                  [
                    "en-CA",
                    "English (Canadian)"
                  ],
                  [
                    "en-ZA",
                    "English (South African)"
                  ],
                  [
                    "en-US",
                    "English (US)"
                  ],
                  [
                    "eo",
                    "Esperanto"
                  ],
                  [
                    "et",
                    "Estonian"
                  ],
                  [
                    "fi",
                    "Finnish"
                  ],
                  [
                    "fr",
                    "French"
                  ],
                  [
                    "fy-NL",
                    "Frisian"
                  ],
                  [
                    "ff",
                    "Fulah"
                  ],
                  [
                    "gd",
                    "Gaelic (Scotland)"
                  ],
                  [
                    "gl",
                    "Galician"
                  ],
                  [
                    "ka",
                    "Georgian"
                  ],
                  [
                    "de",
                    "German"
                  ],
                  [
                    "el",
                    "Greek"
                  ],
                  [
                    "gn",
                    "Guarani"
                  ],
                  [
                    "gu-IN",
                    "Gujarati (India)"
                  ],
                  [
                    "he",
                    "Hebrew"
                  ],
                  [
                    "hi-IN",
                    "Hindi (India)"
                  ],
                  [
                    "hu",
                    "Hungarian"
                  ],
                  [
                    "is",
                    "Icelandic"
                  ],
                  [
                    "id",
                    "Indonesian"
                  ],
                  [
                    "ia",
                    "Interlingua"
                  ],
                  [
                    "ga-IE",
                    "Irish"
                  ],
                  [
                    "it",
                    "Italian"
                  ],
                  [
                    "ja",
                    "Japanese"
                  ],
                  [
                    "kab",
                    "Kabyle"
                  ],
                  [
                    "kn",
                    "Kannada"
                  ],
                  [
                    "cak",
                    "Kaqchikel"
                  ],
                  [
                    "kk",
                    "Kazakh"
                  ],
                  [
                    "km",
                    "Khmer"
                  ],
                  [
                    "ko",
                    "Korean"
                  ],
                  [
                    "lv",
                    "Latvian"
                  ],
                  [
                    "lij",
                    "Ligurian"
                  ],
                  [
                    "lt",
                    "Lithuanian"
                  ],
                  [
                    "dsb",
                    "Lower Sorbian"
                  ],
                  [
                    "mk",
                    "Macedonian"
                  ],
                  [
                    "mai",
                    "Maithili"
                  ],
                  [
                    "ms",
                    "Malay"
                  ],
                  [
                    "ml",
                    "Malayalam"
                  ],
                  [
                    "mr",
                    "Marathi"
                  ],
                  [
                    "ne-NP",
                    "Nepali"
                  ],
                  [
                    "nb-NO",
                    "Norwegian (Bokmål)"
                  ],
                  [
                    "nn-NO",
                    "Norwegian (Nynorsk)"
                  ],
                  [
                    "oc",
                    "Occitan (Lengadocian)"
                  ],
                  [
                    "or",
                    "Odia"
                  ],
                  [
                    "fa",
                    "Persian"
                  ],
                  [
                    "pl",
                    "Polish"
                  ],
                  [
                    "pt-BR",
                    "Portuguese (Brazilian)"
                  ],
                  [
                    "pt-PT",
                    "Portuguese (Portugal)"
                  ],
                  [
                    "pa-IN",
                    "Punjabi (India)"
                  ],
                  [
                    "ro",
                    "Romanian"
                  ],
                  [
                    "rm",
                    "Romansh"
                  ],
                  [
                    "ru",
                    "Russian"
                  ],
                  [
                    "sr",
                    "Serbian"
                  ],
                  [
                    "si",
                    "Sinhala"
                  ],
                  [
                    "sk",
                    "Slovak"
                  ],
                  [
                    "sl",
                    "Slovenian"
                  ],
                  [
                    "son",
                    "Songhai"
                  ],
                  [
                    "es-AR",
                    "Spanish (Argentina)"
                  ],
                  [
                    "es-CL",
                    "Spanish (Chile)"
                  ],
                  [
                    "es-MX",
                    "Spanish (Mexico)"
                  ],
                  [
                    "es-ES",
                    "Spanish (Spain)"
                  ],
                  [
                    "sv-SE",
                    "Swedish"
                  ],
                  [
                    "ta",
                    "Tamil"
                  ],
                  [
                    "te",
                    "Telugu"
                  ],
                  [
                    "th",
                    "Thai"
                  ],
                  [
                    "tr",
                    "Turkish"
                  ],
                  [
                    "uk",
                    "Ukrainian"
                  ],
                  [
                    "hsb",
                    "Upper Sorbian"
                  ],
                  [
                    "ur",
                    "Urdu"
                  ],
                  [
                    "uz",
                    "Uzbek"
                  ],
                  [
                    "vi",
                    "Vietnamese"
                  ],
                  [
                    "cy",
                    "Welsh"
                  ],
                  [
                    "xh",
                    "Xhosa"
                  ]
                ]
              }
            }
          ]
        }
      },
      "SSLVersionMax": {
        "title": "SSLVersionMax",
        "type": {
          "string": {
            "rangeList": [
              [
                "tls1",
                "TLS 1.0"
              ],
              [
                "tls1.1",
                "TLS 1.1"
              ],
              [
                "tls1.2",
                "TLS 1.2"
              ],
              [
                "tls1.3",
                "TLS 1.3"
              ]
            ]
          }
        }
      },
      "SSLVersionMin": {
        "title": "SSLVersionMin",
        "type": {
          "string": {
            "rangeList": [
              [
                "tls1",
                "TLS 1.0"
              ],
              [
                "tls1.1",
                "TLS 1.1"
              ],
              [
                "tls1.2",
                "TLS 1.2"
              ],
              [
                "tls1.3",
                "TLS 1.3"
              ]
            ]
          }
        }
      },
      "SanitizeOnShutdown": {
        "title": "Sanitize On Shutdown (Selective)",
        "description": "Clear data on shutdown. Choose from Cache, Cookies, Download History, Form & Search History, Browsing History, Active Logins, Site Preferences and Offline Website Data.",
        "type": {
          "dictionary": {
            "Cache": {
              "title": "Cache",
              "type": "boolean"
            },
            "Cookies": {
              "title": "Cookies",
              "type": "boolean"
            },
            "Downloads": {
              "title": "Downloads",
              "type": "boolean"
            },
            "FormData": {
              "title": "Form Data",
              "type": "boolean"
            },
            "History": {
              "title": "History",
              "type": "boolean"
            },
            "Locked": {
              "title": "Locked",
              "type": "boolean"
            },
            "OfflineApps": {
              "title": "Offline Apps",
              "type": "boolean"
            },
            "Sessions": {
              "title": "Sessions",
              "type": "boolean"
            },
            "SiteSettings": {
              "title": "Site Settings",
              "type": "boolean"
            }
          }
        }
      },
      "SearchBar": {
        "title": "Search Bar",
        "description": "Set whether or not search bar is displayed.",
        "type": {
          "string": {
            "rangeList": [
              [
                "separate",
                "Separate"
              ],
              [
                "unified",
                "Unified"
              ]
            ]
          }
        }
      },
      "SearchEngines": {
        "title": "Search Engines",
        "description": "Set whether or not search bar is displayed.",
        "type": {
          "dictionary": {
            "Add": {
              "title": "Add Search Engines",
              "description": "Add new search engines. This policy is only available on the ESR.",
              "type": {
                "array": [
                  {
                    "dictionary": {
                      "Alias": {
                        "title": "Alias",
                        "description": "keyword to use for the engine",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Description": {
                        "title": "Description",
                        "description": "Description of the search engine.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Encoding": {
                        "title": "Encoding",
                        "description": "The query charset for the engine.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "IconURL": {
                        "title": "IconURL",
                        "description": "URL for the icon to use",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Method": {
                        "title": "Method",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "Name": {
                        "title": "Name",
                        "description": "Name of the search engine",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "PostData": {
                        "title": "PostData",
                        "description": "POST data as name value pairs separated by '&'",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "SuggestURLTemplate": {
                        "title": "SuggestURLTemplate",
                        "description": "Search suggestions URL with {searchTerms} to substitute for the search term.",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      },
                      "URLTemplate": {
                        "title": "URLTemplate",
                        "type": {
                          "string": {
                            "rangeList": []
                          }
                        }
                      }
                    }
                  }
                ]
              }
            },
            "Default": {
              "title": "Default",
              "description": "Set the default search engine. This policy is only available on the ESR.",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "PreventInstalls": {
              "title": "PreventInstalls",
              "description": "Prevent installing search engines from webpages. This policy is only available on the ESR.",
              "type": "boolean"
            },
            "Remove": {
              "title": "Remove",
              "description": "Hide built-in search engines. This policy is only available on the ESR.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "SearchSuggestEnabled": {
        "title": "Enable Search Suggest",
        "description": "Enable search suggestions.",
        "type": "boolean"
      },
      "SecurityDevices": {
        "title": "SecurityDevices",
        "description": "Install PKCS #11 modules.",
        "type": {
          "dictionary": {
            "{{key}}": {
              "title": "Device Name",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "{{value}}": {
              "title": "Library Path",
              "description": "",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "Security_SegmentedControl": {
        "title": "Security_SegmentedControl",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ShowHomeButton": {
        "title": "Show Home Button",
        "description": "Show the home button on the toolbar.",
        "type": "boolean"
      },
      "SupportMenu": {
        "title": "Support Menu",
        "description": "Adds a menuitem to the help menu for specifying support information.",
        "type": {
          "dictionary": {
            "AccessKey": {
              "title": "AccessKey",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "Title": {
              "title": "Title",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            },
            "URL": {
              "title": "URL",
              "type": {
                "string": {
                  "rangeList": []
                }
              }
            }
          }
        }
      },
      "UserMessaging": {
        "title": "Search Engine Installs from Websites",
        "description": "Prevent installing search engines from webpages.",
        "type": {
          "dictionary": {
            "ExtensionRecommendations": {
              "title": "Extension Recomendations",
              "description": "If enabled, don't recommend extensions.",
              "type": "boolean"
            },
            "FeatureRecommendations": {
              "title": "Feature Recommendations",
              "description": "If enabled, don't recommend browser features.",
              "type": "boolean"
            },
            "SkipOnboarding": {
              "title": "Skip Onboarding",
              "description": "If enabled, don't show onboarding messages on the new tab page.",
              "type": "boolean"
            },
            "UrlbarInterventions": {
              "title": "URL Bar Interventions",
              "description": "If enabled, don't offer Firefox specific suggestions in the URL bar.",
              "type": "boolean"
            },
            "WhatsNew": {
              "title": "What's New",
              "description": "If enabled, remove the \"What's New\" icon and menuitem.",
              "type": "boolean"
            }
          }
        }
      },
      "WebsiteFilter": {
        "title": "WebsiteFilter",
        "description": "Block websites from being visited. The parameters take an array of Match Patterns, as documented in https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Match_patterns. http/https addresses are supported as well as local file:// URLs. The arrays are limited to 1000 entries each.",
        "type": {
          "dictionary": {
            "Block": {
              "title": "Block",
              "description": "If this preference is enabled, you can specify match patterns that indicate sites to be blocked. The match patterns are documented at https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Match_patterns. Only http/https addresses are supported at the moment. There is a 1000 entry limit. If this preference is disabled or not configured, no websites are blocked.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            },
            "Exceptions": {
              "title": "Exceptions",
              "description": "If this preference is enabled, and the website filter is enabled, you can specify match patterns for sites you do not want to block. The match patterns are documented at https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Match_patterns. Only http/https addresses are supported at the moment. There is a 1000 entry limit. If this preference is disabled or not configured, there are no exceptions to the website filter.",
              "type": {
                "array": [
                  {
                    "string": {
                      "rangeList": []
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "org.sveinbjorn.Platypus": {
    "title": "Platypus",
    "description": "Platypus settings",
    "properties": {
      "DefaultAuthor": {
        "title": "DefaultAuthor",
        "description": "The default name to have listed as the application author.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultBundleIdentifierPrefix": {
        "title": "DefaultBundleIdentifierPrefix",
        "description": "Enter the desired default bundle identifier prefix for apps built with Platypus. This string must end with a period.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "DefaultEditor": {
        "title": "DefaultEditor",
        "description": "The default text editor to use with Platypus. If you want to use built-in Platypus editor, don't enable this preference.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "OpenApplicationWhenCreated": {
        "title": "OpenApplicationWhenCreated",
        "description": "After building an appliction with Platypus, launch the application.",
        "type": "boolean"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RevealApplicationWhenCreated": {
        "title": "RevealApplicationWhenCreated",
        "description": "After building an application with Platypus, reveal the application in the Finder.",
        "type": "boolean"
      },
      "SUAutomaticallyUpdate": {
        "title": "SUAutomaticallyUpdate",
        "description": "Automatically download available updates for Platypus. When combined with SUEnableAutomaticChecks, Platypus will automatically check and download these updates. Updates are subsequently installed when the user quits the app.",
        "type": "boolean"
      },
      "SUEnableAutomaticChecks": {
        "title": "SUEnableAutomaticChecks",
        "description": "Automatically check for Platypus software updates.",
        "type": "boolean"
      },
      "SUFeedURL": {
        "title": "SUFeedURL",
        "description": "Sparkle update framework key. While automatic update checks can be disabled via the SUEnableAutomaticChecks key, this does not prevent users from manually running a software update check via the GUI. Setting this key to a non-existant local address will prevent users from manually triggering and/or installing updates themselves.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SUSendProfileInfo": {
        "title": "SUSendProfileInfo",
        "description": "When running software update checks, submit anonymous computer profile data to Platypus.",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  },
  "org.videolan.VLC": {
    "title": "VLC",
    "description": "VLC settings",
    "properties": {
      "SUAllowsAutomaticUpdates": {
        "title": "Automatic Update Install Prompt",
        "description": "Controls the automatic update install prompt. When enabled, presents users with the option to allow automatic download and install of available updates. If disabled, disallows automatic updates and requires manual installation every time.",
        "type": "boolean"
      },
      "SUAutomaticallyUpdate": {
        "title": "Enable Automatic Silent Updates",
        "description": "Controls automatic silent updates. If enabled, users will not be informed about updates and updates will be silently installed when the app quits.",
        "type": "boolean"
      },
      "SUEnableAutomaticChecks": {
        "title": "Enable Automatic Update Checks",
        "description": "Controls automatic update checks.",
        "type": "boolean"
      },
      "SUFeedURL": {
        "title": "Sparkle Feed URL",
        "description": "Setting this to a non-existent URL will disable the ability for users to manually check for updates. Useful when you intend to use your own software distribution mechanism to deploy updates.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SUScheduledCheckInterval": {
        "title": "Automatic Update Check Interval",
        "description": "Controls the automatic update check interval. The default is 1 day (86400 seconds). Setting to 0 disables updates.",
        "type": "integer"
      }
    },
    "supervised": false,
    "unique": true
  },
  "uk.co.dataJAR.jamJAR": {
    "title": "jamJAR",
    "description": "jamJAR Preferences",
    "properties": {
      "datajar_notifier": {
        "title": "dataJAR Notifier",
        "description": "Determines if jamJAR should use the dataJAR notifier for notifications.",
        "type": "boolean"
      },
      "datajar_notifier_logout_button": {
        "title": "dataJAR Notifier Logout Button Title",
        "description": "Sets the title for the logout button shown in the Alert notifications.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "delete_secure_auth": {
        "title": "Delete Munki Secure Auth",
        "description": "If set to True, deletes the AdditionalHttpHeaders key in /private/var/root/Library/Preferences/ManagedInstalls.plist",
        "type": "boolean"
      },
      "log_file_dir": {
        "title": "Log File",
        "description": "jamJAR log file storage location. Prior to jamJAR 2.0: The log rotates at midnight & appends the date to the old file. As of jamJAR 2.0+: The log rotates every 10MB, not archiving older versions.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "log_file_name": {
        "title": "Log File Name",
        "description": "jamJAR log file name.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "no_msg_category": {
        "title": "No Message Category",
        "description": "Category name which when defined will not post a notification.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "notifier_msg_installed": {
        "title": "Install Notification Message",
        "description": "Notification message content when software is installed. Requires 2 string placeholders (%s), the first being the munki item name and the second being the version.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "notifier_msg_nopending": {
        "title": "No Pending Installs Notification Message",
        "description": "Notification message content when no software is pending.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "notifier_msg_osupdatespending": {
        "title": "OS Updates Pending Notification Message",
        "description": "The notification text to display when macOS updates are pending. This leverages Manual Apple Updates in Munki 5",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "notifier_msg_pending": {
        "title": "Pending Installs Exist Notification Message",
        "description": "Notification message content when software is pending.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "notifier_msg_title": {
        "title": "Notification Message Title",
        "description": "",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "notifier_msg_uptodate": {
        "title": "Software Up-to-Date Notification Message",
        "description": "Notification message content when software is up-to-date. Requires 1 string placeholder (%s), which defaults to the munki item name.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "notifier_path": {
        "title": "Notifying Application Path",
        "description": "The path of the application sending jamJAR notifications. Only terminal-notifier & Jamf Pro's Management Action have been tested.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "notifier_sender_id": {
        "title": "Notifying Application Bundle ID",
        "description": "The bundle ID of the application that sent the notification, if using only terminal-notifier or Notifier, this should be /Applications/Managed Software Center.app (or whatever the path to MSC is, if using MSC).",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      }
    },
    "supervised": false,
    "unique": true
  },
  "us.zoom.config": {
    "title": "Zoom",
    "description": "Zoom settings",
    "properties": {
      "AU2_DeploySpecificVersion": {
        "title": "Deploy Specific Zoom Version",
        "description": "Download and install the specified version if the currently installed version is below that version. Format should be the official version without spaces or parentheses",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AU2_EnableAutoUpdate": {
        "title": "Enable Updates",
        "description": "Enable auto updates through the client",
        "type": "boolean"
      },
      "AU2_EnableManualUpdate": {
        "title": "Allow Manual Update Checks",
        "description": "Control the visibility of the Check for Updates option in the client",
        "type": "boolean"
      },
      "AU2_EnablePromptUpdateForAU2": {
        "title": "Prompt for Updates on Leave",
        "description": "Prompt users to update when exiting a meeting or webinar, when an update is available",
        "type": "boolean"
      },
      "AU2_EnableShowZoomUpdates": {
        "title": "Show Zoom Updates",
        "description": "Show the Zoom Updates section of the General tab in client settings",
        "type": "boolean"
      },
      "AU2_EnableUpdateAvailableBanner": {
        "title": "Display Banner for Available Updates",
        "description": "Show the Update Available banner on the Home tab of the client, when an update is available",
        "type": "boolean"
      },
      "AU2_EnableUpdateSuccessNotification": {
        "title": "Notify on Successful Update Install",
        "description": "Show notification indicating an update has been successfully installed",
        "type": "boolean"
      },
      "AU2_InstallAtIdleTime": {
        "title": "Auto Install Updates When Idle",
        "description": "Auto install an available update when the device is idle",
        "type": "boolean"
      },
      "AU2_SafeUpgradePeriod": {
        "title": "Set Update Install Schedule Window",
        "description": "Set to install updates within a given time period. Requires AU2_InstallAtIdleTime be enabled",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "AU2_SetUpdateChannel": {
        "title": "Update Channel",
        "description": "Set the cadence of updates applied to the desktop client",
        "type": "boolean"
      },
      "AU2_SetUpdateSchedule": {
        "title": "Set Update Schedule Window",
        "description": "Timeframe to download an available update version. Update is then initiated by the user through prompt, or during idle time or the specified safe upgrade period",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Account": {
        "title": "Restrict Meetings to Specified Host Account ID",
        "description": "Restrict the Zoom client to join meetings from the specified account IDs.",
        "type": {
          "array": [
            {
              "string": {
                "rangeList": []
              }
            }
          ]
        }
      },
      "AlwaysCheckLatestVersion": {
        "title": "Allow Zoom to Check for Updates Automatically",
        "description": "Allows the desktop client to check for any available updates. This option requires zAutoUpdate option to be enabled, and will fail if not enabled.",
        "type": "boolean"
      },
      "AlwaysShowVideoPreviewDialog": {
        "title": "Always Show Video Preview Dialog",
        "description": "If enabled, always show the video preview when joining a meeting.",
        "type": "boolean"
      },
      "AudioAutoAdjust": {
        "title": "Auto Adjust Microphone",
        "description": "Automatically adjust microphone levels",
        "type": "boolean"
      },
      "AutoHideToolbar": {
        "title": "Auto Hide Meeting Controls",
        "description": "If set to 'false', always show meeting controls (enables the always show meeting control setting).",
        "type": "boolean"
      },
      "BandwidthLimitDown": {
        "title": "Minimum Bandwidth",
        "description": "Limit the Minimum amount of bandwidth used by the Mac client",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BandwidthLimitUp": {
        "title": "Maximum Bandwidth",
        "description": "Limit the Maximum amount of bandwidth by the Mac client",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "BlockUntrustedSSLCert": {
        "title": "Block Untrusted SSL Certs",
        "description": "Block connections to untrusted SSL certificates.",
        "type": "boolean"
      },
      "ConfirmWhenLeave": {
        "title": "Prompt User When Leaving Meeting",
        "description": "Confirm before leaving a meeting",
        "type": "boolean"
      },
      "DefaultUsePortraitView": {
        "title": "Default to Portrait Mode",
        "description": "Default to Portrait Mode upon opening Zoom",
        "type": "boolean"
      },
      "DisableAudioOverProxy": {
        "title": "Disable Audio Over Proxy",
        "description": "Prevent audio traffic over proxies.",
        "type": "boolean"
      },
      "DisableAutoLaunchSSO": {
        "title": "Disable SSO Auto Launch",
        "description": "Prevent Zoom from automatically launching the previously used SSO URL. This is useful for users with multiple accounts, each having their own SSO URL.",
        "type": "boolean"
      },
      "DisableBroadcastBOMessage": {
        "title": "Disable Broadcast Messaging",
        "description": "Disable the ability for the host to broadcast a message to all open breakout rooms.",
        "type": "boolean"
      },
      "DisableCertPin": {
        "title": "Disable Certificate Pinning",
        "type": "boolean"
      },
      "DisableClosedCaptioning": {
        "title": "Disable Closed Captioning",
        "description": "Prevent the use of closed captioning",
        "type": "boolean"
      },
      "DisableComputerAudio": {
        "title": "Disable Computer Audio",
        "description": "Disable use of computer audio on the Zoom Client",
        "type": "boolean"
      },
      "DisableDaemonInstall": {
        "title": "Disable Zoom Helper Daemon Install",
        "description": "Controls the use of the daemon helper to install updates, which bypasses the need to enter admin credentials when upgrading. This option requires AutoUpdate option to be enabled, and will fail if not enabled.",
        "type": "boolean"
      },
      "DisableDesktopShare": {
        "title": "Disable Desktop Sharing",
        "description": "Disable the option to share your desktop when screen sharing",
        "type": "boolean"
      },
      "DisableDirectConnection2Web": {
        "title": "Disable Direct Connection to Web",
        "description": "Disable all direct connections to Zoom web service.",
        "type": "boolean"
      },
      "DisableDirectShare": {
        "title": "Disable Direct Share",
        "description": "Disables direct share with Zoom Rooms",
        "type": "boolean"
      },
      "DisableInMeetingWhiteBoard": {
        "title": "Disable Meeting / Webinar Whiteboard",
        "description": "Disable the Zoom Whiteboard feature in meetings and webinars",
        "type": "boolean"
      },
      "DisableKeepSignedInWithFacebook": {
        "title": "Disable Facebook Keep Signed In",
        "description": "Require new Facebook login every time Zoom launches.",
        "type": "boolean"
      },
      "DisableKeepSignedInWithGoogle": {
        "title": "Disable Google Keep Signed In",
        "description": "Require new Google login every time Zoom launches.",
        "type": "boolean"
      },
      "DisableKeepSignedInWithSSO": {
        "title": "Disable SSO Keep Signed In",
        "description": "Require new SSO login every time Zoom launches.",
        "type": "boolean"
      },
      "DisableLinkPreviewInChat": {
        "title": "Disable Link Preview in Chat",
        "description": "Disable Link Preview",
        "type": "boolean"
      },
      "DisableLoginWithEmail": {
        "title": "Disable Email Login",
        "description": "Remove Email login option",
        "type": "boolean"
      },
      "DisableManualClosedCaptioning": {
        "title": "Disable Manual Closed Captioning",
        "description": "Prevent the use of manual, user-entered closed captioning",
        "type": "boolean"
      },
      "DisableMeeting3rdPartyFileStorage": {
        "title": "Disable Meeting Third Party File Storage",
        "description": "Disable in-meeting 3rd party file transfer",
        "type": "boolean"
      },
      "DisableMeetingReactions": {
        "title": "Disable Meeting Reactions",
        "description": "Disables use of reactions in meetings",
        "type": "boolean"
      },
      "DisableNonVerbalFeedback": {
        "title": "Disable Non-Verbal Feedback",
        "description": "Disable the use of non-verbal feedback.",
        "type": "boolean"
      },
      "DisableQnA": {
        "title": "Disable Webinar Q&A",
        "description": "Disable Q&A in webinars",
        "type": "boolean"
      },
      "DisableRemoteControl": {
        "title": "Disable Remote Control During Screen Sharing",
        "description": "Disables Remote Control when screen sharing",
        "type": "boolean"
      },
      "DisableRemoteSupport": {
        "title": "Disable 1:1 Remote Support During Screen Sharing",
        "description": "Disables 1:1 remote support when screen sharing",
        "type": "boolean"
      },
      "DisableScreenShare": {
        "title": "Auto Disable Screen Sharing",
        "description": "Disable Screen Share when starting or joining a meeting",
        "type": "boolean"
      },
      "DisableSharingOverProxy": {
        "title": "Disable Sharing Over Proxy",
        "description": "Prevent sharing traffic over proxies.",
        "type": "boolean"
      },
      "DisableSlideControl": {
        "title": "Disable Slide Control",
        "description": "Disable the use of slide control",
        "type": "boolean"
      },
      "DisableVideoFilters": {
        "title": "Disable Video Filters",
        "description": "Disables use of video filters",
        "type": "boolean"
      },
      "DisableVideoOverProxy": {
        "title": "Disable Video Over Proxy",
        "description": "Prevent video traffic over proxies.",
        "type": "boolean"
      },
      "DisableVirtualBkgnd": {
        "title": "Disable Virtual Background",
        "description": "Disables use of the Virtual Background feature",
        "type": "boolean"
      },
      "DisableWebinarReactions": {
        "title": "Disable Webinar Recations",
        "description": "Disable the use of Webinar reactions.",
        "type": "boolean"
      },
      "DisableWhiteBoard": {
        "title": "Disable Whiteboard",
        "description": "Disable Classic Whiteboard feature",
        "type": "boolean"
      },
      "DisableZoomApps": {
        "title": "Disable Zoom Apps",
        "description": "If enabled, hides the Zoom Apps quick launch button in the Zoom interface.",
        "type": "boolean"
      },
      "DisableZoomAppsGuestAccess": {
        "title": "Disable Zoom Apps Guest Access",
        "description": "Control the ability for users to utilize a Zoom App in Guest mode.",
        "type": "boolean"
      },
      "EmbedDeviceTag": {
        "title": "Embed Device Tag",
        "description": "Embed a specified device tag string for all HTTP requests from Zoom client application. This string will be appended to the head of the regular HTTP requests.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "EmbedUserAgentString": {
        "title": "Embed User Agent String",
        "description": "Embed a specified user agent string for all HTTP requests from the Zoom client.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "Enable49Video": {
        "title": "Enable 49 Participant Gallery View",
        "description": "Sets the max number of participants displayed in Gallery View to 49 participants per screen",
        "type": "boolean"
      },
      "EnableAlipayLogin": {
        "title": "Enable Alipay Login",
        "description": "Enables login with Alipay authentication.",
        "type": "boolean"
      },
      "EnableAppleLogin": {
        "title": "Enable Sign in with Apple",
        "description": "Enable the Apple login option",
        "type": "boolean"
      },
      "EnableAutoLightAdaption": {
        "title": "Enable Auto Light Adaption",
        "description": "Set method of adjusting low-light video feature",
        "type": "boolean"
      },
      "EnableAutoReverseVirtualBkgnd": {
        "title": "Enable Auto Reverse of Virtual Background",
        "description": "Require post-meeting virtual background auto-reversal.",
        "type": "boolean"
      },
      "EnableCloudSwitch": {
        "title": "Enable Cloud Switch",
        "description": "Enable the option to switch between Zoom commercial (default) and Zoom for Gov.",
        "type": "boolean"
      },
      "EnableDoNotDisturbInSharing": {
        "title": "Enable Do Not Disturb in Desktop Sharing",
        "description": "Silence system notifications when sharing desktop",
        "type": "boolean"
      },
      "EnableEchoCancellation": {
        "title": "Enable Echo Cancellation",
        "description": "Enables echo cancellation for the microphone audio",
        "type": "boolean"
      },
      "EnableEmbedBrowserForSSO": {
        "title": "Enable Embedded Zoom Browser for SSO",
        "description": "Use the embedded browser in the Zoom client for SSO.",
        "type": "boolean"
      },
      "EnableFaceBeauty": {
        "title": "Touch Up Appearance",
        "description": "Enables the 'Touch Up' appearance setting",
        "type": "boolean"
      },
      "EnableHIDControl": {
        "title": "Enable HID Control",
        "description": "Enables HID control of USB audio devices from the Zoom client",
        "type": "boolean"
      },
      "EnableHardwareOptimizeVideoSharing": {
        "title": "Enable Hardware Optimized Video Sharing",
        "description": "Enable to require hardware acceleration to optimize video sharing",
        "type": "boolean"
      },
      "EnableIndependentDataPort": {
        "title": "Enable Split Port Traffic",
        "description": "Split traffic across different ports for easier identification",
        "type": "boolean"
      },
      "EnableLaunchApp4IncomingCalls": {
        "title": "Enable Launch App for Incoming Calls",
        "description": "Control the Launch an external app or a URL for incoming calls option in the client",
        "type": "boolean"
      },
      "EnableLightAdaption": {
        "title": "Enable Light Adaption",
        "description": "Set use of adjust for low-light video setting",
        "type": "boolean"
      },
      "EnableMirrorEffect": {
        "title": "Enable Video Mirroring",
        "description": "Enable mirroring of shared video",
        "type": "boolean"
      },
      "EnableOriginalSound": {
        "title": "Enable Original Sound",
        "description": "Enable Orginal Sound for audio",
        "type": "boolean"
      },
      "EnablePhoneLogin": {
        "title": "Enable Phone Login",
        "description": "Enables login with phone authentication.",
        "type": "boolean"
      },
      "EnableQQLogin": {
        "title": "Enable QQ Login",
        "description": "Enables login with QQ authentication.",
        "type": "boolean"
      },
      "EnableRemindMeetingTime": {
        "title": "Enable Meeting Reminder",
        "description": "If enabled, sets a reminder for upcoming meetings",
        "type": "boolean"
      },
      "EnableSSLVerification": {
        "title": "SSL Verification",
        "description": "The Zoom Client will verify the server certificate",
        "type": "boolean"
      },
      "EnableShareAudio": {
        "title": "Enable Audio Sharing",
        "description": "Enable the Share computer audio option when sharing",
        "type": "boolean"
      },
      "EnableShareClipboardWhenRemoteControl": {
        "title": "Enable Shared Clipboard in Remote Control",
        "description": "Allow clipboard access during remote control sessions",
        "type": "boolean"
      },
      "EnableShareVideo": {
        "title": "Enable Video Sharing Optimization",
        "description": "Enable the Optimize for video clip option when sharing",
        "type": "boolean"
      },
      "EnableSilentAutoUpdate": {
        "title": "Enable Silent Auto Updates",
        "description": "Allows the Zoom client to silently check for available stable version updates. This option requires zAutoUpdate option to be enabled, and will fail if not enabled.",
        "type": "boolean"
      },
      "EnableSplitScreen": {
        "title": "Enable Split Screen",
        "description": "Enables side-by-side mode by default",
        "type": "boolean"
      },
      "EnableSpotlightSelf": {
        "title": "Enable Spotlight Self",
        "description": "If enabled, shows self as the active speaker when speaking",
        "type": "boolean"
      },
      "EnableStartMeetingWithRoomSystem": {
        "title": "Enable Start Meeting with Room System Button",
        "description": "Displays the 'Call Room System' button on the home screen of the Zoom client",
        "type": "boolean"
      },
      "EnableWeChatLogin": {
        "title": "Enable WeChat Login",
        "description": "Enables login with WeChat authentication.",
        "type": "boolean"
      },
      "EnforceAppSignInToJoin": {
        "title": "Force App Sign In To Join Meetings",
        "description": "Force users to be signed in with a Zoom account in the app before joining any meeting or webinar.",
        "type": "boolean"
      },
      "EnforceAppSignInToJoinForWebinar": {
        "title": "Force App Sign In To Join Webinars",
        "description": "Force users to be signed in with a Zoom account in the app before joining any webinar.",
        "type": "boolean"
      },
      "EnforceSignInToJoin": {
        "title": "Force Sign In To Join Meetings",
        "description": "Force users to be signed in with a Zoom account before joining a meeting. Users can be signed-in on the web portal when joining via a join URL.",
        "type": "boolean"
      },
      "EnforceSignInToJoinForWebinar": {
        "title": "Force Sign In To Join Webinars",
        "description": "Force users to be signed in with a Zoom account before joining a webinar. Users can be signed-in on the web portal when joining via a join URL.",
        "type": "boolean"
      },
      "ForceSSOURL": {
        "title": "Lock SSO URL",
        "description": "Set and lock the default SSO URL for SSO login. If your Zoom login URL were myorg.zoom.us, the value for this preference would be 'myorg'.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "FullScreenWhenJoin": {
        "title": "Enable Full Screen on Meeting Join",
        "description": "Full Screen when starting or joining a meeting",
        "type": "boolean"
      },
      "HidePhoneInComingCallWhileInMeeting": {
        "title": "Hide Incoming Calls in Meetings",
        "description": "If enabled, prevents incoming call notifications while in a meeting",
        "type": "boolean"
      },
      "HideSelfView": {
        "title": "Hide Self View",
        "description": "Controls the use of the Hide Self View option",
        "type": "boolean"
      },
      "IgnoreBandwidthLimits": {
        "title": "Ignore Bandwidth Limits",
        "description": "Ignore bandwidth limited set on web settings.",
        "type": "boolean"
      },
      "Intercloud_DisableAllFeatures": {
        "title": "Disable All Features (ZfG)",
        "description": "Disables all features except for audio and video for meetings hosted on the ZfG Cloud",
        "type": "boolean"
      },
      "Intercloud_DisableAnnotation": {
        "title": "Disable Annotations (ZfG)",
        "description": "Disables the local ability to annotate on shared content in meetings hosted on the ZfG Cloud",
        "type": "boolean"
      },
      "Intercloud_DisableClosedCaptioning": {
        "title": "Disable Closed Captioning (ZfG)",
        "description": "Disabled by default, this option disables the use of captioning features on meetings hosted on the ZfG Cloud",
        "type": "boolean"
      },
      "Intercloud_DisableComputerAudio": {
        "title": "Disable Computer Audio (ZfG)",
        "description": "Disabled by default, this option disables the use of computer audio for connecting to meetings hosted on the ZfG Cloud",
        "type": "boolean"
      },
      "Intercloud_DisableLocalRecording": {
        "title": "Disable Local Recording (ZfG)",
        "description": "Disabled by default, this option disables the ability to locally record meetings hosted on the ZfG Cloud",
        "type": "boolean"
      },
      "Intercloud_DisableMeetingChat": {
        "title": "Disable Meeting Chat (ZfG)",
        "description": "Disables the use of in-meeting chat on meetings hosted on the ZfG Cloud",
        "type": "boolean"
      },
      "Intercloud_DisableMeetingFileTransfer": {
        "title": "Disable Meeting File Transfer (ZfG)",
        "description": "Disables the use of file transfers through in-meeting chat on meetings hosted on the ZfG Cloud",
        "type": "boolean"
      },
      "Intercloud_DisableMeetingPolls": {
        "title": "Disable Meeting Polls (ZfG)",
        "description": "Disabled by default, this option disables the use of polling in meetings hosted on the ZfG Cloud",
        "type": "boolean"
      },
      "Intercloud_DisableMeetingReactions": {
        "title": "Disable Meeting Reactions (ZfG)",
        "description": "Disables the use of meeting reactions on meetings hosted on the ZfG Cloud",
        "type": "boolean"
      },
      "Intercloud_DisableRemoteControl": {
        "title": "Disable Remote Control (ZfG)",
        "description": "Disabled by default, this option disables the remote control of shared screens in meetings hosted on the ZfG Cloud",
        "type": "boolean"
      },
      "Intercloud_DisableShareScreen": {
        "title": "Disable Screen Sharing (ZfG)",
        "description": "Disables the local ability to share screen on meetings hosted on the ZfG Cloud",
        "type": "boolean"
      },
      "Intercloud_DisableWhiteBoard": {
        "title": "Disable Whiteboard (ZfG)",
        "description": "Disables the use of in-meeting whiteboarding on meetings hosted on the ZfG Cloud",
        "type": "boolean"
      },
      "KeepSignedIn": {
        "title": "Stay Signed In (Email)",
        "description": "Client automatically logs in to the last email account used",
        "type": "boolean"
      },
      "LastLoginType": {
        "title": "Remember Last Login",
        "description": "Remember the last login type used",
        "type": "boolean"
      },
      "LegacyCaptureMode": {
        "title": "Legacy Capture Mode",
        "description": "If enabled, disables GPU acceleration.",
        "type": "boolean"
      },
      "Login_Domain": {
        "title": "Login Domain",
        "description": "Set the email address domains that users can login with, each separated by '&'",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "MuteIMNotificationWhenInMeeting": {
        "title": "Mute Chat Notifications When in a Meeting",
        "description": "Control if IM message system notifications are muted when in a meeting",
        "type": "boolean"
      },
      "MuteVoipWhenJoin": {
        "title": "Disable Microphone on Meeting Join",
        "description": "Always mute microphone when joining a meeting",
        "type": "boolean"
      },
      "MuteWhenLockScreen": {
        "title": "Mute Microphone When Lock Screen Enabled",
        "description": "Automatically mute the microphone and turn off video, when the screen is locked during a meeting.",
        "type": "boolean"
      },
      "NoFacebook": {
        "title": "Disable Facebook Login",
        "description": "Disable the Facebook login option",
        "type": "boolean"
      },
      "NoGoogle": {
        "title": "Disable Google Login",
        "description": "Disable the Google login option",
        "type": "boolean"
      },
      "NoSSO": {
        "title": "Disable SSO Login",
        "description": "Disable the SSO login option",
        "type": "boolean"
      },
      "OverrideEnforceSigninIntercloud": {
        "title": "Override Enforce Sign In (ZfG)",
        "description": "Override the EnforceSignInToJoin policy and allows a user to join a Zoom meeting hosted on the ZfG Cloud, without the need to authenticate",
        "type": "boolean"
      },
      "PFC_SegmentedControl_0": {
        "title": "PFC_SegmentedControl_0",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "PlaySoundForIMMessage": {
        "title": "Play Notification Sound for Chat Messages",
        "description": "Control the audio notifications when an IM message is received",
        "type": "boolean"
      },
      "PresentInMeetingOption": {
        "title": "Present to Zoom Room in Meeting Default Option",
        "description": "Set default sharing option when sharing directly to a Zoom Room within a meeting.",
        "type": "boolean"
      },
      "PresentToRoomOptimizeVideo": {
        "title": "Present to Zoom Room with Optimized Video",
        "description": "If enabled, will optimize screen sharing for video clip when sharing directly to a Zoom Room.",
        "type": "boolean"
      },
      "PresentToRoomOption": {
        "title": "Present to Zoom Room Default Option",
        "description": "Set the default sharing option when sharing directly to a Zoom Room.",
        "type": "boolean"
      },
      "PresentToRoomWithAudio": {
        "title": "Present to Zoom Room with Audio",
        "description": "Share sound when screen sharing to a Zoom Room",
        "type": "boolean"
      },
      "ProxyBypass": {
        "title": "Proxy Bypass Rule",
        "description": "Set proxy bypass rule for the Zoom Client",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyPAC": {
        "title": "Proxy PAC",
        "description": "Set proxy server to client with PAC URL for the Zoom Client",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ProxyServer": {
        "title": "Proxy Server",
        "description": "Set the proxy server for the Zoom Client",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "RecordPath": {
        "title": "Local Recording Path",
        "description": "Set path for local meeting recording files",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SetCommand4IncomingCalls": {
        "title": "Set Command for Incoming Calls",
        "description": "Set the URL used when the client receives an incoming call",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SetDevicePolicyToken": {
        "title": "Device Policy Token",
        "description": "Enforce internal meeting authentication.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SetEnrollToken4CloudMDM": {
        "title": "ZMDM Enrollment Token",
        "description": "Auto enroll devices to Zoom MDM with a token provided from the Zoom web portal.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SetFaceBeautyValue": {
        "title": "Touch Up Appearence Intensity",
        "description": "Allows setting the exact intensity of the Touch up my appearance filter",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SetLightAdaptionManualValue": {
        "title": "Set Light Adaption Value",
        "description": "Set method of adjusting low-light video feature",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "SetMessengerDoNotDropThread": {
        "title": "New Replies on Bottom",
        "description": "Move messages with new replies to the bottom of the chat/channel",
        "type": "boolean"
      },
      "SetScreenCaptureMode": {
        "title": "Set Screen Capture Mode",
        "description": "Forces the specified screen capture mode",
        "type": {
          "string": {
            "rangeList": [
              [
                "0",
                "Auto"
              ],
              [
                "1",
                "Legacy operating systems"
              ],
              [
                "2",
                "Share with window filtering"
              ],
              [
                "3",
                "Advanced share with window filtering"
              ],
              [
                "4",
                "Advanced share without window filtering"
              ]
            ]
          }
        }
      },
      "SetSuppressBackgroundNoiseLevel": {
        "title": "Set Background Noise Suppression Level",
        "description": "Set the noise suppression level",
        "type": {
          "string": {
            "rangeList": [
              [
                "0",
                "Auto"
              ],
              [
                "1",
                "Low (faint background sound)"
              ],
              [
                "2",
                "Medium (computer fan, pen taps)"
              ],
              [
                "3",
                "High (typing, dog barks)"
              ]
            ]
          }
        }
      },
      "SetUpdatingChannel": {
        "title": "Set Zoom Auto Update Cadence",
        "description": "Configures the cadence of updates available to the Zoom client. If set to 'false', will use the 'Slow' (stable) channel. If set to 'true', will use the 'Fast' channel.",
        "type": "boolean"
      },
      "SetUseSystemDefaultMicForVOIP": {
        "title": "Use System Default for Computer Microphone",
        "description": "Uses the system default speaker when using microphone audio",
        "type": "boolean"
      },
      "SetUseSystemDefaultSpeakerForVOIP": {
        "title": "Use System Default for Computer Audio",
        "description": "Uses the system default speaker when using computer audio",
        "type": "boolean"
      },
      "SetWebDomain": {
        "title": "Set Default Web Domain",
        "description": "Sets the web domain for logging in or joining a meeting. By default, the value is https://zoom.us or https://zoom.com",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ShowConnectedTime": {
        "title": "Show Meeting Attendance Length",
        "description": "Show the length of time that the user has been in a meeting",
        "type": "boolean"
      },
      "ShowIMMessagePreview": {
        "title": "Show Chat Message Previews",
        "description": "Control if the message previews in system notifications when an IM message is received",
        "type": "boolean"
      },
      "ShowProfilePhotosInChat": {
        "title": "Show Profile Photos in Chat",
        "description": "Controls if user profile pictures are shown in Zoom Chat",
        "type": "boolean"
      },
      "ShowVideoMessageButton": {
        "title": "Display the Video Message Button",
        "description": "Allow use of the Send video message option",
        "type": "boolean"
      },
      "ShowVoiceMessageButton": {
        "title": "Display the Voice Message Button",
        "description": "If enabled, shows the send voice message button",
        "type": "boolean"
      },
      "VideoRenderMethod": {
        "title": "Video Render Method",
        "description": "Set the video rendering method",
        "type": {
          "string": {
            "rangeList": [
              [
                "0",
                "Auto"
              ],
              [
                "1",
                "Direct3D11 Flip Mode"
              ],
              [
                "2",
                "Direct3D11"
              ],
              [
                "3",
                "Direct3D9"
              ],
              [
                "4",
                "GDI"
              ]
            ]
          }
        }
      },
      "ZAutoFitWhenViewShare": {
        "title": "Auto Fit to Window When Viewing",
        "description": "Automatically fit to window when viewing shared content",
        "type": "boolean"
      },
      "ZAutoFullScreenWhenViewShare": {
        "title": "Auto Full Screen When Viewing",
        "description": "Automatically enter full screen when viewing shared content",
        "type": "boolean"
      },
      "ZAutoJoinVoip": {
        "title": "Automatically Join",
        "description": "Automatically join VoIP ",
        "type": "boolean"
      },
      "ZAutoSSOLogin": {
        "title": "Login with SSO",
        "description": "Default to login with SSO",
        "type": "boolean"
      },
      "ZAutoUpdate": {
        "title": "Enable Updates",
        "description": "Allow users to check for updates through the Zoom client. If set to 'false', the 'Check for Updates' button is hidden.",
        "type": "boolean"
      },
      "ZDisableAnnotation": {
        "title": "Disable Annotation",
        "description": "Disable and remove the ability to annotate over shared screen",
        "type": "boolean"
      },
      "ZDisableVideo": {
        "title": "Disable Camera by Default",
        "description": "Automatically turn off camera when joining a meeting",
        "type": "boolean"
      },
      "ZDualMonitorOn": {
        "title": "Auto Enable Dual Monitor",
        "description": "Automatically enable dual monitor",
        "type": "boolean"
      },
      "ZHideNoVideoUser": {
        "title": "Hide Non-Video Participants",
        "description": "Hide non-video participants by default",
        "type": "boolean"
      },
      "ZRemoteControllAllApp": {
        "title": "Enable Full Remote Control",
        "description": "Remote control all applications",
        "type": "boolean"
      },
      "ZSSOHost": {
        "title": "SSO URL",
        "description": "Set the default SSO URL for SSO login. If your Zoom login URL were myorg.zoom.us, the value for this preference would be 'myorg'.",
        "type": {
          "string": {
            "rangeList": []
          }
        }
      },
      "ZUse720PByDefault": {
        "title": "Default to HD Video",
        "description": "Enable HD video in meetings",
        "type": "boolean"
      },
      "zDisableCMR": {
        "title": "Disable Cloud Recording",
        "description": "Disables Cloud Recording from the Zoom Client",
        "type": "boolean"
      },
      "zDisableChat": {
        "title": "Disable Chat",
        "description": "Disable in-meeting chat",
        "type": "boolean"
      },
      "zDisableFT": {
        "title": "Disable File Transfer",
        "description": "Disables in-metting file transfer (sharing and receiving)",
        "type": "boolean"
      },
      "zDisableLocalRecord": {
        "title": "Disable Local Recording",
        "description": "Disables Local Recording from the Zoom Client",
        "type": "boolean"
      },
      "zDisableRecvVideo": {
        "title": "Disable Receiving Video",
        "description": "Disable receiving video from the Zoom Client",
        "type": "boolean"
      },
      "zDisableSendVideo": {
        "title": "Disable Sending Video",
        "description": "Disable sending video from the Zoom Client",
        "type": "boolean"
      }
    },
    "supervised": false,
    "unique": true
  }
}