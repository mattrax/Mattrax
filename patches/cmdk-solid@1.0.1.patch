diff --git a/dist/index.cjs b/dist/index.cjs
index 9851c69985a2d10b57d8538adfafabfc69c24f7b..39751caf6288ce04912dda76d2c3255bf84c0729 100644
--- a/dist/index.cjs
+++ b/dist/index.cjs
@@ -102,12 +102,10 @@ function commandScore(string, abbreviation, aliases) {
   string = aliases && aliases.length > 0 ? `${string + " " + aliases.join(" ")}` : string;
   return commandScoreInner(string, abbreviation, formatInput(string), formatInput(abbreviation), 0, 0, {});
 }
-
-// src/index.tsx
 var _tmpl$ = /* @__PURE__ */ web.template(`<div tabindex=-1><label cmdk-label="">`);
-var _tmpl$2 = /* @__PURE__ */ web.template(`<div>`);
-var _tmpl$3 = /* @__PURE__ */ web.template(`<div cmdk-group-heading=""aria-hidden>`);
-var _tmpl$4 = /* @__PURE__ */ web.template(`<div><div cmdk-group-items=""role=group>`);
+var _tmpl$2 = /* @__PURE__ */ web.template(`<div cmdk-group-heading=""aria-hidden>`);
+var _tmpl$3 = /* @__PURE__ */ web.template(`<div><div cmdk-group-items=""role=group>`);
+var _tmpl$4 = /* @__PURE__ */ web.template(`<div>`);
 var _tmpl$5 = /* @__PURE__ */ web.template(`<input>`);
 var _tmpl$6 = /* @__PURE__ */ web.template(`<div cmdk-list-sizer="">`);
 var _tmpl$7 = /* @__PURE__ */ web.template(`<div aria-hidden>`);
@@ -474,7 +472,7 @@ exports.CommandRoot = (props) => {
     return _el$;
   })();
 };
-exports.CommandItem = (props) => {
+function Item(props) {
   const store = useStore();
   const id = solidJs.createUniqueId();
   const [ref, setRef] = solidJs.createSignal();
@@ -513,9 +511,9 @@ exports.CommandItem = (props) => {
     solidJs.onCleanup(() => element.removeEventListener(SELECT_EVENT, onSelect));
     setRendered(true);
   });
-  function onSelect() {
+  function onSelect(e) {
     select();
-    props.onSelect?.(value());
+    props.onSelect?.(value(), e);
   }
   function select() {
     store.setState("value", value(), true);
@@ -526,12 +524,18 @@ exports.CommandItem = (props) => {
       return render();
     },
     get children() {
-      var _el$3 = _tmpl$2();
-      web.use((el) => setRef(el), _el$3);
-      web.spread(_el$3, web.mergeProps(etc, {
-        "id": id,
+      return web.createComponent(web.Dynamic, web.mergeProps({
+        get component() {
+          return props.as || "div";
+        }
+      }, etc, {
+        ref(r$) {
+          var _ref$ = utils.mergeRefs(props.ref, setRef);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        id,
         "cmdk-item": "",
-        "role": "option",
+        role: "option",
         get ["aria-disabled"]() {
           return Boolean(localProps.disabled);
         },
@@ -549,13 +553,14 @@ exports.CommandItem = (props) => {
         },
         get onClick() {
           return localProps.disabled ? void 0 : onSelect;
+        },
+        get children() {
+          return props.children;
         }
-      }), false, true);
-      web.insert(_el$3, () => props.children);
-      return _el$3;
+      }));
     }
   });
-};
+}
 exports.CommandGroup = (props) => {
   const [localProps, etc] = solidJs.splitProps(props, ["heading", "value", "forceMount"]);
   const id = solidJs.createUniqueId();
@@ -590,10 +595,10 @@ exports.CommandGroup = (props) => {
     forceMount: localProps.forceMount
   });
   return (() => {
-    var _el$4 = _tmpl$4(), _el$6 = _el$4.firstChild;
-    var _ref$ = utils.mergeRefs((el) => setRef(el), props.ref);
-    typeof _ref$ === "function" && web.use(_ref$, _el$4);
-    web.spread(_el$4, web.mergeProps(etc, {
+    var _el$3 = _tmpl$3(), _el$5 = _el$3.firstChild;
+    var _ref$2 = utils.mergeRefs((el) => setRef(el), props.ref);
+    typeof _ref$2 === "function" && web.use(_ref$2, _el$3);
+    web.spread(_el$3, web.mergeProps(etc, {
       "cmdk-group": "",
       "id": id,
       "role": "presentation",
@@ -601,26 +606,26 @@ exports.CommandGroup = (props) => {
         return render() ? void 0 : true;
       }
     }), false, true);
-    web.insert(_el$4, web.createComponent(solidJs.Show, {
+    web.insert(_el$3, web.createComponent(solidJs.Show, {
       get when() {
         return props.heading;
       },
       get children() {
-        var _el$5 = _tmpl$3();
-        web.use((el) => setHeaderRef(el), _el$5);
-        web.setAttribute(_el$5, "id", headingId);
-        web.insert(_el$5, () => props.heading);
-        return _el$5;
+        var _el$4 = _tmpl$2();
+        web.use((el) => setHeaderRef(el), _el$4);
+        web.setAttribute(_el$4, "id", headingId);
+        web.insert(_el$4, () => props.heading);
+        return _el$4;
       }
-    }), _el$6);
-    web.insert(_el$6, web.createComponent(GroupContext.Provider, {
+    }), _el$5);
+    web.insert(_el$5, web.createComponent(GroupContext.Provider, {
       value: contextValue,
       get children() {
         return props.children;
       }
     }));
-    web.effect(() => web.setAttribute(_el$6, "aria-labelledby", props.heading ? headingId : void 0));
-    return _el$4;
+    web.effect(() => web.setAttribute(_el$5, "aria-labelledby", props.heading ? headingId : void 0));
+    return _el$3;
   })();
 };
 exports.CommandSeparator = (props) => {
@@ -631,12 +636,12 @@ exports.CommandSeparator = (props) => {
       return localProps.alwaysRender || render();
     },
     get children() {
-      var _el$7 = _tmpl$2();
-      web.spread(_el$7, web.mergeProps(etc, {
+      var _el$6 = _tmpl$4();
+      web.spread(_el$6, web.mergeProps(etc, {
         "cmdk-separator": "",
         "role": "separator"
       }), false, false);
-      return _el$7;
+      return _el$6;
     }
   });
 };
@@ -657,10 +662,10 @@ exports.CommandInput = (props) => {
     }
   });
   return (() => {
-    var _el$8 = _tmpl$5();
-    var _ref$2 = localProps.ref;
-    typeof _ref$2 === "function" ? web.use(_ref$2, _el$8) : localProps.ref = _el$8;
-    web.spread(_el$8, web.mergeProps(etc, {
+    var _el$7 = _tmpl$5();
+    var _ref$3 = localProps.ref;
+    typeof _ref$3 === "function" ? web.use(_ref$3, _el$7) : localProps.ref = _el$7;
+    web.spread(_el$7, web.mergeProps(etc, {
       "cmdk-input": "",
       "autocomplete": "off",
       "autocorrect": "off",
@@ -691,7 +696,7 @@ exports.CommandInput = (props) => {
         localProps.onValueChange?.(e.target.value);
       }
     }), false, false);
-    return _el$8;
+    return _el$7;
   })();
 };
 exports.CommandList = (props) => {
@@ -721,10 +726,10 @@ exports.CommandList = (props) => {
     };
   });
   return (() => {
-    var _el$9 = _tmpl$2();
-    var _ref$3 = utils.mergeRefs((el) => ref = el, localProps.ref);
-    typeof _ref$3 === "function" && web.use(_ref$3, _el$9);
-    web.spread(_el$9, web.mergeProps(etc, {
+    var _el$8 = _tmpl$4();
+    var _ref$4 = utils.mergeRefs((el) => ref = el, localProps.ref);
+    typeof _ref$4 === "function" && web.use(_ref$4, _el$8);
+    web.spread(_el$8, web.mergeProps(etc, {
       "cmdk-list": "",
       "role": "listbox",
       get ["aria-label"]() {
@@ -734,14 +739,14 @@ exports.CommandList = (props) => {
         return context.listId;
       }
     }), false, true);
-    web.insert(_el$9, () => SlottableWithNestedChildren(props, (child) => (() => {
-      var _el$10 = _tmpl$6();
-      var _ref$4 = utils.mergeRefs((el) => height = el, context.setListInnerRef);
-      typeof _ref$4 === "function" && web.use(_ref$4, _el$10);
-      web.insert(_el$10, child);
-      return _el$10;
+    web.insert(_el$8, () => SlottableWithNestedChildren(props, (child) => (() => {
+      var _el$9 = _tmpl$6();
+      var _ref$5 = utils.mergeRefs((el) => height = el, context.setListInnerRef);
+      typeof _ref$5 === "function" && web.use(_ref$5, _el$9);
+      web.insert(_el$9, child);
+      return _el$9;
     })()));
-    return _el$9;
+    return _el$8;
   })();
 };
 exports.CommandDialog = (props) => {
@@ -786,12 +791,12 @@ exports.CommandEmpty = (props) => {
       return render();
     },
     get children() {
-      var _el$11 = _tmpl$2();
-      web.spread(_el$11, web.mergeProps(props, {
+      var _el$10 = _tmpl$4();
+      web.spread(_el$10, web.mergeProps(props, {
         "cmdk-empty": "",
         "role": "presentation"
       }), false, false);
-      return _el$11;
+      return _el$10;
     }
   });
 };
@@ -801,8 +806,8 @@ exports.CommandLoading = (props) => {
   }, props);
   const [localProps, etc] = solidJs.splitProps(mergedProps, ["progress", "children", "label"]);
   return (() => {
-    var _el$12 = _tmpl$2();
-    web.spread(_el$12, web.mergeProps(etc, {
+    var _el$11 = _tmpl$4();
+    web.spread(_el$11, web.mergeProps(etc, {
       "cmdk-loading": "",
       "role": "progressbar",
       get ["aria-valuenow"]() {
@@ -814,17 +819,17 @@ exports.CommandLoading = (props) => {
         return localProps.label;
       }
     }), false, true);
-    web.insert(_el$12, () => SlottableWithNestedChildren(props, (child) => (() => {
-      var _el$13 = _tmpl$7();
-      web.insert(_el$13, child);
-      return _el$13;
+    web.insert(_el$11, () => SlottableWithNestedChildren(props, (child) => (() => {
+      var _el$12 = _tmpl$7();
+      web.insert(_el$12, child);
+      return _el$12;
     })()));
-    return _el$12;
+    return _el$11;
   })();
 };
 exports.Command = Object.assign(exports.CommandRoot, {
   List: exports.CommandList,
-  Item: exports.CommandItem,
+  Item,
   Input: exports.CommandInput,
   Group: exports.CommandGroup,
   Separator: exports.CommandSeparator,
@@ -887,4 +892,5 @@ var srOnlyStyles = {
 //! There is a bug here, groups should be found by id attribute instead of value
 //! I've left it as the bug exists in the original library
 
+exports.CommandItem = Item;
 exports.useCommandState = useCmdk;
diff --git a/dist/index.d.cts b/dist/index.d.cts
index 42784035c5f3d27597e6b9243dd23f11d8bdde25..bed7337a7a9b44c33b00f4ffcb27078cf511d2d0 100644
--- a/dist/index.d.cts
+++ b/dist/index.d.cts
@@ -1,5 +1,5 @@
 import { Dialog as Dialog$1 } from '@kobalte/core';
-import { JSX, Component, ParentComponent } from 'solid-js';
+import { ValidComponent, JSX, Component, ParentComponent } from 'solid-js';
 
 type Children = {
     children?: JSX.Element;
@@ -32,7 +32,7 @@ type CommandListProps = Children & DivProps & {
      */
     label?: string;
 };
-type CommandItemProps = Children & Omit<DivProps, 'disabled' | 'onSelect' | 'value'> & {
+type CommandItemProps<T extends ValidComponent> = Children & Omit<DivProps, 'disabled' | 'onSelect' | 'value'> & {
     /** Whether this item is currently disabled. */
     disabled?: boolean;
     /** Event handler for when this item is selected, either via click or keyboard selection. */
@@ -46,6 +46,8 @@ type CommandItemProps = Children & Omit<DivProps, 'disabled' | 'onSelect' | 'val
     keywords?: string[];
     /** Whether this item is forcibly rendered regardless of filtering. */
     forceMount?: boolean;
+    /** Component to render the item as */
+    as?: T;
 };
 type CommandGroupProps = Children & Omit<DivProps, 'heading' | 'value'> & {
     /** Optional heading to render for this group. */
@@ -128,7 +130,7 @@ declare const Command: Component<CommandRootProps>;
  * Preferably pass a `value`, otherwise the value will be inferred from `children` or
  * the rendered item's `textContent`.
  */
-declare const Item: ParentComponent<CommandItemProps>;
+declare function Item<T extends ValidComponent = 'div'>(props: ParentComponent<CommandItemProps<T>>): JSX.Element;
 type Group = {
     id: string;
     forceMount?: boolean;
@@ -167,7 +169,7 @@ declare const Empty: ParentComponent<CommandEmptyProps>;
 declare const Loading: ParentComponent<CommandLoadingProps>;
 declare const pkg: Component<CommandRootProps> & {
     List: ParentComponent<CommandListProps>;
-    Item: ParentComponent<CommandItemProps>;
+    Item: typeof Item;
     Input: Component<CommandInputProps>;
     Group: ParentComponent<CommandGroupProps>;
     Separator: Component<CommandSeparatorProps>;
diff --git a/dist/index.d.ts b/dist/index.d.ts
index 42784035c5f3d27597e6b9243dd23f11d8bdde25..bed7337a7a9b44c33b00f4ffcb27078cf511d2d0 100644
--- a/dist/index.d.ts
+++ b/dist/index.d.ts
@@ -1,5 +1,5 @@
 import { Dialog as Dialog$1 } from '@kobalte/core';
-import { JSX, Component, ParentComponent } from 'solid-js';
+import { ValidComponent, JSX, Component, ParentComponent } from 'solid-js';
 
 type Children = {
     children?: JSX.Element;
@@ -32,7 +32,7 @@ type CommandListProps = Children & DivProps & {
      */
     label?: string;
 };
-type CommandItemProps = Children & Omit<DivProps, 'disabled' | 'onSelect' | 'value'> & {
+type CommandItemProps<T extends ValidComponent> = Children & Omit<DivProps, 'disabled' | 'onSelect' | 'value'> & {
     /** Whether this item is currently disabled. */
     disabled?: boolean;
     /** Event handler for when this item is selected, either via click or keyboard selection. */
@@ -46,6 +46,8 @@ type CommandItemProps = Children & Omit<DivProps, 'disabled' | 'onSelect' | 'val
     keywords?: string[];
     /** Whether this item is forcibly rendered regardless of filtering. */
     forceMount?: boolean;
+    /** Component to render the item as */
+    as?: T;
 };
 type CommandGroupProps = Children & Omit<DivProps, 'heading' | 'value'> & {
     /** Optional heading to render for this group. */
@@ -128,7 +130,7 @@ declare const Command: Component<CommandRootProps>;
  * Preferably pass a `value`, otherwise the value will be inferred from `children` or
  * the rendered item's `textContent`.
  */
-declare const Item: ParentComponent<CommandItemProps>;
+declare function Item<T extends ValidComponent = 'div'>(props: ParentComponent<CommandItemProps<T>>): JSX.Element;
 type Group = {
     id: string;
     forceMount?: boolean;
@@ -167,7 +169,7 @@ declare const Empty: ParentComponent<CommandEmptyProps>;
 declare const Loading: ParentComponent<CommandLoadingProps>;
 declare const pkg: Component<CommandRootProps> & {
     List: ParentComponent<CommandListProps>;
-    Item: ParentComponent<CommandItemProps>;
+    Item: typeof Item;
     Input: Component<CommandInputProps>;
     Group: ParentComponent<CommandGroupProps>;
     Separator: Component<CommandSeparatorProps>;
diff --git a/dist/index.js b/dist/index.js
index 3ecca21c9d6575b39308017d9f31176dc2025200..5f2c9686c69b77acbcc9177bec4a70021794559e 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -1,5 +1,5 @@
 import { commandScore } from './chunk/IOVUHIGA.js';
-import { spread, mergeProps, insert, createComponent, effect, setAttribute, style, use, memo, template } from 'solid-js/web';
+import { spread, mergeProps, insert, createComponent, effect, setAttribute, style, Dynamic, use, memo, template } from 'solid-js/web';
 import { Dialog as Dialog$1 } from '@kobalte/core';
 import { mergeDefaultProps, mergeRefs } from '@kobalte/utils';
 import { trackDeep } from '@solid-primitives/deep';
@@ -7,9 +7,9 @@ import { createContext, createEffect, splitProps, createUniqueId, createSignal,
 import { createStore } from 'solid-js/store';
 
 var _tmpl$ = /* @__PURE__ */ template(`<div tabindex=-1><label cmdk-label="">`);
-var _tmpl$2 = /* @__PURE__ */ template(`<div>`);
-var _tmpl$3 = /* @__PURE__ */ template(`<div cmdk-group-heading=""aria-hidden>`);
-var _tmpl$4 = /* @__PURE__ */ template(`<div><div cmdk-group-items=""role=group>`);
+var _tmpl$2 = /* @__PURE__ */ template(`<div cmdk-group-heading=""aria-hidden>`);
+var _tmpl$3 = /* @__PURE__ */ template(`<div><div cmdk-group-items=""role=group>`);
+var _tmpl$4 = /* @__PURE__ */ template(`<div>`);
 var _tmpl$5 = /* @__PURE__ */ template(`<input>`);
 var _tmpl$6 = /* @__PURE__ */ template(`<div cmdk-list-sizer="">`);
 var _tmpl$7 = /* @__PURE__ */ template(`<div aria-hidden>`);
@@ -376,7 +376,7 @@ var Command = (props) => {
     return _el$;
   })();
 };
-var Item = (props) => {
+function Item(props) {
   const store = useStore();
   const id = createUniqueId();
   const [ref, setRef] = createSignal();
@@ -415,9 +415,9 @@ var Item = (props) => {
     onCleanup(() => element.removeEventListener(SELECT_EVENT, onSelect));
     setRendered(true);
   });
-  function onSelect() {
+  function onSelect(e) {
     select();
-    props.onSelect?.(value());
+    props.onSelect?.(value(), e);
   }
   function select() {
     store.setState("value", value(), true);
@@ -428,12 +428,18 @@ var Item = (props) => {
       return render();
     },
     get children() {
-      var _el$3 = _tmpl$2();
-      use((el) => setRef(el), _el$3);
-      spread(_el$3, mergeProps(etc, {
-        "id": id,
+      return createComponent(Dynamic, mergeProps({
+        get component() {
+          return props.as || "div";
+        }
+      }, etc, {
+        ref(r$) {
+          var _ref$ = mergeRefs(props.ref, setRef);
+          typeof _ref$ === "function" && _ref$(r$);
+        },
+        id,
         "cmdk-item": "",
-        "role": "option",
+        role: "option",
         get ["aria-disabled"]() {
           return Boolean(localProps.disabled);
         },
@@ -451,13 +457,14 @@ var Item = (props) => {
         },
         get onClick() {
           return localProps.disabled ? void 0 : onSelect;
+        },
+        get children() {
+          return props.children;
         }
-      }), false, true);
-      insert(_el$3, () => props.children);
-      return _el$3;
+      }));
     }
   });
-};
+}
 var Group = (props) => {
   const [localProps, etc] = splitProps(props, ["heading", "value", "forceMount"]);
   const id = createUniqueId();
@@ -492,10 +499,10 @@ var Group = (props) => {
     forceMount: localProps.forceMount
   });
   return (() => {
-    var _el$4 = _tmpl$4(), _el$6 = _el$4.firstChild;
-    var _ref$ = mergeRefs((el) => setRef(el), props.ref);
-    typeof _ref$ === "function" && use(_ref$, _el$4);
-    spread(_el$4, mergeProps(etc, {
+    var _el$3 = _tmpl$3(), _el$5 = _el$3.firstChild;
+    var _ref$2 = mergeRefs((el) => setRef(el), props.ref);
+    typeof _ref$2 === "function" && use(_ref$2, _el$3);
+    spread(_el$3, mergeProps(etc, {
       "cmdk-group": "",
       "id": id,
       "role": "presentation",
@@ -503,26 +510,26 @@ var Group = (props) => {
         return render() ? void 0 : true;
       }
     }), false, true);
-    insert(_el$4, createComponent(Show, {
+    insert(_el$3, createComponent(Show, {
       get when() {
         return props.heading;
       },
       get children() {
-        var _el$5 = _tmpl$3();
-        use((el) => setHeaderRef(el), _el$5);
-        setAttribute(_el$5, "id", headingId);
-        insert(_el$5, () => props.heading);
-        return _el$5;
+        var _el$4 = _tmpl$2();
+        use((el) => setHeaderRef(el), _el$4);
+        setAttribute(_el$4, "id", headingId);
+        insert(_el$4, () => props.heading);
+        return _el$4;
       }
-    }), _el$6);
-    insert(_el$6, createComponent(GroupContext.Provider, {
+    }), _el$5);
+    insert(_el$5, createComponent(GroupContext.Provider, {
       value: contextValue,
       get children() {
         return props.children;
       }
     }));
-    effect(() => setAttribute(_el$6, "aria-labelledby", props.heading ? headingId : void 0));
-    return _el$4;
+    effect(() => setAttribute(_el$5, "aria-labelledby", props.heading ? headingId : void 0));
+    return _el$3;
   })();
 };
 var Separator = (props) => {
@@ -533,12 +540,12 @@ var Separator = (props) => {
       return localProps.alwaysRender || render();
     },
     get children() {
-      var _el$7 = _tmpl$2();
-      spread(_el$7, mergeProps(etc, {
+      var _el$6 = _tmpl$4();
+      spread(_el$6, mergeProps(etc, {
         "cmdk-separator": "",
         "role": "separator"
       }), false, false);
-      return _el$7;
+      return _el$6;
     }
   });
 };
@@ -559,10 +566,10 @@ var Input = (props) => {
     }
   });
   return (() => {
-    var _el$8 = _tmpl$5();
-    var _ref$2 = localProps.ref;
-    typeof _ref$2 === "function" ? use(_ref$2, _el$8) : localProps.ref = _el$8;
-    spread(_el$8, mergeProps(etc, {
+    var _el$7 = _tmpl$5();
+    var _ref$3 = localProps.ref;
+    typeof _ref$3 === "function" ? use(_ref$3, _el$7) : localProps.ref = _el$7;
+    spread(_el$7, mergeProps(etc, {
       "cmdk-input": "",
       "autocomplete": "off",
       "autocorrect": "off",
@@ -593,7 +600,7 @@ var Input = (props) => {
         localProps.onValueChange?.(e.target.value);
       }
     }), false, false);
-    return _el$8;
+    return _el$7;
   })();
 };
 var List = (props) => {
@@ -623,10 +630,10 @@ var List = (props) => {
     };
   });
   return (() => {
-    var _el$9 = _tmpl$2();
-    var _ref$3 = mergeRefs((el) => ref = el, localProps.ref);
-    typeof _ref$3 === "function" && use(_ref$3, _el$9);
-    spread(_el$9, mergeProps(etc, {
+    var _el$8 = _tmpl$4();
+    var _ref$4 = mergeRefs((el) => ref = el, localProps.ref);
+    typeof _ref$4 === "function" && use(_ref$4, _el$8);
+    spread(_el$8, mergeProps(etc, {
       "cmdk-list": "",
       "role": "listbox",
       get ["aria-label"]() {
@@ -636,14 +643,14 @@ var List = (props) => {
         return context.listId;
       }
     }), false, true);
-    insert(_el$9, () => SlottableWithNestedChildren(props, (child) => (() => {
-      var _el$10 = _tmpl$6();
-      var _ref$4 = mergeRefs((el) => height = el, context.setListInnerRef);
-      typeof _ref$4 === "function" && use(_ref$4, _el$10);
-      insert(_el$10, child);
-      return _el$10;
+    insert(_el$8, () => SlottableWithNestedChildren(props, (child) => (() => {
+      var _el$9 = _tmpl$6();
+      var _ref$5 = mergeRefs((el) => height = el, context.setListInnerRef);
+      typeof _ref$5 === "function" && use(_ref$5, _el$9);
+      insert(_el$9, child);
+      return _el$9;
     })()));
-    return _el$9;
+    return _el$8;
   })();
 };
 var Dialog = (props) => {
@@ -688,12 +695,12 @@ var Empty = (props) => {
       return render();
     },
     get children() {
-      var _el$11 = _tmpl$2();
-      spread(_el$11, mergeProps(props, {
+      var _el$10 = _tmpl$4();
+      spread(_el$10, mergeProps(props, {
         "cmdk-empty": "",
         "role": "presentation"
       }), false, false);
-      return _el$11;
+      return _el$10;
     }
   });
 };
@@ -703,8 +710,8 @@ var Loading = (props) => {
   }, props);
   const [localProps, etc] = splitProps(mergedProps, ["progress", "children", "label"]);
   return (() => {
-    var _el$12 = _tmpl$2();
-    spread(_el$12, mergeProps(etc, {
+    var _el$11 = _tmpl$4();
+    spread(_el$11, mergeProps(etc, {
       "cmdk-loading": "",
       "role": "progressbar",
       get ["aria-valuenow"]() {
@@ -716,12 +723,12 @@ var Loading = (props) => {
         return localProps.label;
       }
     }), false, true);
-    insert(_el$12, () => SlottableWithNestedChildren(props, (child) => (() => {
-      var _el$13 = _tmpl$7();
-      insert(_el$13, child);
-      return _el$13;
+    insert(_el$11, () => SlottableWithNestedChildren(props, (child) => (() => {
+      var _el$12 = _tmpl$7();
+      insert(_el$12, child);
+      return _el$12;
     })()));
-    return _el$12;
+    return _el$11;
   })();
 };
 var pkg = Object.assign(Command, {
diff --git a/dist/index.jsx b/dist/index.jsx
index dc3a5a8c35e731d56b110b3e1341b6b3c4afd09a..38d5773f1ca6efc06a7e2553051f33042e1778ad 100644
--- a/dist/index.jsx
+++ b/dist/index.jsx
@@ -19,6 +19,7 @@ import {
   useContext
 } from "solid-js";
 import { createStore } from "solid-js/store";
+import { Dynamic } from "solid-js/web";
 var GROUP_SELECTOR = `[cmdk-group=""]`;
 var GROUP_ITEMS_SELECTOR = `[cmdk-group-items=""]`;
 var GROUP_HEADING_SELECTOR = `[cmdk-group-heading=""]`;
@@ -357,7 +358,7 @@ var Command = (props) => {
     style={srOnlyStyles}
   >{localProps.label}</label><StoreContext.Provider value={store}><CommandContext.Provider value={context}>{props.children}</CommandContext.Provider></StoreContext.Provider></div>;
 };
-var Item = (props) => {
+function Item(props) {
   const store = useStore();
   const id = createUniqueId();
   const [ref, setRef] = createSignal();
@@ -398,17 +399,18 @@ var Item = (props) => {
     onCleanup(() => element.removeEventListener(SELECT_EVENT, onSelect));
     setRendered(true);
   });
-  function onSelect() {
+  function onSelect(e) {
     select();
-    props.onSelect?.(value());
+    props.onSelect?.(value(), e);
   }
   function select() {
     store.setState("value", value(), true);
   }
   const [localProps, etc] = splitProps(props, ["disabled", "onSelect", "value", "forceMount", "keywords"]);
-  return <Show when={render()}><div
+  return <Show when={render()}><Dynamic
+    component={props.as || "div"}
     {...etc}
-    ref={(el) => setRef(el)}
+    ref={mergeRefs(props.ref, setRef)}
     id={id}
     cmdk-item=""
     role="option"
@@ -418,8 +420,8 @@ var Item = (props) => {
     data-selected={Boolean(selected())}
     onPointerMove={localProps.disabled || context.disablePointerSelection() ? void 0 : select}
     onClick={localProps.disabled ? void 0 : onSelect}
-  >{props.children}</div></Show>;
-};
+  >{props.children}</Dynamic></Show>;
+}
 var Group = (props) => {
   const [localProps, etc] = splitProps(props, ["heading", "value", "forceMount"]);
   const id = createUniqueId();
