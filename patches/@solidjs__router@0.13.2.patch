diff --git a/dist/index.d.ts b/dist/index.d.ts
index 51f3d6b4a3d984dd763ccaf21491df4298f2f8fb..46586e62cdc151aa84a29b086571fa975d51dc36 100644
--- a/dist/index.d.ts
+++ b/dist/index.d.ts
@@ -1,7 +1,7 @@
 export * from "./routers/index.js";
 export * from "./components.jsx";
 export * from "./lifecycle.js";
-export { useHref, useIsRouting, useLocation, useMatch, useNavigate, useParams, useResolvedPath, useSearchParams, useBeforeLeave, } from "./routing.js";
+export { useHref, useIsRouting, useLocation, useMatch, useMatches, useNavigate, useParams, useResolvedPath, useSearchParams, useBeforeLeave, } from "./routing.js";
 export { mergeSearchString as _mergeSearchString } from "./utils.js";
 export * from "./data/index.js";
 export type { Location, LocationChange, NavigateOptions, Navigator, OutputMatch, Params, RouteSectionProps, RouteLoadFunc, RouteLoadFuncArgs, RouteDefinition, RouterIntegration, RouterUtils, SetParams, BeforeLeaveEventArgs } from "./types.js";
diff --git a/dist/index.js b/dist/index.js
index 2dcd7163c59ffed9ef6a018f471fd04469cf2395..8fd78d1ddd430b351ec2705ddef785c27bd6d9d1 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -256,6 +256,7 @@ const useMatch = (path, matchFilters) => {
     }
   });
 };
+const useMatches = () => useRouter().matches;
 const useParams = () => useRouter().params;
 const useSearchParams = () => {
   const location = useLocation();
@@ -1603,4 +1604,4 @@ function json(data, init = {}) {
   return response;
 }

-export { A, HashRouter, MemoryRouter, Navigate, Route, Router, StaticRouter, mergeSearchString as _mergeSearchString, action, cache, createAsync, createAsyncStore, createBeforeLeave, createMemoryHistory, createRouter, json, keepDepth, notifyIfNotBlocked, redirect, reload, revalidate, saveCurrentDepth, useAction, useBeforeLeave, useHref, useIsRouting, useLocation, useMatch, useNavigate, useParams, useResolvedPath, useSearchParams, useSubmission, useSubmissions };
+export { A, HashRouter, MemoryRouter, Navigate, Route, Router, StaticRouter, mergeSearchString as _mergeSearchString, action, cache, createAsync, createAsyncStore, createBeforeLeave, createMemoryHistory, createRouter, json, keepDepth, notifyIfNotBlocked, redirect, reload, revalidate, saveCurrentDepth, useAction, useBeforeLeave, useHref, useIsRouting, useLocation, useMatch, useMatches, useNavigate, useParams, useResolvedPath, useSearchParams, useSubmission, useSubmissions };
diff --git a/dist/index.jsx b/dist/index.jsx
index e2c769784788a7b767b1571d03a82ad5d5283c18..e79857a2b601cbe7cc6083da62ea7b94d5c52825 100644
--- a/dist/index.jsx
+++ b/dist/index.jsx
@@ -1,6 +1,6 @@
 export * from "./routers/index.js";
 export * from "./components.jsx";
 export * from "./lifecycle.js";
-export { useHref, useIsRouting, useLocation, useMatch, useNavigate, useParams, useResolvedPath, useSearchParams, useBeforeLeave, } from "./routing.js";
+export { useHref, useIsRouting, useLocation, useMatch, useMatches, useNavigate, useParams, useResolvedPath, useSearchParams, useBeforeLeave, } from "./routing.js";
 export { mergeSearchString as _mergeSearchString } from "./utils.js";
 export * from "./data/index.js";
diff --git a/dist/routers/createIntegration.d.ts b/dist/routers/createIntegration.d.ts
deleted file mode 100644
index c17f36a87d94b562b39263ec098652c645be2ec0..0000000000000000000000000000000000000000
diff --git a/dist/routers/createIntegration.js b/dist/routers/createIntegration.js
deleted file mode 100644
index 41d46aa4ada71207bf0a914d0e61ffdf939f7133..0000000000000000000000000000000000000000
diff --git a/dist/routers/createIntegration.jsx b/dist/routers/createIntegration.jsx
deleted file mode 100644
index af97761d216e9c9fff39b5534cde8d3740019156..0000000000000000000000000000000000000000
diff --git a/dist/routing.d.ts b/dist/routing.d.ts
index 3439e3241ceb1aaa71223931bd17101cca8272d4..053ac9b377c8e79a4cead0e09ac4cd826aba1b93 100644
--- a/dist/routing.d.ts
+++ b/dist/routing.d.ts
@@ -10,6 +10,7 @@ export declare const useNavigate: () => Navigator;
 export declare const useLocation: <S = unknown>() => Location<S>;
 export declare const useIsRouting: () => () => boolean;
 export declare const useMatch: <S extends string>(path: () => S, matchFilters?: MatchFilters<S> | undefined) => Accessor<import("./types.js").PathMatch | undefined>;
+export declare const useMatches: () => () => RouteMatch[];
 export declare const useParams: <T extends Params>() => T;
 export declare const useSearchParams: <T extends Params>() => [Partial<T>, (params: SetParams, options?: Partial<NavigateOptions>) => void];
 export declare const useBeforeLeave: (listener: (e: BeforeLeaveEventArgs) => void) => void;
diff --git a/dist/routing.js b/dist/routing.js
index a184336e15c838edf97407a62863c765a0fc84e4..69f27a2ad18f0ace22f879a5ad691a35ebb9add6 100644
--- a/dist/routing.js
+++ b/dist/routing.js
@@ -34,6 +34,7 @@ export const useMatch = (path, matchFilters) => {
         }
     });
 };
+export const useMatches = () => useRouter().matches;
 export const useParams = () => useRouter().params;
 export const useSearchParams = () => {
     const location = useLocation();
diff --git a/dist/types.js b/dist/types.js
old mode 100755
new mode 100644
